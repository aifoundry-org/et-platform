/* Copyright (C) 2021, Esperanto Technologies Inc.                         */
/* The copyright to the computer program(s) herein is the                  */
/* property of Esperanto Technologies, Inc. All Rights Reserved.           */
/* The program(s) may be used and/or copied only with                      */
/* the written permission of Esperanto Technologies and                    */
/* in accordance with the terms and conditions stipulated in the           */
/* agreement/contract under which the program(s) have been supplied.       */
/*                                                                         */
/*                                                                         */
/* Generated by Semifore, Inc. csrCompile                                  */
/*    C Header output                                                      */

#ifndef _PCIE_ESR_H_
#define _PCIE_ESR_H_



/* ####################################################################### */
/*        ADDRESS MACROS                                                   */
/* ####################################################################### */

/* Address Space for Addressmap: pcie_esr                                  */
/* Register: pcie_esr.pshire_ctrl                                          */
#define PCIE_ESR_PSHIRE_CTRL_ADDRESS 0x0u
#define PCIE_ESR_PSHIRE_CTRL_BYTE_ADDRESS 0x0u
/* Register: pcie_esr.pshire_reset                                         */
#define PCIE_ESR_PSHIRE_RESET_ADDRESS 0x4u
#define PCIE_ESR_PSHIRE_RESET_BYTE_ADDRESS 0x4u
/* Register: pcie_esr.pshire_stat                                          */
#define PCIE_ESR_PSHIRE_STAT_ADDRESS 0x8u
#define PCIE_ESR_PSHIRE_STAT_BYTE_ADDRESS 0x8u
/* Register: pcie_esr.int_axi_low_addr                                     */
#define PCIE_ESR_INT_AXI_LOW_ADDR_ADDRESS 0xcu
#define PCIE_ESR_INT_AXI_LOW_ADDR_BYTE_ADDRESS 0xcu
/* Register: pcie_esr.int_axi_hi_addr                                      */
#define PCIE_ESR_INT_AXI_HI_ADDR_ADDRESS 0x10u
#define PCIE_ESR_INT_AXI_HI_ADDR_BYTE_ADDRESS 0x10u
/* Register: pcie_esr.int_axi_low_data                                     */
#define PCIE_ESR_INT_AXI_LOW_DATA_ADDRESS 0x14u
#define PCIE_ESR_INT_AXI_LOW_DATA_BYTE_ADDRESS 0x14u
/* Register: pcie_esr.int_axi_hi_data                                      */
#define PCIE_ESR_INT_AXI_HI_DATA_ADDRESS 0x18u
#define PCIE_ESR_INT_AXI_HI_DATA_BYTE_ADDRESS 0x18u
/* Register: pcie_esr.int_axi_stat                                         */
#define PCIE_ESR_INT_AXI_STAT_ADDRESS 0x1cu
#define PCIE_ESR_INT_AXI_STAT_BYTE_ADDRESS 0x1cu
/* Register: pcie_esr.int_axi_en                                           */
#define PCIE_ESR_INT_AXI_EN_ADDRESS 0x20u
#define PCIE_ESR_INT_AXI_EN_BYTE_ADDRESS 0x20u
/* Register: pcie_esr.int_axi_set                                          */
#define PCIE_ESR_INT_AXI_SET_ADDRESS 0x24u
#define PCIE_ESR_INT_AXI_SET_BYTE_ADDRESS 0x24u
/* Register: pcie_esr.msi_rx_vec                                           */
#define PCIE_ESR_MSI_RX_VEC_ADDRESS 0x28u
#define PCIE_ESR_MSI_RX_VEC_BYTE_ADDRESS 0x28u
/* Register: pcie_esr.noc_int_stat                                         */
#define PCIE_ESR_NOC_INT_STAT_ADDRESS 0x2cu
#define PCIE_ESR_NOC_INT_STAT_BYTE_ADDRESS 0x2cu


/* ####################################################################### */
/*        TEMPLATE MACROS                                                  */
/* ####################################################################### */

/* Addressmap type: pcie_esr                                               */
/* Addressmap template: pcie_esr                                           */
#define PCIE_ESR_SIZE 0x400u
#define PCIE_ESR_BYTE_SIZE 0x400u
/* Register member: pcie_esr.pshire_ctrl                                   */
/* Register type referenced: pcie_esr::pshire_ctrl                         */
/* Register template referenced: pcie_esr::pshire_ctrl                     */
#define PCIE_ESR_PSHIRE_CTRL_OFFSET 0x0u
#define PCIE_ESR_PSHIRE_CTRL_BYTE_OFFSET 0x0u
#define PCIE_ESR_PSHIRE_CTRL_READ_ACCESS 1u
#define PCIE_ESR_PSHIRE_CTRL_WRITE_ACCESS 1u
#define PCIE_ESR_PSHIRE_CTRL_RESET_VALUE 0x00000001ul
#define PCIE_ESR_PSHIRE_CTRL_RESET_MASK 0xfffffffful
#define PCIE_ESR_PSHIRE_CTRL_READ_MASK 0xfffffffful
#define PCIE_ESR_PSHIRE_CTRL_WRITE_MASK 0x00000007ul
/* Register member: pcie_esr.pshire_reset                                  */
/* Register type referenced: pcie_esr::pshire_reset                        */
/* Register template referenced: pcie_esr::pshire_reset                    */
#define PCIE_ESR_PSHIRE_RESET_OFFSET 0x4u
#define PCIE_ESR_PSHIRE_RESET_BYTE_OFFSET 0x4u
#define PCIE_ESR_PSHIRE_RESET_READ_ACCESS 1u
#define PCIE_ESR_PSHIRE_RESET_WRITE_ACCESS 1u
#define PCIE_ESR_PSHIRE_RESET_RESET_VALUE 0x00000000ul
#define PCIE_ESR_PSHIRE_RESET_RESET_MASK 0xfffffffful
#define PCIE_ESR_PSHIRE_RESET_READ_MASK 0xfffffffful
#define PCIE_ESR_PSHIRE_RESET_WRITE_MASK 0x00000001ul
/* Register member: pcie_esr.pshire_stat                                   */
/* Register type referenced: pcie_esr::pshire_stat                         */
/* Register template referenced: pcie_esr::pshire_stat                     */
#define PCIE_ESR_PSHIRE_STAT_OFFSET 0x8u
#define PCIE_ESR_PSHIRE_STAT_BYTE_OFFSET 0x8u
#define PCIE_ESR_PSHIRE_STAT_READ_ACCESS 1u
#define PCIE_ESR_PSHIRE_STAT_WRITE_ACCESS 0u
#define PCIE_ESR_PSHIRE_STAT_RESET_VALUE 0x00000000ul
#define PCIE_ESR_PSHIRE_STAT_RESET_MASK 0xfffffffful
#define PCIE_ESR_PSHIRE_STAT_READ_MASK 0xfffffffful
#define PCIE_ESR_PSHIRE_STAT_WRITE_MASK 0x00000000ul
/* Register member: pcie_esr.int_axi_low_addr                              */
/* Register type referenced: pcie_esr::int_axi_low_addr                    */
/* Register template referenced: pcie_esr::int_axi_low_addr                */
#define PCIE_ESR_INT_AXI_LOW_ADDR_OFFSET 0xcu
#define PCIE_ESR_INT_AXI_LOW_ADDR_BYTE_OFFSET 0xcu
#define PCIE_ESR_INT_AXI_LOW_ADDR_READ_ACCESS 1u
#define PCIE_ESR_INT_AXI_LOW_ADDR_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_LOW_ADDR_RESET_VALUE 0x00000000ul
#define PCIE_ESR_INT_AXI_LOW_ADDR_RESET_MASK 0xfffffffful
#define PCIE_ESR_INT_AXI_LOW_ADDR_READ_MASK 0xfffffffful
#define PCIE_ESR_INT_AXI_LOW_ADDR_WRITE_MASK 0xfffffffful
/* Register member: pcie_esr.int_axi_hi_addr                               */
/* Register type referenced: pcie_esr::int_axi_hi_addr                     */
/* Register template referenced: pcie_esr::int_axi_hi_addr                 */
#define PCIE_ESR_INT_AXI_HI_ADDR_OFFSET 0x10u
#define PCIE_ESR_INT_AXI_HI_ADDR_BYTE_OFFSET 0x10u
#define PCIE_ESR_INT_AXI_HI_ADDR_READ_ACCESS 1u
#define PCIE_ESR_INT_AXI_HI_ADDR_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_HI_ADDR_RESET_VALUE 0x00000000ul
#define PCIE_ESR_INT_AXI_HI_ADDR_RESET_MASK 0xfffffffful
#define PCIE_ESR_INT_AXI_HI_ADDR_READ_MASK 0xfffffffful
#define PCIE_ESR_INT_AXI_HI_ADDR_WRITE_MASK 0x000000fful
/* Register member: pcie_esr.int_axi_low_data                              */
/* Register type referenced: pcie_esr::int_axi_low_data                    */
/* Register template referenced: pcie_esr::int_axi_low_data                */
#define PCIE_ESR_INT_AXI_LOW_DATA_OFFSET 0x14u
#define PCIE_ESR_INT_AXI_LOW_DATA_BYTE_OFFSET 0x14u
#define PCIE_ESR_INT_AXI_LOW_DATA_READ_ACCESS 1u
#define PCIE_ESR_INT_AXI_LOW_DATA_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_LOW_DATA_RESET_VALUE 0x00000000ul
#define PCIE_ESR_INT_AXI_LOW_DATA_RESET_MASK 0xfffffffful
#define PCIE_ESR_INT_AXI_LOW_DATA_READ_MASK 0xfffffffful
#define PCIE_ESR_INT_AXI_LOW_DATA_WRITE_MASK 0xfffffffful
/* Register member: pcie_esr.int_axi_hi_data                               */
/* Register type referenced: pcie_esr::int_axi_hi_data                     */
/* Register template referenced: pcie_esr::int_axi_hi_data                 */
#define PCIE_ESR_INT_AXI_HI_DATA_OFFSET 0x18u
#define PCIE_ESR_INT_AXI_HI_DATA_BYTE_OFFSET 0x18u
#define PCIE_ESR_INT_AXI_HI_DATA_READ_ACCESS 1u
#define PCIE_ESR_INT_AXI_HI_DATA_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_HI_DATA_RESET_VALUE 0x00000000ul
#define PCIE_ESR_INT_AXI_HI_DATA_RESET_MASK 0xfffffffful
#define PCIE_ESR_INT_AXI_HI_DATA_READ_MASK 0xfffffffful
#define PCIE_ESR_INT_AXI_HI_DATA_WRITE_MASK 0xfffffffful
/* Register member: pcie_esr.int_axi_stat                                  */
/* Register type referenced: pcie_esr::int_axi_stat                        */
/* Register template referenced: pcie_esr::int_axi_stat                    */
#define PCIE_ESR_INT_AXI_STAT_OFFSET 0x1cu
#define PCIE_ESR_INT_AXI_STAT_BYTE_OFFSET 0x1cu
#define PCIE_ESR_INT_AXI_STAT_READ_ACCESS 1u
#define PCIE_ESR_INT_AXI_STAT_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_STAT_RESET_VALUE 0x00000000ul
#define PCIE_ESR_INT_AXI_STAT_RESET_MASK 0xfffffffful
#define PCIE_ESR_INT_AXI_STAT_READ_MASK 0xfffffffful
#define PCIE_ESR_INT_AXI_STAT_WRITE_MASK 0x0001fffful
/* Register member: pcie_esr.int_axi_en                                    */
/* Register type referenced: pcie_esr::int_axi_en                          */
/* Register template referenced: pcie_esr::int_axi_en                      */
#define PCIE_ESR_INT_AXI_EN_OFFSET 0x20u
#define PCIE_ESR_INT_AXI_EN_BYTE_OFFSET 0x20u
#define PCIE_ESR_INT_AXI_EN_READ_ACCESS 1u
#define PCIE_ESR_INT_AXI_EN_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_EN_RESET_VALUE 0x00000000ul
#define PCIE_ESR_INT_AXI_EN_RESET_MASK 0xfffffffful
#define PCIE_ESR_INT_AXI_EN_READ_MASK 0xfffffffful
#define PCIE_ESR_INT_AXI_EN_WRITE_MASK 0x0001fffful
/* Register member: pcie_esr.int_axi_set                                   */
/* Register type referenced: pcie_esr::int_axi_set                         */
/* Register template referenced: pcie_esr::int_axi_set                     */
#define PCIE_ESR_INT_AXI_SET_OFFSET 0x24u
#define PCIE_ESR_INT_AXI_SET_BYTE_OFFSET 0x24u
#define PCIE_ESR_INT_AXI_SET_READ_ACCESS 0u
#define PCIE_ESR_INT_AXI_SET_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_SET_RESET_VALUE 0x00000000ul
#define PCIE_ESR_INT_AXI_SET_RESET_MASK 0xfffffffful
#define PCIE_ESR_INT_AXI_SET_READ_MASK 0x00000000ul
#define PCIE_ESR_INT_AXI_SET_WRITE_MASK 0x0001fffful
/* Register member: pcie_esr.msi_rx_vec                                    */
/* Register type referenced: pcie_esr::msi_rx_vec                          */
/* Register template referenced: pcie_esr::msi_rx_vec                      */
#define PCIE_ESR_MSI_RX_VEC_OFFSET 0x28u
#define PCIE_ESR_MSI_RX_VEC_BYTE_OFFSET 0x28u
#define PCIE_ESR_MSI_RX_VEC_READ_ACCESS 1u
#define PCIE_ESR_MSI_RX_VEC_WRITE_ACCESS 0u
#define PCIE_ESR_MSI_RX_VEC_RESET_VALUE 0x00000000ul
#define PCIE_ESR_MSI_RX_VEC_RESET_MASK 0xfffffffful
#define PCIE_ESR_MSI_RX_VEC_READ_MASK 0xfffffffful
#define PCIE_ESR_MSI_RX_VEC_WRITE_MASK 0x00000000ul
/* Register member: pcie_esr.noc_int_stat                                  */
/* Register type referenced: pcie_esr::noc_int_stat                        */
/* Register template referenced: pcie_esr::noc_int_stat                    */
#define PCIE_ESR_NOC_INT_STAT_OFFSET 0x2cu
#define PCIE_ESR_NOC_INT_STAT_BYTE_OFFSET 0x2cu
#define PCIE_ESR_NOC_INT_STAT_READ_ACCESS 1u
#define PCIE_ESR_NOC_INT_STAT_WRITE_ACCESS 0u
#define PCIE_ESR_NOC_INT_STAT_RESET_VALUE 0x00000000ul
#define PCIE_ESR_NOC_INT_STAT_RESET_MASK 0xfffffffful
#define PCIE_ESR_NOC_INT_STAT_READ_MASK 0xfffffffful
#define PCIE_ESR_NOC_INT_STAT_WRITE_MASK 0x00000000ul

/* Register type: pcie_esr::pshire_ctrl                                    */
/* Register template: pcie_esr::pshire_ctrl                                */
/* Field member: pcie_esr::pshire_ctrl.axi_data_sel                        */
#define PCIE_ESR_PSHIRE_CTRL_AXI_DATA_SEL_MSB 2u
#define PCIE_ESR_PSHIRE_CTRL_AXI_DATA_SEL_LSB 2u
#define PCIE_ESR_PSHIRE_CTRL_AXI_DATA_SEL_WIDTH 1u
#define PCIE_ESR_PSHIRE_CTRL_AXI_DATA_SEL_READ_ACCESS 1u
#define PCIE_ESR_PSHIRE_CTRL_AXI_DATA_SEL_WRITE_ACCESS 1u
#define PCIE_ESR_PSHIRE_CTRL_AXI_DATA_SEL_RESET 0x0u
#define PCIE_ESR_PSHIRE_CTRL_AXI_DATA_SEL_FIELD_MASK 0x00000004ul
#define PCIE_ESR_PSHIRE_CTRL_AXI_DATA_SEL_GET(x) (((x) & 0x00000004ul) >> 2)
#define PCIE_ESR_PSHIRE_CTRL_AXI_DATA_SEL_SET(x) (((x) << 2) & 0x00000004ul)
#define PCIE_ESR_PSHIRE_CTRL_AXI_DATA_SEL_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004ul) | ((r) & 0xfffffffbul))
/* Field member: pcie_esr::pshire_ctrl.axi_parity                          */
#define PCIE_ESR_PSHIRE_CTRL_AXI_PARITY_MSB 1u
#define PCIE_ESR_PSHIRE_CTRL_AXI_PARITY_LSB 1u
#define PCIE_ESR_PSHIRE_CTRL_AXI_PARITY_WIDTH 1u
#define PCIE_ESR_PSHIRE_CTRL_AXI_PARITY_READ_ACCESS 1u
#define PCIE_ESR_PSHIRE_CTRL_AXI_PARITY_WRITE_ACCESS 1u
#define PCIE_ESR_PSHIRE_CTRL_AXI_PARITY_RESET 0x0u
#define PCIE_ESR_PSHIRE_CTRL_AXI_PARITY_FIELD_MASK 0x00000002ul
#define PCIE_ESR_PSHIRE_CTRL_AXI_PARITY_GET(x) (((x) & 0x00000002ul) >> 1)
#define PCIE_ESR_PSHIRE_CTRL_AXI_PARITY_SET(x) (((x) << 1) & 0x00000002ul)
#define PCIE_ESR_PSHIRE_CTRL_AXI_PARITY_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: pcie_esr::pshire_ctrl.pll0_byp                            */
#define PCIE_ESR_PSHIRE_CTRL_PLL0_BYP_MSB 0u
#define PCIE_ESR_PSHIRE_CTRL_PLL0_BYP_LSB 0u
#define PCIE_ESR_PSHIRE_CTRL_PLL0_BYP_WIDTH 1u
#define PCIE_ESR_PSHIRE_CTRL_PLL0_BYP_READ_ACCESS 1u
#define PCIE_ESR_PSHIRE_CTRL_PLL0_BYP_WRITE_ACCESS 1u
#define PCIE_ESR_PSHIRE_CTRL_PLL0_BYP_RESET 0x1u
#define PCIE_ESR_PSHIRE_CTRL_PLL0_BYP_FIELD_MASK 0x00000001ul
#define PCIE_ESR_PSHIRE_CTRL_PLL0_BYP_GET(x) ((x) & 0x00000001ul)
#define PCIE_ESR_PSHIRE_CTRL_PLL0_BYP_SET(x) ((x) & 0x00000001ul)
#define PCIE_ESR_PSHIRE_CTRL_PLL0_BYP_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: pcie_esr::pshire_reset                                   */
/* Register template: pcie_esr::pshire_reset                               */
/* Field member: pcie_esr::pshire_reset.pwr_up_rstn                        */
#define PCIE_ESR_PSHIRE_RESET_PWR_UP_RSTN_MSB 0u
#define PCIE_ESR_PSHIRE_RESET_PWR_UP_RSTN_LSB 0u
#define PCIE_ESR_PSHIRE_RESET_PWR_UP_RSTN_WIDTH 1u
#define PCIE_ESR_PSHIRE_RESET_PWR_UP_RSTN_READ_ACCESS 1u
#define PCIE_ESR_PSHIRE_RESET_PWR_UP_RSTN_WRITE_ACCESS 1u
#define PCIE_ESR_PSHIRE_RESET_PWR_UP_RSTN_RESET 0x0u
#define PCIE_ESR_PSHIRE_RESET_PWR_UP_RSTN_FIELD_MASK 0x00000001ul
#define PCIE_ESR_PSHIRE_RESET_PWR_UP_RSTN_GET(x) ((x) & 0x00000001ul)
#define PCIE_ESR_PSHIRE_RESET_PWR_UP_RSTN_SET(x) ((x) & 0x00000001ul)
#define PCIE_ESR_PSHIRE_RESET_PWR_UP_RSTN_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: pcie_esr::pshire_stat                                    */
/* Register template: pcie_esr::pshire_stat                                */
/* Field member: pcie_esr::pshire_stat.pcie0_wake                          */
#define PCIE_ESR_PSHIRE_STAT_PCIE0_WAKE_MSB 8u
#define PCIE_ESR_PSHIRE_STAT_PCIE0_WAKE_LSB 8u
#define PCIE_ESR_PSHIRE_STAT_PCIE0_WAKE_WIDTH 1u
#define PCIE_ESR_PSHIRE_STAT_PCIE0_WAKE_READ_ACCESS 1u
#define PCIE_ESR_PSHIRE_STAT_PCIE0_WAKE_WRITE_ACCESS 0u
#define PCIE_ESR_PSHIRE_STAT_PCIE0_WAKE_RESET 0x0u
#define PCIE_ESR_PSHIRE_STAT_PCIE0_WAKE_FIELD_MASK 0x00000100ul
#define PCIE_ESR_PSHIRE_STAT_PCIE0_WAKE_GET(x) (((x) & 0x00000100ul) >> 8)
#define PCIE_ESR_PSHIRE_STAT_PCIE0_WAKE_SET(x) (((x) << 8) & 0x00000100ul)
#define PCIE_ESR_PSHIRE_STAT_PCIE0_WAKE_MODIFY(r, x) \
   ((((x) << 8) & 0x00000100ul) | ((r) & 0xfffffefful))
/* Field member: pcie_esr::pshire_stat.pcie_unc_error                      */
#define PCIE_ESR_PSHIRE_STAT_PCIE_UNC_ERROR_MSB 7u
#define PCIE_ESR_PSHIRE_STAT_PCIE_UNC_ERROR_LSB 6u
#define PCIE_ESR_PSHIRE_STAT_PCIE_UNC_ERROR_WIDTH 2u
#define PCIE_ESR_PSHIRE_STAT_PCIE_UNC_ERROR_READ_ACCESS 1u
#define PCIE_ESR_PSHIRE_STAT_PCIE_UNC_ERROR_WRITE_ACCESS 0u
#define PCIE_ESR_PSHIRE_STAT_PCIE_UNC_ERROR_RESET 0x0u
#define PCIE_ESR_PSHIRE_STAT_PCIE_UNC_ERROR_FIELD_MASK 0x000000c0ul
#define PCIE_ESR_PSHIRE_STAT_PCIE_UNC_ERROR_GET(x) \
   (((x) & 0x000000c0ul) >> 6)
#define PCIE_ESR_PSHIRE_STAT_PCIE_UNC_ERROR_SET(x) \
   (((x) << 6) & 0x000000c0ul)
#define PCIE_ESR_PSHIRE_STAT_PCIE_UNC_ERROR_MODIFY(r, x) \
   ((((x) << 6) & 0x000000c0ul) | ((r) & 0xffffff3ful))
/* Field member: pcie_esr::pshire_stat.perst_n                             */
#define PCIE_ESR_PSHIRE_STAT_PERST_N_MSB 5u
#define PCIE_ESR_PSHIRE_STAT_PERST_N_LSB 5u
#define PCIE_ESR_PSHIRE_STAT_PERST_N_WIDTH 1u
#define PCIE_ESR_PSHIRE_STAT_PERST_N_READ_ACCESS 1u
#define PCIE_ESR_PSHIRE_STAT_PERST_N_WRITE_ACCESS 0u
#define PCIE_ESR_PSHIRE_STAT_PERST_N_RESET 0x0u
#define PCIE_ESR_PSHIRE_STAT_PERST_N_FIELD_MASK 0x00000020ul
#define PCIE_ESR_PSHIRE_STAT_PERST_N_GET(x) (((x) & 0x00000020ul) >> 5)
#define PCIE_ESR_PSHIRE_STAT_PERST_N_SET(x) (((x) << 5) & 0x00000020ul)
#define PCIE_ESR_PSHIRE_STAT_PERST_N_MODIFY(r, x) \
   ((((x) << 5) & 0x00000020ul) | ((r) & 0xffffffdful))
/* Field member: pcie_esr::pshire_stat.ep_rc0                              */
#define PCIE_ESR_PSHIRE_STAT_EP_RC0_MSB 4u
#define PCIE_ESR_PSHIRE_STAT_EP_RC0_LSB 4u
#define PCIE_ESR_PSHIRE_STAT_EP_RC0_WIDTH 1u
#define PCIE_ESR_PSHIRE_STAT_EP_RC0_READ_ACCESS 1u
#define PCIE_ESR_PSHIRE_STAT_EP_RC0_WRITE_ACCESS 0u
#define PCIE_ESR_PSHIRE_STAT_EP_RC0_RESET 0x0u
#define PCIE_ESR_PSHIRE_STAT_EP_RC0_FIELD_MASK 0x00000010ul
#define PCIE_ESR_PSHIRE_STAT_EP_RC0_GET(x) (((x) & 0x00000010ul) >> 4)
#define PCIE_ESR_PSHIRE_STAT_EP_RC0_SET(x) (((x) << 4) & 0x00000010ul)
#define PCIE_ESR_PSHIRE_STAT_EP_RC0_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010ul) | ((r) & 0xffffffeful))
/* Field member: pcie_esr::pshire_stat.ss_mode                             */
#define PCIE_ESR_PSHIRE_STAT_SS_MODE_MSB 3u
#define PCIE_ESR_PSHIRE_STAT_SS_MODE_LSB 2u
#define PCIE_ESR_PSHIRE_STAT_SS_MODE_WIDTH 2u
#define PCIE_ESR_PSHIRE_STAT_SS_MODE_READ_ACCESS 1u
#define PCIE_ESR_PSHIRE_STAT_SS_MODE_WRITE_ACCESS 0u
#define PCIE_ESR_PSHIRE_STAT_SS_MODE_RESET 0x0u
#define PCIE_ESR_PSHIRE_STAT_SS_MODE_FIELD_MASK 0x0000000cul
#define PCIE_ESR_PSHIRE_STAT_SS_MODE_GET(x) (((x) & 0x0000000cul) >> 2)
#define PCIE_ESR_PSHIRE_STAT_SS_MODE_SET(x) (((x) << 2) & 0x0000000cul)
#define PCIE_ESR_PSHIRE_STAT_SS_MODE_MODIFY(r, x) \
   ((((x) << 2) & 0x0000000cul) | ((r) & 0xfffffff3ul))
/* Field member: pcie_esr::pshire_stat.pll_lock_lst                        */
#define PCIE_ESR_PSHIRE_STAT_PLL_LOCK_LST_MSB 1u
#define PCIE_ESR_PSHIRE_STAT_PLL_LOCK_LST_LSB 1u
#define PCIE_ESR_PSHIRE_STAT_PLL_LOCK_LST_WIDTH 1u
#define PCIE_ESR_PSHIRE_STAT_PLL_LOCK_LST_READ_ACCESS 1u
#define PCIE_ESR_PSHIRE_STAT_PLL_LOCK_LST_WRITE_ACCESS 0u
#define PCIE_ESR_PSHIRE_STAT_PLL_LOCK_LST_RESET 0x0u
#define PCIE_ESR_PSHIRE_STAT_PLL_LOCK_LST_FIELD_MASK 0x00000002ul
#define PCIE_ESR_PSHIRE_STAT_PLL_LOCK_LST_GET(x) (((x) & 0x00000002ul) >> 1)
#define PCIE_ESR_PSHIRE_STAT_PLL_LOCK_LST_SET(x) (((x) << 1) & 0x00000002ul)
#define PCIE_ESR_PSHIRE_STAT_PLL_LOCK_LST_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: pcie_esr::pshire_stat.pll0_ok                             */
#define PCIE_ESR_PSHIRE_STAT_PLL0_OK_MSB 0u
#define PCIE_ESR_PSHIRE_STAT_PLL0_OK_LSB 0u
#define PCIE_ESR_PSHIRE_STAT_PLL0_OK_WIDTH 1u
#define PCIE_ESR_PSHIRE_STAT_PLL0_OK_READ_ACCESS 1u
#define PCIE_ESR_PSHIRE_STAT_PLL0_OK_WRITE_ACCESS 0u
#define PCIE_ESR_PSHIRE_STAT_PLL0_OK_RESET 0x0u
#define PCIE_ESR_PSHIRE_STAT_PLL0_OK_FIELD_MASK 0x00000001ul
#define PCIE_ESR_PSHIRE_STAT_PLL0_OK_GET(x) ((x) & 0x00000001ul)
#define PCIE_ESR_PSHIRE_STAT_PLL0_OK_SET(x) ((x) & 0x00000001ul)
#define PCIE_ESR_PSHIRE_STAT_PLL0_OK_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: pcie_esr::int_axi_low_addr                               */
/* Register template: pcie_esr::int_axi_low_addr                           */
/* Field member: pcie_esr::int_axi_low_addr.addr                           */
#define PCIE_ESR_INT_AXI_LOW_ADDR_ADDR_MSB 31u
#define PCIE_ESR_INT_AXI_LOW_ADDR_ADDR_LSB 0u
#define PCIE_ESR_INT_AXI_LOW_ADDR_ADDR_WIDTH 32u
#define PCIE_ESR_INT_AXI_LOW_ADDR_ADDR_READ_ACCESS 1u
#define PCIE_ESR_INT_AXI_LOW_ADDR_ADDR_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_LOW_ADDR_ADDR_RESET 0x00000000ul
#define PCIE_ESR_INT_AXI_LOW_ADDR_ADDR_FIELD_MASK 0xfffffffful
#define PCIE_ESR_INT_AXI_LOW_ADDR_ADDR_GET(x) ((x) & 0xfffffffful)
#define PCIE_ESR_INT_AXI_LOW_ADDR_ADDR_SET(x) ((x) & 0xfffffffful)
#define PCIE_ESR_INT_AXI_LOW_ADDR_ADDR_MODIFY(r, x) ((x) & 0xfffffffful)

/* Register type: pcie_esr::int_axi_hi_addr                                */
/* Register template: pcie_esr::int_axi_hi_addr                            */
/* Field member: pcie_esr::int_axi_hi_addr.addr                            */
#define PCIE_ESR_INT_AXI_HI_ADDR_ADDR_MSB 7u
#define PCIE_ESR_INT_AXI_HI_ADDR_ADDR_LSB 0u
#define PCIE_ESR_INT_AXI_HI_ADDR_ADDR_WIDTH 8u
#define PCIE_ESR_INT_AXI_HI_ADDR_ADDR_READ_ACCESS 1u
#define PCIE_ESR_INT_AXI_HI_ADDR_ADDR_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_HI_ADDR_ADDR_RESET 0x00u
#define PCIE_ESR_INT_AXI_HI_ADDR_ADDR_FIELD_MASK 0x000000fful
#define PCIE_ESR_INT_AXI_HI_ADDR_ADDR_GET(x) ((x) & 0x000000fful)
#define PCIE_ESR_INT_AXI_HI_ADDR_ADDR_SET(x) ((x) & 0x000000fful)
#define PCIE_ESR_INT_AXI_HI_ADDR_ADDR_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: pcie_esr::int_axi_low_data                               */
/* Register template: pcie_esr::int_axi_low_data                           */
/* Field member: pcie_esr::int_axi_low_data.addr                           */
#define PCIE_ESR_INT_AXI_LOW_DATA_ADDR_MSB 31u
#define PCIE_ESR_INT_AXI_LOW_DATA_ADDR_LSB 0u
#define PCIE_ESR_INT_AXI_LOW_DATA_ADDR_WIDTH 32u
#define PCIE_ESR_INT_AXI_LOW_DATA_ADDR_READ_ACCESS 1u
#define PCIE_ESR_INT_AXI_LOW_DATA_ADDR_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_LOW_DATA_ADDR_RESET 0x00000000ul
#define PCIE_ESR_INT_AXI_LOW_DATA_ADDR_FIELD_MASK 0xfffffffful
#define PCIE_ESR_INT_AXI_LOW_DATA_ADDR_GET(x) ((x) & 0xfffffffful)
#define PCIE_ESR_INT_AXI_LOW_DATA_ADDR_SET(x) ((x) & 0xfffffffful)
#define PCIE_ESR_INT_AXI_LOW_DATA_ADDR_MODIFY(r, x) ((x) & 0xfffffffful)

/* Register type: pcie_esr::int_axi_hi_data                                */
/* Register template: pcie_esr::int_axi_hi_data                            */
/* Field member: pcie_esr::int_axi_hi_data.addr                            */
#define PCIE_ESR_INT_AXI_HI_DATA_ADDR_MSB 31u
#define PCIE_ESR_INT_AXI_HI_DATA_ADDR_LSB 0u
#define PCIE_ESR_INT_AXI_HI_DATA_ADDR_WIDTH 32u
#define PCIE_ESR_INT_AXI_HI_DATA_ADDR_READ_ACCESS 1u
#define PCIE_ESR_INT_AXI_HI_DATA_ADDR_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_HI_DATA_ADDR_RESET 0x00000000ul
#define PCIE_ESR_INT_AXI_HI_DATA_ADDR_FIELD_MASK 0xfffffffful
#define PCIE_ESR_INT_AXI_HI_DATA_ADDR_GET(x) ((x) & 0xfffffffful)
#define PCIE_ESR_INT_AXI_HI_DATA_ADDR_SET(x) ((x) & 0xfffffffful)
#define PCIE_ESR_INT_AXI_HI_DATA_ADDR_MODIFY(r, x) ((x) & 0xfffffffful)

/* Register type: pcie_esr::int_axi_stat                                   */
/* Register template: pcie_esr::int_axi_stat                               */
/* Field member: pcie_esr::int_axi_stat.msi_ctrl_int                       */
#define PCIE_ESR_INT_AXI_STAT_MSI_CTRL_INT_MSB 16u
#define PCIE_ESR_INT_AXI_STAT_MSI_CTRL_INT_LSB 16u
#define PCIE_ESR_INT_AXI_STAT_MSI_CTRL_INT_WIDTH 1u
#define PCIE_ESR_INT_AXI_STAT_MSI_CTRL_INT_READ_ACCESS 1u
#define PCIE_ESR_INT_AXI_STAT_MSI_CTRL_INT_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_STAT_MSI_CTRL_INT_RESET 0x0u
#define PCIE_ESR_INT_AXI_STAT_MSI_CTRL_INT_FIELD_MASK 0x00010000ul
#define PCIE_ESR_INT_AXI_STAT_MSI_CTRL_INT_GET(x) \
   (((x) & 0x00010000ul) >> 16)
#define PCIE_ESR_INT_AXI_STAT_MSI_CTRL_INT_SET(x) \
   (((x) << 16) & 0x00010000ul)
#define PCIE_ESR_INT_AXI_STAT_MSI_CTRL_INT_MODIFY(r, x) \
   ((((x) << 16) & 0x00010000ul) | ((r) & 0xfffefffful))
/* Field member: pcie_esr::int_axi_stat.dma_wr_done                        */
#define PCIE_ESR_INT_AXI_STAT_DMA_WR_DONE_MSB 15u
#define PCIE_ESR_INT_AXI_STAT_DMA_WR_DONE_LSB 12u
#define PCIE_ESR_INT_AXI_STAT_DMA_WR_DONE_WIDTH 4u
#define PCIE_ESR_INT_AXI_STAT_DMA_WR_DONE_READ_ACCESS 1u
#define PCIE_ESR_INT_AXI_STAT_DMA_WR_DONE_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_STAT_DMA_WR_DONE_RESET 0x0u
#define PCIE_ESR_INT_AXI_STAT_DMA_WR_DONE_FIELD_MASK 0x0000f000ul
#define PCIE_ESR_INT_AXI_STAT_DMA_WR_DONE_GET(x) (((x) & 0x0000f000ul) >> 12)
#define PCIE_ESR_INT_AXI_STAT_DMA_WR_DONE_SET(x) \
   (((x) << 12) & 0x0000f000ul)
#define PCIE_ESR_INT_AXI_STAT_DMA_WR_DONE_MODIFY(r, x) \
   ((((x) << 12) & 0x0000f000ul) | ((r) & 0xffff0ffful))
/* Field member: pcie_esr::int_axi_stat.dma_rd_done                        */
#define PCIE_ESR_INT_AXI_STAT_DMA_RD_DONE_MSB 11u
#define PCIE_ESR_INT_AXI_STAT_DMA_RD_DONE_LSB 8u
#define PCIE_ESR_INT_AXI_STAT_DMA_RD_DONE_WIDTH 4u
#define PCIE_ESR_INT_AXI_STAT_DMA_RD_DONE_READ_ACCESS 1u
#define PCIE_ESR_INT_AXI_STAT_DMA_RD_DONE_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_STAT_DMA_RD_DONE_RESET 0x0u
#define PCIE_ESR_INT_AXI_STAT_DMA_RD_DONE_FIELD_MASK 0x00000f00ul
#define PCIE_ESR_INT_AXI_STAT_DMA_RD_DONE_GET(x) (((x) & 0x00000f00ul) >> 8)
#define PCIE_ESR_INT_AXI_STAT_DMA_RD_DONE_SET(x) (((x) << 8) & 0x00000f00ul)
#define PCIE_ESR_INT_AXI_STAT_DMA_RD_DONE_MODIFY(r, x) \
   ((((x) << 8) & 0x00000f00ul) | ((r) & 0xfffff0fful))
/* Field member: pcie_esr::int_axi_stat.edma_int                           */
#define PCIE_ESR_INT_AXI_STAT_EDMA_INT_MSB 7u
#define PCIE_ESR_INT_AXI_STAT_EDMA_INT_LSB 0u
#define PCIE_ESR_INT_AXI_STAT_EDMA_INT_WIDTH 8u
#define PCIE_ESR_INT_AXI_STAT_EDMA_INT_READ_ACCESS 1u
#define PCIE_ESR_INT_AXI_STAT_EDMA_INT_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_STAT_EDMA_INT_RESET 0x00u
#define PCIE_ESR_INT_AXI_STAT_EDMA_INT_FIELD_MASK 0x000000fful
#define PCIE_ESR_INT_AXI_STAT_EDMA_INT_GET(x) ((x) & 0x000000fful)
#define PCIE_ESR_INT_AXI_STAT_EDMA_INT_SET(x) ((x) & 0x000000fful)
#define PCIE_ESR_INT_AXI_STAT_EDMA_INT_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: pcie_esr::int_axi_en                                     */
/* Register template: pcie_esr::int_axi_en                                 */
/* Field member: pcie_esr::int_axi_en.msi_ctrl_int                         */
#define PCIE_ESR_INT_AXI_EN_MSI_CTRL_INT_MSB 16u
#define PCIE_ESR_INT_AXI_EN_MSI_CTRL_INT_LSB 16u
#define PCIE_ESR_INT_AXI_EN_MSI_CTRL_INT_WIDTH 1u
#define PCIE_ESR_INT_AXI_EN_MSI_CTRL_INT_READ_ACCESS 1u
#define PCIE_ESR_INT_AXI_EN_MSI_CTRL_INT_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_EN_MSI_CTRL_INT_RESET 0x0u
#define PCIE_ESR_INT_AXI_EN_MSI_CTRL_INT_FIELD_MASK 0x00010000ul
#define PCIE_ESR_INT_AXI_EN_MSI_CTRL_INT_GET(x) (((x) & 0x00010000ul) >> 16)
#define PCIE_ESR_INT_AXI_EN_MSI_CTRL_INT_SET(x) \
   (((x) << 16) & 0x00010000ul)
#define PCIE_ESR_INT_AXI_EN_MSI_CTRL_INT_MODIFY(r, x) \
   ((((x) << 16) & 0x00010000ul) | ((r) & 0xfffefffful))
/* Field member: pcie_esr::int_axi_en.dma_wr_done                          */
#define PCIE_ESR_INT_AXI_EN_DMA_WR_DONE_MSB 15u
#define PCIE_ESR_INT_AXI_EN_DMA_WR_DONE_LSB 12u
#define PCIE_ESR_INT_AXI_EN_DMA_WR_DONE_WIDTH 4u
#define PCIE_ESR_INT_AXI_EN_DMA_WR_DONE_READ_ACCESS 1u
#define PCIE_ESR_INT_AXI_EN_DMA_WR_DONE_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_EN_DMA_WR_DONE_RESET 0x0u
#define PCIE_ESR_INT_AXI_EN_DMA_WR_DONE_FIELD_MASK 0x0000f000ul
#define PCIE_ESR_INT_AXI_EN_DMA_WR_DONE_GET(x) (((x) & 0x0000f000ul) >> 12)
#define PCIE_ESR_INT_AXI_EN_DMA_WR_DONE_SET(x) (((x) << 12) & 0x0000f000ul)
#define PCIE_ESR_INT_AXI_EN_DMA_WR_DONE_MODIFY(r, x) \
   ((((x) << 12) & 0x0000f000ul) | ((r) & 0xffff0ffful))
/* Field member: pcie_esr::int_axi_en.dma_rd_done                          */
#define PCIE_ESR_INT_AXI_EN_DMA_RD_DONE_MSB 11u
#define PCIE_ESR_INT_AXI_EN_DMA_RD_DONE_LSB 8u
#define PCIE_ESR_INT_AXI_EN_DMA_RD_DONE_WIDTH 4u
#define PCIE_ESR_INT_AXI_EN_DMA_RD_DONE_READ_ACCESS 1u
#define PCIE_ESR_INT_AXI_EN_DMA_RD_DONE_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_EN_DMA_RD_DONE_RESET 0x0u
#define PCIE_ESR_INT_AXI_EN_DMA_RD_DONE_FIELD_MASK 0x00000f00ul
#define PCIE_ESR_INT_AXI_EN_DMA_RD_DONE_GET(x) (((x) & 0x00000f00ul) >> 8)
#define PCIE_ESR_INT_AXI_EN_DMA_RD_DONE_SET(x) (((x) << 8) & 0x00000f00ul)
#define PCIE_ESR_INT_AXI_EN_DMA_RD_DONE_MODIFY(r, x) \
   ((((x) << 8) & 0x00000f00ul) | ((r) & 0xfffff0fful))
/* Field member: pcie_esr::int_axi_en.edma_int                             */
#define PCIE_ESR_INT_AXI_EN_EDMA_INT_MSB 7u
#define PCIE_ESR_INT_AXI_EN_EDMA_INT_LSB 0u
#define PCIE_ESR_INT_AXI_EN_EDMA_INT_WIDTH 8u
#define PCIE_ESR_INT_AXI_EN_EDMA_INT_READ_ACCESS 1u
#define PCIE_ESR_INT_AXI_EN_EDMA_INT_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_EN_EDMA_INT_RESET 0x00u
#define PCIE_ESR_INT_AXI_EN_EDMA_INT_FIELD_MASK 0x000000fful
#define PCIE_ESR_INT_AXI_EN_EDMA_INT_GET(x) ((x) & 0x000000fful)
#define PCIE_ESR_INT_AXI_EN_EDMA_INT_SET(x) ((x) & 0x000000fful)
#define PCIE_ESR_INT_AXI_EN_EDMA_INT_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: pcie_esr::int_axi_set                                    */
/* Register template: pcie_esr::int_axi_set                                */
/* Field member: pcie_esr::int_axi_set.msi_ctrl_int                        */
#define PCIE_ESR_INT_AXI_SET_MSI_CTRL_INT_MSB 16u
#define PCIE_ESR_INT_AXI_SET_MSI_CTRL_INT_LSB 16u
#define PCIE_ESR_INT_AXI_SET_MSI_CTRL_INT_WIDTH 1u
#define PCIE_ESR_INT_AXI_SET_MSI_CTRL_INT_READ_ACCESS 0u
#define PCIE_ESR_INT_AXI_SET_MSI_CTRL_INT_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_SET_MSI_CTRL_INT_RESET 0x0u
#define PCIE_ESR_INT_AXI_SET_MSI_CTRL_INT_FIELD_MASK 0x00010000ul
#define PCIE_ESR_INT_AXI_SET_MSI_CTRL_INT_GET(x) (((x) & 0x00010000ul) >> 16)
#define PCIE_ESR_INT_AXI_SET_MSI_CTRL_INT_SET(x) \
   (((x) << 16) & 0x00010000ul)
#define PCIE_ESR_INT_AXI_SET_MSI_CTRL_INT_MODIFY(r, x) \
   ((((x) << 16) & 0x00010000ul) | ((r) & 0xfffefffful))
/* Field member: pcie_esr::int_axi_set.dma_wr_done                         */
#define PCIE_ESR_INT_AXI_SET_DMA_WR_DONE_MSB 15u
#define PCIE_ESR_INT_AXI_SET_DMA_WR_DONE_LSB 12u
#define PCIE_ESR_INT_AXI_SET_DMA_WR_DONE_WIDTH 4u
#define PCIE_ESR_INT_AXI_SET_DMA_WR_DONE_READ_ACCESS 0u
#define PCIE_ESR_INT_AXI_SET_DMA_WR_DONE_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_SET_DMA_WR_DONE_RESET 0x0u
#define PCIE_ESR_INT_AXI_SET_DMA_WR_DONE_FIELD_MASK 0x0000f000ul
#define PCIE_ESR_INT_AXI_SET_DMA_WR_DONE_GET(x) (((x) & 0x0000f000ul) >> 12)
#define PCIE_ESR_INT_AXI_SET_DMA_WR_DONE_SET(x) \
   (((x) << 12) & 0x0000f000ul)
#define PCIE_ESR_INT_AXI_SET_DMA_WR_DONE_MODIFY(r, x) \
   ((((x) << 12) & 0x0000f000ul) | ((r) & 0xffff0ffful))
/* Field member: pcie_esr::int_axi_set.dma_rd_done                         */
#define PCIE_ESR_INT_AXI_SET_DMA_RD_DONE_MSB 11u
#define PCIE_ESR_INT_AXI_SET_DMA_RD_DONE_LSB 8u
#define PCIE_ESR_INT_AXI_SET_DMA_RD_DONE_WIDTH 4u
#define PCIE_ESR_INT_AXI_SET_DMA_RD_DONE_READ_ACCESS 0u
#define PCIE_ESR_INT_AXI_SET_DMA_RD_DONE_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_SET_DMA_RD_DONE_RESET 0x0u
#define PCIE_ESR_INT_AXI_SET_DMA_RD_DONE_FIELD_MASK 0x00000f00ul
#define PCIE_ESR_INT_AXI_SET_DMA_RD_DONE_GET(x) (((x) & 0x00000f00ul) >> 8)
#define PCIE_ESR_INT_AXI_SET_DMA_RD_DONE_SET(x) (((x) << 8) & 0x00000f00ul)
#define PCIE_ESR_INT_AXI_SET_DMA_RD_DONE_MODIFY(r, x) \
   ((((x) << 8) & 0x00000f00ul) | ((r) & 0xfffff0fful))
/* Field member: pcie_esr::int_axi_set.edma_int                            */
#define PCIE_ESR_INT_AXI_SET_EDMA_INT_MSB 7u
#define PCIE_ESR_INT_AXI_SET_EDMA_INT_LSB 0u
#define PCIE_ESR_INT_AXI_SET_EDMA_INT_WIDTH 8u
#define PCIE_ESR_INT_AXI_SET_EDMA_INT_READ_ACCESS 0u
#define PCIE_ESR_INT_AXI_SET_EDMA_INT_WRITE_ACCESS 1u
#define PCIE_ESR_INT_AXI_SET_EDMA_INT_RESET 0x00u
#define PCIE_ESR_INT_AXI_SET_EDMA_INT_FIELD_MASK 0x000000fful
#define PCIE_ESR_INT_AXI_SET_EDMA_INT_GET(x) ((x) & 0x000000fful)
#define PCIE_ESR_INT_AXI_SET_EDMA_INT_SET(x) ((x) & 0x000000fful)
#define PCIE_ESR_INT_AXI_SET_EDMA_INT_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: pcie_esr::msi_rx_vec                                     */
/* Register template: pcie_esr::msi_rx_vec                                 */
/* Field member: pcie_esr::msi_rx_vec.vector                               */
#define PCIE_ESR_MSI_RX_VEC_VECTOR_MSB 7u
#define PCIE_ESR_MSI_RX_VEC_VECTOR_LSB 0u
#define PCIE_ESR_MSI_RX_VEC_VECTOR_WIDTH 8u
#define PCIE_ESR_MSI_RX_VEC_VECTOR_READ_ACCESS 1u
#define PCIE_ESR_MSI_RX_VEC_VECTOR_WRITE_ACCESS 0u
#define PCIE_ESR_MSI_RX_VEC_VECTOR_RESET 0x00u
#define PCIE_ESR_MSI_RX_VEC_VECTOR_FIELD_MASK 0x000000fful
#define PCIE_ESR_MSI_RX_VEC_VECTOR_GET(x) ((x) & 0x000000fful)
#define PCIE_ESR_MSI_RX_VEC_VECTOR_SET(x) ((x) & 0x000000fful)
#define PCIE_ESR_MSI_RX_VEC_VECTOR_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: pcie_esr::noc_int_stat                                   */
/* Register template: pcie_esr::noc_int_stat                               */
/* Field member: pcie_esr::noc_int_stat.pshr_noc                           */
#define PCIE_ESR_NOC_INT_STAT_PSHR_NOC_MSB 14u
#define PCIE_ESR_NOC_INT_STAT_PSHR_NOC_LSB 14u
#define PCIE_ESR_NOC_INT_STAT_PSHR_NOC_WIDTH 1u
#define PCIE_ESR_NOC_INT_STAT_PSHR_NOC_READ_ACCESS 1u
#define PCIE_ESR_NOC_INT_STAT_PSHR_NOC_WRITE_ACCESS 0u
#define PCIE_ESR_NOC_INT_STAT_PSHR_NOC_RESET 0x0u
#define PCIE_ESR_NOC_INT_STAT_PSHR_NOC_FIELD_MASK 0x00004000ul
#define PCIE_ESR_NOC_INT_STAT_PSHR_NOC_GET(x) (((x) & 0x00004000ul) >> 14)
#define PCIE_ESR_NOC_INT_STAT_PSHR_NOC_SET(x) (((x) << 14) & 0x00004000ul)
#define PCIE_ESR_NOC_INT_STAT_PSHR_NOC_MODIFY(r, x) \
   ((((x) << 14) & 0x00004000ul) | ((r) & 0xffffbffful))
/* Field member: pcie_esr::noc_int_stat.dbg_brdg                           */
#define PCIE_ESR_NOC_INT_STAT_DBG_BRDG_MSB 13u
#define PCIE_ESR_NOC_INT_STAT_DBG_BRDG_LSB 13u
#define PCIE_ESR_NOC_INT_STAT_DBG_BRDG_WIDTH 1u
#define PCIE_ESR_NOC_INT_STAT_DBG_BRDG_READ_ACCESS 1u
#define PCIE_ESR_NOC_INT_STAT_DBG_BRDG_WRITE_ACCESS 0u
#define PCIE_ESR_NOC_INT_STAT_DBG_BRDG_RESET 0x0u
#define PCIE_ESR_NOC_INT_STAT_DBG_BRDG_FIELD_MASK 0x00002000ul
#define PCIE_ESR_NOC_INT_STAT_DBG_BRDG_GET(x) (((x) & 0x00002000ul) >> 13)
#define PCIE_ESR_NOC_INT_STAT_DBG_BRDG_SET(x) (((x) << 13) & 0x00002000ul)
#define PCIE_ESR_NOC_INT_STAT_DBG_BRDG_MODIFY(r, x) \
   ((((x) << 13) & 0x00002000ul) | ((r) & 0xffffdffful))
/* Field member: pcie_esr::noc_int_stat.dbg_rtr                            */
#define PCIE_ESR_NOC_INT_STAT_DBG_RTR_MSB 12u
#define PCIE_ESR_NOC_INT_STAT_DBG_RTR_LSB 12u
#define PCIE_ESR_NOC_INT_STAT_DBG_RTR_WIDTH 1u
#define PCIE_ESR_NOC_INT_STAT_DBG_RTR_READ_ACCESS 1u
#define PCIE_ESR_NOC_INT_STAT_DBG_RTR_WRITE_ACCESS 0u
#define PCIE_ESR_NOC_INT_STAT_DBG_RTR_RESET 0x0u
#define PCIE_ESR_NOC_INT_STAT_DBG_RTR_FIELD_MASK 0x00001000ul
#define PCIE_ESR_NOC_INT_STAT_DBG_RTR_GET(x) (((x) & 0x00001000ul) >> 12)
#define PCIE_ESR_NOC_INT_STAT_DBG_RTR_SET(x) (((x) << 12) & 0x00001000ul)
#define PCIE_ESR_NOC_INT_STAT_DBG_RTR_MODIFY(r, x) \
   ((((x) << 12) & 0x00001000ul) | ((r) & 0xffffeffful))
/* Field member: pcie_esr::noc_int_stat.axi_mstr_sys                       */
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_SYS_MSB 11u
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_SYS_LSB 11u
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_SYS_WIDTH 1u
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_SYS_READ_ACCESS 1u
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_SYS_WRITE_ACCESS 0u
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_SYS_RESET 0x0u
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_SYS_FIELD_MASK 0x00000800ul
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_SYS_GET(x) \
   (((x) & 0x00000800ul) >> 11)
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_SYS_SET(x) \
   (((x) << 11) & 0x00000800ul)
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_SYS_MODIFY(r, x) \
   ((((x) << 11) & 0x00000800ul) | ((r) & 0xfffff7fful))
/* Field member: pcie_esr::noc_int_stat.axi_mstr_l3                        */
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_L3_MSB 10u
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_L3_LSB 10u
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_L3_WIDTH 1u
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_L3_READ_ACCESS 1u
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_L3_WRITE_ACCESS 0u
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_L3_RESET 0x0u
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_L3_FIELD_MASK 0x00000400ul
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_L3_GET(x) (((x) & 0x00000400ul) >> 10)
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_L3_SET(x) \
   (((x) << 10) & 0x00000400ul)
#define PCIE_ESR_NOC_INT_STAT_AXI_MSTR_L3_MODIFY(r, x) \
   ((((x) << 10) & 0x00000400ul) | ((r) & 0xfffffbfful))
/* Field member: pcie_esr::noc_int_stat.axi_slv                            */
#define PCIE_ESR_NOC_INT_STAT_AXI_SLV_MSB 9u
#define PCIE_ESR_NOC_INT_STAT_AXI_SLV_LSB 9u
#define PCIE_ESR_NOC_INT_STAT_AXI_SLV_WIDTH 1u
#define PCIE_ESR_NOC_INT_STAT_AXI_SLV_READ_ACCESS 1u
#define PCIE_ESR_NOC_INT_STAT_AXI_SLV_WRITE_ACCESS 0u
#define PCIE_ESR_NOC_INT_STAT_AXI_SLV_RESET 0x0u
#define PCIE_ESR_NOC_INT_STAT_AXI_SLV_FIELD_MASK 0x00000200ul
#define PCIE_ESR_NOC_INT_STAT_AXI_SLV_GET(x) (((x) & 0x00000200ul) >> 9)
#define PCIE_ESR_NOC_INT_STAT_AXI_SLV_SET(x) (((x) << 9) & 0x00000200ul)
#define PCIE_ESR_NOC_INT_STAT_AXI_SLV_MODIFY(r, x) \
   ((((x) << 9) & 0x00000200ul) | ((r) & 0xfffffdfful))
/* Field member: pcie_esr::noc_int_stat.main_noc                           */
#define PCIE_ESR_NOC_INT_STAT_MAIN_NOC_MSB 8u
#define PCIE_ESR_NOC_INT_STAT_MAIN_NOC_LSB 0u
#define PCIE_ESR_NOC_INT_STAT_MAIN_NOC_WIDTH 9u
#define PCIE_ESR_NOC_INT_STAT_MAIN_NOC_READ_ACCESS 1u
#define PCIE_ESR_NOC_INT_STAT_MAIN_NOC_WRITE_ACCESS 0u
#define PCIE_ESR_NOC_INT_STAT_MAIN_NOC_RESET 0x000u
#define PCIE_ESR_NOC_INT_STAT_MAIN_NOC_FIELD_MASK 0x000001fful
#define PCIE_ESR_NOC_INT_STAT_MAIN_NOC_GET(x) ((x) & 0x000001fful)
#define PCIE_ESR_NOC_INT_STAT_MAIN_NOC_SET(x) ((x) & 0x000001fful)
#define PCIE_ESR_NOC_INT_STAT_MAIN_NOC_MODIFY(r, x) \
   (((x) & 0x000001fful) | ((r) & 0xfffffe00ul))

/* ####################################################################### */
/*        TYPE DEFINITIONS                                                 */
/* ####################################################################### */

/* Typedef for Addressmap: pcie_esr                                        */
typedef struct {
   volatile uint32_t pshire_ctrl; /**< Offset 0x0 (R/W) */
   volatile uint32_t pshire_reset; /**< Offset 0x4 (R/W) */
   volatile uint32_t pshire_stat; /**< Offset 0x8 (R) */
   volatile uint32_t int_axi_low_addr; /**< Offset 0xc (R/W) */
   volatile uint32_t int_axi_hi_addr; /**< Offset 0x10 (R/W) */
   volatile uint32_t int_axi_low_data; /**< Offset 0x14 (R/W) */
   volatile uint32_t int_axi_hi_data; /**< Offset 0x18 (R/W) */
   volatile uint32_t int_axi_stat; /**< Offset 0x1c (R/W) */
   volatile uint32_t int_axi_en; /**< Offset 0x20 (R/W) */
   volatile uint32_t int_axi_set; /**< Offset 0x24 (W) */
   volatile uint32_t msi_rx_vec; /**< Offset 0x28 (R) */
   volatile uint32_t noc_int_stat; /**< Offset 0x2c (R) */
   uint8_t _pad0[0x3d0];
} Pcie_esr, *PTR_Pcie_esr;

#endif
