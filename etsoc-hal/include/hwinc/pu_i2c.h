/* Copyright (c) 2025 Ainekko, Co. */
/* SPDX-License-Identifier: Apache-2.0 */
/*                                                                         */
/*                                                                         */
/* Generated by Semifore, Inc. csrCompile                                  */
/*    C Header output                                                      */

#ifndef _PU_I2C_H_
#define _PU_I2C_H_


/* ####################################################################### */
/*        ENUMERATION MACROS                                               */
/* ####################################################################### */

/* Enumeration: i2c::IC_ACK_GENERAL_CALL::ACK_GEN_CALL::ACK_GEN_CALL       */
#define I2C_IC_ACK_GENERAL_CALL_ACK_GEN_CALL_ACK_GEN_CALL_DISABLED 0x0u
#define I2C_IC_ACK_GENERAL_CALL_ACK_GEN_CALL_ACK_GEN_CALL_ENABLED 0x1u

/* Enumeration: i2c::IC_COMP_PARAM_1::ADD_ENCODED_PARAMS::ADD_ENCODED_PARAMS */
#define I2C_IC_COMP_PARAM_1_ADD_ENCODED_PARAMS_ADD_ENCODED_PARAMS_DISBALED 0x0u
#define I2C_IC_COMP_PARAM_1_ADD_ENCODED_PARAMS_ADD_ENCODED_PARAMS_ENABLED 0x1u

/* Enumeration: i2c::IC_COMP_PARAM_1::APB_DATA_WIDTH::APB_DATA_WIDTH       */
#define I2C_IC_COMP_PARAM_1_APB_DATA_WIDTH_APB_DATA_WIDTH_APB_08BITS 0x0u
#define I2C_IC_COMP_PARAM_1_APB_DATA_WIDTH_APB_DATA_WIDTH_APB_16BITS 0x1u
#define I2C_IC_COMP_PARAM_1_APB_DATA_WIDTH_APB_DATA_WIDTH_APB_32BITS 0x2u
#define I2C_IC_COMP_PARAM_1_APB_DATA_WIDTH_APB_DATA_WIDTH_RESERVED 0x3u

/* Enumeration: i2c::IC_COMP_PARAM_1::HAS_DMA::HAS_DMA                     */
#define I2C_IC_COMP_PARAM_1_HAS_DMA_HAS_DMA_DISABLED 0x0u
#define I2C_IC_COMP_PARAM_1_HAS_DMA_HAS_DMA_ENABLED 0x1u

/* Enumeration: i2c::IC_COMP_PARAM_1::HC_COUNT_VALUES::HC_COUNT_VALUES     */
#define I2C_IC_COMP_PARAM_1_HC_COUNT_VALUES_HC_COUNT_VALUES_DISABLED 0x0u
#define I2C_IC_COMP_PARAM_1_HC_COUNT_VALUES_HC_COUNT_VALUES_ENABLED 0x1u

/* Enumeration: i2c::IC_COMP_PARAM_1::INTR_IO::INTR_IO                     */
#define I2C_IC_COMP_PARAM_1_INTR_IO_INTR_IO_COMBINED 0x1u
#define I2C_IC_COMP_PARAM_1_INTR_IO_INTR_IO_INDIVIDUAL 0x0u

/* Enumeration: i2c::IC_COMP_PARAM_1::MAX_SPEED_MODE::MAX_SPEED_MODE       */
#define I2C_IC_COMP_PARAM_1_MAX_SPEED_MODE_MAX_SPEED_MODE_FAST 0x2u
#define I2C_IC_COMP_PARAM_1_MAX_SPEED_MODE_MAX_SPEED_MODE_HIGH 0x3u
#define I2C_IC_COMP_PARAM_1_MAX_SPEED_MODE_MAX_SPEED_MODE_STANDARD 0x1u

/* Enumeration: i2c::IC_CON::BUS_CLEAR_FEATURE_CTRL::BUS_CLEAR_FEATURE_CTRL */
#define I2C_IC_CON_BUS_CLEAR_FEATURE_CTRL_BUS_CLEAR_FEATURE_CTRL_DISABLED 0x0u
#define I2C_IC_CON_BUS_CLEAR_FEATURE_CTRL_BUS_CLEAR_FEATURE_CTRL_ENABLED 0x1u

/* Enumeration: i2c::IC_CON::IC_10BITADDR_MASTER::IC_10BITADDR_MASTER      */
#define I2C_IC_CON_IC_10BITADDR_MASTER_IC_10BITADDR_MASTER_ADDR_10BITS 0x1u
#define I2C_IC_CON_IC_10BITADDR_MASTER_IC_10BITADDR_MASTER_ADDR_7BITS 0x0u

/* Enumeration: i2c::IC_CON::IC_10BITADDR_SLAVE::IC_10BITADDR_SLAVE        */
#define I2C_IC_CON_IC_10BITADDR_SLAVE_IC_10BITADDR_SLAVE_ADDR_10BITS 0x1u
#define I2C_IC_CON_IC_10BITADDR_SLAVE_IC_10BITADDR_SLAVE_ADDR_7BITS 0x0u

/* Enumeration: i2c::IC_CON::IC_RESTART_EN::IC_RESTART_EN                  */
#define I2C_IC_CON_IC_RESTART_EN_IC_RESTART_EN_DISABLED 0x0u
#define I2C_IC_CON_IC_RESTART_EN_IC_RESTART_EN_ENABLED 0x1u

/* Enumeration: i2c::IC_CON::IC_SLAVE_DISABLE::IC_SLAVE_DISABLE            */
#define I2C_IC_CON_IC_SLAVE_DISABLE_IC_SLAVE_DISABLE_SLAVE_DISABLED 0x1u
#define I2C_IC_CON_IC_SLAVE_DISABLE_IC_SLAVE_DISABLE_SLAVE_ENABLED 0x0u

/* Enumeration: i2c::IC_CON::MASTER_MODE::MASTER_MODE                      */
#define I2C_IC_CON_MASTER_MODE_MASTER_MODE_DISABLED 0x0u
#define I2C_IC_CON_MASTER_MODE_MASTER_MODE_ENABLED 0x1u

/* Enumeration: i2c::IC_CON::RX_FIFO_FULL_HLD_CTRL::RX_FIFO_FULL_HLD_CTRL  */
#define I2C_IC_CON_RX_FIFO_FULL_HLD_CTRL_RX_FIFO_FULL_HLD_CTRL_DISABLED 0x0u
#define I2C_IC_CON_RX_FIFO_FULL_HLD_CTRL_RX_FIFO_FULL_HLD_CTRL_ENABLED 0x1u

/* Enumeration: i2c::IC_CON::SMBUS_SLAVE_QUICK_EN::SMBUS_SLAVE_QUICK_EN    */
#define I2C_IC_CON_SMBUS_SLAVE_QUICK_EN_SMBUS_SLAVE_QUICK_EN_DISABLED 0x0u
#define I2C_IC_CON_SMBUS_SLAVE_QUICK_EN_SMBUS_SLAVE_QUICK_EN_ENABLED 0x1u

/* Enumeration: i2c::IC_CON::SPEED::SPEED                                  */
#define I2C_IC_CON_SPEED_SPEED_FAST 0x2u
#define I2C_IC_CON_SPEED_SPEED_HIGH 0x3u
#define I2C_IC_CON_SPEED_SPEED_STANDARD 0x1u

/* Enumeration: i2c::IC_CON::STOP_DET_IFADDRESSED::STOP_DET_IFADDRESSED    */
#define I2C_IC_CON_STOP_DET_IFADDRESSED_STOP_DET_IFADDRESSED_DISABLED 0x0u
#define I2C_IC_CON_STOP_DET_IFADDRESSED_STOP_DET_IFADDRESSED_ENABLED 0x1u

/* Enumeration: i2c::IC_CON::STOP_DET_IF_MASTER_ACTIVE::STOP_DET_IF_MASTER_ACTIVE */
#define I2C_IC_CON_STOP_DET_IF_MASTER_ACTIVE_STOP_DET_IF_MASTER_ACTIVE_DISABLED 0x0u
#define I2C_IC_CON_STOP_DET_IF_MASTER_ACTIVE_STOP_DET_IF_MASTER_ACTIVE_ENABLED 0x1u

/* Enumeration: i2c::IC_CON::TX_EMPTY_CTRL::TX_EMPTY_CTRL                  */
#define I2C_IC_CON_TX_EMPTY_CTRL_TX_EMPTY_CTRL_DISABLED 0x0u
#define I2C_IC_CON_TX_EMPTY_CTRL_TX_EMPTY_CTRL_ENABLED 0x1u

/* Enumeration: i2c::IC_DATA_CMD::CMD::CMD                                 */
#define I2C_IC_DATA_CMD_CMD_CMD_READ 0x1u
#define I2C_IC_DATA_CMD_CMD_CMD_WRITE 0x0u

/* Enumeration: i2c::IC_DATA_CMD::RESTART::RESTART                         */
#define I2C_IC_DATA_CMD_RESTART_RESTART_DISABLE 0x0u
#define I2C_IC_DATA_CMD_RESTART_RESTART_ENABLE 0x1u

/* Enumeration: i2c::IC_DATA_CMD::STOP::STOP                               */
#define I2C_IC_DATA_CMD_STOP_STOP_DISABLE 0x0u
#define I2C_IC_DATA_CMD_STOP_STOP_ENABLE 0x1u

/* Enumeration: i2c::IC_ENABLE::ABORT::ABORT                               */
#define I2C_IC_ENABLE_ABORT_ABORT_DISABLE 0x0u
#define I2C_IC_ENABLE_ABORT_ABORT_ENABLED 0x1u

/* Enumeration: i2c::IC_ENABLE::ENABLE::ENABLE                             */
#define I2C_IC_ENABLE_ENABLE_ENABLE_DISABLED 0x0u
#define I2C_IC_ENABLE_ENABLE_ENABLE_ENABLED 0x1u

/* Enumeration: i2c::IC_ENABLE::SDA_STUCK_RECOVERY_ENABLE::SDA_STUCK_RECOVERY_ENABLE */
#define I2C_IC_ENABLE_SDA_STUCK_RECOVERY_ENABLE_SDA_STUCK_RECOVERY_ENABLE_SDA_STUCK_RECOVERY_DISABLED 0x0u
#define I2C_IC_ENABLE_SDA_STUCK_RECOVERY_ENABLE_SDA_STUCK_RECOVERY_ENABLE_SDA_STUCK_RECOVERY_ENABLED 0x1u

/* Enumeration: i2c::IC_ENABLE::SMBUS_CLK_RESET::SMBUS_CLK_RESET           */
#define I2C_IC_ENABLE_SMBUS_CLK_RESET_SMBUS_CLK_RESET_DISABLED 0x0u
#define I2C_IC_ENABLE_SMBUS_CLK_RESET_SMBUS_CLK_RESET_ENABLED 0x1u

/* Enumeration: i2c::IC_ENABLE::TX_CMD_BLOCK::TX_CMD_BLOCK                 */
#define I2C_IC_ENABLE_TX_CMD_BLOCK_TX_CMD_BLOCK_BLOCKED 0x1u
#define I2C_IC_ENABLE_TX_CMD_BLOCK_TX_CMD_BLOCK_NOT_BLOCKED 0x0u

/* Enumeration: i2c::IC_ENABLE_STATUS::IC_EN::IC_EN                        */
#define I2C_IC_ENABLE_STATUS_IC_EN_IC_EN_DISABLED 0x0u
#define I2C_IC_ENABLE_STATUS_IC_EN_IC_EN_ENABLED 0x1u

/* Enumeration: i2c::IC_ENABLE_STATUS::SLV_DISABLED_WHILE_BUSY::SLV_DISABLED_WHILE_BUSY */
#define I2C_IC_ENABLE_STATUS_SLV_DISABLED_WHILE_BUSY_SLV_DISABLED_WHILE_BUSY_ACTIVE 0x1u
#define I2C_IC_ENABLE_STATUS_SLV_DISABLED_WHILE_BUSY_SLV_DISABLED_WHILE_BUSY_INACTIVE 0x0u

/* Enumeration: i2c::IC_ENABLE_STATUS::SLV_RX_DATA_LOST::SLV_RX_DATA_LOST  */
#define I2C_IC_ENABLE_STATUS_SLV_RX_DATA_LOST_SLV_RX_DATA_LOST_ACTIVE 0x1u
#define I2C_IC_ENABLE_STATUS_SLV_RX_DATA_LOST_SLV_RX_DATA_LOST_INACTIVE 0x0u

/* Enumeration: i2c::IC_INTR_MASK::M_ACTIVITY::M_ACTIVITY                  */
#define I2C_IC_INTR_MASK_M_ACTIVITY_M_ACTIVITY_DISABLED 0x1u
#define I2C_IC_INTR_MASK_M_ACTIVITY_M_ACTIVITY_ENABLED 0x0u

/* Enumeration: i2c::IC_INTR_MASK::M_GEN_CALL::M_GEN_CALL                  */
#define I2C_IC_INTR_MASK_M_GEN_CALL_M_GEN_CALL_DISABLED 0x1u
#define I2C_IC_INTR_MASK_M_GEN_CALL_M_GEN_CALL_ENABLED 0x0u

/* Enumeration: i2c::IC_INTR_MASK::M_MASTER_ON_HOLD_read_only::M_MASTER_ON_HOLD_read_only */
#define I2C_IC_INTR_MASK_M_MASTER_ON_HOLD_READ_ONLY_M_MASTER_ON_HOLD_READ_ONLY_DISABLED 0x1u
#define I2C_IC_INTR_MASK_M_MASTER_ON_HOLD_READ_ONLY_M_MASTER_ON_HOLD_READ_ONLY_ENABLED 0x0u

/* Enumeration: i2c::IC_INTR_MASK::M_RD_REQ::M_RD_REQ                      */
#define I2C_IC_INTR_MASK_M_RD_REQ_M_RD_REQ_DISABLED 0x1u
#define I2C_IC_INTR_MASK_M_RD_REQ_M_RD_REQ_ENABLED 0x0u

/* Enumeration: i2c::IC_INTR_MASK::M_RESTART_DET_read_only::M_RESTART_DET_read_only */
#define I2C_IC_INTR_MASK_M_RESTART_DET_READ_ONLY_M_RESTART_DET_READ_ONLY_DISABLED 0x1u
#define I2C_IC_INTR_MASK_M_RESTART_DET_READ_ONLY_M_RESTART_DET_READ_ONLY_ENABLED 0x0u

/* Enumeration: i2c::IC_INTR_MASK::M_RX_DONE::M_RX_DONE                    */
#define I2C_IC_INTR_MASK_M_RX_DONE_M_RX_DONE_DISABLED 0x1u
#define I2C_IC_INTR_MASK_M_RX_DONE_M_RX_DONE_ENABLED 0x0u

/* Enumeration: i2c::IC_INTR_MASK::M_RX_FULL::M_RX_FULL                    */
#define I2C_IC_INTR_MASK_M_RX_FULL_M_RX_FULL_DISABLED 0x1u
#define I2C_IC_INTR_MASK_M_RX_FULL_M_RX_FULL_ENABLED 0x0u

/* Enumeration: i2c::IC_INTR_MASK::M_RX_OVER::M_RX_OVER                    */
#define I2C_IC_INTR_MASK_M_RX_OVER_M_RX_OVER_DISABLED 0x1u
#define I2C_IC_INTR_MASK_M_RX_OVER_M_RX_OVER_ENABLED 0x0u

/* Enumeration: i2c::IC_INTR_MASK::M_RX_UNDER::M_RX_UNDER                  */
#define I2C_IC_INTR_MASK_M_RX_UNDER_M_RX_UNDER_DISABLED 0x1u
#define I2C_IC_INTR_MASK_M_RX_UNDER_M_RX_UNDER_ENABLED 0x0u

/* Enumeration: i2c::IC_INTR_MASK::M_SCL_STUCK_AT_LOW::M_SCL_STUCK_AT_LOW  */
#define I2C_IC_INTR_MASK_M_SCL_STUCK_AT_LOW_M_SCL_STUCK_AT_LOW_DISABLED 0x1u
#define I2C_IC_INTR_MASK_M_SCL_STUCK_AT_LOW_M_SCL_STUCK_AT_LOW_ENABLED 0x0u

/* Enumeration: i2c::IC_INTR_MASK::M_START_DET::M_START_DET                */
#define I2C_IC_INTR_MASK_M_START_DET_M_START_DET_DISABLED 0x1u
#define I2C_IC_INTR_MASK_M_START_DET_M_START_DET_ENABLED 0x0u

/* Enumeration: i2c::IC_INTR_MASK::M_STOP_DET::M_STOP_DET                  */
#define I2C_IC_INTR_MASK_M_STOP_DET_M_STOP_DET_DISABLED 0x1u
#define I2C_IC_INTR_MASK_M_STOP_DET_M_STOP_DET_ENABLED 0x0u

/* Enumeration: i2c::IC_INTR_MASK::M_TX_ABRT::M_TX_ABRT                    */
#define I2C_IC_INTR_MASK_M_TX_ABRT_M_TX_ABRT_DISABLED 0x1u
#define I2C_IC_INTR_MASK_M_TX_ABRT_M_TX_ABRT_ENABLED 0x0u

/* Enumeration: i2c::IC_INTR_MASK::M_TX_EMPTY::M_TX_EMPTY                  */
#define I2C_IC_INTR_MASK_M_TX_EMPTY_M_TX_EMPTY_DISABLED 0x1u
#define I2C_IC_INTR_MASK_M_TX_EMPTY_M_TX_EMPTY_ENABLED 0x0u

/* Enumeration: i2c::IC_INTR_MASK::M_TX_OVER::M_TX_OVER                    */
#define I2C_IC_INTR_MASK_M_TX_OVER_M_TX_OVER_DISABLED 0x1u
#define I2C_IC_INTR_MASK_M_TX_OVER_M_TX_OVER_ENABLED 0x0u

/* Enumeration: i2c::IC_INTR_STAT::R_ACTIVITY::R_ACTIVITY                  */
#define I2C_IC_INTR_STAT_R_ACTIVITY_R_ACTIVITY_ACTIVE 0x1u
#define I2C_IC_INTR_STAT_R_ACTIVITY_R_ACTIVITY_INACTIVE 0x0u

/* Enumeration: i2c::IC_INTR_STAT::R_GEN_CALL::R_GEN_CALL                  */
#define I2C_IC_INTR_STAT_R_GEN_CALL_R_GEN_CALL_ACTIVE 0x1u
#define I2C_IC_INTR_STAT_R_GEN_CALL_R_GEN_CALL_INACTIVE 0x0u

/* Enumeration: i2c::IC_INTR_STAT::R_MASTER_ON_HOLD::R_MASTER_ON_HOLD      */
#define I2C_IC_INTR_STAT_R_MASTER_ON_HOLD_R_MASTER_ON_HOLD_ACTIVE 0x1u
#define I2C_IC_INTR_STAT_R_MASTER_ON_HOLD_R_MASTER_ON_HOLD_INACTIVE 0x0u

/* Enumeration: i2c::IC_INTR_STAT::R_RD_REQ::R_RD_REQ                      */
#define I2C_IC_INTR_STAT_R_RD_REQ_R_RD_REQ_ACTIVE 0x1u
#define I2C_IC_INTR_STAT_R_RD_REQ_R_RD_REQ_INACTIVE 0x0u

/* Enumeration: i2c::IC_INTR_STAT::R_RESTART_DET::R_RESTART_DET            */
#define I2C_IC_INTR_STAT_R_RESTART_DET_R_RESTART_DET_ACTIVE 0x1u
#define I2C_IC_INTR_STAT_R_RESTART_DET_R_RESTART_DET_INACTIVE 0x0u

/* Enumeration: i2c::IC_INTR_STAT::R_RX_DONE::R_RX_DONE                    */
#define I2C_IC_INTR_STAT_R_RX_DONE_R_RX_DONE_ACTIVE 0x1u
#define I2C_IC_INTR_STAT_R_RX_DONE_R_RX_DONE_INACTIVE 0x0u

/* Enumeration: i2c::IC_INTR_STAT::R_RX_FULL::R_RX_FULL                    */
#define I2C_IC_INTR_STAT_R_RX_FULL_R_RX_FULL_ACTIVE 0x1u
#define I2C_IC_INTR_STAT_R_RX_FULL_R_RX_FULL_INACTIVE 0x0u

/* Enumeration: i2c::IC_INTR_STAT::R_RX_OVER::R_RX_OVER                    */
#define I2C_IC_INTR_STAT_R_RX_OVER_R_RX_OVER_ACTIVE 0x1u
#define I2C_IC_INTR_STAT_R_RX_OVER_R_RX_OVER_INACTIVE 0x0u

/* Enumeration: i2c::IC_INTR_STAT::R_RX_UNDER::R_RX_UNDER                  */
#define I2C_IC_INTR_STAT_R_RX_UNDER_R_RX_UNDER_ACTIVE 0x1u
#define I2C_IC_INTR_STAT_R_RX_UNDER_R_RX_UNDER_INACTIVE 0x0u

/* Enumeration: i2c::IC_INTR_STAT::R_SCL_STUCK_AT_LOW::R_SCL_STUCK_AT_LOW  */
#define I2C_IC_INTR_STAT_R_SCL_STUCK_AT_LOW_R_SCL_STUCK_AT_LOW_ACTIVE 0x1u
#define I2C_IC_INTR_STAT_R_SCL_STUCK_AT_LOW_R_SCL_STUCK_AT_LOW_INACTIVE 0x0u

/* Enumeration: i2c::IC_INTR_STAT::R_START_DET::R_START_DET                */
#define I2C_IC_INTR_STAT_R_START_DET_R_START_DET_ACTIVE 0x1u
#define I2C_IC_INTR_STAT_R_START_DET_R_START_DET_INACTIVE 0x0u

/* Enumeration: i2c::IC_INTR_STAT::R_STOP_DET::R_STOP_DET                  */
#define I2C_IC_INTR_STAT_R_STOP_DET_R_STOP_DET_ACTIVE 0x1u
#define I2C_IC_INTR_STAT_R_STOP_DET_R_STOP_DET_INACTIVE 0x0u

/* Enumeration: i2c::IC_INTR_STAT::R_TX_ABRT::R_TX_ABRT                    */
#define I2C_IC_INTR_STAT_R_TX_ABRT_R_TX_ABRT_ACTIVE 0x1u
#define I2C_IC_INTR_STAT_R_TX_ABRT_R_TX_ABRT_INACTIVE 0x0u

/* Enumeration: i2c::IC_INTR_STAT::R_TX_EMPTY::R_TX_EMPTY                  */
#define I2C_IC_INTR_STAT_R_TX_EMPTY_R_TX_EMPTY_ACTIVE 0x1u
#define I2C_IC_INTR_STAT_R_TX_EMPTY_R_TX_EMPTY_INACTIVE 0x0u

/* Enumeration: i2c::IC_INTR_STAT::R_TX_OVER::R_TX_OVER                    */
#define I2C_IC_INTR_STAT_R_TX_OVER_R_TX_OVER_ACTIVE 0x1u
#define I2C_IC_INTR_STAT_R_TX_OVER_R_TX_OVER_INACTIVE 0x0u

/* Enumeration: i2c::IC_RAW_INTR_STAT::ACTIVITY::ACTIVITY                  */
#define I2C_IC_RAW_INTR_STAT_ACTIVITY_ACTIVITY_ACTIVE 0x1u
#define I2C_IC_RAW_INTR_STAT_ACTIVITY_ACTIVITY_INACTIVE 0x0u

/* Enumeration: i2c::IC_RAW_INTR_STAT::GEN_CALL::GEN_CALL                  */
#define I2C_IC_RAW_INTR_STAT_GEN_CALL_GEN_CALL_ACTIVE 0x1u
#define I2C_IC_RAW_INTR_STAT_GEN_CALL_GEN_CALL_INACTIVE 0x0u

/* Enumeration: i2c::IC_RAW_INTR_STAT::MASTER_ON_HOLD::MASTER_ON_HOLD      */
#define I2C_IC_RAW_INTR_STAT_MASTER_ON_HOLD_MASTER_ON_HOLD_ACTIVE 0x1u
#define I2C_IC_RAW_INTR_STAT_MASTER_ON_HOLD_MASTER_ON_HOLD_INACTIVE 0x0u

/* Enumeration: i2c::IC_RAW_INTR_STAT::RD_REQ::RD_REQ                      */
#define I2C_IC_RAW_INTR_STAT_RD_REQ_RD_REQ_ACTIVE 0x1u
#define I2C_IC_RAW_INTR_STAT_RD_REQ_RD_REQ_INACTIVE 0x0u

/* Enumeration: i2c::IC_RAW_INTR_STAT::RESTART_DET::RESTART_DET            */
#define I2C_IC_RAW_INTR_STAT_RESTART_DET_RESTART_DET_ACTIVE 0x1u
#define I2C_IC_RAW_INTR_STAT_RESTART_DET_RESTART_DET_INACTIVE 0x0u

/* Enumeration: i2c::IC_RAW_INTR_STAT::RX_DONE::RX_DONE                    */
#define I2C_IC_RAW_INTR_STAT_RX_DONE_RX_DONE_ACTIVE 0x1u
#define I2C_IC_RAW_INTR_STAT_RX_DONE_RX_DONE_INACTIVE 0x0u

/* Enumeration: i2c::IC_RAW_INTR_STAT::RX_FULL::RX_FULL                    */
#define I2C_IC_RAW_INTR_STAT_RX_FULL_RX_FULL_ACTIVE 0x1u
#define I2C_IC_RAW_INTR_STAT_RX_FULL_RX_FULL_INACTIVE 0x0u

/* Enumeration: i2c::IC_RAW_INTR_STAT::RX_OVER::RX_OVER                    */
#define I2C_IC_RAW_INTR_STAT_RX_OVER_RX_OVER_ACTIVE 0x1u
#define I2C_IC_RAW_INTR_STAT_RX_OVER_RX_OVER_INACTIVE 0x0u

/* Enumeration: i2c::IC_RAW_INTR_STAT::RX_UNDER::RX_UNDER                  */
#define I2C_IC_RAW_INTR_STAT_RX_UNDER_RX_UNDER_ACTIVE 0x1u
#define I2C_IC_RAW_INTR_STAT_RX_UNDER_RX_UNDER_INACTIVE 0x0u

/* Enumeration: i2c::IC_RAW_INTR_STAT::SCL_STUCK_AT_LOW::SCL_STUCK_AT_LOW  */
#define I2C_IC_RAW_INTR_STAT_SCL_STUCK_AT_LOW_SCL_STUCK_AT_LOW_ACTIVE 0x1u
#define I2C_IC_RAW_INTR_STAT_SCL_STUCK_AT_LOW_SCL_STUCK_AT_LOW_INACTIVE 0x0u

/* Enumeration: i2c::IC_RAW_INTR_STAT::START_DET::START_DET                */
#define I2C_IC_RAW_INTR_STAT_START_DET_START_DET_ACTIVE 0x1u
#define I2C_IC_RAW_INTR_STAT_START_DET_START_DET_INACTIVE 0x0u

/* Enumeration: i2c::IC_RAW_INTR_STAT::STOP_DET::STOP_DET                  */
#define I2C_IC_RAW_INTR_STAT_STOP_DET_STOP_DET_ACTIVE 0x1u
#define I2C_IC_RAW_INTR_STAT_STOP_DET_STOP_DET_INACTIVE 0x0u

/* Enumeration: i2c::IC_RAW_INTR_STAT::TX_ABRT::TX_ABRT                    */
#define I2C_IC_RAW_INTR_STAT_TX_ABRT_TX_ABRT_ACTIVE 0x1u
#define I2C_IC_RAW_INTR_STAT_TX_ABRT_TX_ABRT_INACTIVE 0x0u

/* Enumeration: i2c::IC_RAW_INTR_STAT::TX_EMPTY::TX_EMPTY                  */
#define I2C_IC_RAW_INTR_STAT_TX_EMPTY_TX_EMPTY_ACTIVE 0x1u
#define I2C_IC_RAW_INTR_STAT_TX_EMPTY_TX_EMPTY_INACTIVE 0x0u

/* Enumeration: i2c::IC_RAW_INTR_STAT::TX_OVER::TX_OVER                    */
#define I2C_IC_RAW_INTR_STAT_TX_OVER_TX_OVER_ACTIVE 0x1u
#define I2C_IC_RAW_INTR_STAT_TX_OVER_TX_OVER_INACTIVE 0x0u

/* Enumeration: i2c::IC_SMBUS_INTR_MASK::M_HOST_NOTIFY_MST_DET::M_HOST_NOTIFY_MST_DET */
#define I2C_IC_SMBUS_INTR_MASK_M_HOST_NOTIFY_MST_DET_M_HOST_NOTIFY_MST_DET_DISABLED 0x1u
#define I2C_IC_SMBUS_INTR_MASK_M_HOST_NOTIFY_MST_DET_M_HOST_NOTIFY_MST_DET_ENABLED 0x0u

/* Enumeration: i2c::IC_SMBUS_INTR_MASK::M_MST_CLOCK_EXTND_TIMEOUT::M_MST_CLOCK_EXTND_TIMEOUT */
#define I2C_IC_SMBUS_INTR_MASK_M_MST_CLOCK_EXTND_TIMEOUT_M_MST_CLOCK_EXTND_TIMEOUT_DISABLED 0x1u
#define I2C_IC_SMBUS_INTR_MASK_M_MST_CLOCK_EXTND_TIMEOUT_M_MST_CLOCK_EXTND_TIMEOUT_ENABLED 0x0u

/* Enumeration: i2c::IC_SMBUS_INTR_MASK::M_QUICK_CMD_DET::M_QUICK_CMD_DET  */
#define I2C_IC_SMBUS_INTR_MASK_M_QUICK_CMD_DET_M_QUICK_CMD_DET_DISABLED 0x1u
#define I2C_IC_SMBUS_INTR_MASK_M_QUICK_CMD_DET_M_QUICK_CMD_DET_ENABLED 0x0u

/* Enumeration: i2c::IC_SMBUS_INTR_MASK::M_SLV_CLOCK_EXTND_TIMEOUT::M_SLV_CLOCK_EXTND_TIMEOUT */
#define I2C_IC_SMBUS_INTR_MASK_M_SLV_CLOCK_EXTND_TIMEOUT_M_SLV_CLOCK_EXTND_TIMEOUT_DISABLED 0x1u
#define I2C_IC_SMBUS_INTR_MASK_M_SLV_CLOCK_EXTND_TIMEOUT_M_SLV_CLOCK_EXTND_TIMEOUT_ENABLED 0x0u

/* Enumeration: i2c::IC_SMBUS_INTR_STAT::R_HOST_NOTIFY_MST_DET::R_HOST_NOTIFY_MST_DET */
#define I2C_IC_SMBUS_INTR_STAT_R_HOST_NOTIFY_MST_DET_R_HOST_NOTIFY_MST_DET_ACTIVE 0x1u
#define I2C_IC_SMBUS_INTR_STAT_R_HOST_NOTIFY_MST_DET_R_HOST_NOTIFY_MST_DET_INACTIVE 0x0u

/* Enumeration: i2c::IC_SMBUS_INTR_STAT::R_MST_CLOCK_EXTND_TIMEOUT::R_MST_CLOCK_EXTND_TIMEOUT */
#define I2C_IC_SMBUS_INTR_STAT_R_MST_CLOCK_EXTND_TIMEOUT_R_MST_CLOCK_EXTND_TIMEOUT_ACTIVE 0x1u
#define I2C_IC_SMBUS_INTR_STAT_R_MST_CLOCK_EXTND_TIMEOUT_R_MST_CLOCK_EXTND_TIMEOUT_INACTIVE 0x0u

/* Enumeration: i2c::IC_SMBUS_INTR_STAT::R_QUICK_CMD_DET::R_QUICK_CMD_DET  */
#define I2C_IC_SMBUS_INTR_STAT_R_QUICK_CMD_DET_R_QUICK_CMD_DET_ACTIVE 0x1u
#define I2C_IC_SMBUS_INTR_STAT_R_QUICK_CMD_DET_R_QUICK_CMD_DET_INACTIVE 0x0u

/* Enumeration: i2c::IC_SMBUS_INTR_STAT::R_SLV_CLOCK_EXTND_TIMEOUT::R_SLV_CLOCK_EXTND_TIMEOUT */
#define I2C_IC_SMBUS_INTR_STAT_R_SLV_CLOCK_EXTND_TIMEOUT_R_SLV_CLOCK_EXTND_TIMEOUT_ACTIVE 0x1u
#define I2C_IC_SMBUS_INTR_STAT_R_SLV_CLOCK_EXTND_TIMEOUT_R_SLV_CLOCK_EXTND_TIMEOUT_INACTIVE 0x0u

/* Enumeration: i2c::IC_SMBUS_RAW_INTR_STAT::HOST_NTFY_MST_DET::HOST_NTFY_MST_DET */
#define I2C_IC_SMBUS_RAW_INTR_STAT_HOST_NTFY_MST_DET_HOST_NTFY_MST_DET_ACTIVE 0x1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_HOST_NTFY_MST_DET_HOST_NTFY_MST_DET_INACTIVE 0x0u

/* Enumeration: i2c::IC_SMBUS_RAW_INTR_STAT::MST_CLOCK_EXTND_TIMEOUT::MST_CLOCK_EXTND_TIMEOUT */
#define I2C_IC_SMBUS_RAW_INTR_STAT_MST_CLOCK_EXTND_TIMEOUT_MST_CLOCK_EXTND_TIMEOUT_ACTIVE 0x1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_MST_CLOCK_EXTND_TIMEOUT_MST_CLOCK_EXTND_TIMEOUT_INACTIVE 0x0u

/* Enumeration: i2c::IC_SMBUS_RAW_INTR_STAT::QUICK_CMD_DET::QUICK_CMD_DET  */
#define I2C_IC_SMBUS_RAW_INTR_STAT_QUICK_CMD_DET_QUICK_CMD_DET_ACTIVE 0x1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_QUICK_CMD_DET_QUICK_CMD_DET_INACTIVE 0x0u

/* Enumeration: i2c::IC_SMBUS_RAW_INTR_STAT::SLV_CLOCK_EXTND_TIMEOUT::SLV_CLOCK_EXTND_TIMEOUT */
#define I2C_IC_SMBUS_RAW_INTR_STAT_SLV_CLOCK_EXTND_TIMEOUT_SLV_CLOCK_EXTND_TIMEOUT_ACTIVE 0x1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_SLV_CLOCK_EXTND_TIMEOUT_SLV_CLOCK_EXTND_TIMEOUT_INACTIVE 0x0u

/* Enumeration: i2c::IC_STATUS::ACTIVITY::ACTIVITY                         */
#define I2C_IC_STATUS_ACTIVITY_ACTIVITY_ACTIVE 0x1u
#define I2C_IC_STATUS_ACTIVITY_ACTIVITY_INACTIVE 0x0u

/* Enumeration: i2c::IC_STATUS::MST_ACTIVITY::MST_ACTIVITY                 */
#define I2C_IC_STATUS_MST_ACTIVITY_MST_ACTIVITY_ACTIVE 0x1u
#define I2C_IC_STATUS_MST_ACTIVITY_MST_ACTIVITY_IDLE 0x0u

/* Enumeration: i2c::IC_STATUS::RFF::RFF                                   */
#define I2C_IC_STATUS_RFF_RFF_FULL 0x1u
#define I2C_IC_STATUS_RFF_RFF_NOT_FULL 0x0u

/* Enumeration: i2c::IC_STATUS::RFNE::RFNE                                 */
#define I2C_IC_STATUS_RFNE_RFNE_EMPTY 0x0u
#define I2C_IC_STATUS_RFNE_RFNE_NOT_EMPTY 0x1u

/* Enumeration: i2c::IC_STATUS::SDA_STUCK_NOT_RECOVERED::SDA_STUCK_NOT_RECOVERED */
#define I2C_IC_STATUS_SDA_STUCK_NOT_RECOVERED_SDA_STUCK_NOT_RECOVERED_ACTIVE 0x1u
#define I2C_IC_STATUS_SDA_STUCK_NOT_RECOVERED_SDA_STUCK_NOT_RECOVERED_INACTIVE 0x0u

/* Enumeration: i2c::IC_STATUS::SLV_ACTIVITY::SLV_ACTIVITY                 */
#define I2C_IC_STATUS_SLV_ACTIVITY_SLV_ACTIVITY_ACTIVE 0x1u
#define I2C_IC_STATUS_SLV_ACTIVITY_SLV_ACTIVITY_IDLE 0x0u

/* Enumeration: i2c::IC_STATUS::SMBUS_QUICK_CMD_BIT::SMBUS_QUICK_CMD_BIT   */
#define I2C_IC_STATUS_SMBUS_QUICK_CMD_BIT_SMBUS_QUICK_CMD_BIT_ACTIVE 0x1u
#define I2C_IC_STATUS_SMBUS_QUICK_CMD_BIT_SMBUS_QUICK_CMD_BIT_INACTIVE 0x0u

/* Enumeration: i2c::IC_STATUS::TFE::TFE                                   */
#define I2C_IC_STATUS_TFE_TFE_EMPTY 0x1u
#define I2C_IC_STATUS_TFE_TFE_NON_EMPTY 0x0u

/* Enumeration: i2c::IC_STATUS::TFNF::TFNF                                 */
#define I2C_IC_STATUS_TFNF_TFNF_FULL 0x0u
#define I2C_IC_STATUS_TFNF_TFNF_NOT_FULL 0x1u

/* Enumeration: i2c::IC_TAR::GC_OR_START::GC_OR_START                      */
#define I2C_IC_TAR_GC_OR_START_GC_OR_START_GENERAL_CALL 0x0u
#define I2C_IC_TAR_GC_OR_START_GC_OR_START_START_BYTE 0x1u

/* Enumeration: i2c::IC_TAR::SMBUS_QUICK_CMD::SMBUS_QUICK_CMD              */
#define I2C_IC_TAR_SMBUS_QUICK_CMD_SMBUS_QUICK_CMD_DISABLED 0x0u
#define I2C_IC_TAR_SMBUS_QUICK_CMD_SMBUS_QUICK_CMD_ENABLED 0x1u

/* Enumeration: i2c::IC_TAR::SPECIAL::SPECIAL                              */
#define I2C_IC_TAR_SPECIAL_SPECIAL_DISABLED 0x0u
#define I2C_IC_TAR_SPECIAL_SPECIAL_ENABLED 0x1u

/* Enumeration: i2c::IC_TX_ABRT_SOURCE::ABRT_10ADDR1_NOACK::ABRT_10ADDR1_NOACK */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR1_NOACK_ABRT_10ADDR1_NOACK_ACTIVE 0x1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR1_NOACK_ABRT_10ADDR1_NOACK_INACTIVE 0x0u

/* Enumeration: i2c::IC_TX_ABRT_SOURCE::ABRT_10ADDR2_NOACK::ABRT_10ADDR2_NOACK */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK_ABRT_10ADDR2_NOACK_ACTIVE 0x1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK_ABRT_10ADDR2_NOACK_INACTIVE 0x0u

/* Enumeration: i2c::IC_TX_ABRT_SOURCE::ABRT_10B_RD_NORSTRT::ABRT_10B_RD_NORSTRT */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT_ABRT_10B_RD_NORSTRT_ABRT_10B_RD_GENERATED 0x1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT_ABRT_10B_RD_NORSTRT_ABRT_10B_RD_VOID 0x0u

/* Enumeration: i2c::IC_TX_ABRT_SOURCE::ABRT_7B_ADDR_NOACK::ABRT_7B_ADDR_NOACK */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK_ABRT_7B_ADDR_NOACK_ACTIVE 0x1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK_ABRT_7B_ADDR_NOACK_INACTIVE 0x0u

/* Enumeration: i2c::IC_TX_ABRT_SOURCE::ABRT_GCALL_NOACK::ABRT_GCALL_NOACK */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_NOACK_ABRT_GCALL_NOACK_ABRT_GCALL_NOACK_GENERATED 0x1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_NOACK_ABRT_GCALL_NOACK_ABRT_GCALL_NOACK_VOID 0x0u

/* Enumeration: i2c::IC_TX_ABRT_SOURCE::ABRT_GCALL_READ::ABRT_GCALL_READ   */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_READ_ABRT_GCALL_READ_ABRT_GCALL_READ_GENERATED 0x1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_READ_ABRT_GCALL_READ_ABRT_GCALL_READ_VOID 0x0u

/* Enumeration: i2c::IC_TX_ABRT_SOURCE::ABRT_HS_ACKDET::ABRT_HS_ACKDET     */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_ACKDET_ABRT_HS_ACKDET_ABRT_HS_ACK_GENERATED 0x1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_ACKDET_ABRT_HS_ACKDET_ABRT_HS_ACK_VOID 0x0u

/* Enumeration: i2c::IC_TX_ABRT_SOURCE::ABRT_HS_NORSTRT::ABRT_HS_NORSTRT   */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_NORSTRT_ABRT_HS_NORSTRT_ABRT_HS_NORSTRT_GENERATED 0x1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_NORSTRT_ABRT_HS_NORSTRT_ABRT_HS_NORSTRT_VOID 0x0u

/* Enumeration: i2c::IC_TX_ABRT_SOURCE::ABRT_MASTER_DIS::ABRT_MASTER_DIS   */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_MASTER_DIS_ABRT_MASTER_DIS_ABRT_MASTER_DIS_GENERATED 0x1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_MASTER_DIS_ABRT_MASTER_DIS_ABRT_MASTER_DIS_VOID 0x0u

/* Enumeration: i2c::IC_TX_ABRT_SOURCE::ABRT_SBYTE_ACKDET::ABRT_SBYTE_ACKDET */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET_ABRT_SBYTE_ACKDET_ABRT_SBYTE_ACKDET_GENERATED 0x1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET_ABRT_SBYTE_ACKDET_ABRT_SBYTE_ACKDET_VOID 0x0u

/* Enumeration: i2c::IC_TX_ABRT_SOURCE::ABRT_SBYTE_NORSTRT::ABRT_SBYTE_NORSTRT */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT_ABRT_SBYTE_NORSTRT_ABRT_SBYTE_NORSTRT_GENERATED 0x1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT_ABRT_SBYTE_NORSTRT_ABRT_SBYTE_NORSTRT_VOID 0x0u

/* Enumeration: i2c::IC_TX_ABRT_SOURCE::ABRT_SDA_STUCK_AT_LOW::ABRT_SDA_STUCK_AT_LOW */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SDA_STUCK_AT_LOW_ABRT_SDA_STUCK_AT_LOW_ACTIVE 0x1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SDA_STUCK_AT_LOW_ABRT_SDA_STUCK_AT_LOW_INACTIVE 0x0u

/* Enumeration: i2c::IC_TX_ABRT_SOURCE::ABRT_SLVFLUSH_TXFIFO::ABRT_SLVFLUSH_TXFIFO */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO_ABRT_SLVFLUSH_TXFIFO_ABRT_SLVFLUSH_TXFIFO_GENERATED 0x1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO_ABRT_SLVFLUSH_TXFIFO_ABRT_SLVFLUSH_TXFIFO_VOID 0x0u

/* Enumeration: i2c::IC_TX_ABRT_SOURCE::ABRT_SLVRD_INTX::ABRT_SLVRD_INTX   */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVRD_INTX_ABRT_SLVRD_INTX_ABRT_SLVRD_INTX_GENERATED 0x1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVRD_INTX_ABRT_SLVRD_INTX_ABRT_SLVRD_INTX_VOID 0x0u

/* Enumeration: i2c::IC_TX_ABRT_SOURCE::ABRT_SLV_ARBLOST::ABRT_SLV_ARBLOST */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST_ABRT_SLV_ARBLOST_ABRT_SLV_ARBLOST_GENERATED 0x1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST_ABRT_SLV_ARBLOST_ABRT_SLV_ARBLOST_VOID 0x0u

/* Enumeration: i2c::IC_TX_ABRT_SOURCE::ABRT_TXDATA_NOACK::ABRT_TXDATA_NOACK */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK_ABRT_TXDATA_NOACK_ABRT_TXDATA_NOACK_GENERATED 0x1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK_ABRT_TXDATA_NOACK_ABRT_TXDATA_NOACK_VOID 0x0u

/* Enumeration: i2c::IC_TX_ABRT_SOURCE::ABRT_USER_ABRT::ABRT_USER_ABRT     */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_USER_ABRT_ABRT_USER_ABRT_ABRT_USER_ABRT_GENERATED 0x1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_USER_ABRT_ABRT_USER_ABRT_ABRT_USER_ABRT_VOID 0x0u

/* Enumeration: i2c::IC_TX_ABRT_SOURCE::ARB_LOST::ARB_LOST                 */
#define I2C_IC_TX_ABRT_SOURCE_ARB_LOST_ARB_LOST_ABRT_LOST_GENERATED 0x1u
#define I2C_IC_TX_ABRT_SOURCE_ARB_LOST_ARB_LOST_ABRT_LOST_VOID 0x0u


/* ####################################################################### */
/*        ADDRESS MACROS                                                   */
/* ####################################################################### */

/* Address Space for Addressmap: i2c                                       */
/* Register: i2c.IC_CON                                                    */
#define I2C_IC_CON_ADDRESS 0x0u
#define I2C_IC_CON_BYTE_ADDRESS 0x0u
/* Register: i2c.IC_TAR                                                    */
#define I2C_IC_TAR_ADDRESS 0x4u
#define I2C_IC_TAR_BYTE_ADDRESS 0x4u
/* Register: i2c.IC_SAR                                                    */
#define I2C_IC_SAR_ADDRESS 0x8u
#define I2C_IC_SAR_BYTE_ADDRESS 0x8u
/* Register: i2c.IC_DATA_CMD                                               */
#define I2C_IC_DATA_CMD_ADDRESS 0x10u
#define I2C_IC_DATA_CMD_BYTE_ADDRESS 0x10u
/* Register: i2c.IC_SS_SCL_HCNT                                            */
#define I2C_IC_SS_SCL_HCNT_ADDRESS 0x14u
#define I2C_IC_SS_SCL_HCNT_BYTE_ADDRESS 0x14u
/* Register: i2c.IC_SS_SCL_LCNT                                            */
#define I2C_IC_SS_SCL_LCNT_ADDRESS 0x18u
#define I2C_IC_SS_SCL_LCNT_BYTE_ADDRESS 0x18u
/* Register: i2c.IC_FS_SCL_HCNT                                            */
#define I2C_IC_FS_SCL_HCNT_ADDRESS 0x1cu
#define I2C_IC_FS_SCL_HCNT_BYTE_ADDRESS 0x1cu
/* Register: i2c.IC_FS_SCL_LCNT                                            */
#define I2C_IC_FS_SCL_LCNT_ADDRESS 0x20u
#define I2C_IC_FS_SCL_LCNT_BYTE_ADDRESS 0x20u
/* Register: i2c.IC_INTR_STAT                                              */
#define I2C_IC_INTR_STAT_ADDRESS 0x2cu
#define I2C_IC_INTR_STAT_BYTE_ADDRESS 0x2cu
/* Register: i2c.IC_INTR_MASK                                              */
#define I2C_IC_INTR_MASK_ADDRESS 0x30u
#define I2C_IC_INTR_MASK_BYTE_ADDRESS 0x30u
/* Register: i2c.IC_RAW_INTR_STAT                                          */
#define I2C_IC_RAW_INTR_STAT_ADDRESS 0x34u
#define I2C_IC_RAW_INTR_STAT_BYTE_ADDRESS 0x34u
/* Register: i2c.IC_RX_TL                                                  */
#define I2C_IC_RX_TL_ADDRESS 0x38u
#define I2C_IC_RX_TL_BYTE_ADDRESS 0x38u
/* Register: i2c.IC_TX_TL                                                  */
#define I2C_IC_TX_TL_ADDRESS 0x3cu
#define I2C_IC_TX_TL_BYTE_ADDRESS 0x3cu
/* Register: i2c.IC_CLR_INTR                                               */
#define I2C_IC_CLR_INTR_ADDRESS 0x40u
#define I2C_IC_CLR_INTR_BYTE_ADDRESS 0x40u
/* Register: i2c.IC_CLR_RX_UNDER                                           */
#define I2C_IC_CLR_RX_UNDER_ADDRESS 0x44u
#define I2C_IC_CLR_RX_UNDER_BYTE_ADDRESS 0x44u
/* Register: i2c.IC_CLR_RX_OVER                                            */
#define I2C_IC_CLR_RX_OVER_ADDRESS 0x48u
#define I2C_IC_CLR_RX_OVER_BYTE_ADDRESS 0x48u
/* Register: i2c.IC_CLR_TX_OVER                                            */
#define I2C_IC_CLR_TX_OVER_ADDRESS 0x4cu
#define I2C_IC_CLR_TX_OVER_BYTE_ADDRESS 0x4cu
/* Register: i2c.IC_CLR_RD_REQ                                             */
#define I2C_IC_CLR_RD_REQ_ADDRESS 0x50u
#define I2C_IC_CLR_RD_REQ_BYTE_ADDRESS 0x50u
/* Register: i2c.IC_CLR_TX_ABRT                                            */
#define I2C_IC_CLR_TX_ABRT_ADDRESS 0x54u
#define I2C_IC_CLR_TX_ABRT_BYTE_ADDRESS 0x54u
/* Register: i2c.IC_CLR_RX_DONE                                            */
#define I2C_IC_CLR_RX_DONE_ADDRESS 0x58u
#define I2C_IC_CLR_RX_DONE_BYTE_ADDRESS 0x58u
/* Register: i2c.IC_CLR_ACTIVITY                                           */
#define I2C_IC_CLR_ACTIVITY_ADDRESS 0x5cu
#define I2C_IC_CLR_ACTIVITY_BYTE_ADDRESS 0x5cu
/* Register: i2c.IC_CLR_STOP_DET                                           */
#define I2C_IC_CLR_STOP_DET_ADDRESS 0x60u
#define I2C_IC_CLR_STOP_DET_BYTE_ADDRESS 0x60u
/* Register: i2c.IC_CLR_START_DET                                          */
#define I2C_IC_CLR_START_DET_ADDRESS 0x64u
#define I2C_IC_CLR_START_DET_BYTE_ADDRESS 0x64u
/* Register: i2c.IC_CLR_GEN_CALL                                           */
#define I2C_IC_CLR_GEN_CALL_ADDRESS 0x68u
#define I2C_IC_CLR_GEN_CALL_BYTE_ADDRESS 0x68u
/* Register: i2c.IC_ENABLE                                                 */
#define I2C_IC_ENABLE_ADDRESS 0x6cu
#define I2C_IC_ENABLE_BYTE_ADDRESS 0x6cu
/* Register: i2c.IC_STATUS                                                 */
#define I2C_IC_STATUS_ADDRESS 0x70u
#define I2C_IC_STATUS_BYTE_ADDRESS 0x70u
/* Register: i2c.IC_TXFLR                                                  */
#define I2C_IC_TXFLR_ADDRESS 0x74u
#define I2C_IC_TXFLR_BYTE_ADDRESS 0x74u
/* Register: i2c.IC_RXFLR                                                  */
#define I2C_IC_RXFLR_ADDRESS 0x78u
#define I2C_IC_RXFLR_BYTE_ADDRESS 0x78u
/* Register: i2c.IC_SDA_HOLD                                               */
#define I2C_IC_SDA_HOLD_ADDRESS 0x7cu
#define I2C_IC_SDA_HOLD_BYTE_ADDRESS 0x7cu
/* Register: i2c.IC_TX_ABRT_SOURCE                                         */
#define I2C_IC_TX_ABRT_SOURCE_ADDRESS 0x80u
#define I2C_IC_TX_ABRT_SOURCE_BYTE_ADDRESS 0x80u
/* Register: i2c.IC_SDA_SETUP                                              */
#define I2C_IC_SDA_SETUP_ADDRESS 0x94u
#define I2C_IC_SDA_SETUP_BYTE_ADDRESS 0x94u
/* Register: i2c.IC_ACK_GENERAL_CALL                                       */
#define I2C_IC_ACK_GENERAL_CALL_ADDRESS 0x98u
#define I2C_IC_ACK_GENERAL_CALL_BYTE_ADDRESS 0x98u
/* Register: i2c.IC_ENABLE_STATUS                                          */
#define I2C_IC_ENABLE_STATUS_ADDRESS 0x9cu
#define I2C_IC_ENABLE_STATUS_BYTE_ADDRESS 0x9cu
/* Register: i2c.IC_FS_SPKLEN                                              */
#define I2C_IC_FS_SPKLEN_ADDRESS 0xa0u
#define I2C_IC_FS_SPKLEN_BYTE_ADDRESS 0xa0u
/* Register: i2c.IC_SCL_STUCK_AT_LOW_TIMEOUT                               */
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_ADDRESS 0xacu
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_BYTE_ADDRESS 0xacu
/* Register: i2c.IC_SDA_STUCK_AT_LOW_TIMEOUT                               */
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_ADDRESS 0xb0u
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_BYTE_ADDRESS 0xb0u
/* Register: i2c.IC_CLR_SCL_STUCK_DET                                      */
#define I2C_IC_CLR_SCL_STUCK_DET_ADDRESS 0xb4u
#define I2C_IC_CLR_SCL_STUCK_DET_BYTE_ADDRESS 0xb4u
/* Register: i2c.IC_SMBUS_CLK_LOW_SEXT                                     */
#define I2C_IC_SMBUS_CLK_LOW_SEXT_ADDRESS 0xbcu
#define I2C_IC_SMBUS_CLK_LOW_SEXT_BYTE_ADDRESS 0xbcu
/* Register: i2c.IC_SMBUS_CLK_LOW_MEXT                                     */
#define I2C_IC_SMBUS_CLK_LOW_MEXT_ADDRESS 0xc0u
#define I2C_IC_SMBUS_CLK_LOW_MEXT_BYTE_ADDRESS 0xc0u
/* Register: i2c.IC_SMBUS_THIGH_MAX_IDLE_COUNT                             */
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_ADDRESS 0xc4u
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_BYTE_ADDRESS 0xc4u
/* Register: i2c.IC_SMBUS_INTR_STAT                                        */
#define I2C_IC_SMBUS_INTR_STAT_ADDRESS 0xc8u
#define I2C_IC_SMBUS_INTR_STAT_BYTE_ADDRESS 0xc8u
/* Register: i2c.IC_SMBUS_INTR_MASK                                        */
#define I2C_IC_SMBUS_INTR_MASK_ADDRESS 0xccu
#define I2C_IC_SMBUS_INTR_MASK_BYTE_ADDRESS 0xccu
/* Register: i2c.IC_SMBUS_RAW_INTR_STAT                                    */
#define I2C_IC_SMBUS_RAW_INTR_STAT_ADDRESS 0xd0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_BYTE_ADDRESS 0xd0u
/* Register: i2c.IC_CLR_SMBUS_INTR                                         */
#define I2C_IC_CLR_SMBUS_INTR_ADDRESS 0xd4u
#define I2C_IC_CLR_SMBUS_INTR_BYTE_ADDRESS 0xd4u
/* Register: i2c.REG_TIMEOUT_RST                                           */
#define I2C_REG_TIMEOUT_RST_ADDRESS 0xf0u
#define I2C_REG_TIMEOUT_RST_BYTE_ADDRESS 0xf0u
/* Register: i2c.IC_COMP_PARAM_1                                           */
#define I2C_IC_COMP_PARAM_1_ADDRESS 0xf4u
#define I2C_IC_COMP_PARAM_1_BYTE_ADDRESS 0xf4u
/* Register: i2c.IC_COMP_VERSION                                           */
#define I2C_IC_COMP_VERSION_ADDRESS 0xf8u
#define I2C_IC_COMP_VERSION_BYTE_ADDRESS 0xf8u
/* Register: i2c.IC_COMP_TYPE                                              */
#define I2C_IC_COMP_TYPE_ADDRESS 0xfcu
#define I2C_IC_COMP_TYPE_BYTE_ADDRESS 0xfcu


/* ####################################################################### */
/*        TEMPLATE MACROS                                                  */
/* ####################################################################### */

/* Addressmap type: i2c                                                    */
/* Addressmap template: i2c                                                */
#define I2C_SIZE 0x400u
#define I2C_BYTE_SIZE 0x400u
/* Register member: i2c.IC_CON                                             */
/* Register type referenced: i2c::IC_CON                                   */
/* Register template referenced: i2c::IC_CON                               */
#define I2C_IC_CON_OFFSET 0x0u
#define I2C_IC_CON_BYTE_OFFSET 0x0u
#define I2C_IC_CON_READ_ACCESS 1u
#define I2C_IC_CON_WRITE_ACCESS 1u
#define I2C_IC_CON_RESET_VALUE 0x00000065ul
#define I2C_IC_CON_RESET_MASK 0x00020ffful
#define I2C_IC_CON_READ_MASK 0xfffffffful
#define I2C_IC_CON_WRITE_MASK 0x000209fful
/* Register member: i2c.IC_TAR                                             */
/* Register type referenced: i2c::IC_TAR                                   */
/* Register template referenced: i2c::IC_TAR                               */
#define I2C_IC_TAR_OFFSET 0x4u
#define I2C_IC_TAR_BYTE_OFFSET 0x4u
#define I2C_IC_TAR_READ_ACCESS 1u
#define I2C_IC_TAR_WRITE_ACCESS 1u
#define I2C_IC_TAR_RESET_VALUE 0x00000055ul
#define I2C_IC_TAR_RESET_MASK 0x00010ffful
#define I2C_IC_TAR_READ_MASK 0xfffffffful
#define I2C_IC_TAR_WRITE_MASK 0x00010ffful
/* Register member: i2c.IC_SAR                                             */
/* Register type referenced: i2c::IC_SAR                                   */
/* Register template referenced: i2c::IC_SAR                               */
#define I2C_IC_SAR_OFFSET 0x8u
#define I2C_IC_SAR_BYTE_OFFSET 0x8u
#define I2C_IC_SAR_READ_ACCESS 1u
#define I2C_IC_SAR_WRITE_ACCESS 1u
#define I2C_IC_SAR_RESET_VALUE 0x00000055ul
#define I2C_IC_SAR_RESET_MASK 0x000003fful
#define I2C_IC_SAR_READ_MASK 0xfffffffful
#define I2C_IC_SAR_WRITE_MASK 0x000003fful
/* Register member: i2c.IC_DATA_CMD                                        */
/* Register type referenced: i2c::IC_DATA_CMD                              */
/* Register template referenced: i2c::IC_DATA_CMD                          */
#define I2C_IC_DATA_CMD_OFFSET 0x10u
#define I2C_IC_DATA_CMD_BYTE_OFFSET 0x10u
#define I2C_IC_DATA_CMD_READ_ACCESS 1u
#define I2C_IC_DATA_CMD_WRITE_ACCESS 1u
#define I2C_IC_DATA_CMD_RESET_VALUE 0x00000000ul
#define I2C_IC_DATA_CMD_RESET_MASK 0x000007fful
#define I2C_IC_DATA_CMD_READ_MASK 0xfffff8fful
#define I2C_IC_DATA_CMD_WRITE_MASK 0x000007fful
/* Register member: i2c.IC_SS_SCL_HCNT                                     */
/* Register type referenced: i2c::IC_SS_SCL_HCNT                           */
/* Register template referenced: i2c::IC_SS_SCL_HCNT                       */
#define I2C_IC_SS_SCL_HCNT_OFFSET 0x14u
#define I2C_IC_SS_SCL_HCNT_BYTE_OFFSET 0x14u
#define I2C_IC_SS_SCL_HCNT_READ_ACCESS 1u
#define I2C_IC_SS_SCL_HCNT_WRITE_ACCESS 1u
#define I2C_IC_SS_SCL_HCNT_RESET_VALUE 0x00000064ul
#define I2C_IC_SS_SCL_HCNT_RESET_MASK 0x0000fffful
#define I2C_IC_SS_SCL_HCNT_READ_MASK 0xfffffffful
#define I2C_IC_SS_SCL_HCNT_WRITE_MASK 0x0000fffful
/* Register member: i2c.IC_SS_SCL_LCNT                                     */
/* Register type referenced: i2c::IC_SS_SCL_LCNT                           */
/* Register template referenced: i2c::IC_SS_SCL_LCNT                       */
#define I2C_IC_SS_SCL_LCNT_OFFSET 0x18u
#define I2C_IC_SS_SCL_LCNT_BYTE_OFFSET 0x18u
#define I2C_IC_SS_SCL_LCNT_READ_ACCESS 1u
#define I2C_IC_SS_SCL_LCNT_WRITE_ACCESS 1u
#define I2C_IC_SS_SCL_LCNT_RESET_VALUE 0x00000076ul
#define I2C_IC_SS_SCL_LCNT_RESET_MASK 0x0000fffful
#define I2C_IC_SS_SCL_LCNT_READ_MASK 0xfffffffful
#define I2C_IC_SS_SCL_LCNT_WRITE_MASK 0x0000fffful
/* Register member: i2c.IC_FS_SCL_HCNT                                     */
/* Register type referenced: i2c::IC_FS_SCL_HCNT                           */
/* Register template referenced: i2c::IC_FS_SCL_HCNT                       */
#define I2C_IC_FS_SCL_HCNT_OFFSET 0x1cu
#define I2C_IC_FS_SCL_HCNT_BYTE_OFFSET 0x1cu
#define I2C_IC_FS_SCL_HCNT_READ_ACCESS 1u
#define I2C_IC_FS_SCL_HCNT_WRITE_ACCESS 1u
#define I2C_IC_FS_SCL_HCNT_RESET_VALUE 0x0000000ful
#define I2C_IC_FS_SCL_HCNT_RESET_MASK 0x0000fffful
#define I2C_IC_FS_SCL_HCNT_READ_MASK 0xfffffffful
#define I2C_IC_FS_SCL_HCNT_WRITE_MASK 0x0000fffful
/* Register member: i2c.IC_FS_SCL_LCNT                                     */
/* Register type referenced: i2c::IC_FS_SCL_LCNT                           */
/* Register template referenced: i2c::IC_FS_SCL_LCNT                       */
#define I2C_IC_FS_SCL_LCNT_OFFSET 0x20u
#define I2C_IC_FS_SCL_LCNT_BYTE_OFFSET 0x20u
#define I2C_IC_FS_SCL_LCNT_READ_ACCESS 1u
#define I2C_IC_FS_SCL_LCNT_WRITE_ACCESS 1u
#define I2C_IC_FS_SCL_LCNT_RESET_VALUE 0x00000021ul
#define I2C_IC_FS_SCL_LCNT_RESET_MASK 0x0000fffful
#define I2C_IC_FS_SCL_LCNT_READ_MASK 0xfffffffful
#define I2C_IC_FS_SCL_LCNT_WRITE_MASK 0x0000fffful
/* Register member: i2c.IC_INTR_STAT                                       */
/* Register type referenced: i2c::IC_INTR_STAT                             */
/* Register template referenced: i2c::IC_INTR_STAT                         */
#define I2C_IC_INTR_STAT_OFFSET 0x2cu
#define I2C_IC_INTR_STAT_BYTE_OFFSET 0x2cu
#define I2C_IC_INTR_STAT_READ_ACCESS 1u
#define I2C_IC_INTR_STAT_WRITE_ACCESS 0u
#define I2C_IC_INTR_STAT_RESET_VALUE 0x00000000ul
#define I2C_IC_INTR_STAT_RESET_MASK 0x00007ffful
#define I2C_IC_INTR_STAT_READ_MASK 0xfffffffful
#define I2C_IC_INTR_STAT_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_INTR_MASK                                       */
/* Register type referenced: i2c::IC_INTR_MASK                             */
/* Register template referenced: i2c::IC_INTR_MASK                         */
#define I2C_IC_INTR_MASK_OFFSET 0x30u
#define I2C_IC_INTR_MASK_BYTE_OFFSET 0x30u
#define I2C_IC_INTR_MASK_READ_ACCESS 1u
#define I2C_IC_INTR_MASK_WRITE_ACCESS 1u
#define I2C_IC_INTR_MASK_RESET_VALUE 0x000048fful
#define I2C_IC_INTR_MASK_RESET_MASK 0x00005ffful
#define I2C_IC_INTR_MASK_READ_MASK 0xfffffffful
#define I2C_IC_INTR_MASK_WRITE_MASK 0x00004ffful
/* Register member: i2c.IC_RAW_INTR_STAT                                   */
/* Register type referenced: i2c::IC_RAW_INTR_STAT                         */
/* Register template referenced: i2c::IC_RAW_INTR_STAT                     */
#define I2C_IC_RAW_INTR_STAT_OFFSET 0x34u
#define I2C_IC_RAW_INTR_STAT_BYTE_OFFSET 0x34u
#define I2C_IC_RAW_INTR_STAT_READ_ACCESS 1u
#define I2C_IC_RAW_INTR_STAT_WRITE_ACCESS 0u
#define I2C_IC_RAW_INTR_STAT_RESET_VALUE 0x00000000ul
#define I2C_IC_RAW_INTR_STAT_RESET_MASK 0x00007ffful
#define I2C_IC_RAW_INTR_STAT_READ_MASK 0xfffffffful
#define I2C_IC_RAW_INTR_STAT_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_RX_TL                                           */
/* Register type referenced: i2c::IC_RX_TL                                 */
/* Register template referenced: i2c::IC_RX_TL                             */
#define I2C_IC_RX_TL_OFFSET 0x38u
#define I2C_IC_RX_TL_BYTE_OFFSET 0x38u
#define I2C_IC_RX_TL_READ_ACCESS 1u
#define I2C_IC_RX_TL_WRITE_ACCESS 1u
#define I2C_IC_RX_TL_RESET_VALUE 0x00000000ul
#define I2C_IC_RX_TL_RESET_MASK 0x000000fful
#define I2C_IC_RX_TL_READ_MASK 0xfffffffful
#define I2C_IC_RX_TL_WRITE_MASK 0x000000fful
/* Register member: i2c.IC_TX_TL                                           */
/* Register type referenced: i2c::IC_TX_TL                                 */
/* Register template referenced: i2c::IC_TX_TL                             */
#define I2C_IC_TX_TL_OFFSET 0x3cu
#define I2C_IC_TX_TL_BYTE_OFFSET 0x3cu
#define I2C_IC_TX_TL_READ_ACCESS 1u
#define I2C_IC_TX_TL_WRITE_ACCESS 1u
#define I2C_IC_TX_TL_RESET_VALUE 0x00000000ul
#define I2C_IC_TX_TL_RESET_MASK 0x000000fful
#define I2C_IC_TX_TL_READ_MASK 0xfffffffful
#define I2C_IC_TX_TL_WRITE_MASK 0x000000fful
/* Register member: i2c.IC_CLR_INTR                                        */
/* Register type referenced: i2c::IC_CLR_INTR                              */
/* Register template referenced: i2c::IC_CLR_INTR                          */
#define I2C_IC_CLR_INTR_OFFSET 0x40u
#define I2C_IC_CLR_INTR_BYTE_OFFSET 0x40u
#define I2C_IC_CLR_INTR_READ_ACCESS 1u
#define I2C_IC_CLR_INTR_WRITE_ACCESS 0u
#define I2C_IC_CLR_INTR_RESET_VALUE 0x00000000ul
#define I2C_IC_CLR_INTR_RESET_MASK 0x00000001ul
#define I2C_IC_CLR_INTR_READ_MASK 0xfffffffful
#define I2C_IC_CLR_INTR_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_CLR_RX_UNDER                                    */
/* Register type referenced: i2c::IC_CLR_RX_UNDER                          */
/* Register template referenced: i2c::IC_CLR_RX_UNDER                      */
#define I2C_IC_CLR_RX_UNDER_OFFSET 0x44u
#define I2C_IC_CLR_RX_UNDER_BYTE_OFFSET 0x44u
#define I2C_IC_CLR_RX_UNDER_READ_ACCESS 1u
#define I2C_IC_CLR_RX_UNDER_WRITE_ACCESS 0u
#define I2C_IC_CLR_RX_UNDER_RESET_VALUE 0x00000000ul
#define I2C_IC_CLR_RX_UNDER_RESET_MASK 0x00000001ul
#define I2C_IC_CLR_RX_UNDER_READ_MASK 0xfffffffful
#define I2C_IC_CLR_RX_UNDER_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_CLR_RX_OVER                                     */
/* Register type referenced: i2c::IC_CLR_RX_OVER                           */
/* Register template referenced: i2c::IC_CLR_RX_OVER                       */
#define I2C_IC_CLR_RX_OVER_OFFSET 0x48u
#define I2C_IC_CLR_RX_OVER_BYTE_OFFSET 0x48u
#define I2C_IC_CLR_RX_OVER_READ_ACCESS 1u
#define I2C_IC_CLR_RX_OVER_WRITE_ACCESS 0u
#define I2C_IC_CLR_RX_OVER_RESET_VALUE 0x00000000ul
#define I2C_IC_CLR_RX_OVER_RESET_MASK 0x00000001ul
#define I2C_IC_CLR_RX_OVER_READ_MASK 0xfffffffful
#define I2C_IC_CLR_RX_OVER_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_CLR_TX_OVER                                     */
/* Register type referenced: i2c::IC_CLR_TX_OVER                           */
/* Register template referenced: i2c::IC_CLR_TX_OVER                       */
#define I2C_IC_CLR_TX_OVER_OFFSET 0x4cu
#define I2C_IC_CLR_TX_OVER_BYTE_OFFSET 0x4cu
#define I2C_IC_CLR_TX_OVER_READ_ACCESS 1u
#define I2C_IC_CLR_TX_OVER_WRITE_ACCESS 0u
#define I2C_IC_CLR_TX_OVER_RESET_VALUE 0x00000000ul
#define I2C_IC_CLR_TX_OVER_RESET_MASK 0x00000001ul
#define I2C_IC_CLR_TX_OVER_READ_MASK 0xfffffffful
#define I2C_IC_CLR_TX_OVER_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_CLR_RD_REQ                                      */
/* Register type referenced: i2c::IC_CLR_RD_REQ                            */
/* Register template referenced: i2c::IC_CLR_RD_REQ                        */
#define I2C_IC_CLR_RD_REQ_OFFSET 0x50u
#define I2C_IC_CLR_RD_REQ_BYTE_OFFSET 0x50u
#define I2C_IC_CLR_RD_REQ_READ_ACCESS 1u
#define I2C_IC_CLR_RD_REQ_WRITE_ACCESS 0u
#define I2C_IC_CLR_RD_REQ_RESET_VALUE 0x00000000ul
#define I2C_IC_CLR_RD_REQ_RESET_MASK 0x00000001ul
#define I2C_IC_CLR_RD_REQ_READ_MASK 0xfffffffful
#define I2C_IC_CLR_RD_REQ_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_CLR_TX_ABRT                                     */
/* Register type referenced: i2c::IC_CLR_TX_ABRT                           */
/* Register template referenced: i2c::IC_CLR_TX_ABRT                       */
#define I2C_IC_CLR_TX_ABRT_OFFSET 0x54u
#define I2C_IC_CLR_TX_ABRT_BYTE_OFFSET 0x54u
#define I2C_IC_CLR_TX_ABRT_READ_ACCESS 1u
#define I2C_IC_CLR_TX_ABRT_WRITE_ACCESS 0u
#define I2C_IC_CLR_TX_ABRT_RESET_VALUE 0x00000000ul
#define I2C_IC_CLR_TX_ABRT_RESET_MASK 0xfffffffful
#define I2C_IC_CLR_TX_ABRT_READ_MASK 0xfffffffful
#define I2C_IC_CLR_TX_ABRT_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_CLR_RX_DONE                                     */
/* Register type referenced: i2c::IC_CLR_RX_DONE                           */
/* Register template referenced: i2c::IC_CLR_RX_DONE                       */
#define I2C_IC_CLR_RX_DONE_OFFSET 0x58u
#define I2C_IC_CLR_RX_DONE_BYTE_OFFSET 0x58u
#define I2C_IC_CLR_RX_DONE_READ_ACCESS 1u
#define I2C_IC_CLR_RX_DONE_WRITE_ACCESS 0u
#define I2C_IC_CLR_RX_DONE_RESET_VALUE 0x00000000ul
#define I2C_IC_CLR_RX_DONE_RESET_MASK 0x00000001ul
#define I2C_IC_CLR_RX_DONE_READ_MASK 0xfffffffful
#define I2C_IC_CLR_RX_DONE_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_CLR_ACTIVITY                                    */
/* Register type referenced: i2c::IC_CLR_ACTIVITY                          */
/* Register template referenced: i2c::IC_CLR_ACTIVITY                      */
#define I2C_IC_CLR_ACTIVITY_OFFSET 0x5cu
#define I2C_IC_CLR_ACTIVITY_BYTE_OFFSET 0x5cu
#define I2C_IC_CLR_ACTIVITY_READ_ACCESS 1u
#define I2C_IC_CLR_ACTIVITY_WRITE_ACCESS 0u
#define I2C_IC_CLR_ACTIVITY_RESET_VALUE 0x00000000ul
#define I2C_IC_CLR_ACTIVITY_RESET_MASK 0x00000001ul
#define I2C_IC_CLR_ACTIVITY_READ_MASK 0xfffffffful
#define I2C_IC_CLR_ACTIVITY_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_CLR_STOP_DET                                    */
/* Register type referenced: i2c::IC_CLR_STOP_DET                          */
/* Register template referenced: i2c::IC_CLR_STOP_DET                      */
#define I2C_IC_CLR_STOP_DET_OFFSET 0x60u
#define I2C_IC_CLR_STOP_DET_BYTE_OFFSET 0x60u
#define I2C_IC_CLR_STOP_DET_READ_ACCESS 1u
#define I2C_IC_CLR_STOP_DET_WRITE_ACCESS 0u
#define I2C_IC_CLR_STOP_DET_RESET_VALUE 0x00000000ul
#define I2C_IC_CLR_STOP_DET_RESET_MASK 0x00000001ul
#define I2C_IC_CLR_STOP_DET_READ_MASK 0xfffffffful
#define I2C_IC_CLR_STOP_DET_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_CLR_START_DET                                   */
/* Register type referenced: i2c::IC_CLR_START_DET                         */
/* Register template referenced: i2c::IC_CLR_START_DET                     */
#define I2C_IC_CLR_START_DET_OFFSET 0x64u
#define I2C_IC_CLR_START_DET_BYTE_OFFSET 0x64u
#define I2C_IC_CLR_START_DET_READ_ACCESS 1u
#define I2C_IC_CLR_START_DET_WRITE_ACCESS 0u
#define I2C_IC_CLR_START_DET_RESET_VALUE 0x00000000ul
#define I2C_IC_CLR_START_DET_RESET_MASK 0x00000001ul
#define I2C_IC_CLR_START_DET_READ_MASK 0xfffffffful
#define I2C_IC_CLR_START_DET_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_CLR_GEN_CALL                                    */
/* Register type referenced: i2c::IC_CLR_GEN_CALL                          */
/* Register template referenced: i2c::IC_CLR_GEN_CALL                      */
#define I2C_IC_CLR_GEN_CALL_OFFSET 0x68u
#define I2C_IC_CLR_GEN_CALL_BYTE_OFFSET 0x68u
#define I2C_IC_CLR_GEN_CALL_READ_ACCESS 1u
#define I2C_IC_CLR_GEN_CALL_WRITE_ACCESS 0u
#define I2C_IC_CLR_GEN_CALL_RESET_VALUE 0x00000000ul
#define I2C_IC_CLR_GEN_CALL_RESET_MASK 0x00000001ul
#define I2C_IC_CLR_GEN_CALL_READ_MASK 0xfffffffful
#define I2C_IC_CLR_GEN_CALL_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_ENABLE                                          */
/* Register type referenced: i2c::IC_ENABLE                                */
/* Register template referenced: i2c::IC_ENABLE                            */
#define I2C_IC_ENABLE_OFFSET 0x6cu
#define I2C_IC_ENABLE_BYTE_OFFSET 0x6cu
#define I2C_IC_ENABLE_READ_ACCESS 1u
#define I2C_IC_ENABLE_WRITE_ACCESS 1u
#define I2C_IC_ENABLE_RESET_VALUE 0x00000000ul
#define I2C_IC_ENABLE_RESET_MASK 0x0001000ful
#define I2C_IC_ENABLE_READ_MASK 0xfffffffful
#define I2C_IC_ENABLE_WRITE_MASK 0x0001000ful
/* Register member: i2c.IC_STATUS                                          */
/* Register type referenced: i2c::IC_STATUS                                */
/* Register template referenced: i2c::IC_STATUS                            */
#define I2C_IC_STATUS_OFFSET 0x70u
#define I2C_IC_STATUS_BYTE_OFFSET 0x70u
#define I2C_IC_STATUS_READ_ACCESS 1u
#define I2C_IC_STATUS_WRITE_ACCESS 0u
#define I2C_IC_STATUS_RESET_VALUE 0x00000006ul
#define I2C_IC_STATUS_RESET_MASK 0x0001087ful
#define I2C_IC_STATUS_READ_MASK 0xfffffffful
#define I2C_IC_STATUS_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_TXFLR                                           */
/* Register type referenced: i2c::IC_TXFLR                                 */
/* Register template referenced: i2c::IC_TXFLR                             */
#define I2C_IC_TXFLR_OFFSET 0x74u
#define I2C_IC_TXFLR_BYTE_OFFSET 0x74u
#define I2C_IC_TXFLR_READ_ACCESS 1u
#define I2C_IC_TXFLR_WRITE_ACCESS 0u
#define I2C_IC_TXFLR_RESET_VALUE 0x00000000ul
#define I2C_IC_TXFLR_RESET_MASK 0x000001fful
#define I2C_IC_TXFLR_READ_MASK 0xfffffffful
#define I2C_IC_TXFLR_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_RXFLR                                           */
/* Register type referenced: i2c::IC_RXFLR                                 */
/* Register template referenced: i2c::IC_RXFLR                             */
#define I2C_IC_RXFLR_OFFSET 0x78u
#define I2C_IC_RXFLR_BYTE_OFFSET 0x78u
#define I2C_IC_RXFLR_READ_ACCESS 1u
#define I2C_IC_RXFLR_WRITE_ACCESS 0u
#define I2C_IC_RXFLR_RESET_VALUE 0x00000000ul
#define I2C_IC_RXFLR_RESET_MASK 0x000001fful
#define I2C_IC_RXFLR_READ_MASK 0xfffffffful
#define I2C_IC_RXFLR_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_SDA_HOLD                                        */
/* Register type referenced: i2c::IC_SDA_HOLD                              */
/* Register template referenced: i2c::IC_SDA_HOLD                          */
#define I2C_IC_SDA_HOLD_OFFSET 0x7cu
#define I2C_IC_SDA_HOLD_BYTE_OFFSET 0x7cu
#define I2C_IC_SDA_HOLD_READ_ACCESS 1u
#define I2C_IC_SDA_HOLD_WRITE_ACCESS 1u
#define I2C_IC_SDA_HOLD_RESET_VALUE 0x00000001ul
#define I2C_IC_SDA_HOLD_RESET_MASK 0x00fffffful
#define I2C_IC_SDA_HOLD_READ_MASK 0xfffffffful
#define I2C_IC_SDA_HOLD_WRITE_MASK 0x00fffffful
/* Register member: i2c.IC_TX_ABRT_SOURCE                                  */
/* Register type referenced: i2c::IC_TX_ABRT_SOURCE                        */
/* Register template referenced: i2c::IC_TX_ABRT_SOURCE                    */
#define I2C_IC_TX_ABRT_SOURCE_OFFSET 0x80u
#define I2C_IC_TX_ABRT_SOURCE_BYTE_OFFSET 0x80u
#define I2C_IC_TX_ABRT_SOURCE_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_RESET_VALUE 0x00000000ul
#define I2C_IC_TX_ABRT_SOURCE_RESET_MASK 0xff83fffdul
#define I2C_IC_TX_ABRT_SOURCE_READ_MASK 0xfffffffful
#define I2C_IC_TX_ABRT_SOURCE_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_SDA_SETUP                                       */
/* Register type referenced: i2c::IC_SDA_SETUP                             */
/* Register template referenced: i2c::IC_SDA_SETUP                         */
#define I2C_IC_SDA_SETUP_OFFSET 0x94u
#define I2C_IC_SDA_SETUP_BYTE_OFFSET 0x94u
#define I2C_IC_SDA_SETUP_READ_ACCESS 1u
#define I2C_IC_SDA_SETUP_WRITE_ACCESS 1u
#define I2C_IC_SDA_SETUP_RESET_VALUE 0x00000064ul
#define I2C_IC_SDA_SETUP_RESET_MASK 0x000000fful
#define I2C_IC_SDA_SETUP_READ_MASK 0xfffffffful
#define I2C_IC_SDA_SETUP_WRITE_MASK 0x000000fful
/* Register member: i2c.IC_ACK_GENERAL_CALL                                */
/* Register type referenced: i2c::IC_ACK_GENERAL_CALL                      */
/* Register template referenced: i2c::IC_ACK_GENERAL_CALL                  */
#define I2C_IC_ACK_GENERAL_CALL_OFFSET 0x98u
#define I2C_IC_ACK_GENERAL_CALL_BYTE_OFFSET 0x98u
#define I2C_IC_ACK_GENERAL_CALL_READ_ACCESS 1u
#define I2C_IC_ACK_GENERAL_CALL_WRITE_ACCESS 1u
#define I2C_IC_ACK_GENERAL_CALL_RESET_VALUE 0x00000001ul
#define I2C_IC_ACK_GENERAL_CALL_RESET_MASK 0x00000001ul
#define I2C_IC_ACK_GENERAL_CALL_READ_MASK 0xfffffffful
#define I2C_IC_ACK_GENERAL_CALL_WRITE_MASK 0x00000001ul
/* Register member: i2c.IC_ENABLE_STATUS                                   */
/* Register type referenced: i2c::IC_ENABLE_STATUS                         */
/* Register template referenced: i2c::IC_ENABLE_STATUS                     */
#define I2C_IC_ENABLE_STATUS_OFFSET 0x9cu
#define I2C_IC_ENABLE_STATUS_BYTE_OFFSET 0x9cu
#define I2C_IC_ENABLE_STATUS_READ_ACCESS 1u
#define I2C_IC_ENABLE_STATUS_WRITE_ACCESS 0u
#define I2C_IC_ENABLE_STATUS_RESET_VALUE 0x00000000ul
#define I2C_IC_ENABLE_STATUS_RESET_MASK 0x00000007ul
#define I2C_IC_ENABLE_STATUS_READ_MASK 0xfffffffful
#define I2C_IC_ENABLE_STATUS_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_FS_SPKLEN                                       */
/* Register type referenced: i2c::IC_FS_SPKLEN                             */
/* Register template referenced: i2c::IC_FS_SPKLEN                         */
#define I2C_IC_FS_SPKLEN_OFFSET 0xa0u
#define I2C_IC_FS_SPKLEN_BYTE_OFFSET 0xa0u
#define I2C_IC_FS_SPKLEN_READ_ACCESS 1u
#define I2C_IC_FS_SPKLEN_WRITE_ACCESS 1u
#define I2C_IC_FS_SPKLEN_RESET_VALUE 0x00000002ul
#define I2C_IC_FS_SPKLEN_RESET_MASK 0x000000fful
#define I2C_IC_FS_SPKLEN_READ_MASK 0xfffffffful
#define I2C_IC_FS_SPKLEN_WRITE_MASK 0x000000fful
/* Register member: i2c.IC_SCL_STUCK_AT_LOW_TIMEOUT                        */
/* Register type referenced: i2c::IC_SCL_STUCK_AT_LOW_TIMEOUT              */
/* Register template referenced: i2c::IC_SCL_STUCK_AT_LOW_TIMEOUT          */
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_OFFSET 0xacu
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_BYTE_OFFSET 0xacu
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_READ_ACCESS 1u
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_WRITE_ACCESS 1u
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_RESET_VALUE 0xfffffffful
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_RESET_MASK 0xfffffffful
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_READ_MASK 0xfffffffful
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_WRITE_MASK 0xfffffffful
/* Register member: i2c.IC_SDA_STUCK_AT_LOW_TIMEOUT                        */
/* Register type referenced: i2c::IC_SDA_STUCK_AT_LOW_TIMEOUT              */
/* Register template referenced: i2c::IC_SDA_STUCK_AT_LOW_TIMEOUT          */
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_OFFSET 0xb0u
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_BYTE_OFFSET 0xb0u
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_READ_ACCESS 1u
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_WRITE_ACCESS 1u
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_RESET_VALUE 0xfffffffful
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_RESET_MASK 0xfffffffful
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_READ_MASK 0xfffffffful
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_WRITE_MASK 0xfffffffful
/* Register member: i2c.IC_CLR_SCL_STUCK_DET                               */
/* Register type referenced: i2c::IC_CLR_SCL_STUCK_DET                     */
/* Register template referenced: i2c::IC_CLR_SCL_STUCK_DET                 */
#define I2C_IC_CLR_SCL_STUCK_DET_OFFSET 0xb4u
#define I2C_IC_CLR_SCL_STUCK_DET_BYTE_OFFSET 0xb4u
#define I2C_IC_CLR_SCL_STUCK_DET_READ_ACCESS 1u
#define I2C_IC_CLR_SCL_STUCK_DET_WRITE_ACCESS 0u
#define I2C_IC_CLR_SCL_STUCK_DET_RESET_VALUE 0x00000000ul
#define I2C_IC_CLR_SCL_STUCK_DET_RESET_MASK 0x00000001ul
#define I2C_IC_CLR_SCL_STUCK_DET_READ_MASK 0xfffffffful
#define I2C_IC_CLR_SCL_STUCK_DET_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_SMBUS_CLK_LOW_SEXT                              */
/* Register type referenced: i2c::IC_SMBUS_CLK_LOW_SEXT                    */
/* Register template referenced: i2c::IC_SMBUS_CLK_LOW_SEXT                */
#define I2C_IC_SMBUS_CLK_LOW_SEXT_OFFSET 0xbcu
#define I2C_IC_SMBUS_CLK_LOW_SEXT_BYTE_OFFSET 0xbcu
#define I2C_IC_SMBUS_CLK_LOW_SEXT_READ_ACCESS 1u
#define I2C_IC_SMBUS_CLK_LOW_SEXT_WRITE_ACCESS 1u
#define I2C_IC_SMBUS_CLK_LOW_SEXT_RESET_VALUE 0xfffffffful
#define I2C_IC_SMBUS_CLK_LOW_SEXT_RESET_MASK 0xfffffffful
#define I2C_IC_SMBUS_CLK_LOW_SEXT_READ_MASK 0xfffffffful
#define I2C_IC_SMBUS_CLK_LOW_SEXT_WRITE_MASK 0xfffffffful
/* Register member: i2c.IC_SMBUS_CLK_LOW_MEXT                              */
/* Register type referenced: i2c::IC_SMBUS_CLK_LOW_MEXT                    */
/* Register template referenced: i2c::IC_SMBUS_CLK_LOW_MEXT                */
#define I2C_IC_SMBUS_CLK_LOW_MEXT_OFFSET 0xc0u
#define I2C_IC_SMBUS_CLK_LOW_MEXT_BYTE_OFFSET 0xc0u
#define I2C_IC_SMBUS_CLK_LOW_MEXT_READ_ACCESS 1u
#define I2C_IC_SMBUS_CLK_LOW_MEXT_WRITE_ACCESS 1u
#define I2C_IC_SMBUS_CLK_LOW_MEXT_RESET_VALUE 0xfffffffful
#define I2C_IC_SMBUS_CLK_LOW_MEXT_RESET_MASK 0xfffffffful
#define I2C_IC_SMBUS_CLK_LOW_MEXT_READ_MASK 0xfffffffful
#define I2C_IC_SMBUS_CLK_LOW_MEXT_WRITE_MASK 0xfffffffful
/* Register member: i2c.IC_SMBUS_THIGH_MAX_IDLE_COUNT                      */
/* Register type referenced: i2c::IC_SMBUS_THIGH_MAX_IDLE_COUNT            */
/* Register template referenced: i2c::IC_SMBUS_THIGH_MAX_IDLE_COUNT        */
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_OFFSET 0xc4u
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_BYTE_OFFSET 0xc4u
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_READ_ACCESS 1u
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_WRITE_ACCESS 1u
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_RESET_VALUE 0x0000fffful
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_RESET_MASK 0x0000fffful
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_READ_MASK 0xfffffffful
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_WRITE_MASK 0x0000fffful
/* Register member: i2c.IC_SMBUS_INTR_STAT                                 */
/* Register type referenced: i2c::IC_SMBUS_INTR_STAT                       */
/* Register template referenced: i2c::IC_SMBUS_INTR_STAT                   */
#define I2C_IC_SMBUS_INTR_STAT_OFFSET 0xc8u
#define I2C_IC_SMBUS_INTR_STAT_BYTE_OFFSET 0xc8u
#define I2C_IC_SMBUS_INTR_STAT_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_STAT_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_INTR_STAT_RESET_VALUE 0x00000000ul
#define I2C_IC_SMBUS_INTR_STAT_RESET_MASK 0x0000000ful
#define I2C_IC_SMBUS_INTR_STAT_READ_MASK 0xfffffffful
#define I2C_IC_SMBUS_INTR_STAT_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_SMBUS_INTR_MASK                                 */
/* Register type referenced: i2c::IC_SMBUS_INTR_MASK                       */
/* Register template referenced: i2c::IC_SMBUS_INTR_MASK                   */
#define I2C_IC_SMBUS_INTR_MASK_OFFSET 0xccu
#define I2C_IC_SMBUS_INTR_MASK_BYTE_OFFSET 0xccu
#define I2C_IC_SMBUS_INTR_MASK_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_MASK_WRITE_ACCESS 1u
#define I2C_IC_SMBUS_INTR_MASK_RESET_VALUE 0x0000000ful
#define I2C_IC_SMBUS_INTR_MASK_RESET_MASK 0x000001fful
#define I2C_IC_SMBUS_INTR_MASK_READ_MASK 0xfffffffful
#define I2C_IC_SMBUS_INTR_MASK_WRITE_MASK 0x0000000ful
/* Register member: i2c.IC_SMBUS_RAW_INTR_STAT                             */
/* Register type referenced: i2c::IC_SMBUS_RAW_INTR_STAT                   */
/* Register template referenced: i2c::IC_SMBUS_RAW_INTR_STAT               */
#define I2C_IC_SMBUS_RAW_INTR_STAT_OFFSET 0xd0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_BYTE_OFFSET 0xd0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_READ_ACCESS 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RESET_VALUE 0x00000000ul
#define I2C_IC_SMBUS_RAW_INTR_STAT_RESET_MASK 0x0000000ful
#define I2C_IC_SMBUS_RAW_INTR_STAT_READ_MASK 0xfffffffful
#define I2C_IC_SMBUS_RAW_INTR_STAT_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_CLR_SMBUS_INTR                                  */
/* Register type referenced: i2c::IC_CLR_SMBUS_INTR                        */
/* Register template referenced: i2c::IC_CLR_SMBUS_INTR                    */
#define I2C_IC_CLR_SMBUS_INTR_OFFSET 0xd4u
#define I2C_IC_CLR_SMBUS_INTR_BYTE_OFFSET 0xd4u
#define I2C_IC_CLR_SMBUS_INTR_READ_ACCESS 0u
#define I2C_IC_CLR_SMBUS_INTR_WRITE_ACCESS 1u
#define I2C_IC_CLR_SMBUS_INTR_RESET_VALUE 0x00000000ul
#define I2C_IC_CLR_SMBUS_INTR_RESET_MASK 0x0000000ful
#define I2C_IC_CLR_SMBUS_INTR_READ_MASK 0x00000000ul
#define I2C_IC_CLR_SMBUS_INTR_WRITE_MASK 0xfffffffful
/* Register member: i2c.REG_TIMEOUT_RST                                    */
/* Register type referenced: i2c::REG_TIMEOUT_RST                          */
/* Register template referenced: i2c::REG_TIMEOUT_RST                      */
#define I2C_REG_TIMEOUT_RST_OFFSET 0xf0u
#define I2C_REG_TIMEOUT_RST_BYTE_OFFSET 0xf0u
#define I2C_REG_TIMEOUT_RST_READ_ACCESS 1u
#define I2C_REG_TIMEOUT_RST_WRITE_ACCESS 1u
#define I2C_REG_TIMEOUT_RST_RESET_VALUE 0x00000008ul
#define I2C_REG_TIMEOUT_RST_RESET_MASK 0x0000000ful
#define I2C_REG_TIMEOUT_RST_READ_MASK 0xfffffffful
#define I2C_REG_TIMEOUT_RST_WRITE_MASK 0x0000000ful
/* Register member: i2c.IC_COMP_PARAM_1                                    */
/* Register type referenced: i2c::IC_COMP_PARAM_1                          */
/* Register template referenced: i2c::IC_COMP_PARAM_1                      */
#define I2C_IC_COMP_PARAM_1_OFFSET 0xf4u
#define I2C_IC_COMP_PARAM_1_BYTE_OFFSET 0xf4u
#define I2C_IC_COMP_PARAM_1_READ_ACCESS 1u
#define I2C_IC_COMP_PARAM_1_WRITE_ACCESS 0u
#define I2C_IC_COMP_PARAM_1_RESET_VALUE 0x00ffffaaul
#define I2C_IC_COMP_PARAM_1_RESET_MASK 0x00fffffful
#define I2C_IC_COMP_PARAM_1_READ_MASK 0xfffffffful
#define I2C_IC_COMP_PARAM_1_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_COMP_VERSION                                    */
/* Register type referenced: i2c::IC_COMP_VERSION                          */
/* Register template referenced: i2c::IC_COMP_VERSION                      */
#define I2C_IC_COMP_VERSION_OFFSET 0xf8u
#define I2C_IC_COMP_VERSION_BYTE_OFFSET 0xf8u
#define I2C_IC_COMP_VERSION_READ_ACCESS 1u
#define I2C_IC_COMP_VERSION_WRITE_ACCESS 0u
#define I2C_IC_COMP_VERSION_RESET_VALUE 0x3230322aul
#define I2C_IC_COMP_VERSION_RESET_MASK 0xfffffffful
#define I2C_IC_COMP_VERSION_READ_MASK 0xfffffffful
#define I2C_IC_COMP_VERSION_WRITE_MASK 0x00000000ul
/* Register member: i2c.IC_COMP_TYPE                                       */
/* Register type referenced: i2c::IC_COMP_TYPE                             */
/* Register template referenced: i2c::IC_COMP_TYPE                         */
#define I2C_IC_COMP_TYPE_OFFSET 0xfcu
#define I2C_IC_COMP_TYPE_BYTE_OFFSET 0xfcu
#define I2C_IC_COMP_TYPE_READ_ACCESS 1u
#define I2C_IC_COMP_TYPE_WRITE_ACCESS 0u
#define I2C_IC_COMP_TYPE_RESET_VALUE 0x44570140ul
#define I2C_IC_COMP_TYPE_RESET_MASK 0xfffffffful
#define I2C_IC_COMP_TYPE_READ_MASK 0xfffffffful
#define I2C_IC_COMP_TYPE_WRITE_MASK 0x00000000ul

/* Register type: i2c::IC_CON                                              */
/* Register template: i2c::IC_CON                                          */
/* Field member: i2c::IC_CON.RSVD_IC_CON_2                                 */
#define I2C_IC_CON_RSVD_IC_CON_2_MSB 31u
#define I2C_IC_CON_RSVD_IC_CON_2_LSB 20u
#define I2C_IC_CON_RSVD_IC_CON_2_WIDTH 12u
#define I2C_IC_CON_RSVD_IC_CON_2_READ_ACCESS 1u
#define I2C_IC_CON_RSVD_IC_CON_2_WRITE_ACCESS 0u
#define I2C_IC_CON_RSVD_IC_CON_2_FIELD_MASK 0xfff00000ul
#define I2C_IC_CON_RSVD_IC_CON_2_GET(x) (((x) & 0xfff00000ul) >> 20)
#define I2C_IC_CON_RSVD_IC_CON_2_SET(x) (((x) << 20) & 0xfff00000ul)
#define I2C_IC_CON_RSVD_IC_CON_2_MODIFY(r, x) \
   ((((x) << 20) & 0xfff00000ul) | ((r) & 0x000ffffful))
/* Field member: i2c::IC_CON.RSVD_SMBUS_PERSISTENT_SLV_ADDR_EN             */
#define I2C_IC_CON_RSVD_SMBUS_PERSISTENT_SLV_ADDR_EN_MSB 19u
#define I2C_IC_CON_RSVD_SMBUS_PERSISTENT_SLV_ADDR_EN_LSB 19u
#define I2C_IC_CON_RSVD_SMBUS_PERSISTENT_SLV_ADDR_EN_WIDTH 1u
#define I2C_IC_CON_RSVD_SMBUS_PERSISTENT_SLV_ADDR_EN_READ_ACCESS 1u
#define I2C_IC_CON_RSVD_SMBUS_PERSISTENT_SLV_ADDR_EN_WRITE_ACCESS 0u
#define I2C_IC_CON_RSVD_SMBUS_PERSISTENT_SLV_ADDR_EN_FIELD_MASK 0x00080000ul
#define I2C_IC_CON_RSVD_SMBUS_PERSISTENT_SLV_ADDR_EN_GET(x) \
   (((x) & 0x00080000ul) >> 19)
#define I2C_IC_CON_RSVD_SMBUS_PERSISTENT_SLV_ADDR_EN_SET(x) \
   (((x) << 19) & 0x00080000ul)
#define I2C_IC_CON_RSVD_SMBUS_PERSISTENT_SLV_ADDR_EN_MODIFY(r, x) \
   ((((x) << 19) & 0x00080000ul) | ((r) & 0xfff7fffful))
/* Field member: i2c::IC_CON.RSVD_SMBUS_ARP_EN                             */
#define I2C_IC_CON_RSVD_SMBUS_ARP_EN_MSB 18u
#define I2C_IC_CON_RSVD_SMBUS_ARP_EN_LSB 18u
#define I2C_IC_CON_RSVD_SMBUS_ARP_EN_WIDTH 1u
#define I2C_IC_CON_RSVD_SMBUS_ARP_EN_READ_ACCESS 1u
#define I2C_IC_CON_RSVD_SMBUS_ARP_EN_WRITE_ACCESS 0u
#define I2C_IC_CON_RSVD_SMBUS_ARP_EN_FIELD_MASK 0x00040000ul
#define I2C_IC_CON_RSVD_SMBUS_ARP_EN_GET(x) (((x) & 0x00040000ul) >> 18)
#define I2C_IC_CON_RSVD_SMBUS_ARP_EN_SET(x) (((x) << 18) & 0x00040000ul)
#define I2C_IC_CON_RSVD_SMBUS_ARP_EN_MODIFY(r, x) \
   ((((x) << 18) & 0x00040000ul) | ((r) & 0xfffbfffful))
/* Field member: i2c::IC_CON.SMBUS_SLAVE_QUICK_EN                          */
#define I2C_IC_CON_SMBUS_SLAVE_QUICK_EN_MSB 17u
#define I2C_IC_CON_SMBUS_SLAVE_QUICK_EN_LSB 17u
#define I2C_IC_CON_SMBUS_SLAVE_QUICK_EN_WIDTH 1u
#define I2C_IC_CON_SMBUS_SLAVE_QUICK_EN_READ_ACCESS 1u
#define I2C_IC_CON_SMBUS_SLAVE_QUICK_EN_WRITE_ACCESS 1u
#define I2C_IC_CON_SMBUS_SLAVE_QUICK_EN_RESET 0x0u
#define I2C_IC_CON_SMBUS_SLAVE_QUICK_EN_FIELD_MASK 0x00020000ul
#define I2C_IC_CON_SMBUS_SLAVE_QUICK_EN_GET(x) (((x) & 0x00020000ul) >> 17)
#define I2C_IC_CON_SMBUS_SLAVE_QUICK_EN_SET(x) (((x) << 17) & 0x00020000ul)
#define I2C_IC_CON_SMBUS_SLAVE_QUICK_EN_MODIFY(r, x) \
   ((((x) << 17) & 0x00020000ul) | ((r) & 0xfffdfffful))
/* Field member: i2c::IC_CON.RSVD_OPTIONAL_SAR_CTRL                        */
#define I2C_IC_CON_RSVD_OPTIONAL_SAR_CTRL_MSB 16u
#define I2C_IC_CON_RSVD_OPTIONAL_SAR_CTRL_LSB 16u
#define I2C_IC_CON_RSVD_OPTIONAL_SAR_CTRL_WIDTH 1u
#define I2C_IC_CON_RSVD_OPTIONAL_SAR_CTRL_READ_ACCESS 1u
#define I2C_IC_CON_RSVD_OPTIONAL_SAR_CTRL_WRITE_ACCESS 0u
#define I2C_IC_CON_RSVD_OPTIONAL_SAR_CTRL_FIELD_MASK 0x00010000ul
#define I2C_IC_CON_RSVD_OPTIONAL_SAR_CTRL_GET(x) (((x) & 0x00010000ul) >> 16)
#define I2C_IC_CON_RSVD_OPTIONAL_SAR_CTRL_SET(x) \
   (((x) << 16) & 0x00010000ul)
#define I2C_IC_CON_RSVD_OPTIONAL_SAR_CTRL_MODIFY(r, x) \
   ((((x) << 16) & 0x00010000ul) | ((r) & 0xfffefffful))
/* Field member: i2c::IC_CON.RSVD_IC_CON_1                                 */
#define I2C_IC_CON_RSVD_IC_CON_1_MSB 15u
#define I2C_IC_CON_RSVD_IC_CON_1_LSB 12u
#define I2C_IC_CON_RSVD_IC_CON_1_WIDTH 4u
#define I2C_IC_CON_RSVD_IC_CON_1_READ_ACCESS 1u
#define I2C_IC_CON_RSVD_IC_CON_1_WRITE_ACCESS 0u
#define I2C_IC_CON_RSVD_IC_CON_1_FIELD_MASK 0x0000f000ul
#define I2C_IC_CON_RSVD_IC_CON_1_GET(x) (((x) & 0x0000f000ul) >> 12)
#define I2C_IC_CON_RSVD_IC_CON_1_SET(x) (((x) << 12) & 0x0000f000ul)
#define I2C_IC_CON_RSVD_IC_CON_1_MODIFY(r, x) \
   ((((x) << 12) & 0x0000f000ul) | ((r) & 0xffff0ffful))
/* Field member: i2c::IC_CON.BUS_CLEAR_FEATURE_CTRL                        */
#define I2C_IC_CON_BUS_CLEAR_FEATURE_CTRL_MSB 11u
#define I2C_IC_CON_BUS_CLEAR_FEATURE_CTRL_LSB 11u
#define I2C_IC_CON_BUS_CLEAR_FEATURE_CTRL_WIDTH 1u
#define I2C_IC_CON_BUS_CLEAR_FEATURE_CTRL_READ_ACCESS 1u
#define I2C_IC_CON_BUS_CLEAR_FEATURE_CTRL_WRITE_ACCESS 1u
#define I2C_IC_CON_BUS_CLEAR_FEATURE_CTRL_RESET 0x0u
#define I2C_IC_CON_BUS_CLEAR_FEATURE_CTRL_FIELD_MASK 0x00000800ul
#define I2C_IC_CON_BUS_CLEAR_FEATURE_CTRL_GET(x) (((x) & 0x00000800ul) >> 11)
#define I2C_IC_CON_BUS_CLEAR_FEATURE_CTRL_SET(x) \
   (((x) << 11) & 0x00000800ul)
#define I2C_IC_CON_BUS_CLEAR_FEATURE_CTRL_MODIFY(r, x) \
   ((((x) << 11) & 0x00000800ul) | ((r) & 0xfffff7fful))
/* Field member: i2c::IC_CON.STOP_DET_IF_MASTER_ACTIVE                     */
#define I2C_IC_CON_STOP_DET_IF_MASTER_ACTIVE_MSB 10u
#define I2C_IC_CON_STOP_DET_IF_MASTER_ACTIVE_LSB 10u
#define I2C_IC_CON_STOP_DET_IF_MASTER_ACTIVE_WIDTH 1u
#define I2C_IC_CON_STOP_DET_IF_MASTER_ACTIVE_READ_ACCESS 1u
#define I2C_IC_CON_STOP_DET_IF_MASTER_ACTIVE_WRITE_ACCESS 0u
#define I2C_IC_CON_STOP_DET_IF_MASTER_ACTIVE_RESET 0x0u
#define I2C_IC_CON_STOP_DET_IF_MASTER_ACTIVE_FIELD_MASK 0x00000400ul
#define I2C_IC_CON_STOP_DET_IF_MASTER_ACTIVE_GET(x) \
   (((x) & 0x00000400ul) >> 10)
#define I2C_IC_CON_STOP_DET_IF_MASTER_ACTIVE_SET(x) \
   (((x) << 10) & 0x00000400ul)
#define I2C_IC_CON_STOP_DET_IF_MASTER_ACTIVE_MODIFY(r, x) \
   ((((x) << 10) & 0x00000400ul) | ((r) & 0xfffffbfful))
/* Field member: i2c::IC_CON.RX_FIFO_FULL_HLD_CTRL                         */
#define I2C_IC_CON_RX_FIFO_FULL_HLD_CTRL_MSB 9u
#define I2C_IC_CON_RX_FIFO_FULL_HLD_CTRL_LSB 9u
#define I2C_IC_CON_RX_FIFO_FULL_HLD_CTRL_WIDTH 1u
#define I2C_IC_CON_RX_FIFO_FULL_HLD_CTRL_READ_ACCESS 1u
#define I2C_IC_CON_RX_FIFO_FULL_HLD_CTRL_WRITE_ACCESS 0u
#define I2C_IC_CON_RX_FIFO_FULL_HLD_CTRL_RESET 0x0u
#define I2C_IC_CON_RX_FIFO_FULL_HLD_CTRL_FIELD_MASK 0x00000200ul
#define I2C_IC_CON_RX_FIFO_FULL_HLD_CTRL_GET(x) (((x) & 0x00000200ul) >> 9)
#define I2C_IC_CON_RX_FIFO_FULL_HLD_CTRL_SET(x) (((x) << 9) & 0x00000200ul)
#define I2C_IC_CON_RX_FIFO_FULL_HLD_CTRL_MODIFY(r, x) \
   ((((x) << 9) & 0x00000200ul) | ((r) & 0xfffffdfful))
/* Field member: i2c::IC_CON.TX_EMPTY_CTRL                                 */
#define I2C_IC_CON_TX_EMPTY_CTRL_MSB 8u
#define I2C_IC_CON_TX_EMPTY_CTRL_LSB 8u
#define I2C_IC_CON_TX_EMPTY_CTRL_WIDTH 1u
#define I2C_IC_CON_TX_EMPTY_CTRL_READ_ACCESS 1u
#define I2C_IC_CON_TX_EMPTY_CTRL_WRITE_ACCESS 1u
#define I2C_IC_CON_TX_EMPTY_CTRL_RESET 0x0u
#define I2C_IC_CON_TX_EMPTY_CTRL_FIELD_MASK 0x00000100ul
#define I2C_IC_CON_TX_EMPTY_CTRL_GET(x) (((x) & 0x00000100ul) >> 8)
#define I2C_IC_CON_TX_EMPTY_CTRL_SET(x) (((x) << 8) & 0x00000100ul)
#define I2C_IC_CON_TX_EMPTY_CTRL_MODIFY(r, x) \
   ((((x) << 8) & 0x00000100ul) | ((r) & 0xfffffefful))
/* Field member: i2c::IC_CON.STOP_DET_IFADDRESSED                          */
#define I2C_IC_CON_STOP_DET_IFADDRESSED_MSB 7u
#define I2C_IC_CON_STOP_DET_IFADDRESSED_LSB 7u
#define I2C_IC_CON_STOP_DET_IFADDRESSED_WIDTH 1u
#define I2C_IC_CON_STOP_DET_IFADDRESSED_READ_ACCESS 1u
#define I2C_IC_CON_STOP_DET_IFADDRESSED_WRITE_ACCESS 1u
#define I2C_IC_CON_STOP_DET_IFADDRESSED_RESET 0x0u
#define I2C_IC_CON_STOP_DET_IFADDRESSED_FIELD_MASK 0x00000080ul
#define I2C_IC_CON_STOP_DET_IFADDRESSED_GET(x) (((x) & 0x00000080ul) >> 7)
#define I2C_IC_CON_STOP_DET_IFADDRESSED_SET(x) (((x) << 7) & 0x00000080ul)
#define I2C_IC_CON_STOP_DET_IFADDRESSED_MODIFY(r, x) \
   ((((x) << 7) & 0x00000080ul) | ((r) & 0xffffff7ful))
/* Field member: i2c::IC_CON.IC_SLAVE_DISABLE                              */
#define I2C_IC_CON_IC_SLAVE_DISABLE_MSB 6u
#define I2C_IC_CON_IC_SLAVE_DISABLE_LSB 6u
#define I2C_IC_CON_IC_SLAVE_DISABLE_WIDTH 1u
#define I2C_IC_CON_IC_SLAVE_DISABLE_READ_ACCESS 1u
#define I2C_IC_CON_IC_SLAVE_DISABLE_WRITE_ACCESS 1u
#define I2C_IC_CON_IC_SLAVE_DISABLE_RESET 0x1u
#define I2C_IC_CON_IC_SLAVE_DISABLE_FIELD_MASK 0x00000040ul
#define I2C_IC_CON_IC_SLAVE_DISABLE_GET(x) (((x) & 0x00000040ul) >> 6)
#define I2C_IC_CON_IC_SLAVE_DISABLE_SET(x) (((x) << 6) & 0x00000040ul)
#define I2C_IC_CON_IC_SLAVE_DISABLE_MODIFY(r, x) \
   ((((x) << 6) & 0x00000040ul) | ((r) & 0xffffffbful))
/* Field member: i2c::IC_CON.IC_RESTART_EN                                 */
#define I2C_IC_CON_IC_RESTART_EN_MSB 5u
#define I2C_IC_CON_IC_RESTART_EN_LSB 5u
#define I2C_IC_CON_IC_RESTART_EN_WIDTH 1u
#define I2C_IC_CON_IC_RESTART_EN_READ_ACCESS 1u
#define I2C_IC_CON_IC_RESTART_EN_WRITE_ACCESS 1u
#define I2C_IC_CON_IC_RESTART_EN_RESET 0x1u
#define I2C_IC_CON_IC_RESTART_EN_FIELD_MASK 0x00000020ul
#define I2C_IC_CON_IC_RESTART_EN_GET(x) (((x) & 0x00000020ul) >> 5)
#define I2C_IC_CON_IC_RESTART_EN_SET(x) (((x) << 5) & 0x00000020ul)
#define I2C_IC_CON_IC_RESTART_EN_MODIFY(r, x) \
   ((((x) << 5) & 0x00000020ul) | ((r) & 0xffffffdful))
/* Field member: i2c::IC_CON.IC_10BITADDR_MASTER                           */
#define I2C_IC_CON_IC_10BITADDR_MASTER_MSB 4u
#define I2C_IC_CON_IC_10BITADDR_MASTER_LSB 4u
#define I2C_IC_CON_IC_10BITADDR_MASTER_WIDTH 1u
#define I2C_IC_CON_IC_10BITADDR_MASTER_READ_ACCESS 1u
#define I2C_IC_CON_IC_10BITADDR_MASTER_WRITE_ACCESS 1u
#define I2C_IC_CON_IC_10BITADDR_MASTER_RESET 0x0u
#define I2C_IC_CON_IC_10BITADDR_MASTER_FIELD_MASK 0x00000010ul
#define I2C_IC_CON_IC_10BITADDR_MASTER_GET(x) (((x) & 0x00000010ul) >> 4)
#define I2C_IC_CON_IC_10BITADDR_MASTER_SET(x) (((x) << 4) & 0x00000010ul)
#define I2C_IC_CON_IC_10BITADDR_MASTER_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010ul) | ((r) & 0xffffffeful))
/* Field member: i2c::IC_CON.IC_10BITADDR_SLAVE                            */
#define I2C_IC_CON_IC_10BITADDR_SLAVE_MSB 3u
#define I2C_IC_CON_IC_10BITADDR_SLAVE_LSB 3u
#define I2C_IC_CON_IC_10BITADDR_SLAVE_WIDTH 1u
#define I2C_IC_CON_IC_10BITADDR_SLAVE_READ_ACCESS 1u
#define I2C_IC_CON_IC_10BITADDR_SLAVE_WRITE_ACCESS 1u
#define I2C_IC_CON_IC_10BITADDR_SLAVE_RESET 0x0u
#define I2C_IC_CON_IC_10BITADDR_SLAVE_FIELD_MASK 0x00000008ul
#define I2C_IC_CON_IC_10BITADDR_SLAVE_GET(x) (((x) & 0x00000008ul) >> 3)
#define I2C_IC_CON_IC_10BITADDR_SLAVE_SET(x) (((x) << 3) & 0x00000008ul)
#define I2C_IC_CON_IC_10BITADDR_SLAVE_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: i2c::IC_CON.SPEED                                         */
#define I2C_IC_CON_SPEED_MSB 2u
#define I2C_IC_CON_SPEED_LSB 1u
#define I2C_IC_CON_SPEED_WIDTH 2u
#define I2C_IC_CON_SPEED_READ_ACCESS 1u
#define I2C_IC_CON_SPEED_WRITE_ACCESS 1u
#define I2C_IC_CON_SPEED_RESET 0x2u
#define I2C_IC_CON_SPEED_FIELD_MASK 0x00000006ul
#define I2C_IC_CON_SPEED_GET(x) (((x) & 0x00000006ul) >> 1)
#define I2C_IC_CON_SPEED_SET(x) (((x) << 1) & 0x00000006ul)
#define I2C_IC_CON_SPEED_MODIFY(r, x) \
   ((((x) << 1) & 0x00000006ul) | ((r) & 0xfffffff9ul))
/* Field member: i2c::IC_CON.MASTER_MODE                                   */
#define I2C_IC_CON_MASTER_MODE_MSB 0u
#define I2C_IC_CON_MASTER_MODE_LSB 0u
#define I2C_IC_CON_MASTER_MODE_WIDTH 1u
#define I2C_IC_CON_MASTER_MODE_READ_ACCESS 1u
#define I2C_IC_CON_MASTER_MODE_WRITE_ACCESS 1u
#define I2C_IC_CON_MASTER_MODE_RESET 0x1u
#define I2C_IC_CON_MASTER_MODE_FIELD_MASK 0x00000001ul
#define I2C_IC_CON_MASTER_MODE_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_CON_MASTER_MODE_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_CON_MASTER_MODE_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_TAR                                              */
/* Register template: i2c::IC_TAR                                          */
/* Field member: i2c::IC_TAR.RSVD_IC_TAR_2                                 */
#define I2C_IC_TAR_RSVD_IC_TAR_2_MSB 31u
#define I2C_IC_TAR_RSVD_IC_TAR_2_LSB 17u
#define I2C_IC_TAR_RSVD_IC_TAR_2_WIDTH 15u
#define I2C_IC_TAR_RSVD_IC_TAR_2_READ_ACCESS 1u
#define I2C_IC_TAR_RSVD_IC_TAR_2_WRITE_ACCESS 0u
#define I2C_IC_TAR_RSVD_IC_TAR_2_FIELD_MASK 0xfffe0000ul
#define I2C_IC_TAR_RSVD_IC_TAR_2_GET(x) (((x) & 0xfffe0000ul) >> 17)
#define I2C_IC_TAR_RSVD_IC_TAR_2_SET(x) (((x) << 17) & 0xfffe0000ul)
#define I2C_IC_TAR_RSVD_IC_TAR_2_MODIFY(r, x) \
   ((((x) << 17) & 0xfffe0000ul) | ((r) & 0x0001fffful))
/* Field member: i2c::IC_TAR.SMBUS_QUICK_CMD                               */
#define I2C_IC_TAR_SMBUS_QUICK_CMD_MSB 16u
#define I2C_IC_TAR_SMBUS_QUICK_CMD_LSB 16u
#define I2C_IC_TAR_SMBUS_QUICK_CMD_WIDTH 1u
#define I2C_IC_TAR_SMBUS_QUICK_CMD_READ_ACCESS 1u
#define I2C_IC_TAR_SMBUS_QUICK_CMD_WRITE_ACCESS 1u
#define I2C_IC_TAR_SMBUS_QUICK_CMD_RESET 0x0u
#define I2C_IC_TAR_SMBUS_QUICK_CMD_FIELD_MASK 0x00010000ul
#define I2C_IC_TAR_SMBUS_QUICK_CMD_GET(x) (((x) & 0x00010000ul) >> 16)
#define I2C_IC_TAR_SMBUS_QUICK_CMD_SET(x) (((x) << 16) & 0x00010000ul)
#define I2C_IC_TAR_SMBUS_QUICK_CMD_MODIFY(r, x) \
   ((((x) << 16) & 0x00010000ul) | ((r) & 0xfffefffful))
/* Field member: i2c::IC_TAR.RSVD_IC_TAR_1                                 */
#define I2C_IC_TAR_RSVD_IC_TAR_1_MSB 15u
#define I2C_IC_TAR_RSVD_IC_TAR_1_LSB 14u
#define I2C_IC_TAR_RSVD_IC_TAR_1_WIDTH 2u
#define I2C_IC_TAR_RSVD_IC_TAR_1_READ_ACCESS 1u
#define I2C_IC_TAR_RSVD_IC_TAR_1_WRITE_ACCESS 0u
#define I2C_IC_TAR_RSVD_IC_TAR_1_FIELD_MASK 0x0000c000ul
#define I2C_IC_TAR_RSVD_IC_TAR_1_GET(x) (((x) & 0x0000c000ul) >> 14)
#define I2C_IC_TAR_RSVD_IC_TAR_1_SET(x) (((x) << 14) & 0x0000c000ul)
#define I2C_IC_TAR_RSVD_IC_TAR_1_MODIFY(r, x) \
   ((((x) << 14) & 0x0000c000ul) | ((r) & 0xffff3ffful))
/* Field member: i2c::IC_TAR.RSVD_DEVICE_ID                                */
#define I2C_IC_TAR_RSVD_DEVICE_ID_MSB 13u
#define I2C_IC_TAR_RSVD_DEVICE_ID_LSB 13u
#define I2C_IC_TAR_RSVD_DEVICE_ID_WIDTH 1u
#define I2C_IC_TAR_RSVD_DEVICE_ID_READ_ACCESS 1u
#define I2C_IC_TAR_RSVD_DEVICE_ID_WRITE_ACCESS 0u
#define I2C_IC_TAR_RSVD_DEVICE_ID_FIELD_MASK 0x00002000ul
#define I2C_IC_TAR_RSVD_DEVICE_ID_GET(x) (((x) & 0x00002000ul) >> 13)
#define I2C_IC_TAR_RSVD_DEVICE_ID_SET(x) (((x) << 13) & 0x00002000ul)
#define I2C_IC_TAR_RSVD_DEVICE_ID_MODIFY(r, x) \
   ((((x) << 13) & 0x00002000ul) | ((r) & 0xffffdffful))
/* Field member: i2c::IC_TAR.RSVD_IC_10BITADDR_MASTER                      */
#define I2C_IC_TAR_RSVD_IC_10BITADDR_MASTER_MSB 12u
#define I2C_IC_TAR_RSVD_IC_10BITADDR_MASTER_LSB 12u
#define I2C_IC_TAR_RSVD_IC_10BITADDR_MASTER_WIDTH 1u
#define I2C_IC_TAR_RSVD_IC_10BITADDR_MASTER_READ_ACCESS 1u
#define I2C_IC_TAR_RSVD_IC_10BITADDR_MASTER_WRITE_ACCESS 0u
#define I2C_IC_TAR_RSVD_IC_10BITADDR_MASTER_FIELD_MASK 0x00001000ul
#define I2C_IC_TAR_RSVD_IC_10BITADDR_MASTER_GET(x) \
   (((x) & 0x00001000ul) >> 12)
#define I2C_IC_TAR_RSVD_IC_10BITADDR_MASTER_SET(x) \
   (((x) << 12) & 0x00001000ul)
#define I2C_IC_TAR_RSVD_IC_10BITADDR_MASTER_MODIFY(r, x) \
   ((((x) << 12) & 0x00001000ul) | ((r) & 0xffffeffful))
/* Field member: i2c::IC_TAR.SPECIAL                                       */
#define I2C_IC_TAR_SPECIAL_MSB 11u
#define I2C_IC_TAR_SPECIAL_LSB 11u
#define I2C_IC_TAR_SPECIAL_WIDTH 1u
#define I2C_IC_TAR_SPECIAL_READ_ACCESS 1u
#define I2C_IC_TAR_SPECIAL_WRITE_ACCESS 1u
#define I2C_IC_TAR_SPECIAL_RESET 0x0u
#define I2C_IC_TAR_SPECIAL_FIELD_MASK 0x00000800ul
#define I2C_IC_TAR_SPECIAL_GET(x) (((x) & 0x00000800ul) >> 11)
#define I2C_IC_TAR_SPECIAL_SET(x) (((x) << 11) & 0x00000800ul)
#define I2C_IC_TAR_SPECIAL_MODIFY(r, x) \
   ((((x) << 11) & 0x00000800ul) | ((r) & 0xfffff7fful))
/* Field member: i2c::IC_TAR.GC_OR_START                                   */
#define I2C_IC_TAR_GC_OR_START_MSB 10u
#define I2C_IC_TAR_GC_OR_START_LSB 10u
#define I2C_IC_TAR_GC_OR_START_WIDTH 1u
#define I2C_IC_TAR_GC_OR_START_READ_ACCESS 1u
#define I2C_IC_TAR_GC_OR_START_WRITE_ACCESS 1u
#define I2C_IC_TAR_GC_OR_START_RESET 0x0u
#define I2C_IC_TAR_GC_OR_START_FIELD_MASK 0x00000400ul
#define I2C_IC_TAR_GC_OR_START_GET(x) (((x) & 0x00000400ul) >> 10)
#define I2C_IC_TAR_GC_OR_START_SET(x) (((x) << 10) & 0x00000400ul)
#define I2C_IC_TAR_GC_OR_START_MODIFY(r, x) \
   ((((x) << 10) & 0x00000400ul) | ((r) & 0xfffffbfful))
/* Field member: i2c::IC_TAR.IC_TAR                                        */
#define I2C_IC_TAR_IC_TAR_MSB 9u
#define I2C_IC_TAR_IC_TAR_LSB 0u
#define I2C_IC_TAR_IC_TAR_WIDTH 10u
#define I2C_IC_TAR_IC_TAR_READ_ACCESS 1u
#define I2C_IC_TAR_IC_TAR_WRITE_ACCESS 1u
#define I2C_IC_TAR_IC_TAR_RESET 0x055u
#define I2C_IC_TAR_IC_TAR_FIELD_MASK 0x000003fful
#define I2C_IC_TAR_IC_TAR_GET(x) ((x) & 0x000003fful)
#define I2C_IC_TAR_IC_TAR_SET(x) ((x) & 0x000003fful)
#define I2C_IC_TAR_IC_TAR_MODIFY(r, x) \
   (((x) & 0x000003fful) | ((r) & 0xfffffc00ul))

/* Register type: i2c::IC_SAR                                              */
/* Register template: i2c::IC_SAR                                          */
/* Field member: i2c::IC_SAR.RSVD_IC_SAR                                   */
#define I2C_IC_SAR_RSVD_IC_SAR_MSB 31u
#define I2C_IC_SAR_RSVD_IC_SAR_LSB 10u
#define I2C_IC_SAR_RSVD_IC_SAR_WIDTH 22u
#define I2C_IC_SAR_RSVD_IC_SAR_READ_ACCESS 1u
#define I2C_IC_SAR_RSVD_IC_SAR_WRITE_ACCESS 0u
#define I2C_IC_SAR_RSVD_IC_SAR_FIELD_MASK 0xfffffc00ul
#define I2C_IC_SAR_RSVD_IC_SAR_GET(x) (((x) & 0xfffffc00ul) >> 10)
#define I2C_IC_SAR_RSVD_IC_SAR_SET(x) (((x) << 10) & 0xfffffc00ul)
#define I2C_IC_SAR_RSVD_IC_SAR_MODIFY(r, x) \
   ((((x) << 10) & 0xfffffc00ul) | ((r) & 0x000003fful))
/* Field member: i2c::IC_SAR.IC_SAR                                        */
#define I2C_IC_SAR_IC_SAR_MSB 9u
#define I2C_IC_SAR_IC_SAR_LSB 0u
#define I2C_IC_SAR_IC_SAR_WIDTH 10u
#define I2C_IC_SAR_IC_SAR_READ_ACCESS 1u
#define I2C_IC_SAR_IC_SAR_WRITE_ACCESS 1u
#define I2C_IC_SAR_IC_SAR_RESET 0x055u
#define I2C_IC_SAR_IC_SAR_FIELD_MASK 0x000003fful
#define I2C_IC_SAR_IC_SAR_GET(x) ((x) & 0x000003fful)
#define I2C_IC_SAR_IC_SAR_SET(x) ((x) & 0x000003fful)
#define I2C_IC_SAR_IC_SAR_MODIFY(r, x) \
   (((x) & 0x000003fful) | ((r) & 0xfffffc00ul))

/* Register type: i2c::IC_DATA_CMD                                         */
/* Register template: i2c::IC_DATA_CMD                                     */
/* Field member: i2c::IC_DATA_CMD.RSVD_IC_DATA_CMD                         */
#define I2C_IC_DATA_CMD_RSVD_IC_DATA_CMD_MSB 31u
#define I2C_IC_DATA_CMD_RSVD_IC_DATA_CMD_LSB 12u
#define I2C_IC_DATA_CMD_RSVD_IC_DATA_CMD_WIDTH 20u
#define I2C_IC_DATA_CMD_RSVD_IC_DATA_CMD_READ_ACCESS 1u
#define I2C_IC_DATA_CMD_RSVD_IC_DATA_CMD_WRITE_ACCESS 0u
#define I2C_IC_DATA_CMD_RSVD_IC_DATA_CMD_FIELD_MASK 0xfffff000ul
#define I2C_IC_DATA_CMD_RSVD_IC_DATA_CMD_GET(x) (((x) & 0xfffff000ul) >> 12)
#define I2C_IC_DATA_CMD_RSVD_IC_DATA_CMD_SET(x) \
   (((x) << 12) & 0xfffff000ul)
#define I2C_IC_DATA_CMD_RSVD_IC_DATA_CMD_MODIFY(r, x) \
   ((((x) << 12) & 0xfffff000ul) | ((r) & 0x00000ffful))
/* Field member: i2c::IC_DATA_CMD.RSVD_FIRST_DATA_BYTE                     */
#define I2C_IC_DATA_CMD_RSVD_FIRST_DATA_BYTE_MSB 11u
#define I2C_IC_DATA_CMD_RSVD_FIRST_DATA_BYTE_LSB 11u
#define I2C_IC_DATA_CMD_RSVD_FIRST_DATA_BYTE_WIDTH 1u
#define I2C_IC_DATA_CMD_RSVD_FIRST_DATA_BYTE_READ_ACCESS 1u
#define I2C_IC_DATA_CMD_RSVD_FIRST_DATA_BYTE_WRITE_ACCESS 0u
#define I2C_IC_DATA_CMD_RSVD_FIRST_DATA_BYTE_FIELD_MASK 0x00000800ul
#define I2C_IC_DATA_CMD_RSVD_FIRST_DATA_BYTE_GET(x) \
   (((x) & 0x00000800ul) >> 11)
#define I2C_IC_DATA_CMD_RSVD_FIRST_DATA_BYTE_SET(x) \
   (((x) << 11) & 0x00000800ul)
#define I2C_IC_DATA_CMD_RSVD_FIRST_DATA_BYTE_MODIFY(r, x) \
   ((((x) << 11) & 0x00000800ul) | ((r) & 0xfffff7fful))
/* Field member: i2c::IC_DATA_CMD.RESTART                                  */
#define I2C_IC_DATA_CMD_RESTART_MSB 10u
#define I2C_IC_DATA_CMD_RESTART_LSB 10u
#define I2C_IC_DATA_CMD_RESTART_WIDTH 1u
#define I2C_IC_DATA_CMD_RESTART_READ_ACCESS 0u
#define I2C_IC_DATA_CMD_RESTART_WRITE_ACCESS 1u
#define I2C_IC_DATA_CMD_RESTART_RESET 0x0u
#define I2C_IC_DATA_CMD_RESTART_FIELD_MASK 0x00000400ul
#define I2C_IC_DATA_CMD_RESTART_GET(x) (((x) & 0x00000400ul) >> 10)
#define I2C_IC_DATA_CMD_RESTART_SET(x) (((x) << 10) & 0x00000400ul)
#define I2C_IC_DATA_CMD_RESTART_MODIFY(r, x) \
   ((((x) << 10) & 0x00000400ul) | ((r) & 0xfffffbfful))
/* Field member: i2c::IC_DATA_CMD.STOP                                     */
#define I2C_IC_DATA_CMD_STOP_MSB 9u
#define I2C_IC_DATA_CMD_STOP_LSB 9u
#define I2C_IC_DATA_CMD_STOP_WIDTH 1u
#define I2C_IC_DATA_CMD_STOP_READ_ACCESS 0u
#define I2C_IC_DATA_CMD_STOP_WRITE_ACCESS 1u
#define I2C_IC_DATA_CMD_STOP_RESET 0x0u
#define I2C_IC_DATA_CMD_STOP_FIELD_MASK 0x00000200ul
#define I2C_IC_DATA_CMD_STOP_GET(x) (((x) & 0x00000200ul) >> 9)
#define I2C_IC_DATA_CMD_STOP_SET(x) (((x) << 9) & 0x00000200ul)
#define I2C_IC_DATA_CMD_STOP_MODIFY(r, x) \
   ((((x) << 9) & 0x00000200ul) | ((r) & 0xfffffdfful))
/* Field member: i2c::IC_DATA_CMD.CMD                                      */
#define I2C_IC_DATA_CMD_CMD_MSB 8u
#define I2C_IC_DATA_CMD_CMD_LSB 8u
#define I2C_IC_DATA_CMD_CMD_WIDTH 1u
#define I2C_IC_DATA_CMD_CMD_READ_ACCESS 0u
#define I2C_IC_DATA_CMD_CMD_WRITE_ACCESS 1u
#define I2C_IC_DATA_CMD_CMD_RESET 0x0u
#define I2C_IC_DATA_CMD_CMD_FIELD_MASK 0x00000100ul
#define I2C_IC_DATA_CMD_CMD_GET(x) (((x) & 0x00000100ul) >> 8)
#define I2C_IC_DATA_CMD_CMD_SET(x) (((x) << 8) & 0x00000100ul)
#define I2C_IC_DATA_CMD_CMD_MODIFY(r, x) \
   ((((x) << 8) & 0x00000100ul) | ((r) & 0xfffffefful))
/* Field member: i2c::IC_DATA_CMD.DAT                                      */
#define I2C_IC_DATA_CMD_DAT_MSB 7u
#define I2C_IC_DATA_CMD_DAT_LSB 0u
#define I2C_IC_DATA_CMD_DAT_WIDTH 8u
#define I2C_IC_DATA_CMD_DAT_READ_ACCESS 1u
#define I2C_IC_DATA_CMD_DAT_WRITE_ACCESS 1u
#define I2C_IC_DATA_CMD_DAT_RESET 0x00u
#define I2C_IC_DATA_CMD_DAT_FIELD_MASK 0x000000fful
#define I2C_IC_DATA_CMD_DAT_GET(x) ((x) & 0x000000fful)
#define I2C_IC_DATA_CMD_DAT_SET(x) ((x) & 0x000000fful)
#define I2C_IC_DATA_CMD_DAT_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: i2c::IC_SS_SCL_HCNT                                      */
/* Register template: i2c::IC_SS_SCL_HCNT                                  */
/* Field member: i2c::IC_SS_SCL_HCNT.RSVD_IC_SS_SCL_HIGH_COUNT             */
#define I2C_IC_SS_SCL_HCNT_RSVD_IC_SS_SCL_HIGH_COUNT_MSB 31u
#define I2C_IC_SS_SCL_HCNT_RSVD_IC_SS_SCL_HIGH_COUNT_LSB 16u
#define I2C_IC_SS_SCL_HCNT_RSVD_IC_SS_SCL_HIGH_COUNT_WIDTH 16u
#define I2C_IC_SS_SCL_HCNT_RSVD_IC_SS_SCL_HIGH_COUNT_READ_ACCESS 1u
#define I2C_IC_SS_SCL_HCNT_RSVD_IC_SS_SCL_HIGH_COUNT_WRITE_ACCESS 0u
#define I2C_IC_SS_SCL_HCNT_RSVD_IC_SS_SCL_HIGH_COUNT_FIELD_MASK 0xffff0000ul
#define I2C_IC_SS_SCL_HCNT_RSVD_IC_SS_SCL_HIGH_COUNT_GET(x) \
   (((x) & 0xffff0000ul) >> 16)
#define I2C_IC_SS_SCL_HCNT_RSVD_IC_SS_SCL_HIGH_COUNT_SET(x) \
   (((x) << 16) & 0xffff0000ul)
#define I2C_IC_SS_SCL_HCNT_RSVD_IC_SS_SCL_HIGH_COUNT_MODIFY(r, x) \
   ((((x) << 16) & 0xffff0000ul) | ((r) & 0x0000fffful))
/* Field member: i2c::IC_SS_SCL_HCNT.IC_SS_SCL_HCNT                        */
#define I2C_IC_SS_SCL_HCNT_IC_SS_SCL_HCNT_MSB 15u
#define I2C_IC_SS_SCL_HCNT_IC_SS_SCL_HCNT_LSB 0u
#define I2C_IC_SS_SCL_HCNT_IC_SS_SCL_HCNT_WIDTH 16u
#define I2C_IC_SS_SCL_HCNT_IC_SS_SCL_HCNT_READ_ACCESS 1u
#define I2C_IC_SS_SCL_HCNT_IC_SS_SCL_HCNT_WRITE_ACCESS 1u
#define I2C_IC_SS_SCL_HCNT_IC_SS_SCL_HCNT_RESET 0x0064u
#define I2C_IC_SS_SCL_HCNT_IC_SS_SCL_HCNT_FIELD_MASK 0x0000fffful
#define I2C_IC_SS_SCL_HCNT_IC_SS_SCL_HCNT_GET(x) ((x) & 0x0000fffful)
#define I2C_IC_SS_SCL_HCNT_IC_SS_SCL_HCNT_SET(x) ((x) & 0x0000fffful)
#define I2C_IC_SS_SCL_HCNT_IC_SS_SCL_HCNT_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: i2c::IC_SS_SCL_LCNT                                      */
/* Register template: i2c::IC_SS_SCL_LCNT                                  */
/* Field member: i2c::IC_SS_SCL_LCNT.RSVD_IC_SS_SCL_LOW_COUNT              */
#define I2C_IC_SS_SCL_LCNT_RSVD_IC_SS_SCL_LOW_COUNT_MSB 31u
#define I2C_IC_SS_SCL_LCNT_RSVD_IC_SS_SCL_LOW_COUNT_LSB 16u
#define I2C_IC_SS_SCL_LCNT_RSVD_IC_SS_SCL_LOW_COUNT_WIDTH 16u
#define I2C_IC_SS_SCL_LCNT_RSVD_IC_SS_SCL_LOW_COUNT_READ_ACCESS 1u
#define I2C_IC_SS_SCL_LCNT_RSVD_IC_SS_SCL_LOW_COUNT_WRITE_ACCESS 0u
#define I2C_IC_SS_SCL_LCNT_RSVD_IC_SS_SCL_LOW_COUNT_FIELD_MASK 0xffff0000ul
#define I2C_IC_SS_SCL_LCNT_RSVD_IC_SS_SCL_LOW_COUNT_GET(x) \
   (((x) & 0xffff0000ul) >> 16)
#define I2C_IC_SS_SCL_LCNT_RSVD_IC_SS_SCL_LOW_COUNT_SET(x) \
   (((x) << 16) & 0xffff0000ul)
#define I2C_IC_SS_SCL_LCNT_RSVD_IC_SS_SCL_LOW_COUNT_MODIFY(r, x) \
   ((((x) << 16) & 0xffff0000ul) | ((r) & 0x0000fffful))
/* Field member: i2c::IC_SS_SCL_LCNT.IC_SS_SCL_LCNT                        */
#define I2C_IC_SS_SCL_LCNT_IC_SS_SCL_LCNT_MSB 15u
#define I2C_IC_SS_SCL_LCNT_IC_SS_SCL_LCNT_LSB 0u
#define I2C_IC_SS_SCL_LCNT_IC_SS_SCL_LCNT_WIDTH 16u
#define I2C_IC_SS_SCL_LCNT_IC_SS_SCL_LCNT_READ_ACCESS 1u
#define I2C_IC_SS_SCL_LCNT_IC_SS_SCL_LCNT_WRITE_ACCESS 1u
#define I2C_IC_SS_SCL_LCNT_IC_SS_SCL_LCNT_RESET 0x0076u
#define I2C_IC_SS_SCL_LCNT_IC_SS_SCL_LCNT_FIELD_MASK 0x0000fffful
#define I2C_IC_SS_SCL_LCNT_IC_SS_SCL_LCNT_GET(x) ((x) & 0x0000fffful)
#define I2C_IC_SS_SCL_LCNT_IC_SS_SCL_LCNT_SET(x) ((x) & 0x0000fffful)
#define I2C_IC_SS_SCL_LCNT_IC_SS_SCL_LCNT_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: i2c::IC_FS_SCL_HCNT                                      */
/* Register template: i2c::IC_FS_SCL_HCNT                                  */
/* Field member: i2c::IC_FS_SCL_HCNT.RSVD_IC_FS_SCL_HCNT                   */
#define I2C_IC_FS_SCL_HCNT_RSVD_IC_FS_SCL_HCNT_MSB 31u
#define I2C_IC_FS_SCL_HCNT_RSVD_IC_FS_SCL_HCNT_LSB 16u
#define I2C_IC_FS_SCL_HCNT_RSVD_IC_FS_SCL_HCNT_WIDTH 16u
#define I2C_IC_FS_SCL_HCNT_RSVD_IC_FS_SCL_HCNT_READ_ACCESS 1u
#define I2C_IC_FS_SCL_HCNT_RSVD_IC_FS_SCL_HCNT_WRITE_ACCESS 0u
#define I2C_IC_FS_SCL_HCNT_RSVD_IC_FS_SCL_HCNT_FIELD_MASK 0xffff0000ul
#define I2C_IC_FS_SCL_HCNT_RSVD_IC_FS_SCL_HCNT_GET(x) \
   (((x) & 0xffff0000ul) >> 16)
#define I2C_IC_FS_SCL_HCNT_RSVD_IC_FS_SCL_HCNT_SET(x) \
   (((x) << 16) & 0xffff0000ul)
#define I2C_IC_FS_SCL_HCNT_RSVD_IC_FS_SCL_HCNT_MODIFY(r, x) \
   ((((x) << 16) & 0xffff0000ul) | ((r) & 0x0000fffful))
/* Field member: i2c::IC_FS_SCL_HCNT.IC_FS_SCL_HCNT                        */
#define I2C_IC_FS_SCL_HCNT_IC_FS_SCL_HCNT_MSB 15u
#define I2C_IC_FS_SCL_HCNT_IC_FS_SCL_HCNT_LSB 0u
#define I2C_IC_FS_SCL_HCNT_IC_FS_SCL_HCNT_WIDTH 16u
#define I2C_IC_FS_SCL_HCNT_IC_FS_SCL_HCNT_READ_ACCESS 1u
#define I2C_IC_FS_SCL_HCNT_IC_FS_SCL_HCNT_WRITE_ACCESS 1u
#define I2C_IC_FS_SCL_HCNT_IC_FS_SCL_HCNT_RESET 0x000fu
#define I2C_IC_FS_SCL_HCNT_IC_FS_SCL_HCNT_FIELD_MASK 0x0000fffful
#define I2C_IC_FS_SCL_HCNT_IC_FS_SCL_HCNT_GET(x) ((x) & 0x0000fffful)
#define I2C_IC_FS_SCL_HCNT_IC_FS_SCL_HCNT_SET(x) ((x) & 0x0000fffful)
#define I2C_IC_FS_SCL_HCNT_IC_FS_SCL_HCNT_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: i2c::IC_FS_SCL_LCNT                                      */
/* Register template: i2c::IC_FS_SCL_LCNT                                  */
/* Field member: i2c::IC_FS_SCL_LCNT.RSVD_IC_FS_SCL_LCNT                   */
#define I2C_IC_FS_SCL_LCNT_RSVD_IC_FS_SCL_LCNT_MSB 31u
#define I2C_IC_FS_SCL_LCNT_RSVD_IC_FS_SCL_LCNT_LSB 16u
#define I2C_IC_FS_SCL_LCNT_RSVD_IC_FS_SCL_LCNT_WIDTH 16u
#define I2C_IC_FS_SCL_LCNT_RSVD_IC_FS_SCL_LCNT_READ_ACCESS 1u
#define I2C_IC_FS_SCL_LCNT_RSVD_IC_FS_SCL_LCNT_WRITE_ACCESS 0u
#define I2C_IC_FS_SCL_LCNT_RSVD_IC_FS_SCL_LCNT_FIELD_MASK 0xffff0000ul
#define I2C_IC_FS_SCL_LCNT_RSVD_IC_FS_SCL_LCNT_GET(x) \
   (((x) & 0xffff0000ul) >> 16)
#define I2C_IC_FS_SCL_LCNT_RSVD_IC_FS_SCL_LCNT_SET(x) \
   (((x) << 16) & 0xffff0000ul)
#define I2C_IC_FS_SCL_LCNT_RSVD_IC_FS_SCL_LCNT_MODIFY(r, x) \
   ((((x) << 16) & 0xffff0000ul) | ((r) & 0x0000fffful))
/* Field member: i2c::IC_FS_SCL_LCNT.IC_FS_SCL_LCNT                        */
#define I2C_IC_FS_SCL_LCNT_IC_FS_SCL_LCNT_MSB 15u
#define I2C_IC_FS_SCL_LCNT_IC_FS_SCL_LCNT_LSB 0u
#define I2C_IC_FS_SCL_LCNT_IC_FS_SCL_LCNT_WIDTH 16u
#define I2C_IC_FS_SCL_LCNT_IC_FS_SCL_LCNT_READ_ACCESS 1u
#define I2C_IC_FS_SCL_LCNT_IC_FS_SCL_LCNT_WRITE_ACCESS 1u
#define I2C_IC_FS_SCL_LCNT_IC_FS_SCL_LCNT_RESET 0x0021u
#define I2C_IC_FS_SCL_LCNT_IC_FS_SCL_LCNT_FIELD_MASK 0x0000fffful
#define I2C_IC_FS_SCL_LCNT_IC_FS_SCL_LCNT_GET(x) ((x) & 0x0000fffful)
#define I2C_IC_FS_SCL_LCNT_IC_FS_SCL_LCNT_SET(x) ((x) & 0x0000fffful)
#define I2C_IC_FS_SCL_LCNT_IC_FS_SCL_LCNT_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: i2c::IC_INTR_STAT                                        */
/* Register template: i2c::IC_INTR_STAT                                    */
/* Field member: i2c::IC_INTR_STAT.RSVD_IC_INTR_STAT                       */
#define I2C_IC_INTR_STAT_RSVD_IC_INTR_STAT_MSB 31u
#define I2C_IC_INTR_STAT_RSVD_IC_INTR_STAT_LSB 15u
#define I2C_IC_INTR_STAT_RSVD_IC_INTR_STAT_WIDTH 17u
#define I2C_IC_INTR_STAT_RSVD_IC_INTR_STAT_READ_ACCESS 1u
#define I2C_IC_INTR_STAT_RSVD_IC_INTR_STAT_WRITE_ACCESS 0u
#define I2C_IC_INTR_STAT_RSVD_IC_INTR_STAT_FIELD_MASK 0xffff8000ul
#define I2C_IC_INTR_STAT_RSVD_IC_INTR_STAT_GET(x) \
   (((x) & 0xffff8000ul) >> 15)
#define I2C_IC_INTR_STAT_RSVD_IC_INTR_STAT_SET(x) \
   (((x) << 15) & 0xffff8000ul)
#define I2C_IC_INTR_STAT_RSVD_IC_INTR_STAT_MODIFY(r, x) \
   ((((x) << 15) & 0xffff8000ul) | ((r) & 0x00007ffful))
/* Field member: i2c::IC_INTR_STAT.R_SCL_STUCK_AT_LOW                      */
#define I2C_IC_INTR_STAT_R_SCL_STUCK_AT_LOW_MSB 14u
#define I2C_IC_INTR_STAT_R_SCL_STUCK_AT_LOW_LSB 14u
#define I2C_IC_INTR_STAT_R_SCL_STUCK_AT_LOW_WIDTH 1u
#define I2C_IC_INTR_STAT_R_SCL_STUCK_AT_LOW_READ_ACCESS 1u
#define I2C_IC_INTR_STAT_R_SCL_STUCK_AT_LOW_WRITE_ACCESS 0u
#define I2C_IC_INTR_STAT_R_SCL_STUCK_AT_LOW_RESET 0x0u
#define I2C_IC_INTR_STAT_R_SCL_STUCK_AT_LOW_FIELD_MASK 0x00004000ul
#define I2C_IC_INTR_STAT_R_SCL_STUCK_AT_LOW_GET(x) \
   (((x) & 0x00004000ul) >> 14)
#define I2C_IC_INTR_STAT_R_SCL_STUCK_AT_LOW_SET(x) \
   (((x) << 14) & 0x00004000ul)
#define I2C_IC_INTR_STAT_R_SCL_STUCK_AT_LOW_MODIFY(r, x) \
   ((((x) << 14) & 0x00004000ul) | ((r) & 0xffffbffful))
/* Field member: i2c::IC_INTR_STAT.R_MASTER_ON_HOLD                        */
#define I2C_IC_INTR_STAT_R_MASTER_ON_HOLD_MSB 13u
#define I2C_IC_INTR_STAT_R_MASTER_ON_HOLD_LSB 13u
#define I2C_IC_INTR_STAT_R_MASTER_ON_HOLD_WIDTH 1u
#define I2C_IC_INTR_STAT_R_MASTER_ON_HOLD_READ_ACCESS 1u
#define I2C_IC_INTR_STAT_R_MASTER_ON_HOLD_WRITE_ACCESS 0u
#define I2C_IC_INTR_STAT_R_MASTER_ON_HOLD_RESET 0x0u
#define I2C_IC_INTR_STAT_R_MASTER_ON_HOLD_FIELD_MASK 0x00002000ul
#define I2C_IC_INTR_STAT_R_MASTER_ON_HOLD_GET(x) (((x) & 0x00002000ul) >> 13)
#define I2C_IC_INTR_STAT_R_MASTER_ON_HOLD_SET(x) \
   (((x) << 13) & 0x00002000ul)
#define I2C_IC_INTR_STAT_R_MASTER_ON_HOLD_MODIFY(r, x) \
   ((((x) << 13) & 0x00002000ul) | ((r) & 0xffffdffful))
/* Field member: i2c::IC_INTR_STAT.R_RESTART_DET                           */
#define I2C_IC_INTR_STAT_R_RESTART_DET_MSB 12u
#define I2C_IC_INTR_STAT_R_RESTART_DET_LSB 12u
#define I2C_IC_INTR_STAT_R_RESTART_DET_WIDTH 1u
#define I2C_IC_INTR_STAT_R_RESTART_DET_READ_ACCESS 1u
#define I2C_IC_INTR_STAT_R_RESTART_DET_WRITE_ACCESS 0u
#define I2C_IC_INTR_STAT_R_RESTART_DET_RESET 0x0u
#define I2C_IC_INTR_STAT_R_RESTART_DET_FIELD_MASK 0x00001000ul
#define I2C_IC_INTR_STAT_R_RESTART_DET_GET(x) (((x) & 0x00001000ul) >> 12)
#define I2C_IC_INTR_STAT_R_RESTART_DET_SET(x) (((x) << 12) & 0x00001000ul)
#define I2C_IC_INTR_STAT_R_RESTART_DET_MODIFY(r, x) \
   ((((x) << 12) & 0x00001000ul) | ((r) & 0xffffeffful))
/* Field member: i2c::IC_INTR_STAT.R_GEN_CALL                              */
#define I2C_IC_INTR_STAT_R_GEN_CALL_MSB 11u
#define I2C_IC_INTR_STAT_R_GEN_CALL_LSB 11u
#define I2C_IC_INTR_STAT_R_GEN_CALL_WIDTH 1u
#define I2C_IC_INTR_STAT_R_GEN_CALL_READ_ACCESS 1u
#define I2C_IC_INTR_STAT_R_GEN_CALL_WRITE_ACCESS 0u
#define I2C_IC_INTR_STAT_R_GEN_CALL_RESET 0x0u
#define I2C_IC_INTR_STAT_R_GEN_CALL_FIELD_MASK 0x00000800ul
#define I2C_IC_INTR_STAT_R_GEN_CALL_GET(x) (((x) & 0x00000800ul) >> 11)
#define I2C_IC_INTR_STAT_R_GEN_CALL_SET(x) (((x) << 11) & 0x00000800ul)
#define I2C_IC_INTR_STAT_R_GEN_CALL_MODIFY(r, x) \
   ((((x) << 11) & 0x00000800ul) | ((r) & 0xfffff7fful))
/* Field member: i2c::IC_INTR_STAT.R_START_DET                             */
#define I2C_IC_INTR_STAT_R_START_DET_MSB 10u
#define I2C_IC_INTR_STAT_R_START_DET_LSB 10u
#define I2C_IC_INTR_STAT_R_START_DET_WIDTH 1u
#define I2C_IC_INTR_STAT_R_START_DET_READ_ACCESS 1u
#define I2C_IC_INTR_STAT_R_START_DET_WRITE_ACCESS 0u
#define I2C_IC_INTR_STAT_R_START_DET_RESET 0x0u
#define I2C_IC_INTR_STAT_R_START_DET_FIELD_MASK 0x00000400ul
#define I2C_IC_INTR_STAT_R_START_DET_GET(x) (((x) & 0x00000400ul) >> 10)
#define I2C_IC_INTR_STAT_R_START_DET_SET(x) (((x) << 10) & 0x00000400ul)
#define I2C_IC_INTR_STAT_R_START_DET_MODIFY(r, x) \
   ((((x) << 10) & 0x00000400ul) | ((r) & 0xfffffbfful))
/* Field member: i2c::IC_INTR_STAT.R_STOP_DET                              */
#define I2C_IC_INTR_STAT_R_STOP_DET_MSB 9u
#define I2C_IC_INTR_STAT_R_STOP_DET_LSB 9u
#define I2C_IC_INTR_STAT_R_STOP_DET_WIDTH 1u
#define I2C_IC_INTR_STAT_R_STOP_DET_READ_ACCESS 1u
#define I2C_IC_INTR_STAT_R_STOP_DET_WRITE_ACCESS 0u
#define I2C_IC_INTR_STAT_R_STOP_DET_RESET 0x0u
#define I2C_IC_INTR_STAT_R_STOP_DET_FIELD_MASK 0x00000200ul
#define I2C_IC_INTR_STAT_R_STOP_DET_GET(x) (((x) & 0x00000200ul) >> 9)
#define I2C_IC_INTR_STAT_R_STOP_DET_SET(x) (((x) << 9) & 0x00000200ul)
#define I2C_IC_INTR_STAT_R_STOP_DET_MODIFY(r, x) \
   ((((x) << 9) & 0x00000200ul) | ((r) & 0xfffffdfful))
/* Field member: i2c::IC_INTR_STAT.R_ACTIVITY                              */
#define I2C_IC_INTR_STAT_R_ACTIVITY_MSB 8u
#define I2C_IC_INTR_STAT_R_ACTIVITY_LSB 8u
#define I2C_IC_INTR_STAT_R_ACTIVITY_WIDTH 1u
#define I2C_IC_INTR_STAT_R_ACTIVITY_READ_ACCESS 1u
#define I2C_IC_INTR_STAT_R_ACTIVITY_WRITE_ACCESS 0u
#define I2C_IC_INTR_STAT_R_ACTIVITY_RESET 0x0u
#define I2C_IC_INTR_STAT_R_ACTIVITY_FIELD_MASK 0x00000100ul
#define I2C_IC_INTR_STAT_R_ACTIVITY_GET(x) (((x) & 0x00000100ul) >> 8)
#define I2C_IC_INTR_STAT_R_ACTIVITY_SET(x) (((x) << 8) & 0x00000100ul)
#define I2C_IC_INTR_STAT_R_ACTIVITY_MODIFY(r, x) \
   ((((x) << 8) & 0x00000100ul) | ((r) & 0xfffffefful))
/* Field member: i2c::IC_INTR_STAT.R_RX_DONE                               */
#define I2C_IC_INTR_STAT_R_RX_DONE_MSB 7u
#define I2C_IC_INTR_STAT_R_RX_DONE_LSB 7u
#define I2C_IC_INTR_STAT_R_RX_DONE_WIDTH 1u
#define I2C_IC_INTR_STAT_R_RX_DONE_READ_ACCESS 1u
#define I2C_IC_INTR_STAT_R_RX_DONE_WRITE_ACCESS 0u
#define I2C_IC_INTR_STAT_R_RX_DONE_RESET 0x0u
#define I2C_IC_INTR_STAT_R_RX_DONE_FIELD_MASK 0x00000080ul
#define I2C_IC_INTR_STAT_R_RX_DONE_GET(x) (((x) & 0x00000080ul) >> 7)
#define I2C_IC_INTR_STAT_R_RX_DONE_SET(x) (((x) << 7) & 0x00000080ul)
#define I2C_IC_INTR_STAT_R_RX_DONE_MODIFY(r, x) \
   ((((x) << 7) & 0x00000080ul) | ((r) & 0xffffff7ful))
/* Field member: i2c::IC_INTR_STAT.R_TX_ABRT                               */
#define I2C_IC_INTR_STAT_R_TX_ABRT_MSB 6u
#define I2C_IC_INTR_STAT_R_TX_ABRT_LSB 6u
#define I2C_IC_INTR_STAT_R_TX_ABRT_WIDTH 1u
#define I2C_IC_INTR_STAT_R_TX_ABRT_READ_ACCESS 1u
#define I2C_IC_INTR_STAT_R_TX_ABRT_WRITE_ACCESS 0u
#define I2C_IC_INTR_STAT_R_TX_ABRT_RESET 0x0u
#define I2C_IC_INTR_STAT_R_TX_ABRT_FIELD_MASK 0x00000040ul
#define I2C_IC_INTR_STAT_R_TX_ABRT_GET(x) (((x) & 0x00000040ul) >> 6)
#define I2C_IC_INTR_STAT_R_TX_ABRT_SET(x) (((x) << 6) & 0x00000040ul)
#define I2C_IC_INTR_STAT_R_TX_ABRT_MODIFY(r, x) \
   ((((x) << 6) & 0x00000040ul) | ((r) & 0xffffffbful))
/* Field member: i2c::IC_INTR_STAT.R_RD_REQ                                */
#define I2C_IC_INTR_STAT_R_RD_REQ_MSB 5u
#define I2C_IC_INTR_STAT_R_RD_REQ_LSB 5u
#define I2C_IC_INTR_STAT_R_RD_REQ_WIDTH 1u
#define I2C_IC_INTR_STAT_R_RD_REQ_READ_ACCESS 1u
#define I2C_IC_INTR_STAT_R_RD_REQ_WRITE_ACCESS 0u
#define I2C_IC_INTR_STAT_R_RD_REQ_RESET 0x0u
#define I2C_IC_INTR_STAT_R_RD_REQ_FIELD_MASK 0x00000020ul
#define I2C_IC_INTR_STAT_R_RD_REQ_GET(x) (((x) & 0x00000020ul) >> 5)
#define I2C_IC_INTR_STAT_R_RD_REQ_SET(x) (((x) << 5) & 0x00000020ul)
#define I2C_IC_INTR_STAT_R_RD_REQ_MODIFY(r, x) \
   ((((x) << 5) & 0x00000020ul) | ((r) & 0xffffffdful))
/* Field member: i2c::IC_INTR_STAT.R_TX_EMPTY                              */
#define I2C_IC_INTR_STAT_R_TX_EMPTY_MSB 4u
#define I2C_IC_INTR_STAT_R_TX_EMPTY_LSB 4u
#define I2C_IC_INTR_STAT_R_TX_EMPTY_WIDTH 1u
#define I2C_IC_INTR_STAT_R_TX_EMPTY_READ_ACCESS 1u
#define I2C_IC_INTR_STAT_R_TX_EMPTY_WRITE_ACCESS 0u
#define I2C_IC_INTR_STAT_R_TX_EMPTY_RESET 0x0u
#define I2C_IC_INTR_STAT_R_TX_EMPTY_FIELD_MASK 0x00000010ul
#define I2C_IC_INTR_STAT_R_TX_EMPTY_GET(x) (((x) & 0x00000010ul) >> 4)
#define I2C_IC_INTR_STAT_R_TX_EMPTY_SET(x) (((x) << 4) & 0x00000010ul)
#define I2C_IC_INTR_STAT_R_TX_EMPTY_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010ul) | ((r) & 0xffffffeful))
/* Field member: i2c::IC_INTR_STAT.R_TX_OVER                               */
#define I2C_IC_INTR_STAT_R_TX_OVER_MSB 3u
#define I2C_IC_INTR_STAT_R_TX_OVER_LSB 3u
#define I2C_IC_INTR_STAT_R_TX_OVER_WIDTH 1u
#define I2C_IC_INTR_STAT_R_TX_OVER_READ_ACCESS 1u
#define I2C_IC_INTR_STAT_R_TX_OVER_WRITE_ACCESS 0u
#define I2C_IC_INTR_STAT_R_TX_OVER_RESET 0x0u
#define I2C_IC_INTR_STAT_R_TX_OVER_FIELD_MASK 0x00000008ul
#define I2C_IC_INTR_STAT_R_TX_OVER_GET(x) (((x) & 0x00000008ul) >> 3)
#define I2C_IC_INTR_STAT_R_TX_OVER_SET(x) (((x) << 3) & 0x00000008ul)
#define I2C_IC_INTR_STAT_R_TX_OVER_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: i2c::IC_INTR_STAT.R_RX_FULL                               */
#define I2C_IC_INTR_STAT_R_RX_FULL_MSB 2u
#define I2C_IC_INTR_STAT_R_RX_FULL_LSB 2u
#define I2C_IC_INTR_STAT_R_RX_FULL_WIDTH 1u
#define I2C_IC_INTR_STAT_R_RX_FULL_READ_ACCESS 1u
#define I2C_IC_INTR_STAT_R_RX_FULL_WRITE_ACCESS 0u
#define I2C_IC_INTR_STAT_R_RX_FULL_RESET 0x0u
#define I2C_IC_INTR_STAT_R_RX_FULL_FIELD_MASK 0x00000004ul
#define I2C_IC_INTR_STAT_R_RX_FULL_GET(x) (((x) & 0x00000004ul) >> 2)
#define I2C_IC_INTR_STAT_R_RX_FULL_SET(x) (((x) << 2) & 0x00000004ul)
#define I2C_IC_INTR_STAT_R_RX_FULL_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004ul) | ((r) & 0xfffffffbul))
/* Field member: i2c::IC_INTR_STAT.R_RX_OVER                               */
#define I2C_IC_INTR_STAT_R_RX_OVER_MSB 1u
#define I2C_IC_INTR_STAT_R_RX_OVER_LSB 1u
#define I2C_IC_INTR_STAT_R_RX_OVER_WIDTH 1u
#define I2C_IC_INTR_STAT_R_RX_OVER_READ_ACCESS 1u
#define I2C_IC_INTR_STAT_R_RX_OVER_WRITE_ACCESS 0u
#define I2C_IC_INTR_STAT_R_RX_OVER_RESET 0x0u
#define I2C_IC_INTR_STAT_R_RX_OVER_FIELD_MASK 0x00000002ul
#define I2C_IC_INTR_STAT_R_RX_OVER_GET(x) (((x) & 0x00000002ul) >> 1)
#define I2C_IC_INTR_STAT_R_RX_OVER_SET(x) (((x) << 1) & 0x00000002ul)
#define I2C_IC_INTR_STAT_R_RX_OVER_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: i2c::IC_INTR_STAT.R_RX_UNDER                              */
#define I2C_IC_INTR_STAT_R_RX_UNDER_MSB 0u
#define I2C_IC_INTR_STAT_R_RX_UNDER_LSB 0u
#define I2C_IC_INTR_STAT_R_RX_UNDER_WIDTH 1u
#define I2C_IC_INTR_STAT_R_RX_UNDER_READ_ACCESS 1u
#define I2C_IC_INTR_STAT_R_RX_UNDER_WRITE_ACCESS 0u
#define I2C_IC_INTR_STAT_R_RX_UNDER_RESET 0x0u
#define I2C_IC_INTR_STAT_R_RX_UNDER_FIELD_MASK 0x00000001ul
#define I2C_IC_INTR_STAT_R_RX_UNDER_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_INTR_STAT_R_RX_UNDER_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_INTR_STAT_R_RX_UNDER_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_INTR_MASK                                        */
/* Register template: i2c::IC_INTR_MASK                                    */
/* Field member: i2c::IC_INTR_MASK.RSVD_IC_INTR_STAT                       */
#define I2C_IC_INTR_MASK_RSVD_IC_INTR_STAT_MSB 31u
#define I2C_IC_INTR_MASK_RSVD_IC_INTR_STAT_LSB 15u
#define I2C_IC_INTR_MASK_RSVD_IC_INTR_STAT_WIDTH 17u
#define I2C_IC_INTR_MASK_RSVD_IC_INTR_STAT_READ_ACCESS 1u
#define I2C_IC_INTR_MASK_RSVD_IC_INTR_STAT_WRITE_ACCESS 0u
#define I2C_IC_INTR_MASK_RSVD_IC_INTR_STAT_FIELD_MASK 0xffff8000ul
#define I2C_IC_INTR_MASK_RSVD_IC_INTR_STAT_GET(x) \
   (((x) & 0xffff8000ul) >> 15)
#define I2C_IC_INTR_MASK_RSVD_IC_INTR_STAT_SET(x) \
   (((x) << 15) & 0xffff8000ul)
#define I2C_IC_INTR_MASK_RSVD_IC_INTR_STAT_MODIFY(r, x) \
   ((((x) << 15) & 0xffff8000ul) | ((r) & 0x00007ffful))
/* Field member: i2c::IC_INTR_MASK.M_SCL_STUCK_AT_LOW                      */
#define I2C_IC_INTR_MASK_M_SCL_STUCK_AT_LOW_MSB 14u
#define I2C_IC_INTR_MASK_M_SCL_STUCK_AT_LOW_LSB 14u
#define I2C_IC_INTR_MASK_M_SCL_STUCK_AT_LOW_WIDTH 1u
#define I2C_IC_INTR_MASK_M_SCL_STUCK_AT_LOW_READ_ACCESS 1u
#define I2C_IC_INTR_MASK_M_SCL_STUCK_AT_LOW_WRITE_ACCESS 1u
#define I2C_IC_INTR_MASK_M_SCL_STUCK_AT_LOW_RESET 0x1u
#define I2C_IC_INTR_MASK_M_SCL_STUCK_AT_LOW_FIELD_MASK 0x00004000ul
#define I2C_IC_INTR_MASK_M_SCL_STUCK_AT_LOW_GET(x) \
   (((x) & 0x00004000ul) >> 14)
#define I2C_IC_INTR_MASK_M_SCL_STUCK_AT_LOW_SET(x) \
   (((x) << 14) & 0x00004000ul)
#define I2C_IC_INTR_MASK_M_SCL_STUCK_AT_LOW_MODIFY(r, x) \
   ((((x) << 14) & 0x00004000ul) | ((r) & 0xffffbffful))
/* Field member: i2c::IC_INTR_MASK.M_MASTER_ON_HOLD_read_only              */
#define I2C_IC_INTR_MASK_M_MASTER_ON_HOLD_READ_ONLY_MSB 13u
#define I2C_IC_INTR_MASK_M_MASTER_ON_HOLD_READ_ONLY_LSB 13u
#define I2C_IC_INTR_MASK_M_MASTER_ON_HOLD_READ_ONLY_WIDTH 1u
#define I2C_IC_INTR_MASK_M_MASTER_ON_HOLD_READ_ONLY_READ_ACCESS 1u
#define I2C_IC_INTR_MASK_M_MASTER_ON_HOLD_READ_ONLY_WRITE_ACCESS 0u
#define I2C_IC_INTR_MASK_M_MASTER_ON_HOLD_READ_ONLY_FIELD_MASK 0x00002000ul
#define I2C_IC_INTR_MASK_M_MASTER_ON_HOLD_READ_ONLY_GET(x) \
   (((x) & 0x00002000ul) >> 13)
#define I2C_IC_INTR_MASK_M_MASTER_ON_HOLD_READ_ONLY_SET(x) \
   (((x) << 13) & 0x00002000ul)
#define I2C_IC_INTR_MASK_M_MASTER_ON_HOLD_READ_ONLY_MODIFY(r, x) \
   ((((x) << 13) & 0x00002000ul) | ((r) & 0xffffdffful))
/* Field member: i2c::IC_INTR_MASK.M_RESTART_DET_read_only                 */
#define I2C_IC_INTR_MASK_M_RESTART_DET_READ_ONLY_MSB 12u
#define I2C_IC_INTR_MASK_M_RESTART_DET_READ_ONLY_LSB 12u
#define I2C_IC_INTR_MASK_M_RESTART_DET_READ_ONLY_WIDTH 1u
#define I2C_IC_INTR_MASK_M_RESTART_DET_READ_ONLY_READ_ACCESS 1u
#define I2C_IC_INTR_MASK_M_RESTART_DET_READ_ONLY_WRITE_ACCESS 0u
#define I2C_IC_INTR_MASK_M_RESTART_DET_READ_ONLY_RESET 0x0u
#define I2C_IC_INTR_MASK_M_RESTART_DET_READ_ONLY_FIELD_MASK 0x00001000ul
#define I2C_IC_INTR_MASK_M_RESTART_DET_READ_ONLY_GET(x) \
   (((x) & 0x00001000ul) >> 12)
#define I2C_IC_INTR_MASK_M_RESTART_DET_READ_ONLY_SET(x) \
   (((x) << 12) & 0x00001000ul)
#define I2C_IC_INTR_MASK_M_RESTART_DET_READ_ONLY_MODIFY(r, x) \
   ((((x) << 12) & 0x00001000ul) | ((r) & 0xffffeffful))
/* Field member: i2c::IC_INTR_MASK.M_GEN_CALL                              */
#define I2C_IC_INTR_MASK_M_GEN_CALL_MSB 11u
#define I2C_IC_INTR_MASK_M_GEN_CALL_LSB 11u
#define I2C_IC_INTR_MASK_M_GEN_CALL_WIDTH 1u
#define I2C_IC_INTR_MASK_M_GEN_CALL_READ_ACCESS 1u
#define I2C_IC_INTR_MASK_M_GEN_CALL_WRITE_ACCESS 1u
#define I2C_IC_INTR_MASK_M_GEN_CALL_RESET 0x1u
#define I2C_IC_INTR_MASK_M_GEN_CALL_FIELD_MASK 0x00000800ul
#define I2C_IC_INTR_MASK_M_GEN_CALL_GET(x) (((x) & 0x00000800ul) >> 11)
#define I2C_IC_INTR_MASK_M_GEN_CALL_SET(x) (((x) << 11) & 0x00000800ul)
#define I2C_IC_INTR_MASK_M_GEN_CALL_MODIFY(r, x) \
   ((((x) << 11) & 0x00000800ul) | ((r) & 0xfffff7fful))
/* Field member: i2c::IC_INTR_MASK.M_START_DET                             */
#define I2C_IC_INTR_MASK_M_START_DET_MSB 10u
#define I2C_IC_INTR_MASK_M_START_DET_LSB 10u
#define I2C_IC_INTR_MASK_M_START_DET_WIDTH 1u
#define I2C_IC_INTR_MASK_M_START_DET_READ_ACCESS 1u
#define I2C_IC_INTR_MASK_M_START_DET_WRITE_ACCESS 1u
#define I2C_IC_INTR_MASK_M_START_DET_RESET 0x0u
#define I2C_IC_INTR_MASK_M_START_DET_FIELD_MASK 0x00000400ul
#define I2C_IC_INTR_MASK_M_START_DET_GET(x) (((x) & 0x00000400ul) >> 10)
#define I2C_IC_INTR_MASK_M_START_DET_SET(x) (((x) << 10) & 0x00000400ul)
#define I2C_IC_INTR_MASK_M_START_DET_MODIFY(r, x) \
   ((((x) << 10) & 0x00000400ul) | ((r) & 0xfffffbfful))
/* Field member: i2c::IC_INTR_MASK.M_STOP_DET                              */
#define I2C_IC_INTR_MASK_M_STOP_DET_MSB 9u
#define I2C_IC_INTR_MASK_M_STOP_DET_LSB 9u
#define I2C_IC_INTR_MASK_M_STOP_DET_WIDTH 1u
#define I2C_IC_INTR_MASK_M_STOP_DET_READ_ACCESS 1u
#define I2C_IC_INTR_MASK_M_STOP_DET_WRITE_ACCESS 1u
#define I2C_IC_INTR_MASK_M_STOP_DET_RESET 0x0u
#define I2C_IC_INTR_MASK_M_STOP_DET_FIELD_MASK 0x00000200ul
#define I2C_IC_INTR_MASK_M_STOP_DET_GET(x) (((x) & 0x00000200ul) >> 9)
#define I2C_IC_INTR_MASK_M_STOP_DET_SET(x) (((x) << 9) & 0x00000200ul)
#define I2C_IC_INTR_MASK_M_STOP_DET_MODIFY(r, x) \
   ((((x) << 9) & 0x00000200ul) | ((r) & 0xfffffdfful))
/* Field member: i2c::IC_INTR_MASK.M_ACTIVITY                              */
#define I2C_IC_INTR_MASK_M_ACTIVITY_MSB 8u
#define I2C_IC_INTR_MASK_M_ACTIVITY_LSB 8u
#define I2C_IC_INTR_MASK_M_ACTIVITY_WIDTH 1u
#define I2C_IC_INTR_MASK_M_ACTIVITY_READ_ACCESS 1u
#define I2C_IC_INTR_MASK_M_ACTIVITY_WRITE_ACCESS 1u
#define I2C_IC_INTR_MASK_M_ACTIVITY_RESET 0x0u
#define I2C_IC_INTR_MASK_M_ACTIVITY_FIELD_MASK 0x00000100ul
#define I2C_IC_INTR_MASK_M_ACTIVITY_GET(x) (((x) & 0x00000100ul) >> 8)
#define I2C_IC_INTR_MASK_M_ACTIVITY_SET(x) (((x) << 8) & 0x00000100ul)
#define I2C_IC_INTR_MASK_M_ACTIVITY_MODIFY(r, x) \
   ((((x) << 8) & 0x00000100ul) | ((r) & 0xfffffefful))
/* Field member: i2c::IC_INTR_MASK.M_RX_DONE                               */
#define I2C_IC_INTR_MASK_M_RX_DONE_MSB 7u
#define I2C_IC_INTR_MASK_M_RX_DONE_LSB 7u
#define I2C_IC_INTR_MASK_M_RX_DONE_WIDTH 1u
#define I2C_IC_INTR_MASK_M_RX_DONE_READ_ACCESS 1u
#define I2C_IC_INTR_MASK_M_RX_DONE_WRITE_ACCESS 1u
#define I2C_IC_INTR_MASK_M_RX_DONE_RESET 0x1u
#define I2C_IC_INTR_MASK_M_RX_DONE_FIELD_MASK 0x00000080ul
#define I2C_IC_INTR_MASK_M_RX_DONE_GET(x) (((x) & 0x00000080ul) >> 7)
#define I2C_IC_INTR_MASK_M_RX_DONE_SET(x) (((x) << 7) & 0x00000080ul)
#define I2C_IC_INTR_MASK_M_RX_DONE_MODIFY(r, x) \
   ((((x) << 7) & 0x00000080ul) | ((r) & 0xffffff7ful))
/* Field member: i2c::IC_INTR_MASK.M_TX_ABRT                               */
#define I2C_IC_INTR_MASK_M_TX_ABRT_MSB 6u
#define I2C_IC_INTR_MASK_M_TX_ABRT_LSB 6u
#define I2C_IC_INTR_MASK_M_TX_ABRT_WIDTH 1u
#define I2C_IC_INTR_MASK_M_TX_ABRT_READ_ACCESS 1u
#define I2C_IC_INTR_MASK_M_TX_ABRT_WRITE_ACCESS 1u
#define I2C_IC_INTR_MASK_M_TX_ABRT_RESET 0x1u
#define I2C_IC_INTR_MASK_M_TX_ABRT_FIELD_MASK 0x00000040ul
#define I2C_IC_INTR_MASK_M_TX_ABRT_GET(x) (((x) & 0x00000040ul) >> 6)
#define I2C_IC_INTR_MASK_M_TX_ABRT_SET(x) (((x) << 6) & 0x00000040ul)
#define I2C_IC_INTR_MASK_M_TX_ABRT_MODIFY(r, x) \
   ((((x) << 6) & 0x00000040ul) | ((r) & 0xffffffbful))
/* Field member: i2c::IC_INTR_MASK.M_RD_REQ                                */
#define I2C_IC_INTR_MASK_M_RD_REQ_MSB 5u
#define I2C_IC_INTR_MASK_M_RD_REQ_LSB 5u
#define I2C_IC_INTR_MASK_M_RD_REQ_WIDTH 1u
#define I2C_IC_INTR_MASK_M_RD_REQ_READ_ACCESS 1u
#define I2C_IC_INTR_MASK_M_RD_REQ_WRITE_ACCESS 1u
#define I2C_IC_INTR_MASK_M_RD_REQ_RESET 0x1u
#define I2C_IC_INTR_MASK_M_RD_REQ_FIELD_MASK 0x00000020ul
#define I2C_IC_INTR_MASK_M_RD_REQ_GET(x) (((x) & 0x00000020ul) >> 5)
#define I2C_IC_INTR_MASK_M_RD_REQ_SET(x) (((x) << 5) & 0x00000020ul)
#define I2C_IC_INTR_MASK_M_RD_REQ_MODIFY(r, x) \
   ((((x) << 5) & 0x00000020ul) | ((r) & 0xffffffdful))
/* Field member: i2c::IC_INTR_MASK.M_TX_EMPTY                              */
#define I2C_IC_INTR_MASK_M_TX_EMPTY_MSB 4u
#define I2C_IC_INTR_MASK_M_TX_EMPTY_LSB 4u
#define I2C_IC_INTR_MASK_M_TX_EMPTY_WIDTH 1u
#define I2C_IC_INTR_MASK_M_TX_EMPTY_READ_ACCESS 1u
#define I2C_IC_INTR_MASK_M_TX_EMPTY_WRITE_ACCESS 1u
#define I2C_IC_INTR_MASK_M_TX_EMPTY_RESET 0x1u
#define I2C_IC_INTR_MASK_M_TX_EMPTY_FIELD_MASK 0x00000010ul
#define I2C_IC_INTR_MASK_M_TX_EMPTY_GET(x) (((x) & 0x00000010ul) >> 4)
#define I2C_IC_INTR_MASK_M_TX_EMPTY_SET(x) (((x) << 4) & 0x00000010ul)
#define I2C_IC_INTR_MASK_M_TX_EMPTY_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010ul) | ((r) & 0xffffffeful))
/* Field member: i2c::IC_INTR_MASK.M_TX_OVER                               */
#define I2C_IC_INTR_MASK_M_TX_OVER_MSB 3u
#define I2C_IC_INTR_MASK_M_TX_OVER_LSB 3u
#define I2C_IC_INTR_MASK_M_TX_OVER_WIDTH 1u
#define I2C_IC_INTR_MASK_M_TX_OVER_READ_ACCESS 1u
#define I2C_IC_INTR_MASK_M_TX_OVER_WRITE_ACCESS 1u
#define I2C_IC_INTR_MASK_M_TX_OVER_RESET 0x1u
#define I2C_IC_INTR_MASK_M_TX_OVER_FIELD_MASK 0x00000008ul
#define I2C_IC_INTR_MASK_M_TX_OVER_GET(x) (((x) & 0x00000008ul) >> 3)
#define I2C_IC_INTR_MASK_M_TX_OVER_SET(x) (((x) << 3) & 0x00000008ul)
#define I2C_IC_INTR_MASK_M_TX_OVER_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: i2c::IC_INTR_MASK.M_RX_FULL                               */
#define I2C_IC_INTR_MASK_M_RX_FULL_MSB 2u
#define I2C_IC_INTR_MASK_M_RX_FULL_LSB 2u
#define I2C_IC_INTR_MASK_M_RX_FULL_WIDTH 1u
#define I2C_IC_INTR_MASK_M_RX_FULL_READ_ACCESS 1u
#define I2C_IC_INTR_MASK_M_RX_FULL_WRITE_ACCESS 1u
#define I2C_IC_INTR_MASK_M_RX_FULL_RESET 0x1u
#define I2C_IC_INTR_MASK_M_RX_FULL_FIELD_MASK 0x00000004ul
#define I2C_IC_INTR_MASK_M_RX_FULL_GET(x) (((x) & 0x00000004ul) >> 2)
#define I2C_IC_INTR_MASK_M_RX_FULL_SET(x) (((x) << 2) & 0x00000004ul)
#define I2C_IC_INTR_MASK_M_RX_FULL_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004ul) | ((r) & 0xfffffffbul))
/* Field member: i2c::IC_INTR_MASK.M_RX_OVER                               */
#define I2C_IC_INTR_MASK_M_RX_OVER_MSB 1u
#define I2C_IC_INTR_MASK_M_RX_OVER_LSB 1u
#define I2C_IC_INTR_MASK_M_RX_OVER_WIDTH 1u
#define I2C_IC_INTR_MASK_M_RX_OVER_READ_ACCESS 1u
#define I2C_IC_INTR_MASK_M_RX_OVER_WRITE_ACCESS 1u
#define I2C_IC_INTR_MASK_M_RX_OVER_RESET 0x1u
#define I2C_IC_INTR_MASK_M_RX_OVER_FIELD_MASK 0x00000002ul
#define I2C_IC_INTR_MASK_M_RX_OVER_GET(x) (((x) & 0x00000002ul) >> 1)
#define I2C_IC_INTR_MASK_M_RX_OVER_SET(x) (((x) << 1) & 0x00000002ul)
#define I2C_IC_INTR_MASK_M_RX_OVER_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: i2c::IC_INTR_MASK.M_RX_UNDER                              */
#define I2C_IC_INTR_MASK_M_RX_UNDER_MSB 0u
#define I2C_IC_INTR_MASK_M_RX_UNDER_LSB 0u
#define I2C_IC_INTR_MASK_M_RX_UNDER_WIDTH 1u
#define I2C_IC_INTR_MASK_M_RX_UNDER_READ_ACCESS 1u
#define I2C_IC_INTR_MASK_M_RX_UNDER_WRITE_ACCESS 1u
#define I2C_IC_INTR_MASK_M_RX_UNDER_RESET 0x1u
#define I2C_IC_INTR_MASK_M_RX_UNDER_FIELD_MASK 0x00000001ul
#define I2C_IC_INTR_MASK_M_RX_UNDER_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_INTR_MASK_M_RX_UNDER_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_INTR_MASK_M_RX_UNDER_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_RAW_INTR_STAT                                    */
/* Register template: i2c::IC_RAW_INTR_STAT                                */
/* Field member: i2c::IC_RAW_INTR_STAT.RSVD_IC_RAW_INTR_STAT               */
#define I2C_IC_RAW_INTR_STAT_RSVD_IC_RAW_INTR_STAT_MSB 31u
#define I2C_IC_RAW_INTR_STAT_RSVD_IC_RAW_INTR_STAT_LSB 15u
#define I2C_IC_RAW_INTR_STAT_RSVD_IC_RAW_INTR_STAT_WIDTH 17u
#define I2C_IC_RAW_INTR_STAT_RSVD_IC_RAW_INTR_STAT_READ_ACCESS 1u
#define I2C_IC_RAW_INTR_STAT_RSVD_IC_RAW_INTR_STAT_WRITE_ACCESS 0u
#define I2C_IC_RAW_INTR_STAT_RSVD_IC_RAW_INTR_STAT_FIELD_MASK 0xffff8000ul
#define I2C_IC_RAW_INTR_STAT_RSVD_IC_RAW_INTR_STAT_GET(x) \
   (((x) & 0xffff8000ul) >> 15)
#define I2C_IC_RAW_INTR_STAT_RSVD_IC_RAW_INTR_STAT_SET(x) \
   (((x) << 15) & 0xffff8000ul)
#define I2C_IC_RAW_INTR_STAT_RSVD_IC_RAW_INTR_STAT_MODIFY(r, x) \
   ((((x) << 15) & 0xffff8000ul) | ((r) & 0x00007ffful))
/* Field member: i2c::IC_RAW_INTR_STAT.SCL_STUCK_AT_LOW                    */
#define I2C_IC_RAW_INTR_STAT_SCL_STUCK_AT_LOW_MSB 14u
#define I2C_IC_RAW_INTR_STAT_SCL_STUCK_AT_LOW_LSB 14u
#define I2C_IC_RAW_INTR_STAT_SCL_STUCK_AT_LOW_WIDTH 1u
#define I2C_IC_RAW_INTR_STAT_SCL_STUCK_AT_LOW_READ_ACCESS 1u
#define I2C_IC_RAW_INTR_STAT_SCL_STUCK_AT_LOW_WRITE_ACCESS 0u
#define I2C_IC_RAW_INTR_STAT_SCL_STUCK_AT_LOW_RESET 0x0u
#define I2C_IC_RAW_INTR_STAT_SCL_STUCK_AT_LOW_FIELD_MASK 0x00004000ul
#define I2C_IC_RAW_INTR_STAT_SCL_STUCK_AT_LOW_GET(x) \
   (((x) & 0x00004000ul) >> 14)
#define I2C_IC_RAW_INTR_STAT_SCL_STUCK_AT_LOW_SET(x) \
   (((x) << 14) & 0x00004000ul)
#define I2C_IC_RAW_INTR_STAT_SCL_STUCK_AT_LOW_MODIFY(r, x) \
   ((((x) << 14) & 0x00004000ul) | ((r) & 0xffffbffful))
/* Field member: i2c::IC_RAW_INTR_STAT.MASTER_ON_HOLD                      */
#define I2C_IC_RAW_INTR_STAT_MASTER_ON_HOLD_MSB 13u
#define I2C_IC_RAW_INTR_STAT_MASTER_ON_HOLD_LSB 13u
#define I2C_IC_RAW_INTR_STAT_MASTER_ON_HOLD_WIDTH 1u
#define I2C_IC_RAW_INTR_STAT_MASTER_ON_HOLD_READ_ACCESS 1u
#define I2C_IC_RAW_INTR_STAT_MASTER_ON_HOLD_WRITE_ACCESS 0u
#define I2C_IC_RAW_INTR_STAT_MASTER_ON_HOLD_RESET 0x0u
#define I2C_IC_RAW_INTR_STAT_MASTER_ON_HOLD_FIELD_MASK 0x00002000ul
#define I2C_IC_RAW_INTR_STAT_MASTER_ON_HOLD_GET(x) \
   (((x) & 0x00002000ul) >> 13)
#define I2C_IC_RAW_INTR_STAT_MASTER_ON_HOLD_SET(x) \
   (((x) << 13) & 0x00002000ul)
#define I2C_IC_RAW_INTR_STAT_MASTER_ON_HOLD_MODIFY(r, x) \
   ((((x) << 13) & 0x00002000ul) | ((r) & 0xffffdffful))
/* Field member: i2c::IC_RAW_INTR_STAT.RESTART_DET                         */
#define I2C_IC_RAW_INTR_STAT_RESTART_DET_MSB 12u
#define I2C_IC_RAW_INTR_STAT_RESTART_DET_LSB 12u
#define I2C_IC_RAW_INTR_STAT_RESTART_DET_WIDTH 1u
#define I2C_IC_RAW_INTR_STAT_RESTART_DET_READ_ACCESS 1u
#define I2C_IC_RAW_INTR_STAT_RESTART_DET_WRITE_ACCESS 0u
#define I2C_IC_RAW_INTR_STAT_RESTART_DET_RESET 0x0u
#define I2C_IC_RAW_INTR_STAT_RESTART_DET_FIELD_MASK 0x00001000ul
#define I2C_IC_RAW_INTR_STAT_RESTART_DET_GET(x) (((x) & 0x00001000ul) >> 12)
#define I2C_IC_RAW_INTR_STAT_RESTART_DET_SET(x) \
   (((x) << 12) & 0x00001000ul)
#define I2C_IC_RAW_INTR_STAT_RESTART_DET_MODIFY(r, x) \
   ((((x) << 12) & 0x00001000ul) | ((r) & 0xffffeffful))
/* Field member: i2c::IC_RAW_INTR_STAT.GEN_CALL                            */
#define I2C_IC_RAW_INTR_STAT_GEN_CALL_MSB 11u
#define I2C_IC_RAW_INTR_STAT_GEN_CALL_LSB 11u
#define I2C_IC_RAW_INTR_STAT_GEN_CALL_WIDTH 1u
#define I2C_IC_RAW_INTR_STAT_GEN_CALL_READ_ACCESS 1u
#define I2C_IC_RAW_INTR_STAT_GEN_CALL_WRITE_ACCESS 0u
#define I2C_IC_RAW_INTR_STAT_GEN_CALL_RESET 0x0u
#define I2C_IC_RAW_INTR_STAT_GEN_CALL_FIELD_MASK 0x00000800ul
#define I2C_IC_RAW_INTR_STAT_GEN_CALL_GET(x) (((x) & 0x00000800ul) >> 11)
#define I2C_IC_RAW_INTR_STAT_GEN_CALL_SET(x) (((x) << 11) & 0x00000800ul)
#define I2C_IC_RAW_INTR_STAT_GEN_CALL_MODIFY(r, x) \
   ((((x) << 11) & 0x00000800ul) | ((r) & 0xfffff7fful))
/* Field member: i2c::IC_RAW_INTR_STAT.START_DET                           */
#define I2C_IC_RAW_INTR_STAT_START_DET_MSB 10u
#define I2C_IC_RAW_INTR_STAT_START_DET_LSB 10u
#define I2C_IC_RAW_INTR_STAT_START_DET_WIDTH 1u
#define I2C_IC_RAW_INTR_STAT_START_DET_READ_ACCESS 1u
#define I2C_IC_RAW_INTR_STAT_START_DET_WRITE_ACCESS 0u
#define I2C_IC_RAW_INTR_STAT_START_DET_RESET 0x0u
#define I2C_IC_RAW_INTR_STAT_START_DET_FIELD_MASK 0x00000400ul
#define I2C_IC_RAW_INTR_STAT_START_DET_GET(x) (((x) & 0x00000400ul) >> 10)
#define I2C_IC_RAW_INTR_STAT_START_DET_SET(x) (((x) << 10) & 0x00000400ul)
#define I2C_IC_RAW_INTR_STAT_START_DET_MODIFY(r, x) \
   ((((x) << 10) & 0x00000400ul) | ((r) & 0xfffffbfful))
/* Field member: i2c::IC_RAW_INTR_STAT.STOP_DET                            */
#define I2C_IC_RAW_INTR_STAT_STOP_DET_MSB 9u
#define I2C_IC_RAW_INTR_STAT_STOP_DET_LSB 9u
#define I2C_IC_RAW_INTR_STAT_STOP_DET_WIDTH 1u
#define I2C_IC_RAW_INTR_STAT_STOP_DET_READ_ACCESS 1u
#define I2C_IC_RAW_INTR_STAT_STOP_DET_WRITE_ACCESS 0u
#define I2C_IC_RAW_INTR_STAT_STOP_DET_RESET 0x0u
#define I2C_IC_RAW_INTR_STAT_STOP_DET_FIELD_MASK 0x00000200ul
#define I2C_IC_RAW_INTR_STAT_STOP_DET_GET(x) (((x) & 0x00000200ul) >> 9)
#define I2C_IC_RAW_INTR_STAT_STOP_DET_SET(x) (((x) << 9) & 0x00000200ul)
#define I2C_IC_RAW_INTR_STAT_STOP_DET_MODIFY(r, x) \
   ((((x) << 9) & 0x00000200ul) | ((r) & 0xfffffdfful))
/* Field member: i2c::IC_RAW_INTR_STAT.ACTIVITY                            */
#define I2C_IC_RAW_INTR_STAT_ACTIVITY_MSB 8u
#define I2C_IC_RAW_INTR_STAT_ACTIVITY_LSB 8u
#define I2C_IC_RAW_INTR_STAT_ACTIVITY_WIDTH 1u
#define I2C_IC_RAW_INTR_STAT_ACTIVITY_READ_ACCESS 1u
#define I2C_IC_RAW_INTR_STAT_ACTIVITY_WRITE_ACCESS 0u
#define I2C_IC_RAW_INTR_STAT_ACTIVITY_RESET 0x0u
#define I2C_IC_RAW_INTR_STAT_ACTIVITY_FIELD_MASK 0x00000100ul
#define I2C_IC_RAW_INTR_STAT_ACTIVITY_GET(x) (((x) & 0x00000100ul) >> 8)
#define I2C_IC_RAW_INTR_STAT_ACTIVITY_SET(x) (((x) << 8) & 0x00000100ul)
#define I2C_IC_RAW_INTR_STAT_ACTIVITY_MODIFY(r, x) \
   ((((x) << 8) & 0x00000100ul) | ((r) & 0xfffffefful))
/* Field member: i2c::IC_RAW_INTR_STAT.RX_DONE                             */
#define I2C_IC_RAW_INTR_STAT_RX_DONE_MSB 7u
#define I2C_IC_RAW_INTR_STAT_RX_DONE_LSB 7u
#define I2C_IC_RAW_INTR_STAT_RX_DONE_WIDTH 1u
#define I2C_IC_RAW_INTR_STAT_RX_DONE_READ_ACCESS 1u
#define I2C_IC_RAW_INTR_STAT_RX_DONE_WRITE_ACCESS 0u
#define I2C_IC_RAW_INTR_STAT_RX_DONE_RESET 0x0u
#define I2C_IC_RAW_INTR_STAT_RX_DONE_FIELD_MASK 0x00000080ul
#define I2C_IC_RAW_INTR_STAT_RX_DONE_GET(x) (((x) & 0x00000080ul) >> 7)
#define I2C_IC_RAW_INTR_STAT_RX_DONE_SET(x) (((x) << 7) & 0x00000080ul)
#define I2C_IC_RAW_INTR_STAT_RX_DONE_MODIFY(r, x) \
   ((((x) << 7) & 0x00000080ul) | ((r) & 0xffffff7ful))
/* Field member: i2c::IC_RAW_INTR_STAT.TX_ABRT                             */
#define I2C_IC_RAW_INTR_STAT_TX_ABRT_MSB 6u
#define I2C_IC_RAW_INTR_STAT_TX_ABRT_LSB 6u
#define I2C_IC_RAW_INTR_STAT_TX_ABRT_WIDTH 1u
#define I2C_IC_RAW_INTR_STAT_TX_ABRT_READ_ACCESS 1u
#define I2C_IC_RAW_INTR_STAT_TX_ABRT_WRITE_ACCESS 0u
#define I2C_IC_RAW_INTR_STAT_TX_ABRT_RESET 0x0u
#define I2C_IC_RAW_INTR_STAT_TX_ABRT_FIELD_MASK 0x00000040ul
#define I2C_IC_RAW_INTR_STAT_TX_ABRT_GET(x) (((x) & 0x00000040ul) >> 6)
#define I2C_IC_RAW_INTR_STAT_TX_ABRT_SET(x) (((x) << 6) & 0x00000040ul)
#define I2C_IC_RAW_INTR_STAT_TX_ABRT_MODIFY(r, x) \
   ((((x) << 6) & 0x00000040ul) | ((r) & 0xffffffbful))
/* Field member: i2c::IC_RAW_INTR_STAT.RD_REQ                              */
#define I2C_IC_RAW_INTR_STAT_RD_REQ_MSB 5u
#define I2C_IC_RAW_INTR_STAT_RD_REQ_LSB 5u
#define I2C_IC_RAW_INTR_STAT_RD_REQ_WIDTH 1u
#define I2C_IC_RAW_INTR_STAT_RD_REQ_READ_ACCESS 1u
#define I2C_IC_RAW_INTR_STAT_RD_REQ_WRITE_ACCESS 0u
#define I2C_IC_RAW_INTR_STAT_RD_REQ_RESET 0x0u
#define I2C_IC_RAW_INTR_STAT_RD_REQ_FIELD_MASK 0x00000020ul
#define I2C_IC_RAW_INTR_STAT_RD_REQ_GET(x) (((x) & 0x00000020ul) >> 5)
#define I2C_IC_RAW_INTR_STAT_RD_REQ_SET(x) (((x) << 5) & 0x00000020ul)
#define I2C_IC_RAW_INTR_STAT_RD_REQ_MODIFY(r, x) \
   ((((x) << 5) & 0x00000020ul) | ((r) & 0xffffffdful))
/* Field member: i2c::IC_RAW_INTR_STAT.TX_EMPTY                            */
#define I2C_IC_RAW_INTR_STAT_TX_EMPTY_MSB 4u
#define I2C_IC_RAW_INTR_STAT_TX_EMPTY_LSB 4u
#define I2C_IC_RAW_INTR_STAT_TX_EMPTY_WIDTH 1u
#define I2C_IC_RAW_INTR_STAT_TX_EMPTY_READ_ACCESS 1u
#define I2C_IC_RAW_INTR_STAT_TX_EMPTY_WRITE_ACCESS 0u
#define I2C_IC_RAW_INTR_STAT_TX_EMPTY_RESET 0x0u
#define I2C_IC_RAW_INTR_STAT_TX_EMPTY_FIELD_MASK 0x00000010ul
#define I2C_IC_RAW_INTR_STAT_TX_EMPTY_GET(x) (((x) & 0x00000010ul) >> 4)
#define I2C_IC_RAW_INTR_STAT_TX_EMPTY_SET(x) (((x) << 4) & 0x00000010ul)
#define I2C_IC_RAW_INTR_STAT_TX_EMPTY_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010ul) | ((r) & 0xffffffeful))
/* Field member: i2c::IC_RAW_INTR_STAT.TX_OVER                             */
#define I2C_IC_RAW_INTR_STAT_TX_OVER_MSB 3u
#define I2C_IC_RAW_INTR_STAT_TX_OVER_LSB 3u
#define I2C_IC_RAW_INTR_STAT_TX_OVER_WIDTH 1u
#define I2C_IC_RAW_INTR_STAT_TX_OVER_READ_ACCESS 1u
#define I2C_IC_RAW_INTR_STAT_TX_OVER_WRITE_ACCESS 0u
#define I2C_IC_RAW_INTR_STAT_TX_OVER_RESET 0x0u
#define I2C_IC_RAW_INTR_STAT_TX_OVER_FIELD_MASK 0x00000008ul
#define I2C_IC_RAW_INTR_STAT_TX_OVER_GET(x) (((x) & 0x00000008ul) >> 3)
#define I2C_IC_RAW_INTR_STAT_TX_OVER_SET(x) (((x) << 3) & 0x00000008ul)
#define I2C_IC_RAW_INTR_STAT_TX_OVER_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: i2c::IC_RAW_INTR_STAT.RX_FULL                             */
#define I2C_IC_RAW_INTR_STAT_RX_FULL_MSB 2u
#define I2C_IC_RAW_INTR_STAT_RX_FULL_LSB 2u
#define I2C_IC_RAW_INTR_STAT_RX_FULL_WIDTH 1u
#define I2C_IC_RAW_INTR_STAT_RX_FULL_READ_ACCESS 1u
#define I2C_IC_RAW_INTR_STAT_RX_FULL_WRITE_ACCESS 0u
#define I2C_IC_RAW_INTR_STAT_RX_FULL_RESET 0x0u
#define I2C_IC_RAW_INTR_STAT_RX_FULL_FIELD_MASK 0x00000004ul
#define I2C_IC_RAW_INTR_STAT_RX_FULL_GET(x) (((x) & 0x00000004ul) >> 2)
#define I2C_IC_RAW_INTR_STAT_RX_FULL_SET(x) (((x) << 2) & 0x00000004ul)
#define I2C_IC_RAW_INTR_STAT_RX_FULL_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004ul) | ((r) & 0xfffffffbul))
/* Field member: i2c::IC_RAW_INTR_STAT.RX_OVER                             */
#define I2C_IC_RAW_INTR_STAT_RX_OVER_MSB 1u
#define I2C_IC_RAW_INTR_STAT_RX_OVER_LSB 1u
#define I2C_IC_RAW_INTR_STAT_RX_OVER_WIDTH 1u
#define I2C_IC_RAW_INTR_STAT_RX_OVER_READ_ACCESS 1u
#define I2C_IC_RAW_INTR_STAT_RX_OVER_WRITE_ACCESS 0u
#define I2C_IC_RAW_INTR_STAT_RX_OVER_RESET 0x0u
#define I2C_IC_RAW_INTR_STAT_RX_OVER_FIELD_MASK 0x00000002ul
#define I2C_IC_RAW_INTR_STAT_RX_OVER_GET(x) (((x) & 0x00000002ul) >> 1)
#define I2C_IC_RAW_INTR_STAT_RX_OVER_SET(x) (((x) << 1) & 0x00000002ul)
#define I2C_IC_RAW_INTR_STAT_RX_OVER_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: i2c::IC_RAW_INTR_STAT.RX_UNDER                            */
#define I2C_IC_RAW_INTR_STAT_RX_UNDER_MSB 0u
#define I2C_IC_RAW_INTR_STAT_RX_UNDER_LSB 0u
#define I2C_IC_RAW_INTR_STAT_RX_UNDER_WIDTH 1u
#define I2C_IC_RAW_INTR_STAT_RX_UNDER_READ_ACCESS 1u
#define I2C_IC_RAW_INTR_STAT_RX_UNDER_WRITE_ACCESS 0u
#define I2C_IC_RAW_INTR_STAT_RX_UNDER_RESET 0x0u
#define I2C_IC_RAW_INTR_STAT_RX_UNDER_FIELD_MASK 0x00000001ul
#define I2C_IC_RAW_INTR_STAT_RX_UNDER_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_RAW_INTR_STAT_RX_UNDER_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_RAW_INTR_STAT_RX_UNDER_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_RX_TL                                            */
/* Register template: i2c::IC_RX_TL                                        */
/* Field member: i2c::IC_RX_TL.RSVD_IC_RX_TL                               */
#define I2C_IC_RX_TL_RSVD_IC_RX_TL_MSB 31u
#define I2C_IC_RX_TL_RSVD_IC_RX_TL_LSB 8u
#define I2C_IC_RX_TL_RSVD_IC_RX_TL_WIDTH 24u
#define I2C_IC_RX_TL_RSVD_IC_RX_TL_READ_ACCESS 1u
#define I2C_IC_RX_TL_RSVD_IC_RX_TL_WRITE_ACCESS 0u
#define I2C_IC_RX_TL_RSVD_IC_RX_TL_FIELD_MASK 0xffffff00ul
#define I2C_IC_RX_TL_RSVD_IC_RX_TL_GET(x) (((x) & 0xffffff00ul) >> 8)
#define I2C_IC_RX_TL_RSVD_IC_RX_TL_SET(x) (((x) << 8) & 0xffffff00ul)
#define I2C_IC_RX_TL_RSVD_IC_RX_TL_MODIFY(r, x) \
   ((((x) << 8) & 0xffffff00ul) | ((r) & 0x000000fful))
/* Field member: i2c::IC_RX_TL.RX_TL                                       */
#define I2C_IC_RX_TL_RX_TL_MSB 7u
#define I2C_IC_RX_TL_RX_TL_LSB 0u
#define I2C_IC_RX_TL_RX_TL_WIDTH 8u
#define I2C_IC_RX_TL_RX_TL_READ_ACCESS 1u
#define I2C_IC_RX_TL_RX_TL_WRITE_ACCESS 1u
#define I2C_IC_RX_TL_RX_TL_RESET 0x00u
#define I2C_IC_RX_TL_RX_TL_FIELD_MASK 0x000000fful
#define I2C_IC_RX_TL_RX_TL_GET(x) ((x) & 0x000000fful)
#define I2C_IC_RX_TL_RX_TL_SET(x) ((x) & 0x000000fful)
#define I2C_IC_RX_TL_RX_TL_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: i2c::IC_TX_TL                                            */
/* Register template: i2c::IC_TX_TL                                        */
/* Field member: i2c::IC_TX_TL.RSVD_IC_TX_TL                               */
#define I2C_IC_TX_TL_RSVD_IC_TX_TL_MSB 31u
#define I2C_IC_TX_TL_RSVD_IC_TX_TL_LSB 8u
#define I2C_IC_TX_TL_RSVD_IC_TX_TL_WIDTH 24u
#define I2C_IC_TX_TL_RSVD_IC_TX_TL_READ_ACCESS 1u
#define I2C_IC_TX_TL_RSVD_IC_TX_TL_WRITE_ACCESS 0u
#define I2C_IC_TX_TL_RSVD_IC_TX_TL_FIELD_MASK 0xffffff00ul
#define I2C_IC_TX_TL_RSVD_IC_TX_TL_GET(x) (((x) & 0xffffff00ul) >> 8)
#define I2C_IC_TX_TL_RSVD_IC_TX_TL_SET(x) (((x) << 8) & 0xffffff00ul)
#define I2C_IC_TX_TL_RSVD_IC_TX_TL_MODIFY(r, x) \
   ((((x) << 8) & 0xffffff00ul) | ((r) & 0x000000fful))
/* Field member: i2c::IC_TX_TL.TX_TL                                       */
#define I2C_IC_TX_TL_TX_TL_MSB 7u
#define I2C_IC_TX_TL_TX_TL_LSB 0u
#define I2C_IC_TX_TL_TX_TL_WIDTH 8u
#define I2C_IC_TX_TL_TX_TL_READ_ACCESS 1u
#define I2C_IC_TX_TL_TX_TL_WRITE_ACCESS 1u
#define I2C_IC_TX_TL_TX_TL_RESET 0x00u
#define I2C_IC_TX_TL_TX_TL_FIELD_MASK 0x000000fful
#define I2C_IC_TX_TL_TX_TL_GET(x) ((x) & 0x000000fful)
#define I2C_IC_TX_TL_TX_TL_SET(x) ((x) & 0x000000fful)
#define I2C_IC_TX_TL_TX_TL_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: i2c::IC_CLR_INTR                                         */
/* Register template: i2c::IC_CLR_INTR                                     */
/* Field member: i2c::IC_CLR_INTR.RSVD_IC_CLR_INTR                         */
#define I2C_IC_CLR_INTR_RSVD_IC_CLR_INTR_MSB 31u
#define I2C_IC_CLR_INTR_RSVD_IC_CLR_INTR_LSB 1u
#define I2C_IC_CLR_INTR_RSVD_IC_CLR_INTR_WIDTH 31u
#define I2C_IC_CLR_INTR_RSVD_IC_CLR_INTR_READ_ACCESS 1u
#define I2C_IC_CLR_INTR_RSVD_IC_CLR_INTR_WRITE_ACCESS 0u
#define I2C_IC_CLR_INTR_RSVD_IC_CLR_INTR_FIELD_MASK 0xfffffffeul
#define I2C_IC_CLR_INTR_RSVD_IC_CLR_INTR_GET(x) (((x) & 0xfffffffeul) >> 1)
#define I2C_IC_CLR_INTR_RSVD_IC_CLR_INTR_SET(x) (((x) << 1) & 0xfffffffeul)
#define I2C_IC_CLR_INTR_RSVD_IC_CLR_INTR_MODIFY(r, x) \
   ((((x) << 1) & 0xfffffffeul) | ((r) & 0x00000001ul))
/* Field member: i2c::IC_CLR_INTR.CLR_INTR                                 */
#define I2C_IC_CLR_INTR_CLR_INTR_MSB 0u
#define I2C_IC_CLR_INTR_CLR_INTR_LSB 0u
#define I2C_IC_CLR_INTR_CLR_INTR_WIDTH 1u
#define I2C_IC_CLR_INTR_CLR_INTR_READ_ACCESS 1u
#define I2C_IC_CLR_INTR_CLR_INTR_WRITE_ACCESS 0u
#define I2C_IC_CLR_INTR_CLR_INTR_RESET 0x0u
#define I2C_IC_CLR_INTR_CLR_INTR_FIELD_MASK 0x00000001ul
#define I2C_IC_CLR_INTR_CLR_INTR_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_INTR_CLR_INTR_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_INTR_CLR_INTR_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_CLR_RX_UNDER                                     */
/* Register template: i2c::IC_CLR_RX_UNDER                                 */
/* Field member: i2c::IC_CLR_RX_UNDER.RSVD_IC_CLR_RX_UNDER                 */
#define I2C_IC_CLR_RX_UNDER_RSVD_IC_CLR_RX_UNDER_MSB 31u
#define I2C_IC_CLR_RX_UNDER_RSVD_IC_CLR_RX_UNDER_LSB 1u
#define I2C_IC_CLR_RX_UNDER_RSVD_IC_CLR_RX_UNDER_WIDTH 31u
#define I2C_IC_CLR_RX_UNDER_RSVD_IC_CLR_RX_UNDER_READ_ACCESS 1u
#define I2C_IC_CLR_RX_UNDER_RSVD_IC_CLR_RX_UNDER_WRITE_ACCESS 0u
#define I2C_IC_CLR_RX_UNDER_RSVD_IC_CLR_RX_UNDER_FIELD_MASK 0xfffffffeul
#define I2C_IC_CLR_RX_UNDER_RSVD_IC_CLR_RX_UNDER_GET(x) \
   (((x) & 0xfffffffeul) >> 1)
#define I2C_IC_CLR_RX_UNDER_RSVD_IC_CLR_RX_UNDER_SET(x) \
   (((x) << 1) & 0xfffffffeul)
#define I2C_IC_CLR_RX_UNDER_RSVD_IC_CLR_RX_UNDER_MODIFY(r, x) \
   ((((x) << 1) & 0xfffffffeul) | ((r) & 0x00000001ul))
/* Field member: i2c::IC_CLR_RX_UNDER.CLR_RX_UNDER                         */
#define I2C_IC_CLR_RX_UNDER_CLR_RX_UNDER_MSB 0u
#define I2C_IC_CLR_RX_UNDER_CLR_RX_UNDER_LSB 0u
#define I2C_IC_CLR_RX_UNDER_CLR_RX_UNDER_WIDTH 1u
#define I2C_IC_CLR_RX_UNDER_CLR_RX_UNDER_READ_ACCESS 1u
#define I2C_IC_CLR_RX_UNDER_CLR_RX_UNDER_WRITE_ACCESS 0u
#define I2C_IC_CLR_RX_UNDER_CLR_RX_UNDER_RESET 0x0u
#define I2C_IC_CLR_RX_UNDER_CLR_RX_UNDER_FIELD_MASK 0x00000001ul
#define I2C_IC_CLR_RX_UNDER_CLR_RX_UNDER_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_RX_UNDER_CLR_RX_UNDER_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_RX_UNDER_CLR_RX_UNDER_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_CLR_RX_OVER                                      */
/* Register template: i2c::IC_CLR_RX_OVER                                  */
/* Field member: i2c::IC_CLR_RX_OVER.RSVD_IC_CLR_RX_OVER                   */
#define I2C_IC_CLR_RX_OVER_RSVD_IC_CLR_RX_OVER_MSB 31u
#define I2C_IC_CLR_RX_OVER_RSVD_IC_CLR_RX_OVER_LSB 1u
#define I2C_IC_CLR_RX_OVER_RSVD_IC_CLR_RX_OVER_WIDTH 31u
#define I2C_IC_CLR_RX_OVER_RSVD_IC_CLR_RX_OVER_READ_ACCESS 1u
#define I2C_IC_CLR_RX_OVER_RSVD_IC_CLR_RX_OVER_WRITE_ACCESS 0u
#define I2C_IC_CLR_RX_OVER_RSVD_IC_CLR_RX_OVER_FIELD_MASK 0xfffffffeul
#define I2C_IC_CLR_RX_OVER_RSVD_IC_CLR_RX_OVER_GET(x) \
   (((x) & 0xfffffffeul) >> 1)
#define I2C_IC_CLR_RX_OVER_RSVD_IC_CLR_RX_OVER_SET(x) \
   (((x) << 1) & 0xfffffffeul)
#define I2C_IC_CLR_RX_OVER_RSVD_IC_CLR_RX_OVER_MODIFY(r, x) \
   ((((x) << 1) & 0xfffffffeul) | ((r) & 0x00000001ul))
/* Field member: i2c::IC_CLR_RX_OVER.CLR_RX_OVER                           */
#define I2C_IC_CLR_RX_OVER_CLR_RX_OVER_MSB 0u
#define I2C_IC_CLR_RX_OVER_CLR_RX_OVER_LSB 0u
#define I2C_IC_CLR_RX_OVER_CLR_RX_OVER_WIDTH 1u
#define I2C_IC_CLR_RX_OVER_CLR_RX_OVER_READ_ACCESS 1u
#define I2C_IC_CLR_RX_OVER_CLR_RX_OVER_WRITE_ACCESS 0u
#define I2C_IC_CLR_RX_OVER_CLR_RX_OVER_RESET 0x0u
#define I2C_IC_CLR_RX_OVER_CLR_RX_OVER_FIELD_MASK 0x00000001ul
#define I2C_IC_CLR_RX_OVER_CLR_RX_OVER_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_RX_OVER_CLR_RX_OVER_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_RX_OVER_CLR_RX_OVER_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_CLR_TX_OVER                                      */
/* Register template: i2c::IC_CLR_TX_OVER                                  */
/* Field member: i2c::IC_CLR_TX_OVER.RSVD_IC_CLR_TX_OVER                   */
#define I2C_IC_CLR_TX_OVER_RSVD_IC_CLR_TX_OVER_MSB 31u
#define I2C_IC_CLR_TX_OVER_RSVD_IC_CLR_TX_OVER_LSB 1u
#define I2C_IC_CLR_TX_OVER_RSVD_IC_CLR_TX_OVER_WIDTH 31u
#define I2C_IC_CLR_TX_OVER_RSVD_IC_CLR_TX_OVER_READ_ACCESS 1u
#define I2C_IC_CLR_TX_OVER_RSVD_IC_CLR_TX_OVER_WRITE_ACCESS 0u
#define I2C_IC_CLR_TX_OVER_RSVD_IC_CLR_TX_OVER_FIELD_MASK 0xfffffffeul
#define I2C_IC_CLR_TX_OVER_RSVD_IC_CLR_TX_OVER_GET(x) \
   (((x) & 0xfffffffeul) >> 1)
#define I2C_IC_CLR_TX_OVER_RSVD_IC_CLR_TX_OVER_SET(x) \
   (((x) << 1) & 0xfffffffeul)
#define I2C_IC_CLR_TX_OVER_RSVD_IC_CLR_TX_OVER_MODIFY(r, x) \
   ((((x) << 1) & 0xfffffffeul) | ((r) & 0x00000001ul))
/* Field member: i2c::IC_CLR_TX_OVER.CLR_TX_OVER                           */
#define I2C_IC_CLR_TX_OVER_CLR_TX_OVER_MSB 0u
#define I2C_IC_CLR_TX_OVER_CLR_TX_OVER_LSB 0u
#define I2C_IC_CLR_TX_OVER_CLR_TX_OVER_WIDTH 1u
#define I2C_IC_CLR_TX_OVER_CLR_TX_OVER_READ_ACCESS 1u
#define I2C_IC_CLR_TX_OVER_CLR_TX_OVER_WRITE_ACCESS 0u
#define I2C_IC_CLR_TX_OVER_CLR_TX_OVER_RESET 0x0u
#define I2C_IC_CLR_TX_OVER_CLR_TX_OVER_FIELD_MASK 0x00000001ul
#define I2C_IC_CLR_TX_OVER_CLR_TX_OVER_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_TX_OVER_CLR_TX_OVER_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_TX_OVER_CLR_TX_OVER_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_CLR_RD_REQ                                       */
/* Register template: i2c::IC_CLR_RD_REQ                                   */
/* Field member: i2c::IC_CLR_RD_REQ.RSVD_IC_CLR_RD_REQ                     */
#define I2C_IC_CLR_RD_REQ_RSVD_IC_CLR_RD_REQ_MSB 31u
#define I2C_IC_CLR_RD_REQ_RSVD_IC_CLR_RD_REQ_LSB 1u
#define I2C_IC_CLR_RD_REQ_RSVD_IC_CLR_RD_REQ_WIDTH 31u
#define I2C_IC_CLR_RD_REQ_RSVD_IC_CLR_RD_REQ_READ_ACCESS 1u
#define I2C_IC_CLR_RD_REQ_RSVD_IC_CLR_RD_REQ_WRITE_ACCESS 0u
#define I2C_IC_CLR_RD_REQ_RSVD_IC_CLR_RD_REQ_FIELD_MASK 0xfffffffeul
#define I2C_IC_CLR_RD_REQ_RSVD_IC_CLR_RD_REQ_GET(x) \
   (((x) & 0xfffffffeul) >> 1)
#define I2C_IC_CLR_RD_REQ_RSVD_IC_CLR_RD_REQ_SET(x) \
   (((x) << 1) & 0xfffffffeul)
#define I2C_IC_CLR_RD_REQ_RSVD_IC_CLR_RD_REQ_MODIFY(r, x) \
   ((((x) << 1) & 0xfffffffeul) | ((r) & 0x00000001ul))
/* Field member: i2c::IC_CLR_RD_REQ.CLR_RD_REQ                             */
#define I2C_IC_CLR_RD_REQ_CLR_RD_REQ_MSB 0u
#define I2C_IC_CLR_RD_REQ_CLR_RD_REQ_LSB 0u
#define I2C_IC_CLR_RD_REQ_CLR_RD_REQ_WIDTH 1u
#define I2C_IC_CLR_RD_REQ_CLR_RD_REQ_READ_ACCESS 1u
#define I2C_IC_CLR_RD_REQ_CLR_RD_REQ_WRITE_ACCESS 0u
#define I2C_IC_CLR_RD_REQ_CLR_RD_REQ_RESET 0x0u
#define I2C_IC_CLR_RD_REQ_CLR_RD_REQ_FIELD_MASK 0x00000001ul
#define I2C_IC_CLR_RD_REQ_CLR_RD_REQ_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_RD_REQ_CLR_RD_REQ_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_RD_REQ_CLR_RD_REQ_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_CLR_TX_ABRT                                      */
/* Register template: i2c::IC_CLR_TX_ABRT                                  */
/* Field member: i2c::IC_CLR_TX_ABRT.RSVD_IC_CLR_TX_ABRT                   */
#define I2C_IC_CLR_TX_ABRT_RSVD_IC_CLR_TX_ABRT_MSB 31u
#define I2C_IC_CLR_TX_ABRT_RSVD_IC_CLR_TX_ABRT_LSB 1u
#define I2C_IC_CLR_TX_ABRT_RSVD_IC_CLR_TX_ABRT_WIDTH 31u
#define I2C_IC_CLR_TX_ABRT_RSVD_IC_CLR_TX_ABRT_READ_ACCESS 1u
#define I2C_IC_CLR_TX_ABRT_RSVD_IC_CLR_TX_ABRT_WRITE_ACCESS 0u
#define I2C_IC_CLR_TX_ABRT_RSVD_IC_CLR_TX_ABRT_RESET 0x00000000ul
#define I2C_IC_CLR_TX_ABRT_RSVD_IC_CLR_TX_ABRT_FIELD_MASK 0xfffffffeul
#define I2C_IC_CLR_TX_ABRT_RSVD_IC_CLR_TX_ABRT_GET(x) \
   (((x) & 0xfffffffeul) >> 1)
#define I2C_IC_CLR_TX_ABRT_RSVD_IC_CLR_TX_ABRT_SET(x) \
   (((x) << 1) & 0xfffffffeul)
#define I2C_IC_CLR_TX_ABRT_RSVD_IC_CLR_TX_ABRT_MODIFY(r, x) \
   ((((x) << 1) & 0xfffffffeul) | ((r) & 0x00000001ul))
/* Field member: i2c::IC_CLR_TX_ABRT.CLR_TX_ABRT                           */
#define I2C_IC_CLR_TX_ABRT_CLR_TX_ABRT_MSB 0u
#define I2C_IC_CLR_TX_ABRT_CLR_TX_ABRT_LSB 0u
#define I2C_IC_CLR_TX_ABRT_CLR_TX_ABRT_WIDTH 1u
#define I2C_IC_CLR_TX_ABRT_CLR_TX_ABRT_READ_ACCESS 1u
#define I2C_IC_CLR_TX_ABRT_CLR_TX_ABRT_WRITE_ACCESS 0u
#define I2C_IC_CLR_TX_ABRT_CLR_TX_ABRT_RESET 0x0u
#define I2C_IC_CLR_TX_ABRT_CLR_TX_ABRT_FIELD_MASK 0x00000001ul
#define I2C_IC_CLR_TX_ABRT_CLR_TX_ABRT_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_TX_ABRT_CLR_TX_ABRT_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_TX_ABRT_CLR_TX_ABRT_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_CLR_RX_DONE                                      */
/* Register template: i2c::IC_CLR_RX_DONE                                  */
/* Field member: i2c::IC_CLR_RX_DONE.RSVD_IC_CLR_RX_DONE                   */
#define I2C_IC_CLR_RX_DONE_RSVD_IC_CLR_RX_DONE_MSB 31u
#define I2C_IC_CLR_RX_DONE_RSVD_IC_CLR_RX_DONE_LSB 1u
#define I2C_IC_CLR_RX_DONE_RSVD_IC_CLR_RX_DONE_WIDTH 31u
#define I2C_IC_CLR_RX_DONE_RSVD_IC_CLR_RX_DONE_READ_ACCESS 1u
#define I2C_IC_CLR_RX_DONE_RSVD_IC_CLR_RX_DONE_WRITE_ACCESS 0u
#define I2C_IC_CLR_RX_DONE_RSVD_IC_CLR_RX_DONE_FIELD_MASK 0xfffffffeul
#define I2C_IC_CLR_RX_DONE_RSVD_IC_CLR_RX_DONE_GET(x) \
   (((x) & 0xfffffffeul) >> 1)
#define I2C_IC_CLR_RX_DONE_RSVD_IC_CLR_RX_DONE_SET(x) \
   (((x) << 1) & 0xfffffffeul)
#define I2C_IC_CLR_RX_DONE_RSVD_IC_CLR_RX_DONE_MODIFY(r, x) \
   ((((x) << 1) & 0xfffffffeul) | ((r) & 0x00000001ul))
/* Field member: i2c::IC_CLR_RX_DONE.CLR_RX_DONE                           */
#define I2C_IC_CLR_RX_DONE_CLR_RX_DONE_MSB 0u
#define I2C_IC_CLR_RX_DONE_CLR_RX_DONE_LSB 0u
#define I2C_IC_CLR_RX_DONE_CLR_RX_DONE_WIDTH 1u
#define I2C_IC_CLR_RX_DONE_CLR_RX_DONE_READ_ACCESS 1u
#define I2C_IC_CLR_RX_DONE_CLR_RX_DONE_WRITE_ACCESS 0u
#define I2C_IC_CLR_RX_DONE_CLR_RX_DONE_RESET 0x0u
#define I2C_IC_CLR_RX_DONE_CLR_RX_DONE_FIELD_MASK 0x00000001ul
#define I2C_IC_CLR_RX_DONE_CLR_RX_DONE_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_RX_DONE_CLR_RX_DONE_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_RX_DONE_CLR_RX_DONE_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_CLR_ACTIVITY                                     */
/* Register template: i2c::IC_CLR_ACTIVITY                                 */
/* Field member: i2c::IC_CLR_ACTIVITY.RSVD_IC_CLR_ACTIVITY                 */
#define I2C_IC_CLR_ACTIVITY_RSVD_IC_CLR_ACTIVITY_MSB 31u
#define I2C_IC_CLR_ACTIVITY_RSVD_IC_CLR_ACTIVITY_LSB 1u
#define I2C_IC_CLR_ACTIVITY_RSVD_IC_CLR_ACTIVITY_WIDTH 31u
#define I2C_IC_CLR_ACTIVITY_RSVD_IC_CLR_ACTIVITY_READ_ACCESS 1u
#define I2C_IC_CLR_ACTIVITY_RSVD_IC_CLR_ACTIVITY_WRITE_ACCESS 0u
#define I2C_IC_CLR_ACTIVITY_RSVD_IC_CLR_ACTIVITY_FIELD_MASK 0xfffffffeul
#define I2C_IC_CLR_ACTIVITY_RSVD_IC_CLR_ACTIVITY_GET(x) \
   (((x) & 0xfffffffeul) >> 1)
#define I2C_IC_CLR_ACTIVITY_RSVD_IC_CLR_ACTIVITY_SET(x) \
   (((x) << 1) & 0xfffffffeul)
#define I2C_IC_CLR_ACTIVITY_RSVD_IC_CLR_ACTIVITY_MODIFY(r, x) \
   ((((x) << 1) & 0xfffffffeul) | ((r) & 0x00000001ul))
/* Field member: i2c::IC_CLR_ACTIVITY.CLR_ACTIVITY                         */
#define I2C_IC_CLR_ACTIVITY_CLR_ACTIVITY_MSB 0u
#define I2C_IC_CLR_ACTIVITY_CLR_ACTIVITY_LSB 0u
#define I2C_IC_CLR_ACTIVITY_CLR_ACTIVITY_WIDTH 1u
#define I2C_IC_CLR_ACTIVITY_CLR_ACTIVITY_READ_ACCESS 1u
#define I2C_IC_CLR_ACTIVITY_CLR_ACTIVITY_WRITE_ACCESS 0u
#define I2C_IC_CLR_ACTIVITY_CLR_ACTIVITY_RESET 0x0u
#define I2C_IC_CLR_ACTIVITY_CLR_ACTIVITY_FIELD_MASK 0x00000001ul
#define I2C_IC_CLR_ACTIVITY_CLR_ACTIVITY_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_ACTIVITY_CLR_ACTIVITY_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_ACTIVITY_CLR_ACTIVITY_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_CLR_STOP_DET                                     */
/* Register template: i2c::IC_CLR_STOP_DET                                 */
/* Field member: i2c::IC_CLR_STOP_DET.RSVD_IC_CLR_STOP_DET                 */
#define I2C_IC_CLR_STOP_DET_RSVD_IC_CLR_STOP_DET_MSB 31u
#define I2C_IC_CLR_STOP_DET_RSVD_IC_CLR_STOP_DET_LSB 1u
#define I2C_IC_CLR_STOP_DET_RSVD_IC_CLR_STOP_DET_WIDTH 31u
#define I2C_IC_CLR_STOP_DET_RSVD_IC_CLR_STOP_DET_READ_ACCESS 1u
#define I2C_IC_CLR_STOP_DET_RSVD_IC_CLR_STOP_DET_WRITE_ACCESS 0u
#define I2C_IC_CLR_STOP_DET_RSVD_IC_CLR_STOP_DET_FIELD_MASK 0xfffffffeul
#define I2C_IC_CLR_STOP_DET_RSVD_IC_CLR_STOP_DET_GET(x) \
   (((x) & 0xfffffffeul) >> 1)
#define I2C_IC_CLR_STOP_DET_RSVD_IC_CLR_STOP_DET_SET(x) \
   (((x) << 1) & 0xfffffffeul)
#define I2C_IC_CLR_STOP_DET_RSVD_IC_CLR_STOP_DET_MODIFY(r, x) \
   ((((x) << 1) & 0xfffffffeul) | ((r) & 0x00000001ul))
/* Field member: i2c::IC_CLR_STOP_DET.CLR_STOP_DET                         */
#define I2C_IC_CLR_STOP_DET_CLR_STOP_DET_MSB 0u
#define I2C_IC_CLR_STOP_DET_CLR_STOP_DET_LSB 0u
#define I2C_IC_CLR_STOP_DET_CLR_STOP_DET_WIDTH 1u
#define I2C_IC_CLR_STOP_DET_CLR_STOP_DET_READ_ACCESS 1u
#define I2C_IC_CLR_STOP_DET_CLR_STOP_DET_WRITE_ACCESS 0u
#define I2C_IC_CLR_STOP_DET_CLR_STOP_DET_RESET 0x0u
#define I2C_IC_CLR_STOP_DET_CLR_STOP_DET_FIELD_MASK 0x00000001ul
#define I2C_IC_CLR_STOP_DET_CLR_STOP_DET_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_STOP_DET_CLR_STOP_DET_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_STOP_DET_CLR_STOP_DET_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_CLR_START_DET                                    */
/* Register template: i2c::IC_CLR_START_DET                                */
/* Field member: i2c::IC_CLR_START_DET.RSVD_IC_CLR_START_DET               */
#define I2C_IC_CLR_START_DET_RSVD_IC_CLR_START_DET_MSB 31u
#define I2C_IC_CLR_START_DET_RSVD_IC_CLR_START_DET_LSB 1u
#define I2C_IC_CLR_START_DET_RSVD_IC_CLR_START_DET_WIDTH 31u
#define I2C_IC_CLR_START_DET_RSVD_IC_CLR_START_DET_READ_ACCESS 1u
#define I2C_IC_CLR_START_DET_RSVD_IC_CLR_START_DET_WRITE_ACCESS 0u
#define I2C_IC_CLR_START_DET_RSVD_IC_CLR_START_DET_FIELD_MASK 0xfffffffeul
#define I2C_IC_CLR_START_DET_RSVD_IC_CLR_START_DET_GET(x) \
   (((x) & 0xfffffffeul) >> 1)
#define I2C_IC_CLR_START_DET_RSVD_IC_CLR_START_DET_SET(x) \
   (((x) << 1) & 0xfffffffeul)
#define I2C_IC_CLR_START_DET_RSVD_IC_CLR_START_DET_MODIFY(r, x) \
   ((((x) << 1) & 0xfffffffeul) | ((r) & 0x00000001ul))
/* Field member: i2c::IC_CLR_START_DET.CLR_START_DET                       */
#define I2C_IC_CLR_START_DET_CLR_START_DET_MSB 0u
#define I2C_IC_CLR_START_DET_CLR_START_DET_LSB 0u
#define I2C_IC_CLR_START_DET_CLR_START_DET_WIDTH 1u
#define I2C_IC_CLR_START_DET_CLR_START_DET_READ_ACCESS 1u
#define I2C_IC_CLR_START_DET_CLR_START_DET_WRITE_ACCESS 0u
#define I2C_IC_CLR_START_DET_CLR_START_DET_RESET 0x0u
#define I2C_IC_CLR_START_DET_CLR_START_DET_FIELD_MASK 0x00000001ul
#define I2C_IC_CLR_START_DET_CLR_START_DET_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_START_DET_CLR_START_DET_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_START_DET_CLR_START_DET_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_CLR_GEN_CALL                                     */
/* Register template: i2c::IC_CLR_GEN_CALL                                 */
/* Field member: i2c::IC_CLR_GEN_CALL.RSVD_IC_CLR_GEN_CALL                 */
#define I2C_IC_CLR_GEN_CALL_RSVD_IC_CLR_GEN_CALL_MSB 31u
#define I2C_IC_CLR_GEN_CALL_RSVD_IC_CLR_GEN_CALL_LSB 1u
#define I2C_IC_CLR_GEN_CALL_RSVD_IC_CLR_GEN_CALL_WIDTH 31u
#define I2C_IC_CLR_GEN_CALL_RSVD_IC_CLR_GEN_CALL_READ_ACCESS 1u
#define I2C_IC_CLR_GEN_CALL_RSVD_IC_CLR_GEN_CALL_WRITE_ACCESS 0u
#define I2C_IC_CLR_GEN_CALL_RSVD_IC_CLR_GEN_CALL_FIELD_MASK 0xfffffffeul
#define I2C_IC_CLR_GEN_CALL_RSVD_IC_CLR_GEN_CALL_GET(x) \
   (((x) & 0xfffffffeul) >> 1)
#define I2C_IC_CLR_GEN_CALL_RSVD_IC_CLR_GEN_CALL_SET(x) \
   (((x) << 1) & 0xfffffffeul)
#define I2C_IC_CLR_GEN_CALL_RSVD_IC_CLR_GEN_CALL_MODIFY(r, x) \
   ((((x) << 1) & 0xfffffffeul) | ((r) & 0x00000001ul))
/* Field member: i2c::IC_CLR_GEN_CALL.CLR_GEN_CALL                         */
#define I2C_IC_CLR_GEN_CALL_CLR_GEN_CALL_MSB 0u
#define I2C_IC_CLR_GEN_CALL_CLR_GEN_CALL_LSB 0u
#define I2C_IC_CLR_GEN_CALL_CLR_GEN_CALL_WIDTH 1u
#define I2C_IC_CLR_GEN_CALL_CLR_GEN_CALL_READ_ACCESS 1u
#define I2C_IC_CLR_GEN_CALL_CLR_GEN_CALL_WRITE_ACCESS 0u
#define I2C_IC_CLR_GEN_CALL_CLR_GEN_CALL_RESET 0x0u
#define I2C_IC_CLR_GEN_CALL_CLR_GEN_CALL_FIELD_MASK 0x00000001ul
#define I2C_IC_CLR_GEN_CALL_CLR_GEN_CALL_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_GEN_CALL_CLR_GEN_CALL_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_CLR_GEN_CALL_CLR_GEN_CALL_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_ENABLE                                           */
/* Register template: i2c::IC_ENABLE                                       */
/* Field member: i2c::IC_ENABLE.RSVD_IC_ENABLE_2                           */
#define I2C_IC_ENABLE_RSVD_IC_ENABLE_2_MSB 31u
#define I2C_IC_ENABLE_RSVD_IC_ENABLE_2_LSB 19u
#define I2C_IC_ENABLE_RSVD_IC_ENABLE_2_WIDTH 13u
#define I2C_IC_ENABLE_RSVD_IC_ENABLE_2_READ_ACCESS 1u
#define I2C_IC_ENABLE_RSVD_IC_ENABLE_2_WRITE_ACCESS 0u
#define I2C_IC_ENABLE_RSVD_IC_ENABLE_2_FIELD_MASK 0xfff80000ul
#define I2C_IC_ENABLE_RSVD_IC_ENABLE_2_GET(x) (((x) & 0xfff80000ul) >> 19)
#define I2C_IC_ENABLE_RSVD_IC_ENABLE_2_SET(x) (((x) << 19) & 0xfff80000ul)
#define I2C_IC_ENABLE_RSVD_IC_ENABLE_2_MODIFY(r, x) \
   ((((x) << 19) & 0xfff80000ul) | ((r) & 0x0007fffful))
/* Field member: i2c::IC_ENABLE.RSVD_SMBUS_ALERT_EN                        */
#define I2C_IC_ENABLE_RSVD_SMBUS_ALERT_EN_MSB 18u
#define I2C_IC_ENABLE_RSVD_SMBUS_ALERT_EN_LSB 18u
#define I2C_IC_ENABLE_RSVD_SMBUS_ALERT_EN_WIDTH 1u
#define I2C_IC_ENABLE_RSVD_SMBUS_ALERT_EN_READ_ACCESS 1u
#define I2C_IC_ENABLE_RSVD_SMBUS_ALERT_EN_WRITE_ACCESS 0u
#define I2C_IC_ENABLE_RSVD_SMBUS_ALERT_EN_FIELD_MASK 0x00040000ul
#define I2C_IC_ENABLE_RSVD_SMBUS_ALERT_EN_GET(x) (((x) & 0x00040000ul) >> 18)
#define I2C_IC_ENABLE_RSVD_SMBUS_ALERT_EN_SET(x) \
   (((x) << 18) & 0x00040000ul)
#define I2C_IC_ENABLE_RSVD_SMBUS_ALERT_EN_MODIFY(r, x) \
   ((((x) << 18) & 0x00040000ul) | ((r) & 0xfffbfffful))
/* Field member: i2c::IC_ENABLE.RSVD_SMBUS_SUSPEND_EN                      */
#define I2C_IC_ENABLE_RSVD_SMBUS_SUSPEND_EN_MSB 17u
#define I2C_IC_ENABLE_RSVD_SMBUS_SUSPEND_EN_LSB 17u
#define I2C_IC_ENABLE_RSVD_SMBUS_SUSPEND_EN_WIDTH 1u
#define I2C_IC_ENABLE_RSVD_SMBUS_SUSPEND_EN_READ_ACCESS 1u
#define I2C_IC_ENABLE_RSVD_SMBUS_SUSPEND_EN_WRITE_ACCESS 0u
#define I2C_IC_ENABLE_RSVD_SMBUS_SUSPEND_EN_FIELD_MASK 0x00020000ul
#define I2C_IC_ENABLE_RSVD_SMBUS_SUSPEND_EN_GET(x) \
   (((x) & 0x00020000ul) >> 17)
#define I2C_IC_ENABLE_RSVD_SMBUS_SUSPEND_EN_SET(x) \
   (((x) << 17) & 0x00020000ul)
#define I2C_IC_ENABLE_RSVD_SMBUS_SUSPEND_EN_MODIFY(r, x) \
   ((((x) << 17) & 0x00020000ul) | ((r) & 0xfffdfffful))
/* Field member: i2c::IC_ENABLE.SMBUS_CLK_RESET                            */
#define I2C_IC_ENABLE_SMBUS_CLK_RESET_MSB 16u
#define I2C_IC_ENABLE_SMBUS_CLK_RESET_LSB 16u
#define I2C_IC_ENABLE_SMBUS_CLK_RESET_WIDTH 1u
#define I2C_IC_ENABLE_SMBUS_CLK_RESET_READ_ACCESS 1u
#define I2C_IC_ENABLE_SMBUS_CLK_RESET_WRITE_ACCESS 1u
#define I2C_IC_ENABLE_SMBUS_CLK_RESET_RESET 0x0u
#define I2C_IC_ENABLE_SMBUS_CLK_RESET_FIELD_MASK 0x00010000ul
#define I2C_IC_ENABLE_SMBUS_CLK_RESET_GET(x) (((x) & 0x00010000ul) >> 16)
#define I2C_IC_ENABLE_SMBUS_CLK_RESET_SET(x) (((x) << 16) & 0x00010000ul)
#define I2C_IC_ENABLE_SMBUS_CLK_RESET_MODIFY(r, x) \
   ((((x) << 16) & 0x00010000ul) | ((r) & 0xfffefffful))
/* Field member: i2c::IC_ENABLE.RSVD_IC_ENABLE_1                           */
#define I2C_IC_ENABLE_RSVD_IC_ENABLE_1_MSB 15u
#define I2C_IC_ENABLE_RSVD_IC_ENABLE_1_LSB 4u
#define I2C_IC_ENABLE_RSVD_IC_ENABLE_1_WIDTH 12u
#define I2C_IC_ENABLE_RSVD_IC_ENABLE_1_READ_ACCESS 1u
#define I2C_IC_ENABLE_RSVD_IC_ENABLE_1_WRITE_ACCESS 0u
#define I2C_IC_ENABLE_RSVD_IC_ENABLE_1_FIELD_MASK 0x0000fff0ul
#define I2C_IC_ENABLE_RSVD_IC_ENABLE_1_GET(x) (((x) & 0x0000fff0ul) >> 4)
#define I2C_IC_ENABLE_RSVD_IC_ENABLE_1_SET(x) (((x) << 4) & 0x0000fff0ul)
#define I2C_IC_ENABLE_RSVD_IC_ENABLE_1_MODIFY(r, x) \
   ((((x) << 4) & 0x0000fff0ul) | ((r) & 0xffff000ful))
/* Field member: i2c::IC_ENABLE.SDA_STUCK_RECOVERY_ENABLE                  */
#define I2C_IC_ENABLE_SDA_STUCK_RECOVERY_ENABLE_MSB 3u
#define I2C_IC_ENABLE_SDA_STUCK_RECOVERY_ENABLE_LSB 3u
#define I2C_IC_ENABLE_SDA_STUCK_RECOVERY_ENABLE_WIDTH 1u
#define I2C_IC_ENABLE_SDA_STUCK_RECOVERY_ENABLE_READ_ACCESS 1u
#define I2C_IC_ENABLE_SDA_STUCK_RECOVERY_ENABLE_WRITE_ACCESS 1u
#define I2C_IC_ENABLE_SDA_STUCK_RECOVERY_ENABLE_RESET 0x0u
#define I2C_IC_ENABLE_SDA_STUCK_RECOVERY_ENABLE_FIELD_MASK 0x00000008ul
#define I2C_IC_ENABLE_SDA_STUCK_RECOVERY_ENABLE_GET(x) \
   (((x) & 0x00000008ul) >> 3)
#define I2C_IC_ENABLE_SDA_STUCK_RECOVERY_ENABLE_SET(x) \
   (((x) << 3) & 0x00000008ul)
#define I2C_IC_ENABLE_SDA_STUCK_RECOVERY_ENABLE_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: i2c::IC_ENABLE.TX_CMD_BLOCK                               */
#define I2C_IC_ENABLE_TX_CMD_BLOCK_MSB 2u
#define I2C_IC_ENABLE_TX_CMD_BLOCK_LSB 2u
#define I2C_IC_ENABLE_TX_CMD_BLOCK_WIDTH 1u
#define I2C_IC_ENABLE_TX_CMD_BLOCK_READ_ACCESS 1u
#define I2C_IC_ENABLE_TX_CMD_BLOCK_WRITE_ACCESS 1u
#define I2C_IC_ENABLE_TX_CMD_BLOCK_RESET 0x0u
#define I2C_IC_ENABLE_TX_CMD_BLOCK_FIELD_MASK 0x00000004ul
#define I2C_IC_ENABLE_TX_CMD_BLOCK_GET(x) (((x) & 0x00000004ul) >> 2)
#define I2C_IC_ENABLE_TX_CMD_BLOCK_SET(x) (((x) << 2) & 0x00000004ul)
#define I2C_IC_ENABLE_TX_CMD_BLOCK_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004ul) | ((r) & 0xfffffffbul))
/* Field member: i2c::IC_ENABLE.ABORT                                      */
#define I2C_IC_ENABLE_ABORT_MSB 1u
#define I2C_IC_ENABLE_ABORT_LSB 1u
#define I2C_IC_ENABLE_ABORT_WIDTH 1u
#define I2C_IC_ENABLE_ABORT_READ_ACCESS 1u
#define I2C_IC_ENABLE_ABORT_WRITE_ACCESS 1u
#define I2C_IC_ENABLE_ABORT_RESET 0x0u
#define I2C_IC_ENABLE_ABORT_FIELD_MASK 0x00000002ul
#define I2C_IC_ENABLE_ABORT_GET(x) (((x) & 0x00000002ul) >> 1)
#define I2C_IC_ENABLE_ABORT_SET(x) (((x) << 1) & 0x00000002ul)
#define I2C_IC_ENABLE_ABORT_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: i2c::IC_ENABLE.ENABLE                                     */
#define I2C_IC_ENABLE_ENABLE_MSB 0u
#define I2C_IC_ENABLE_ENABLE_LSB 0u
#define I2C_IC_ENABLE_ENABLE_WIDTH 1u
#define I2C_IC_ENABLE_ENABLE_READ_ACCESS 1u
#define I2C_IC_ENABLE_ENABLE_WRITE_ACCESS 1u
#define I2C_IC_ENABLE_ENABLE_RESET 0x0u
#define I2C_IC_ENABLE_ENABLE_FIELD_MASK 0x00000001ul
#define I2C_IC_ENABLE_ENABLE_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_ENABLE_ENABLE_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_ENABLE_ENABLE_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_STATUS                                           */
/* Register template: i2c::IC_STATUS                                       */
/* Field member: i2c::IC_STATUS.RSVD_IC_STATUS_2                           */
#define I2C_IC_STATUS_RSVD_IC_STATUS_2_MSB 31u
#define I2C_IC_STATUS_RSVD_IC_STATUS_2_LSB 21u
#define I2C_IC_STATUS_RSVD_IC_STATUS_2_WIDTH 11u
#define I2C_IC_STATUS_RSVD_IC_STATUS_2_READ_ACCESS 1u
#define I2C_IC_STATUS_RSVD_IC_STATUS_2_WRITE_ACCESS 0u
#define I2C_IC_STATUS_RSVD_IC_STATUS_2_FIELD_MASK 0xffe00000ul
#define I2C_IC_STATUS_RSVD_IC_STATUS_2_GET(x) (((x) & 0xffe00000ul) >> 21)
#define I2C_IC_STATUS_RSVD_IC_STATUS_2_SET(x) (((x) << 21) & 0xffe00000ul)
#define I2C_IC_STATUS_RSVD_IC_STATUS_2_MODIFY(r, x) \
   ((((x) << 21) & 0xffe00000ul) | ((r) & 0x001ffffful))
/* Field member: i2c::IC_STATUS.RSVD_SMBUS_ALERT_STATUS                    */
#define I2C_IC_STATUS_RSVD_SMBUS_ALERT_STATUS_MSB 20u
#define I2C_IC_STATUS_RSVD_SMBUS_ALERT_STATUS_LSB 20u
#define I2C_IC_STATUS_RSVD_SMBUS_ALERT_STATUS_WIDTH 1u
#define I2C_IC_STATUS_RSVD_SMBUS_ALERT_STATUS_READ_ACCESS 1u
#define I2C_IC_STATUS_RSVD_SMBUS_ALERT_STATUS_WRITE_ACCESS 0u
#define I2C_IC_STATUS_RSVD_SMBUS_ALERT_STATUS_FIELD_MASK 0x00100000ul
#define I2C_IC_STATUS_RSVD_SMBUS_ALERT_STATUS_GET(x) \
   (((x) & 0x00100000ul) >> 20)
#define I2C_IC_STATUS_RSVD_SMBUS_ALERT_STATUS_SET(x) \
   (((x) << 20) & 0x00100000ul)
#define I2C_IC_STATUS_RSVD_SMBUS_ALERT_STATUS_MODIFY(r, x) \
   ((((x) << 20) & 0x00100000ul) | ((r) & 0xffeffffful))
/* Field member: i2c::IC_STATUS.RSVD_SMBUS_SUSPEND_STATUS                  */
#define I2C_IC_STATUS_RSVD_SMBUS_SUSPEND_STATUS_MSB 19u
#define I2C_IC_STATUS_RSVD_SMBUS_SUSPEND_STATUS_LSB 19u
#define I2C_IC_STATUS_RSVD_SMBUS_SUSPEND_STATUS_WIDTH 1u
#define I2C_IC_STATUS_RSVD_SMBUS_SUSPEND_STATUS_READ_ACCESS 1u
#define I2C_IC_STATUS_RSVD_SMBUS_SUSPEND_STATUS_WRITE_ACCESS 0u
#define I2C_IC_STATUS_RSVD_SMBUS_SUSPEND_STATUS_FIELD_MASK 0x00080000ul
#define I2C_IC_STATUS_RSVD_SMBUS_SUSPEND_STATUS_GET(x) \
   (((x) & 0x00080000ul) >> 19)
#define I2C_IC_STATUS_RSVD_SMBUS_SUSPEND_STATUS_SET(x) \
   (((x) << 19) & 0x00080000ul)
#define I2C_IC_STATUS_RSVD_SMBUS_SUSPEND_STATUS_MODIFY(r, x) \
   ((((x) << 19) & 0x00080000ul) | ((r) & 0xfff7fffful))
/* Field member: i2c::IC_STATUS.RSVD_SMBUS_SLAVE_ADDR_RESOLVED             */
#define I2C_IC_STATUS_RSVD_SMBUS_SLAVE_ADDR_RESOLVED_MSB 18u
#define I2C_IC_STATUS_RSVD_SMBUS_SLAVE_ADDR_RESOLVED_LSB 18u
#define I2C_IC_STATUS_RSVD_SMBUS_SLAVE_ADDR_RESOLVED_WIDTH 1u
#define I2C_IC_STATUS_RSVD_SMBUS_SLAVE_ADDR_RESOLVED_READ_ACCESS 1u
#define I2C_IC_STATUS_RSVD_SMBUS_SLAVE_ADDR_RESOLVED_WRITE_ACCESS 0u
#define I2C_IC_STATUS_RSVD_SMBUS_SLAVE_ADDR_RESOLVED_FIELD_MASK 0x00040000ul
#define I2C_IC_STATUS_RSVD_SMBUS_SLAVE_ADDR_RESOLVED_GET(x) \
   (((x) & 0x00040000ul) >> 18)
#define I2C_IC_STATUS_RSVD_SMBUS_SLAVE_ADDR_RESOLVED_SET(x) \
   (((x) << 18) & 0x00040000ul)
#define I2C_IC_STATUS_RSVD_SMBUS_SLAVE_ADDR_RESOLVED_MODIFY(r, x) \
   ((((x) << 18) & 0x00040000ul) | ((r) & 0xfffbfffful))
/* Field member: i2c::IC_STATUS.RSVD_SMBUS_SLAVE_ADDR_VALID                */
#define I2C_IC_STATUS_RSVD_SMBUS_SLAVE_ADDR_VALID_MSB 17u
#define I2C_IC_STATUS_RSVD_SMBUS_SLAVE_ADDR_VALID_LSB 17u
#define I2C_IC_STATUS_RSVD_SMBUS_SLAVE_ADDR_VALID_WIDTH 1u
#define I2C_IC_STATUS_RSVD_SMBUS_SLAVE_ADDR_VALID_READ_ACCESS 1u
#define I2C_IC_STATUS_RSVD_SMBUS_SLAVE_ADDR_VALID_WRITE_ACCESS 0u
#define I2C_IC_STATUS_RSVD_SMBUS_SLAVE_ADDR_VALID_FIELD_MASK 0x00020000ul
#define I2C_IC_STATUS_RSVD_SMBUS_SLAVE_ADDR_VALID_GET(x) \
   (((x) & 0x00020000ul) >> 17)
#define I2C_IC_STATUS_RSVD_SMBUS_SLAVE_ADDR_VALID_SET(x) \
   (((x) << 17) & 0x00020000ul)
#define I2C_IC_STATUS_RSVD_SMBUS_SLAVE_ADDR_VALID_MODIFY(r, x) \
   ((((x) << 17) & 0x00020000ul) | ((r) & 0xfffdfffful))
/* Field member: i2c::IC_STATUS.SMBUS_QUICK_CMD_BIT                        */
#define I2C_IC_STATUS_SMBUS_QUICK_CMD_BIT_MSB 16u
#define I2C_IC_STATUS_SMBUS_QUICK_CMD_BIT_LSB 16u
#define I2C_IC_STATUS_SMBUS_QUICK_CMD_BIT_WIDTH 1u
#define I2C_IC_STATUS_SMBUS_QUICK_CMD_BIT_READ_ACCESS 1u
#define I2C_IC_STATUS_SMBUS_QUICK_CMD_BIT_WRITE_ACCESS 0u
#define I2C_IC_STATUS_SMBUS_QUICK_CMD_BIT_RESET 0x0u
#define I2C_IC_STATUS_SMBUS_QUICK_CMD_BIT_FIELD_MASK 0x00010000ul
#define I2C_IC_STATUS_SMBUS_QUICK_CMD_BIT_GET(x) (((x) & 0x00010000ul) >> 16)
#define I2C_IC_STATUS_SMBUS_QUICK_CMD_BIT_SET(x) \
   (((x) << 16) & 0x00010000ul)
#define I2C_IC_STATUS_SMBUS_QUICK_CMD_BIT_MODIFY(r, x) \
   ((((x) << 16) & 0x00010000ul) | ((r) & 0xfffefffful))
/* Field member: i2c::IC_STATUS.RSVD_IC_STATUS_1                           */
#define I2C_IC_STATUS_RSVD_IC_STATUS_1_MSB 15u
#define I2C_IC_STATUS_RSVD_IC_STATUS_1_LSB 12u
#define I2C_IC_STATUS_RSVD_IC_STATUS_1_WIDTH 4u
#define I2C_IC_STATUS_RSVD_IC_STATUS_1_READ_ACCESS 1u
#define I2C_IC_STATUS_RSVD_IC_STATUS_1_WRITE_ACCESS 0u
#define I2C_IC_STATUS_RSVD_IC_STATUS_1_FIELD_MASK 0x0000f000ul
#define I2C_IC_STATUS_RSVD_IC_STATUS_1_GET(x) (((x) & 0x0000f000ul) >> 12)
#define I2C_IC_STATUS_RSVD_IC_STATUS_1_SET(x) (((x) << 12) & 0x0000f000ul)
#define I2C_IC_STATUS_RSVD_IC_STATUS_1_MODIFY(r, x) \
   ((((x) << 12) & 0x0000f000ul) | ((r) & 0xffff0ffful))
/* Field member: i2c::IC_STATUS.SDA_STUCK_NOT_RECOVERED                    */
#define I2C_IC_STATUS_SDA_STUCK_NOT_RECOVERED_MSB 11u
#define I2C_IC_STATUS_SDA_STUCK_NOT_RECOVERED_LSB 11u
#define I2C_IC_STATUS_SDA_STUCK_NOT_RECOVERED_WIDTH 1u
#define I2C_IC_STATUS_SDA_STUCK_NOT_RECOVERED_READ_ACCESS 1u
#define I2C_IC_STATUS_SDA_STUCK_NOT_RECOVERED_WRITE_ACCESS 0u
#define I2C_IC_STATUS_SDA_STUCK_NOT_RECOVERED_RESET 0x0u
#define I2C_IC_STATUS_SDA_STUCK_NOT_RECOVERED_FIELD_MASK 0x00000800ul
#define I2C_IC_STATUS_SDA_STUCK_NOT_RECOVERED_GET(x) \
   (((x) & 0x00000800ul) >> 11)
#define I2C_IC_STATUS_SDA_STUCK_NOT_RECOVERED_SET(x) \
   (((x) << 11) & 0x00000800ul)
#define I2C_IC_STATUS_SDA_STUCK_NOT_RECOVERED_MODIFY(r, x) \
   ((((x) << 11) & 0x00000800ul) | ((r) & 0xfffff7fful))
/* Field member: i2c::IC_STATUS.RSVD_SLV_HOLD_RX_FIFO_FULL                 */
#define I2C_IC_STATUS_RSVD_SLV_HOLD_RX_FIFO_FULL_MSB 10u
#define I2C_IC_STATUS_RSVD_SLV_HOLD_RX_FIFO_FULL_LSB 10u
#define I2C_IC_STATUS_RSVD_SLV_HOLD_RX_FIFO_FULL_WIDTH 1u
#define I2C_IC_STATUS_RSVD_SLV_HOLD_RX_FIFO_FULL_READ_ACCESS 1u
#define I2C_IC_STATUS_RSVD_SLV_HOLD_RX_FIFO_FULL_WRITE_ACCESS 0u
#define I2C_IC_STATUS_RSVD_SLV_HOLD_RX_FIFO_FULL_FIELD_MASK 0x00000400ul
#define I2C_IC_STATUS_RSVD_SLV_HOLD_RX_FIFO_FULL_GET(x) \
   (((x) & 0x00000400ul) >> 10)
#define I2C_IC_STATUS_RSVD_SLV_HOLD_RX_FIFO_FULL_SET(x) \
   (((x) << 10) & 0x00000400ul)
#define I2C_IC_STATUS_RSVD_SLV_HOLD_RX_FIFO_FULL_MODIFY(r, x) \
   ((((x) << 10) & 0x00000400ul) | ((r) & 0xfffffbfful))
/* Field member: i2c::IC_STATUS.RSVD_SLV_HOLD_TX_FIFO_EMPTY                */
#define I2C_IC_STATUS_RSVD_SLV_HOLD_TX_FIFO_EMPTY_MSB 9u
#define I2C_IC_STATUS_RSVD_SLV_HOLD_TX_FIFO_EMPTY_LSB 9u
#define I2C_IC_STATUS_RSVD_SLV_HOLD_TX_FIFO_EMPTY_WIDTH 1u
#define I2C_IC_STATUS_RSVD_SLV_HOLD_TX_FIFO_EMPTY_READ_ACCESS 1u
#define I2C_IC_STATUS_RSVD_SLV_HOLD_TX_FIFO_EMPTY_WRITE_ACCESS 0u
#define I2C_IC_STATUS_RSVD_SLV_HOLD_TX_FIFO_EMPTY_FIELD_MASK 0x00000200ul
#define I2C_IC_STATUS_RSVD_SLV_HOLD_TX_FIFO_EMPTY_GET(x) \
   (((x) & 0x00000200ul) >> 9)
#define I2C_IC_STATUS_RSVD_SLV_HOLD_TX_FIFO_EMPTY_SET(x) \
   (((x) << 9) & 0x00000200ul)
#define I2C_IC_STATUS_RSVD_SLV_HOLD_TX_FIFO_EMPTY_MODIFY(r, x) \
   ((((x) << 9) & 0x00000200ul) | ((r) & 0xfffffdfful))
/* Field member: i2c::IC_STATUS.RSVD_MST_HOLD_RX_FIFO_FULL                 */
#define I2C_IC_STATUS_RSVD_MST_HOLD_RX_FIFO_FULL_MSB 8u
#define I2C_IC_STATUS_RSVD_MST_HOLD_RX_FIFO_FULL_LSB 8u
#define I2C_IC_STATUS_RSVD_MST_HOLD_RX_FIFO_FULL_WIDTH 1u
#define I2C_IC_STATUS_RSVD_MST_HOLD_RX_FIFO_FULL_READ_ACCESS 1u
#define I2C_IC_STATUS_RSVD_MST_HOLD_RX_FIFO_FULL_WRITE_ACCESS 0u
#define I2C_IC_STATUS_RSVD_MST_HOLD_RX_FIFO_FULL_FIELD_MASK 0x00000100ul
#define I2C_IC_STATUS_RSVD_MST_HOLD_RX_FIFO_FULL_GET(x) \
   (((x) & 0x00000100ul) >> 8)
#define I2C_IC_STATUS_RSVD_MST_HOLD_RX_FIFO_FULL_SET(x) \
   (((x) << 8) & 0x00000100ul)
#define I2C_IC_STATUS_RSVD_MST_HOLD_RX_FIFO_FULL_MODIFY(r, x) \
   ((((x) << 8) & 0x00000100ul) | ((r) & 0xfffffefful))
/* Field member: i2c::IC_STATUS.RSVD_MST_HOLD_TX_FIFO_EMPTY                */
#define I2C_IC_STATUS_RSVD_MST_HOLD_TX_FIFO_EMPTY_MSB 7u
#define I2C_IC_STATUS_RSVD_MST_HOLD_TX_FIFO_EMPTY_LSB 7u
#define I2C_IC_STATUS_RSVD_MST_HOLD_TX_FIFO_EMPTY_WIDTH 1u
#define I2C_IC_STATUS_RSVD_MST_HOLD_TX_FIFO_EMPTY_READ_ACCESS 1u
#define I2C_IC_STATUS_RSVD_MST_HOLD_TX_FIFO_EMPTY_WRITE_ACCESS 0u
#define I2C_IC_STATUS_RSVD_MST_HOLD_TX_FIFO_EMPTY_FIELD_MASK 0x00000080ul
#define I2C_IC_STATUS_RSVD_MST_HOLD_TX_FIFO_EMPTY_GET(x) \
   (((x) & 0x00000080ul) >> 7)
#define I2C_IC_STATUS_RSVD_MST_HOLD_TX_FIFO_EMPTY_SET(x) \
   (((x) << 7) & 0x00000080ul)
#define I2C_IC_STATUS_RSVD_MST_HOLD_TX_FIFO_EMPTY_MODIFY(r, x) \
   ((((x) << 7) & 0x00000080ul) | ((r) & 0xffffff7ful))
/* Field member: i2c::IC_STATUS.SLV_ACTIVITY                               */
#define I2C_IC_STATUS_SLV_ACTIVITY_MSB 6u
#define I2C_IC_STATUS_SLV_ACTIVITY_LSB 6u
#define I2C_IC_STATUS_SLV_ACTIVITY_WIDTH 1u
#define I2C_IC_STATUS_SLV_ACTIVITY_READ_ACCESS 1u
#define I2C_IC_STATUS_SLV_ACTIVITY_WRITE_ACCESS 0u
#define I2C_IC_STATUS_SLV_ACTIVITY_RESET 0x0u
#define I2C_IC_STATUS_SLV_ACTIVITY_FIELD_MASK 0x00000040ul
#define I2C_IC_STATUS_SLV_ACTIVITY_GET(x) (((x) & 0x00000040ul) >> 6)
#define I2C_IC_STATUS_SLV_ACTIVITY_SET(x) (((x) << 6) & 0x00000040ul)
#define I2C_IC_STATUS_SLV_ACTIVITY_MODIFY(r, x) \
   ((((x) << 6) & 0x00000040ul) | ((r) & 0xffffffbful))
/* Field member: i2c::IC_STATUS.MST_ACTIVITY                               */
#define I2C_IC_STATUS_MST_ACTIVITY_MSB 5u
#define I2C_IC_STATUS_MST_ACTIVITY_LSB 5u
#define I2C_IC_STATUS_MST_ACTIVITY_WIDTH 1u
#define I2C_IC_STATUS_MST_ACTIVITY_READ_ACCESS 1u
#define I2C_IC_STATUS_MST_ACTIVITY_WRITE_ACCESS 0u
#define I2C_IC_STATUS_MST_ACTIVITY_RESET 0x0u
#define I2C_IC_STATUS_MST_ACTIVITY_FIELD_MASK 0x00000020ul
#define I2C_IC_STATUS_MST_ACTIVITY_GET(x) (((x) & 0x00000020ul) >> 5)
#define I2C_IC_STATUS_MST_ACTIVITY_SET(x) (((x) << 5) & 0x00000020ul)
#define I2C_IC_STATUS_MST_ACTIVITY_MODIFY(r, x) \
   ((((x) << 5) & 0x00000020ul) | ((r) & 0xffffffdful))
/* Field member: i2c::IC_STATUS.RFF                                        */
#define I2C_IC_STATUS_RFF_MSB 4u
#define I2C_IC_STATUS_RFF_LSB 4u
#define I2C_IC_STATUS_RFF_WIDTH 1u
#define I2C_IC_STATUS_RFF_READ_ACCESS 1u
#define I2C_IC_STATUS_RFF_WRITE_ACCESS 0u
#define I2C_IC_STATUS_RFF_RESET 0x0u
#define I2C_IC_STATUS_RFF_FIELD_MASK 0x00000010ul
#define I2C_IC_STATUS_RFF_GET(x) (((x) & 0x00000010ul) >> 4)
#define I2C_IC_STATUS_RFF_SET(x) (((x) << 4) & 0x00000010ul)
#define I2C_IC_STATUS_RFF_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010ul) | ((r) & 0xffffffeful))
/* Field member: i2c::IC_STATUS.RFNE                                       */
#define I2C_IC_STATUS_RFNE_MSB 3u
#define I2C_IC_STATUS_RFNE_LSB 3u
#define I2C_IC_STATUS_RFNE_WIDTH 1u
#define I2C_IC_STATUS_RFNE_READ_ACCESS 1u
#define I2C_IC_STATUS_RFNE_WRITE_ACCESS 0u
#define I2C_IC_STATUS_RFNE_RESET 0x0u
#define I2C_IC_STATUS_RFNE_FIELD_MASK 0x00000008ul
#define I2C_IC_STATUS_RFNE_GET(x) (((x) & 0x00000008ul) >> 3)
#define I2C_IC_STATUS_RFNE_SET(x) (((x) << 3) & 0x00000008ul)
#define I2C_IC_STATUS_RFNE_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: i2c::IC_STATUS.TFE                                        */
#define I2C_IC_STATUS_TFE_MSB 2u
#define I2C_IC_STATUS_TFE_LSB 2u
#define I2C_IC_STATUS_TFE_WIDTH 1u
#define I2C_IC_STATUS_TFE_READ_ACCESS 1u
#define I2C_IC_STATUS_TFE_WRITE_ACCESS 0u
#define I2C_IC_STATUS_TFE_RESET 0x1u
#define I2C_IC_STATUS_TFE_FIELD_MASK 0x00000004ul
#define I2C_IC_STATUS_TFE_GET(x) (((x) & 0x00000004ul) >> 2)
#define I2C_IC_STATUS_TFE_SET(x) (((x) << 2) & 0x00000004ul)
#define I2C_IC_STATUS_TFE_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004ul) | ((r) & 0xfffffffbul))
/* Field member: i2c::IC_STATUS.TFNF                                       */
#define I2C_IC_STATUS_TFNF_MSB 1u
#define I2C_IC_STATUS_TFNF_LSB 1u
#define I2C_IC_STATUS_TFNF_WIDTH 1u
#define I2C_IC_STATUS_TFNF_READ_ACCESS 1u
#define I2C_IC_STATUS_TFNF_WRITE_ACCESS 0u
#define I2C_IC_STATUS_TFNF_RESET 0x1u
#define I2C_IC_STATUS_TFNF_FIELD_MASK 0x00000002ul
#define I2C_IC_STATUS_TFNF_GET(x) (((x) & 0x00000002ul) >> 1)
#define I2C_IC_STATUS_TFNF_SET(x) (((x) << 1) & 0x00000002ul)
#define I2C_IC_STATUS_TFNF_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: i2c::IC_STATUS.ACTIVITY                                   */
#define I2C_IC_STATUS_ACTIVITY_MSB 0u
#define I2C_IC_STATUS_ACTIVITY_LSB 0u
#define I2C_IC_STATUS_ACTIVITY_WIDTH 1u
#define I2C_IC_STATUS_ACTIVITY_READ_ACCESS 1u
#define I2C_IC_STATUS_ACTIVITY_WRITE_ACCESS 0u
#define I2C_IC_STATUS_ACTIVITY_RESET 0x0u
#define I2C_IC_STATUS_ACTIVITY_FIELD_MASK 0x00000001ul
#define I2C_IC_STATUS_ACTIVITY_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_STATUS_ACTIVITY_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_STATUS_ACTIVITY_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_TXFLR                                            */
/* Register template: i2c::IC_TXFLR                                        */
/* Field member: i2c::IC_TXFLR.RSVD_TXFLR                                  */
#define I2C_IC_TXFLR_RSVD_TXFLR_MSB 31u
#define I2C_IC_TXFLR_RSVD_TXFLR_LSB 9u
#define I2C_IC_TXFLR_RSVD_TXFLR_WIDTH 23u
#define I2C_IC_TXFLR_RSVD_TXFLR_READ_ACCESS 1u
#define I2C_IC_TXFLR_RSVD_TXFLR_WRITE_ACCESS 0u
#define I2C_IC_TXFLR_RSVD_TXFLR_FIELD_MASK 0xfffffe00ul
#define I2C_IC_TXFLR_RSVD_TXFLR_GET(x) (((x) & 0xfffffe00ul) >> 9)
#define I2C_IC_TXFLR_RSVD_TXFLR_SET(x) (((x) << 9) & 0xfffffe00ul)
#define I2C_IC_TXFLR_RSVD_TXFLR_MODIFY(r, x) \
   ((((x) << 9) & 0xfffffe00ul) | ((r) & 0x000001fful))
/* Field member: i2c::IC_TXFLR.TXFLR                                       */
#define I2C_IC_TXFLR_TXFLR_MSB 8u
#define I2C_IC_TXFLR_TXFLR_LSB 0u
#define I2C_IC_TXFLR_TXFLR_WIDTH 9u
#define I2C_IC_TXFLR_TXFLR_READ_ACCESS 1u
#define I2C_IC_TXFLR_TXFLR_WRITE_ACCESS 0u
#define I2C_IC_TXFLR_TXFLR_RESET 0x000u
#define I2C_IC_TXFLR_TXFLR_FIELD_MASK 0x000001fful
#define I2C_IC_TXFLR_TXFLR_GET(x) ((x) & 0x000001fful)
#define I2C_IC_TXFLR_TXFLR_SET(x) ((x) & 0x000001fful)
#define I2C_IC_TXFLR_TXFLR_MODIFY(r, x) \
   (((x) & 0x000001fful) | ((r) & 0xfffffe00ul))

/* Register type: i2c::IC_RXFLR                                            */
/* Register template: i2c::IC_RXFLR                                        */
/* Field member: i2c::IC_RXFLR.RSVD_RXFLR                                  */
#define I2C_IC_RXFLR_RSVD_RXFLR_MSB 31u
#define I2C_IC_RXFLR_RSVD_RXFLR_LSB 9u
#define I2C_IC_RXFLR_RSVD_RXFLR_WIDTH 23u
#define I2C_IC_RXFLR_RSVD_RXFLR_READ_ACCESS 1u
#define I2C_IC_RXFLR_RSVD_RXFLR_WRITE_ACCESS 0u
#define I2C_IC_RXFLR_RSVD_RXFLR_FIELD_MASK 0xfffffe00ul
#define I2C_IC_RXFLR_RSVD_RXFLR_GET(x) (((x) & 0xfffffe00ul) >> 9)
#define I2C_IC_RXFLR_RSVD_RXFLR_SET(x) (((x) << 9) & 0xfffffe00ul)
#define I2C_IC_RXFLR_RSVD_RXFLR_MODIFY(r, x) \
   ((((x) << 9) & 0xfffffe00ul) | ((r) & 0x000001fful))
/* Field member: i2c::IC_RXFLR.RXFLR                                       */
#define I2C_IC_RXFLR_RXFLR_MSB 8u
#define I2C_IC_RXFLR_RXFLR_LSB 0u
#define I2C_IC_RXFLR_RXFLR_WIDTH 9u
#define I2C_IC_RXFLR_RXFLR_READ_ACCESS 1u
#define I2C_IC_RXFLR_RXFLR_WRITE_ACCESS 0u
#define I2C_IC_RXFLR_RXFLR_RESET 0x000u
#define I2C_IC_RXFLR_RXFLR_FIELD_MASK 0x000001fful
#define I2C_IC_RXFLR_RXFLR_GET(x) ((x) & 0x000001fful)
#define I2C_IC_RXFLR_RXFLR_SET(x) ((x) & 0x000001fful)
#define I2C_IC_RXFLR_RXFLR_MODIFY(r, x) \
   (((x) & 0x000001fful) | ((r) & 0xfffffe00ul))

/* Register type: i2c::IC_SDA_HOLD                                         */
/* Register template: i2c::IC_SDA_HOLD                                     */
/* Field member: i2c::IC_SDA_HOLD.RSVD_IC_SDA_HOLD                         */
#define I2C_IC_SDA_HOLD_RSVD_IC_SDA_HOLD_MSB 31u
#define I2C_IC_SDA_HOLD_RSVD_IC_SDA_HOLD_LSB 24u
#define I2C_IC_SDA_HOLD_RSVD_IC_SDA_HOLD_WIDTH 8u
#define I2C_IC_SDA_HOLD_RSVD_IC_SDA_HOLD_READ_ACCESS 1u
#define I2C_IC_SDA_HOLD_RSVD_IC_SDA_HOLD_WRITE_ACCESS 0u
#define I2C_IC_SDA_HOLD_RSVD_IC_SDA_HOLD_FIELD_MASK 0xff000000ul
#define I2C_IC_SDA_HOLD_RSVD_IC_SDA_HOLD_GET(x) (((x) & 0xff000000ul) >> 24)
#define I2C_IC_SDA_HOLD_RSVD_IC_SDA_HOLD_SET(x) \
   (((x) << 24) & 0xff000000ul)
#define I2C_IC_SDA_HOLD_RSVD_IC_SDA_HOLD_MODIFY(r, x) \
   ((((x) << 24) & 0xff000000ul) | ((r) & 0x00fffffful))
/* Field member: i2c::IC_SDA_HOLD.IC_SDA_RX_HOLD                           */
#define I2C_IC_SDA_HOLD_IC_SDA_RX_HOLD_MSB 23u
#define I2C_IC_SDA_HOLD_IC_SDA_RX_HOLD_LSB 16u
#define I2C_IC_SDA_HOLD_IC_SDA_RX_HOLD_WIDTH 8u
#define I2C_IC_SDA_HOLD_IC_SDA_RX_HOLD_READ_ACCESS 1u
#define I2C_IC_SDA_HOLD_IC_SDA_RX_HOLD_WRITE_ACCESS 1u
#define I2C_IC_SDA_HOLD_IC_SDA_RX_HOLD_RESET 0x00u
#define I2C_IC_SDA_HOLD_IC_SDA_RX_HOLD_FIELD_MASK 0x00ff0000ul
#define I2C_IC_SDA_HOLD_IC_SDA_RX_HOLD_GET(x) (((x) & 0x00ff0000ul) >> 16)
#define I2C_IC_SDA_HOLD_IC_SDA_RX_HOLD_SET(x) (((x) << 16) & 0x00ff0000ul)
#define I2C_IC_SDA_HOLD_IC_SDA_RX_HOLD_MODIFY(r, x) \
   ((((x) << 16) & 0x00ff0000ul) | ((r) & 0xff00fffful))
/* Field member: i2c::IC_SDA_HOLD.IC_SDA_TX_HOLD                           */
#define I2C_IC_SDA_HOLD_IC_SDA_TX_HOLD_MSB 15u
#define I2C_IC_SDA_HOLD_IC_SDA_TX_HOLD_LSB 0u
#define I2C_IC_SDA_HOLD_IC_SDA_TX_HOLD_WIDTH 16u
#define I2C_IC_SDA_HOLD_IC_SDA_TX_HOLD_READ_ACCESS 1u
#define I2C_IC_SDA_HOLD_IC_SDA_TX_HOLD_WRITE_ACCESS 1u
#define I2C_IC_SDA_HOLD_IC_SDA_TX_HOLD_RESET 0x0001u
#define I2C_IC_SDA_HOLD_IC_SDA_TX_HOLD_FIELD_MASK 0x0000fffful
#define I2C_IC_SDA_HOLD_IC_SDA_TX_HOLD_GET(x) ((x) & 0x0000fffful)
#define I2C_IC_SDA_HOLD_IC_SDA_TX_HOLD_SET(x) ((x) & 0x0000fffful)
#define I2C_IC_SDA_HOLD_IC_SDA_TX_HOLD_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: i2c::IC_TX_ABRT_SOURCE                                   */
/* Register template: i2c::IC_TX_ABRT_SOURCE                               */
/* Field member: i2c::IC_TX_ABRT_SOURCE.TX_FLUSH_CNT                       */
#define I2C_IC_TX_ABRT_SOURCE_TX_FLUSH_CNT_MSB 31u
#define I2C_IC_TX_ABRT_SOURCE_TX_FLUSH_CNT_LSB 23u
#define I2C_IC_TX_ABRT_SOURCE_TX_FLUSH_CNT_WIDTH 9u
#define I2C_IC_TX_ABRT_SOURCE_TX_FLUSH_CNT_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_TX_FLUSH_CNT_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_TX_FLUSH_CNT_RESET 0x000u
#define I2C_IC_TX_ABRT_SOURCE_TX_FLUSH_CNT_FIELD_MASK 0xff800000ul
#define I2C_IC_TX_ABRT_SOURCE_TX_FLUSH_CNT_GET(x) \
   (((x) & 0xff800000ul) >> 23)
#define I2C_IC_TX_ABRT_SOURCE_TX_FLUSH_CNT_SET(x) \
   (((x) << 23) & 0xff800000ul)
#define I2C_IC_TX_ABRT_SOURCE_TX_FLUSH_CNT_MODIFY(r, x) \
   ((((x) << 23) & 0xff800000ul) | ((r) & 0x007ffffful))
/* Field member: i2c::IC_TX_ABRT_SOURCE.RSVD_IC_TX_ABRT_SOURCE             */
#define I2C_IC_TX_ABRT_SOURCE_RSVD_IC_TX_ABRT_SOURCE_MSB 22u
#define I2C_IC_TX_ABRT_SOURCE_RSVD_IC_TX_ABRT_SOURCE_LSB 21u
#define I2C_IC_TX_ABRT_SOURCE_RSVD_IC_TX_ABRT_SOURCE_WIDTH 2u
#define I2C_IC_TX_ABRT_SOURCE_RSVD_IC_TX_ABRT_SOURCE_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_RSVD_IC_TX_ABRT_SOURCE_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_RSVD_IC_TX_ABRT_SOURCE_FIELD_MASK 0x00600000ul
#define I2C_IC_TX_ABRT_SOURCE_RSVD_IC_TX_ABRT_SOURCE_GET(x) \
   (((x) & 0x00600000ul) >> 21)
#define I2C_IC_TX_ABRT_SOURCE_RSVD_IC_TX_ABRT_SOURCE_SET(x) \
   (((x) << 21) & 0x00600000ul)
#define I2C_IC_TX_ABRT_SOURCE_RSVD_IC_TX_ABRT_SOURCE_MODIFY(r, x) \
   ((((x) << 21) & 0x00600000ul) | ((r) & 0xff9ffffful))
/* Field member: i2c::IC_TX_ABRT_SOURCE.RSVD_ABRT_DEVICE_WRITE             */
#define I2C_IC_TX_ABRT_SOURCE_RSVD_ABRT_DEVICE_WRITE_MSB 20u
#define I2C_IC_TX_ABRT_SOURCE_RSVD_ABRT_DEVICE_WRITE_LSB 18u
#define I2C_IC_TX_ABRT_SOURCE_RSVD_ABRT_DEVICE_WRITE_WIDTH 3u
#define I2C_IC_TX_ABRT_SOURCE_RSVD_ABRT_DEVICE_WRITE_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_RSVD_ABRT_DEVICE_WRITE_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_RSVD_ABRT_DEVICE_WRITE_FIELD_MASK 0x001c0000ul
#define I2C_IC_TX_ABRT_SOURCE_RSVD_ABRT_DEVICE_WRITE_GET(x) \
   (((x) & 0x001c0000ul) >> 18)
#define I2C_IC_TX_ABRT_SOURCE_RSVD_ABRT_DEVICE_WRITE_SET(x) \
   (((x) << 18) & 0x001c0000ul)
#define I2C_IC_TX_ABRT_SOURCE_RSVD_ABRT_DEVICE_WRITE_MODIFY(r, x) \
   ((((x) << 18) & 0x001c0000ul) | ((r) & 0xffe3fffful))
/* Field member: i2c::IC_TX_ABRT_SOURCE.ABRT_SDA_STUCK_AT_LOW              */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SDA_STUCK_AT_LOW_MSB 17u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SDA_STUCK_AT_LOW_LSB 17u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SDA_STUCK_AT_LOW_WIDTH 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SDA_STUCK_AT_LOW_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SDA_STUCK_AT_LOW_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SDA_STUCK_AT_LOW_RESET 0x0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SDA_STUCK_AT_LOW_FIELD_MASK 0x00020000ul
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SDA_STUCK_AT_LOW_GET(x) \
   (((x) & 0x00020000ul) >> 17)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SDA_STUCK_AT_LOW_SET(x) \
   (((x) << 17) & 0x00020000ul)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SDA_STUCK_AT_LOW_MODIFY(r, x) \
   ((((x) << 17) & 0x00020000ul) | ((r) & 0xfffdfffful))
/* Field member: i2c::IC_TX_ABRT_SOURCE.ABRT_USER_ABRT                     */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_USER_ABRT_MSB 16u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_USER_ABRT_LSB 16u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_USER_ABRT_WIDTH 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_USER_ABRT_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_USER_ABRT_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_USER_ABRT_RESET 0x0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_USER_ABRT_FIELD_MASK 0x00010000ul
#define I2C_IC_TX_ABRT_SOURCE_ABRT_USER_ABRT_GET(x) \
   (((x) & 0x00010000ul) >> 16)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_USER_ABRT_SET(x) \
   (((x) << 16) & 0x00010000ul)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_USER_ABRT_MODIFY(r, x) \
   ((((x) << 16) & 0x00010000ul) | ((r) & 0xfffefffful))
/* Field member: i2c::IC_TX_ABRT_SOURCE.ABRT_SLVRD_INTX                    */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVRD_INTX_MSB 15u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVRD_INTX_LSB 15u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVRD_INTX_WIDTH 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVRD_INTX_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVRD_INTX_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVRD_INTX_RESET 0x0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVRD_INTX_FIELD_MASK 0x00008000ul
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVRD_INTX_GET(x) \
   (((x) & 0x00008000ul) >> 15)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVRD_INTX_SET(x) \
   (((x) << 15) & 0x00008000ul)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVRD_INTX_MODIFY(r, x) \
   ((((x) << 15) & 0x00008000ul) | ((r) & 0xffff7ffful))
/* Field member: i2c::IC_TX_ABRT_SOURCE.ABRT_SLV_ARBLOST                   */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST_MSB 14u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST_LSB 14u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST_WIDTH 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST_RESET 0x0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST_FIELD_MASK 0x00004000ul
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST_GET(x) \
   (((x) & 0x00004000ul) >> 14)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST_SET(x) \
   (((x) << 14) & 0x00004000ul)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLV_ARBLOST_MODIFY(r, x) \
   ((((x) << 14) & 0x00004000ul) | ((r) & 0xffffbffful))
/* Field member: i2c::IC_TX_ABRT_SOURCE.ABRT_SLVFLUSH_TXFIFO               */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO_MSB 13u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO_LSB 13u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO_WIDTH 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO_RESET 0x0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO_FIELD_MASK 0x00002000ul
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO_GET(x) \
   (((x) & 0x00002000ul) >> 13)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO_SET(x) \
   (((x) << 13) & 0x00002000ul)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SLVFLUSH_TXFIFO_MODIFY(r, x) \
   ((((x) << 13) & 0x00002000ul) | ((r) & 0xffffdffful))
/* Field member: i2c::IC_TX_ABRT_SOURCE.ARB_LOST                           */
#define I2C_IC_TX_ABRT_SOURCE_ARB_LOST_MSB 12u
#define I2C_IC_TX_ABRT_SOURCE_ARB_LOST_LSB 12u
#define I2C_IC_TX_ABRT_SOURCE_ARB_LOST_WIDTH 1u
#define I2C_IC_TX_ABRT_SOURCE_ARB_LOST_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_ARB_LOST_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_ARB_LOST_RESET 0x0u
#define I2C_IC_TX_ABRT_SOURCE_ARB_LOST_FIELD_MASK 0x00001000ul
#define I2C_IC_TX_ABRT_SOURCE_ARB_LOST_GET(x) (((x) & 0x00001000ul) >> 12)
#define I2C_IC_TX_ABRT_SOURCE_ARB_LOST_SET(x) (((x) << 12) & 0x00001000ul)
#define I2C_IC_TX_ABRT_SOURCE_ARB_LOST_MODIFY(r, x) \
   ((((x) << 12) & 0x00001000ul) | ((r) & 0xffffeffful))
/* Field member: i2c::IC_TX_ABRT_SOURCE.ABRT_MASTER_DIS                    */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_MASTER_DIS_MSB 11u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_MASTER_DIS_LSB 11u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_MASTER_DIS_WIDTH 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_MASTER_DIS_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_MASTER_DIS_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_MASTER_DIS_RESET 0x0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_MASTER_DIS_FIELD_MASK 0x00000800ul
#define I2C_IC_TX_ABRT_SOURCE_ABRT_MASTER_DIS_GET(x) \
   (((x) & 0x00000800ul) >> 11)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_MASTER_DIS_SET(x) \
   (((x) << 11) & 0x00000800ul)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_MASTER_DIS_MODIFY(r, x) \
   ((((x) << 11) & 0x00000800ul) | ((r) & 0xfffff7fful))
/* Field member: i2c::IC_TX_ABRT_SOURCE.ABRT_10B_RD_NORSTRT                */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT_MSB 10u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT_LSB 10u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT_WIDTH 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT_RESET 0x0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT_FIELD_MASK 0x00000400ul
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT_GET(x) \
   (((x) & 0x00000400ul) >> 10)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT_SET(x) \
   (((x) << 10) & 0x00000400ul)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10B_RD_NORSTRT_MODIFY(r, x) \
   ((((x) << 10) & 0x00000400ul) | ((r) & 0xfffffbfful))
/* Field member: i2c::IC_TX_ABRT_SOURCE.ABRT_SBYTE_NORSTRT                 */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT_MSB 9u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT_LSB 9u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT_WIDTH 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT_RESET 0x0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT_FIELD_MASK 0x00000200ul
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT_GET(x) \
   (((x) & 0x00000200ul) >> 9)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT_SET(x) \
   (((x) << 9) & 0x00000200ul)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_NORSTRT_MODIFY(r, x) \
   ((((x) << 9) & 0x00000200ul) | ((r) & 0xfffffdfful))
/* Field member: i2c::IC_TX_ABRT_SOURCE.ABRT_HS_NORSTRT                    */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_NORSTRT_MSB 8u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_NORSTRT_LSB 8u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_NORSTRT_WIDTH 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_NORSTRT_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_NORSTRT_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_NORSTRT_RESET 0x0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_NORSTRT_FIELD_MASK 0x00000100ul
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_NORSTRT_GET(x) \
   (((x) & 0x00000100ul) >> 8)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_NORSTRT_SET(x) \
   (((x) << 8) & 0x00000100ul)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_NORSTRT_MODIFY(r, x) \
   ((((x) << 8) & 0x00000100ul) | ((r) & 0xfffffefful))
/* Field member: i2c::IC_TX_ABRT_SOURCE.ABRT_SBYTE_ACKDET                  */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET_MSB 7u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET_LSB 7u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET_WIDTH 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET_RESET 0x0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET_FIELD_MASK 0x00000080ul
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET_GET(x) \
   (((x) & 0x00000080ul) >> 7)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET_SET(x) \
   (((x) << 7) & 0x00000080ul)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_SBYTE_ACKDET_MODIFY(r, x) \
   ((((x) << 7) & 0x00000080ul) | ((r) & 0xffffff7ful))
/* Field member: i2c::IC_TX_ABRT_SOURCE.ABRT_HS_ACKDET                     */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_ACKDET_MSB 6u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_ACKDET_LSB 6u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_ACKDET_WIDTH 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_ACKDET_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_ACKDET_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_ACKDET_RESET 0x0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_ACKDET_FIELD_MASK 0x00000040ul
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_ACKDET_GET(x) \
   (((x) & 0x00000040ul) >> 6)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_ACKDET_SET(x) \
   (((x) << 6) & 0x00000040ul)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_HS_ACKDET_MODIFY(r, x) \
   ((((x) << 6) & 0x00000040ul) | ((r) & 0xffffffbful))
/* Field member: i2c::IC_TX_ABRT_SOURCE.ABRT_GCALL_READ                    */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_READ_MSB 5u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_READ_LSB 5u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_READ_WIDTH 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_READ_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_READ_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_READ_RESET 0x0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_READ_FIELD_MASK 0x00000020ul
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_READ_GET(x) \
   (((x) & 0x00000020ul) >> 5)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_READ_SET(x) \
   (((x) << 5) & 0x00000020ul)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_READ_MODIFY(r, x) \
   ((((x) << 5) & 0x00000020ul) | ((r) & 0xffffffdful))
/* Field member: i2c::IC_TX_ABRT_SOURCE.ABRT_GCALL_NOACK                   */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_NOACK_MSB 4u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_NOACK_LSB 4u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_NOACK_WIDTH 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_NOACK_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_NOACK_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_NOACK_RESET 0x0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_NOACK_FIELD_MASK 0x00000010ul
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_NOACK_GET(x) \
   (((x) & 0x00000010ul) >> 4)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_NOACK_SET(x) \
   (((x) << 4) & 0x00000010ul)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_GCALL_NOACK_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010ul) | ((r) & 0xffffffeful))
/* Field member: i2c::IC_TX_ABRT_SOURCE.ABRT_TXDATA_NOACK                  */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK_MSB 3u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK_LSB 3u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK_WIDTH 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK_RESET 0x0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK_FIELD_MASK 0x00000008ul
#define I2C_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK_GET(x) \
   (((x) & 0x00000008ul) >> 3)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK_SET(x) \
   (((x) << 3) & 0x00000008ul)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_TXDATA_NOACK_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: i2c::IC_TX_ABRT_SOURCE.ABRT_10ADDR2_NOACK                 */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK_MSB 2u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK_LSB 2u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK_WIDTH 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK_RESET 0x0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK_FIELD_MASK 0x00000004ul
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK_GET(x) \
   (((x) & 0x00000004ul) >> 2)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK_SET(x) \
   (((x) << 2) & 0x00000004ul)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR2_NOACK_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004ul) | ((r) & 0xfffffffbul))
/* Field member: i2c::IC_TX_ABRT_SOURCE.ABRT_10ADDR1_NOACK                 */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR1_NOACK_MSB 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR1_NOACK_LSB 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR1_NOACK_WIDTH 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR1_NOACK_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR1_NOACK_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR1_NOACK_FIELD_MASK 0x00000002ul
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR1_NOACK_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR1_NOACK_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_10ADDR1_NOACK_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: i2c::IC_TX_ABRT_SOURCE.ABRT_7B_ADDR_NOACK                 */
#define I2C_IC_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK_MSB 0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK_LSB 0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK_WIDTH 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK_READ_ACCESS 1u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK_WRITE_ACCESS 0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK_RESET 0x0u
#define I2C_IC_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK_FIELD_MASK 0x00000001ul
#define I2C_IC_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_TX_ABRT_SOURCE_ABRT_7B_ADDR_NOACK_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_SDA_SETUP                                        */
/* Register template: i2c::IC_SDA_SETUP                                    */
/* Field member: i2c::IC_SDA_SETUP.RSVD_IC_SDA_SETUP                       */
#define I2C_IC_SDA_SETUP_RSVD_IC_SDA_SETUP_MSB 31u
#define I2C_IC_SDA_SETUP_RSVD_IC_SDA_SETUP_LSB 8u
#define I2C_IC_SDA_SETUP_RSVD_IC_SDA_SETUP_WIDTH 24u
#define I2C_IC_SDA_SETUP_RSVD_IC_SDA_SETUP_READ_ACCESS 1u
#define I2C_IC_SDA_SETUP_RSVD_IC_SDA_SETUP_WRITE_ACCESS 0u
#define I2C_IC_SDA_SETUP_RSVD_IC_SDA_SETUP_FIELD_MASK 0xffffff00ul
#define I2C_IC_SDA_SETUP_RSVD_IC_SDA_SETUP_GET(x) (((x) & 0xffffff00ul) >> 8)
#define I2C_IC_SDA_SETUP_RSVD_IC_SDA_SETUP_SET(x) \
   (((x) << 8) & 0xffffff00ul)
#define I2C_IC_SDA_SETUP_RSVD_IC_SDA_SETUP_MODIFY(r, x) \
   ((((x) << 8) & 0xffffff00ul) | ((r) & 0x000000fful))
/* Field member: i2c::IC_SDA_SETUP.SDA_SETUP                               */
#define I2C_IC_SDA_SETUP_SDA_SETUP_MSB 7u
#define I2C_IC_SDA_SETUP_SDA_SETUP_LSB 0u
#define I2C_IC_SDA_SETUP_SDA_SETUP_WIDTH 8u
#define I2C_IC_SDA_SETUP_SDA_SETUP_READ_ACCESS 1u
#define I2C_IC_SDA_SETUP_SDA_SETUP_WRITE_ACCESS 1u
#define I2C_IC_SDA_SETUP_SDA_SETUP_RESET 0x64u
#define I2C_IC_SDA_SETUP_SDA_SETUP_FIELD_MASK 0x000000fful
#define I2C_IC_SDA_SETUP_SDA_SETUP_GET(x) ((x) & 0x000000fful)
#define I2C_IC_SDA_SETUP_SDA_SETUP_SET(x) ((x) & 0x000000fful)
#define I2C_IC_SDA_SETUP_SDA_SETUP_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: i2c::IC_ACK_GENERAL_CALL                                 */
/* Register template: i2c::IC_ACK_GENERAL_CALL                             */
/* Field member: i2c::IC_ACK_GENERAL_CALL.RSVD_IC_ACK_GEN_1_31             */
#define I2C_IC_ACK_GENERAL_CALL_RSVD_IC_ACK_GEN_1_31_MSB 31u
#define I2C_IC_ACK_GENERAL_CALL_RSVD_IC_ACK_GEN_1_31_LSB 1u
#define I2C_IC_ACK_GENERAL_CALL_RSVD_IC_ACK_GEN_1_31_WIDTH 31u
#define I2C_IC_ACK_GENERAL_CALL_RSVD_IC_ACK_GEN_1_31_READ_ACCESS 1u
#define I2C_IC_ACK_GENERAL_CALL_RSVD_IC_ACK_GEN_1_31_WRITE_ACCESS 0u
#define I2C_IC_ACK_GENERAL_CALL_RSVD_IC_ACK_GEN_1_31_FIELD_MASK 0xfffffffeul
#define I2C_IC_ACK_GENERAL_CALL_RSVD_IC_ACK_GEN_1_31_GET(x) \
   (((x) & 0xfffffffeul) >> 1)
#define I2C_IC_ACK_GENERAL_CALL_RSVD_IC_ACK_GEN_1_31_SET(x) \
   (((x) << 1) & 0xfffffffeul)
#define I2C_IC_ACK_GENERAL_CALL_RSVD_IC_ACK_GEN_1_31_MODIFY(r, x) \
   ((((x) << 1) & 0xfffffffeul) | ((r) & 0x00000001ul))
/* Field member: i2c::IC_ACK_GENERAL_CALL.ACK_GEN_CALL                     */
#define I2C_IC_ACK_GENERAL_CALL_ACK_GEN_CALL_MSB 0u
#define I2C_IC_ACK_GENERAL_CALL_ACK_GEN_CALL_LSB 0u
#define I2C_IC_ACK_GENERAL_CALL_ACK_GEN_CALL_WIDTH 1u
#define I2C_IC_ACK_GENERAL_CALL_ACK_GEN_CALL_READ_ACCESS 1u
#define I2C_IC_ACK_GENERAL_CALL_ACK_GEN_CALL_WRITE_ACCESS 1u
#define I2C_IC_ACK_GENERAL_CALL_ACK_GEN_CALL_RESET 0x1u
#define I2C_IC_ACK_GENERAL_CALL_ACK_GEN_CALL_FIELD_MASK 0x00000001ul
#define I2C_IC_ACK_GENERAL_CALL_ACK_GEN_CALL_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_ACK_GENERAL_CALL_ACK_GEN_CALL_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_ACK_GENERAL_CALL_ACK_GEN_CALL_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_ENABLE_STATUS                                    */
/* Register template: i2c::IC_ENABLE_STATUS                                */
/* Field member: i2c::IC_ENABLE_STATUS.RSVD_IC_ENABLE_STATUS               */
#define I2C_IC_ENABLE_STATUS_RSVD_IC_ENABLE_STATUS_MSB 31u
#define I2C_IC_ENABLE_STATUS_RSVD_IC_ENABLE_STATUS_LSB 3u
#define I2C_IC_ENABLE_STATUS_RSVD_IC_ENABLE_STATUS_WIDTH 29u
#define I2C_IC_ENABLE_STATUS_RSVD_IC_ENABLE_STATUS_READ_ACCESS 1u
#define I2C_IC_ENABLE_STATUS_RSVD_IC_ENABLE_STATUS_WRITE_ACCESS 0u
#define I2C_IC_ENABLE_STATUS_RSVD_IC_ENABLE_STATUS_FIELD_MASK 0xfffffff8ul
#define I2C_IC_ENABLE_STATUS_RSVD_IC_ENABLE_STATUS_GET(x) \
   (((x) & 0xfffffff8ul) >> 3)
#define I2C_IC_ENABLE_STATUS_RSVD_IC_ENABLE_STATUS_SET(x) \
   (((x) << 3) & 0xfffffff8ul)
#define I2C_IC_ENABLE_STATUS_RSVD_IC_ENABLE_STATUS_MODIFY(r, x) \
   ((((x) << 3) & 0xfffffff8ul) | ((r) & 0x00000007ul))
/* Field member: i2c::IC_ENABLE_STATUS.SLV_RX_DATA_LOST                    */
#define I2C_IC_ENABLE_STATUS_SLV_RX_DATA_LOST_MSB 2u
#define I2C_IC_ENABLE_STATUS_SLV_RX_DATA_LOST_LSB 2u
#define I2C_IC_ENABLE_STATUS_SLV_RX_DATA_LOST_WIDTH 1u
#define I2C_IC_ENABLE_STATUS_SLV_RX_DATA_LOST_READ_ACCESS 1u
#define I2C_IC_ENABLE_STATUS_SLV_RX_DATA_LOST_WRITE_ACCESS 0u
#define I2C_IC_ENABLE_STATUS_SLV_RX_DATA_LOST_RESET 0x0u
#define I2C_IC_ENABLE_STATUS_SLV_RX_DATA_LOST_FIELD_MASK 0x00000004ul
#define I2C_IC_ENABLE_STATUS_SLV_RX_DATA_LOST_GET(x) \
   (((x) & 0x00000004ul) >> 2)
#define I2C_IC_ENABLE_STATUS_SLV_RX_DATA_LOST_SET(x) \
   (((x) << 2) & 0x00000004ul)
#define I2C_IC_ENABLE_STATUS_SLV_RX_DATA_LOST_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004ul) | ((r) & 0xfffffffbul))
/* Field member: i2c::IC_ENABLE_STATUS.SLV_DISABLED_WHILE_BUSY             */
#define I2C_IC_ENABLE_STATUS_SLV_DISABLED_WHILE_BUSY_MSB 1u
#define I2C_IC_ENABLE_STATUS_SLV_DISABLED_WHILE_BUSY_LSB 1u
#define I2C_IC_ENABLE_STATUS_SLV_DISABLED_WHILE_BUSY_WIDTH 1u
#define I2C_IC_ENABLE_STATUS_SLV_DISABLED_WHILE_BUSY_READ_ACCESS 1u
#define I2C_IC_ENABLE_STATUS_SLV_DISABLED_WHILE_BUSY_WRITE_ACCESS 0u
#define I2C_IC_ENABLE_STATUS_SLV_DISABLED_WHILE_BUSY_RESET 0x0u
#define I2C_IC_ENABLE_STATUS_SLV_DISABLED_WHILE_BUSY_FIELD_MASK 0x00000002ul
#define I2C_IC_ENABLE_STATUS_SLV_DISABLED_WHILE_BUSY_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define I2C_IC_ENABLE_STATUS_SLV_DISABLED_WHILE_BUSY_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define I2C_IC_ENABLE_STATUS_SLV_DISABLED_WHILE_BUSY_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: i2c::IC_ENABLE_STATUS.IC_EN                               */
#define I2C_IC_ENABLE_STATUS_IC_EN_MSB 0u
#define I2C_IC_ENABLE_STATUS_IC_EN_LSB 0u
#define I2C_IC_ENABLE_STATUS_IC_EN_WIDTH 1u
#define I2C_IC_ENABLE_STATUS_IC_EN_READ_ACCESS 1u
#define I2C_IC_ENABLE_STATUS_IC_EN_WRITE_ACCESS 0u
#define I2C_IC_ENABLE_STATUS_IC_EN_RESET 0x0u
#define I2C_IC_ENABLE_STATUS_IC_EN_FIELD_MASK 0x00000001ul
#define I2C_IC_ENABLE_STATUS_IC_EN_GET(x) ((x) & 0x00000001ul)
#define I2C_IC_ENABLE_STATUS_IC_EN_SET(x) ((x) & 0x00000001ul)
#define I2C_IC_ENABLE_STATUS_IC_EN_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_FS_SPKLEN                                        */
/* Register template: i2c::IC_FS_SPKLEN                                    */
/* Field member: i2c::IC_FS_SPKLEN.RSVD_IC_FS_SPKLEN                       */
#define I2C_IC_FS_SPKLEN_RSVD_IC_FS_SPKLEN_MSB 31u
#define I2C_IC_FS_SPKLEN_RSVD_IC_FS_SPKLEN_LSB 8u
#define I2C_IC_FS_SPKLEN_RSVD_IC_FS_SPKLEN_WIDTH 24u
#define I2C_IC_FS_SPKLEN_RSVD_IC_FS_SPKLEN_READ_ACCESS 1u
#define I2C_IC_FS_SPKLEN_RSVD_IC_FS_SPKLEN_WRITE_ACCESS 0u
#define I2C_IC_FS_SPKLEN_RSVD_IC_FS_SPKLEN_FIELD_MASK 0xffffff00ul
#define I2C_IC_FS_SPKLEN_RSVD_IC_FS_SPKLEN_GET(x) (((x) & 0xffffff00ul) >> 8)
#define I2C_IC_FS_SPKLEN_RSVD_IC_FS_SPKLEN_SET(x) \
   (((x) << 8) & 0xffffff00ul)
#define I2C_IC_FS_SPKLEN_RSVD_IC_FS_SPKLEN_MODIFY(r, x) \
   ((((x) << 8) & 0xffffff00ul) | ((r) & 0x000000fful))
/* Field member: i2c::IC_FS_SPKLEN.IC_FS_SPKLEN                            */
#define I2C_IC_FS_SPKLEN_IC_FS_SPKLEN_MSB 7u
#define I2C_IC_FS_SPKLEN_IC_FS_SPKLEN_LSB 0u
#define I2C_IC_FS_SPKLEN_IC_FS_SPKLEN_WIDTH 8u
#define I2C_IC_FS_SPKLEN_IC_FS_SPKLEN_READ_ACCESS 1u
#define I2C_IC_FS_SPKLEN_IC_FS_SPKLEN_WRITE_ACCESS 1u
#define I2C_IC_FS_SPKLEN_IC_FS_SPKLEN_RESET 0x02u
#define I2C_IC_FS_SPKLEN_IC_FS_SPKLEN_FIELD_MASK 0x000000fful
#define I2C_IC_FS_SPKLEN_IC_FS_SPKLEN_GET(x) ((x) & 0x000000fful)
#define I2C_IC_FS_SPKLEN_IC_FS_SPKLEN_SET(x) ((x) & 0x000000fful)
#define I2C_IC_FS_SPKLEN_IC_FS_SPKLEN_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: i2c::IC_SCL_STUCK_AT_LOW_TIMEOUT                         */
/* Register template: i2c::IC_SCL_STUCK_AT_LOW_TIMEOUT                     */
/* Field member: i2c::IC_SCL_STUCK_AT_LOW_TIMEOUT.IC_SCL_STUCK_LOW_TIMEOUT */
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_IC_SCL_STUCK_LOW_TIMEOUT_MSB 31u
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_IC_SCL_STUCK_LOW_TIMEOUT_LSB 0u
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_IC_SCL_STUCK_LOW_TIMEOUT_WIDTH 32u
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_IC_SCL_STUCK_LOW_TIMEOUT_READ_ACCESS 1u
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_IC_SCL_STUCK_LOW_TIMEOUT_WRITE_ACCESS 1u
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_IC_SCL_STUCK_LOW_TIMEOUT_RESET 0xfffffffful
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_IC_SCL_STUCK_LOW_TIMEOUT_FIELD_MASK 0xfffffffful
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_IC_SCL_STUCK_LOW_TIMEOUT_GET(x) \
   ((x) & 0xfffffffful)
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_IC_SCL_STUCK_LOW_TIMEOUT_SET(x) \
   ((x) & 0xfffffffful)
#define I2C_IC_SCL_STUCK_AT_LOW_TIMEOUT_IC_SCL_STUCK_LOW_TIMEOUT_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: i2c::IC_SDA_STUCK_AT_LOW_TIMEOUT                         */
/* Register template: i2c::IC_SDA_STUCK_AT_LOW_TIMEOUT                     */
/* Field member: i2c::IC_SDA_STUCK_AT_LOW_TIMEOUT.IC_SDA_STUCK_LOW_TIMEOUT */
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_IC_SDA_STUCK_LOW_TIMEOUT_MSB 31u
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_IC_SDA_STUCK_LOW_TIMEOUT_LSB 0u
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_IC_SDA_STUCK_LOW_TIMEOUT_WIDTH 32u
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_IC_SDA_STUCK_LOW_TIMEOUT_READ_ACCESS 1u
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_IC_SDA_STUCK_LOW_TIMEOUT_WRITE_ACCESS 1u
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_IC_SDA_STUCK_LOW_TIMEOUT_RESET 0xfffffffful
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_IC_SDA_STUCK_LOW_TIMEOUT_FIELD_MASK 0xfffffffful
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_IC_SDA_STUCK_LOW_TIMEOUT_GET(x) \
   ((x) & 0xfffffffful)
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_IC_SDA_STUCK_LOW_TIMEOUT_SET(x) \
   ((x) & 0xfffffffful)
#define I2C_IC_SDA_STUCK_AT_LOW_TIMEOUT_IC_SDA_STUCK_LOW_TIMEOUT_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: i2c::IC_CLR_SCL_STUCK_DET                                */
/* Register template: i2c::IC_CLR_SCL_STUCK_DET                            */
/* Field member: i2c::IC_CLR_SCL_STUCK_DET.RSVD_CLR_SCL_STUCK_DET          */
#define I2C_IC_CLR_SCL_STUCK_DET_RSVD_CLR_SCL_STUCK_DET_MSB 31u
#define I2C_IC_CLR_SCL_STUCK_DET_RSVD_CLR_SCL_STUCK_DET_LSB 1u
#define I2C_IC_CLR_SCL_STUCK_DET_RSVD_CLR_SCL_STUCK_DET_WIDTH 31u
#define I2C_IC_CLR_SCL_STUCK_DET_RSVD_CLR_SCL_STUCK_DET_READ_ACCESS 1u
#define I2C_IC_CLR_SCL_STUCK_DET_RSVD_CLR_SCL_STUCK_DET_WRITE_ACCESS 0u
#define I2C_IC_CLR_SCL_STUCK_DET_RSVD_CLR_SCL_STUCK_DET_FIELD_MASK 0xfffffffeul
#define I2C_IC_CLR_SCL_STUCK_DET_RSVD_CLR_SCL_STUCK_DET_GET(x) \
   (((x) & 0xfffffffeul) >> 1)
#define I2C_IC_CLR_SCL_STUCK_DET_RSVD_CLR_SCL_STUCK_DET_SET(x) \
   (((x) << 1) & 0xfffffffeul)
#define I2C_IC_CLR_SCL_STUCK_DET_RSVD_CLR_SCL_STUCK_DET_MODIFY(r, x) \
   ((((x) << 1) & 0xfffffffeul) | ((r) & 0x00000001ul))
/* Field member: i2c::IC_CLR_SCL_STUCK_DET.CLR_SCL_STUCK_DET               */
#define I2C_IC_CLR_SCL_STUCK_DET_CLR_SCL_STUCK_DET_MSB 0u
#define I2C_IC_CLR_SCL_STUCK_DET_CLR_SCL_STUCK_DET_LSB 0u
#define I2C_IC_CLR_SCL_STUCK_DET_CLR_SCL_STUCK_DET_WIDTH 1u
#define I2C_IC_CLR_SCL_STUCK_DET_CLR_SCL_STUCK_DET_READ_ACCESS 1u
#define I2C_IC_CLR_SCL_STUCK_DET_CLR_SCL_STUCK_DET_WRITE_ACCESS 0u
#define I2C_IC_CLR_SCL_STUCK_DET_CLR_SCL_STUCK_DET_RESET 0x0u
#define I2C_IC_CLR_SCL_STUCK_DET_CLR_SCL_STUCK_DET_FIELD_MASK 0x00000001ul
#define I2C_IC_CLR_SCL_STUCK_DET_CLR_SCL_STUCK_DET_GET(x) \
   ((x) & 0x00000001ul)
#define I2C_IC_CLR_SCL_STUCK_DET_CLR_SCL_STUCK_DET_SET(x) \
   ((x) & 0x00000001ul)
#define I2C_IC_CLR_SCL_STUCK_DET_CLR_SCL_STUCK_DET_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_SMBUS_CLK_LOW_SEXT                               */
/* Register template: i2c::IC_SMBUS_CLK_LOW_SEXT                           */
/* Field member: i2c::IC_SMBUS_CLK_LOW_SEXT.SMBUS_CLK_LOW_SEXT_TIMEOUT     */
#define I2C_IC_SMBUS_CLK_LOW_SEXT_SMBUS_CLK_LOW_SEXT_TIMEOUT_MSB 31u
#define I2C_IC_SMBUS_CLK_LOW_SEXT_SMBUS_CLK_LOW_SEXT_TIMEOUT_LSB 0u
#define I2C_IC_SMBUS_CLK_LOW_SEXT_SMBUS_CLK_LOW_SEXT_TIMEOUT_WIDTH 32u
#define I2C_IC_SMBUS_CLK_LOW_SEXT_SMBUS_CLK_LOW_SEXT_TIMEOUT_READ_ACCESS 1u
#define I2C_IC_SMBUS_CLK_LOW_SEXT_SMBUS_CLK_LOW_SEXT_TIMEOUT_WRITE_ACCESS 1u
#define I2C_IC_SMBUS_CLK_LOW_SEXT_SMBUS_CLK_LOW_SEXT_TIMEOUT_RESET 0xfffffffful
#define I2C_IC_SMBUS_CLK_LOW_SEXT_SMBUS_CLK_LOW_SEXT_TIMEOUT_FIELD_MASK 0xfffffffful
#define I2C_IC_SMBUS_CLK_LOW_SEXT_SMBUS_CLK_LOW_SEXT_TIMEOUT_GET(x) \
   ((x) & 0xfffffffful)
#define I2C_IC_SMBUS_CLK_LOW_SEXT_SMBUS_CLK_LOW_SEXT_TIMEOUT_SET(x) \
   ((x) & 0xfffffffful)
#define I2C_IC_SMBUS_CLK_LOW_SEXT_SMBUS_CLK_LOW_SEXT_TIMEOUT_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: i2c::IC_SMBUS_CLK_LOW_MEXT                               */
/* Register template: i2c::IC_SMBUS_CLK_LOW_MEXT                           */
/* Field member: i2c::IC_SMBUS_CLK_LOW_MEXT.SMBUS_CLK_LOW_MEXT_TIMEOUT     */
#define I2C_IC_SMBUS_CLK_LOW_MEXT_SMBUS_CLK_LOW_MEXT_TIMEOUT_MSB 31u
#define I2C_IC_SMBUS_CLK_LOW_MEXT_SMBUS_CLK_LOW_MEXT_TIMEOUT_LSB 0u
#define I2C_IC_SMBUS_CLK_LOW_MEXT_SMBUS_CLK_LOW_MEXT_TIMEOUT_WIDTH 32u
#define I2C_IC_SMBUS_CLK_LOW_MEXT_SMBUS_CLK_LOW_MEXT_TIMEOUT_READ_ACCESS 1u
#define I2C_IC_SMBUS_CLK_LOW_MEXT_SMBUS_CLK_LOW_MEXT_TIMEOUT_WRITE_ACCESS 1u
#define I2C_IC_SMBUS_CLK_LOW_MEXT_SMBUS_CLK_LOW_MEXT_TIMEOUT_RESET 0xfffffffful
#define I2C_IC_SMBUS_CLK_LOW_MEXT_SMBUS_CLK_LOW_MEXT_TIMEOUT_FIELD_MASK 0xfffffffful
#define I2C_IC_SMBUS_CLK_LOW_MEXT_SMBUS_CLK_LOW_MEXT_TIMEOUT_GET(x) \
   ((x) & 0xfffffffful)
#define I2C_IC_SMBUS_CLK_LOW_MEXT_SMBUS_CLK_LOW_MEXT_TIMEOUT_SET(x) \
   ((x) & 0xfffffffful)
#define I2C_IC_SMBUS_CLK_LOW_MEXT_SMBUS_CLK_LOW_MEXT_TIMEOUT_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: i2c::IC_SMBUS_THIGH_MAX_IDLE_COUNT                       */
/* Register template: i2c::IC_SMBUS_THIGH_MAX_IDLE_COUNT                   */
/* Field member: i2c::IC_SMBUS_THIGH_MAX_IDLE_COUNT.RSVD_SMBUS_THIGH_MAX_BUS_IDLE_CNT */
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_RSVD_SMBUS_THIGH_MAX_BUS_IDLE_CNT_MSB 31u
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_RSVD_SMBUS_THIGH_MAX_BUS_IDLE_CNT_LSB 16u
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_RSVD_SMBUS_THIGH_MAX_BUS_IDLE_CNT_WIDTH 16u
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_RSVD_SMBUS_THIGH_MAX_BUS_IDLE_CNT_READ_ACCESS 1u
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_RSVD_SMBUS_THIGH_MAX_BUS_IDLE_CNT_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_RSVD_SMBUS_THIGH_MAX_BUS_IDLE_CNT_FIELD_MASK 0xffff0000ul
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_RSVD_SMBUS_THIGH_MAX_BUS_IDLE_CNT_GET(x) \
   (((x) & 0xffff0000ul) >> 16)
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_RSVD_SMBUS_THIGH_MAX_BUS_IDLE_CNT_SET(x) \
   (((x) << 16) & 0xffff0000ul)
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_RSVD_SMBUS_THIGH_MAX_BUS_IDLE_CNT_MODIFY(r, x) \
   ((((x) << 16) & 0xffff0000ul) | ((r) & 0x0000fffful))
/* Field member: i2c::IC_SMBUS_THIGH_MAX_IDLE_COUNT.SMBUS_THIGH_MAX_BUS_IDLE_CNT */
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_SMBUS_THIGH_MAX_BUS_IDLE_CNT_MSB 15u
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_SMBUS_THIGH_MAX_BUS_IDLE_CNT_LSB 0u
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_SMBUS_THIGH_MAX_BUS_IDLE_CNT_WIDTH 16u
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_SMBUS_THIGH_MAX_BUS_IDLE_CNT_READ_ACCESS 1u
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_SMBUS_THIGH_MAX_BUS_IDLE_CNT_WRITE_ACCESS 1u
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_SMBUS_THIGH_MAX_BUS_IDLE_CNT_RESET 0xffffu
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_SMBUS_THIGH_MAX_BUS_IDLE_CNT_FIELD_MASK 0x0000fffful
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_SMBUS_THIGH_MAX_BUS_IDLE_CNT_GET(x) \
   ((x) & 0x0000fffful)
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_SMBUS_THIGH_MAX_BUS_IDLE_CNT_SET(x) \
   ((x) & 0x0000fffful)
#define I2C_IC_SMBUS_THIGH_MAX_IDLE_COUNT_SMBUS_THIGH_MAX_BUS_IDLE_CNT_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: i2c::IC_SMBUS_INTR_STAT                                  */
/* Register template: i2c::IC_SMBUS_INTR_STAT                              */
/* Field member: i2c::IC_SMBUS_INTR_STAT.RSVD_IC_SMBUS_INTR_STAT           */
#define I2C_IC_SMBUS_INTR_STAT_RSVD_IC_SMBUS_INTR_STAT_MSB 31u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_IC_SMBUS_INTR_STAT_LSB 11u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_IC_SMBUS_INTR_STAT_WIDTH 21u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_IC_SMBUS_INTR_STAT_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_IC_SMBUS_INTR_STAT_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_IC_SMBUS_INTR_STAT_FIELD_MASK 0xfffff800ul
#define I2C_IC_SMBUS_INTR_STAT_RSVD_IC_SMBUS_INTR_STAT_GET(x) \
   (((x) & 0xfffff800ul) >> 11)
#define I2C_IC_SMBUS_INTR_STAT_RSVD_IC_SMBUS_INTR_STAT_SET(x) \
   (((x) << 11) & 0xfffff800ul)
#define I2C_IC_SMBUS_INTR_STAT_RSVD_IC_SMBUS_INTR_STAT_MODIFY(r, x) \
   ((((x) << 11) & 0xfffff800ul) | ((r) & 0x000007fful))
/* Field member: i2c::IC_SMBUS_INTR_STAT.RSVD_R_SMBUS_ALERT_DET            */
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SMBUS_ALERT_DET_MSB 10u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SMBUS_ALERT_DET_LSB 10u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SMBUS_ALERT_DET_WIDTH 1u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SMBUS_ALERT_DET_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SMBUS_ALERT_DET_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SMBUS_ALERT_DET_FIELD_MASK 0x00000400ul
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SMBUS_ALERT_DET_GET(x) \
   (((x) & 0x00000400ul) >> 10)
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SMBUS_ALERT_DET_SET(x) \
   (((x) << 10) & 0x00000400ul)
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SMBUS_ALERT_DET_MODIFY(r, x) \
   ((((x) << 10) & 0x00000400ul) | ((r) & 0xfffffbfful))
/* Field member: i2c::IC_SMBUS_INTR_STAT.RSVD_R_SMBUS_SUSPEND_DET          */
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SMBUS_SUSPEND_DET_MSB 9u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SMBUS_SUSPEND_DET_LSB 9u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SMBUS_SUSPEND_DET_WIDTH 1u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SMBUS_SUSPEND_DET_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SMBUS_SUSPEND_DET_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SMBUS_SUSPEND_DET_FIELD_MASK 0x00000200ul
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SMBUS_SUSPEND_DET_GET(x) \
   (((x) & 0x00000200ul) >> 9)
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SMBUS_SUSPEND_DET_SET(x) \
   (((x) << 9) & 0x00000200ul)
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SMBUS_SUSPEND_DET_MODIFY(r, x) \
   ((((x) << 9) & 0x00000200ul) | ((r) & 0xfffffdfful))
/* Field member: i2c::IC_SMBUS_INTR_STAT.RSVD_R_SLV_RX_PEC_NACK            */
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SLV_RX_PEC_NACK_MSB 8u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SLV_RX_PEC_NACK_LSB 8u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SLV_RX_PEC_NACK_WIDTH 1u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SLV_RX_PEC_NACK_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SLV_RX_PEC_NACK_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SLV_RX_PEC_NACK_FIELD_MASK 0x00000100ul
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SLV_RX_PEC_NACK_GET(x) \
   (((x) & 0x00000100ul) >> 8)
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SLV_RX_PEC_NACK_SET(x) \
   (((x) << 8) & 0x00000100ul)
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_SLV_RX_PEC_NACK_MODIFY(r, x) \
   ((((x) << 8) & 0x00000100ul) | ((r) & 0xfffffefful))
/* Field member: i2c::IC_SMBUS_INTR_STAT.RSVD_R_ARP_ASSGN_ADDR_CMD_DET     */
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_ASSGN_ADDR_CMD_DET_MSB 7u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_ASSGN_ADDR_CMD_DET_LSB 7u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_ASSGN_ADDR_CMD_DET_WIDTH 1u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_ASSGN_ADDR_CMD_DET_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_ASSGN_ADDR_CMD_DET_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_ASSGN_ADDR_CMD_DET_FIELD_MASK 0x00000080ul
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_ASSGN_ADDR_CMD_DET_GET(x) \
   (((x) & 0x00000080ul) >> 7)
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_ASSGN_ADDR_CMD_DET_SET(x) \
   (((x) << 7) & 0x00000080ul)
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_ASSGN_ADDR_CMD_DET_MODIFY(r, x) \
   ((((x) << 7) & 0x00000080ul) | ((r) & 0xffffff7ful))
/* Field member: i2c::IC_SMBUS_INTR_STAT.RSVD_R_ARP_GET_UDID_CMD_DET       */
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_GET_UDID_CMD_DET_MSB 6u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_GET_UDID_CMD_DET_LSB 6u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_GET_UDID_CMD_DET_WIDTH 1u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_GET_UDID_CMD_DET_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_GET_UDID_CMD_DET_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_GET_UDID_CMD_DET_FIELD_MASK 0x00000040ul
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_GET_UDID_CMD_DET_GET(x) \
   (((x) & 0x00000040ul) >> 6)
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_GET_UDID_CMD_DET_SET(x) \
   (((x) << 6) & 0x00000040ul)
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_GET_UDID_CMD_DET_MODIFY(r, x) \
   ((((x) << 6) & 0x00000040ul) | ((r) & 0xffffffbful))
/* Field member: i2c::IC_SMBUS_INTR_STAT.RSVD_R_ARP_RST_CMD_DET            */
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_RST_CMD_DET_MSB 5u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_RST_CMD_DET_LSB 5u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_RST_CMD_DET_WIDTH 1u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_RST_CMD_DET_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_RST_CMD_DET_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_RST_CMD_DET_FIELD_MASK 0x00000020ul
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_RST_CMD_DET_GET(x) \
   (((x) & 0x00000020ul) >> 5)
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_RST_CMD_DET_SET(x) \
   (((x) << 5) & 0x00000020ul)
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_RST_CMD_DET_MODIFY(r, x) \
   ((((x) << 5) & 0x00000020ul) | ((r) & 0xffffffdful))
/* Field member: i2c::IC_SMBUS_INTR_STAT.RSVD_R_ARP_PREPARE_CMD_DET        */
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_PREPARE_CMD_DET_MSB 4u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_PREPARE_CMD_DET_LSB 4u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_PREPARE_CMD_DET_WIDTH 1u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_PREPARE_CMD_DET_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_PREPARE_CMD_DET_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_PREPARE_CMD_DET_FIELD_MASK 0x00000010ul
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_PREPARE_CMD_DET_GET(x) \
   (((x) & 0x00000010ul) >> 4)
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_PREPARE_CMD_DET_SET(x) \
   (((x) << 4) & 0x00000010ul)
#define I2C_IC_SMBUS_INTR_STAT_RSVD_R_ARP_PREPARE_CMD_DET_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010ul) | ((r) & 0xffffffeful))
/* Field member: i2c::IC_SMBUS_INTR_STAT.R_HOST_NOTIFY_MST_DET             */
#define I2C_IC_SMBUS_INTR_STAT_R_HOST_NOTIFY_MST_DET_MSB 3u
#define I2C_IC_SMBUS_INTR_STAT_R_HOST_NOTIFY_MST_DET_LSB 3u
#define I2C_IC_SMBUS_INTR_STAT_R_HOST_NOTIFY_MST_DET_WIDTH 1u
#define I2C_IC_SMBUS_INTR_STAT_R_HOST_NOTIFY_MST_DET_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_STAT_R_HOST_NOTIFY_MST_DET_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_INTR_STAT_R_HOST_NOTIFY_MST_DET_RESET 0x0u
#define I2C_IC_SMBUS_INTR_STAT_R_HOST_NOTIFY_MST_DET_FIELD_MASK 0x00000008ul
#define I2C_IC_SMBUS_INTR_STAT_R_HOST_NOTIFY_MST_DET_GET(x) \
   (((x) & 0x00000008ul) >> 3)
#define I2C_IC_SMBUS_INTR_STAT_R_HOST_NOTIFY_MST_DET_SET(x) \
   (((x) << 3) & 0x00000008ul)
#define I2C_IC_SMBUS_INTR_STAT_R_HOST_NOTIFY_MST_DET_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: i2c::IC_SMBUS_INTR_STAT.R_QUICK_CMD_DET                   */
#define I2C_IC_SMBUS_INTR_STAT_R_QUICK_CMD_DET_MSB 2u
#define I2C_IC_SMBUS_INTR_STAT_R_QUICK_CMD_DET_LSB 2u
#define I2C_IC_SMBUS_INTR_STAT_R_QUICK_CMD_DET_WIDTH 1u
#define I2C_IC_SMBUS_INTR_STAT_R_QUICK_CMD_DET_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_STAT_R_QUICK_CMD_DET_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_INTR_STAT_R_QUICK_CMD_DET_RESET 0x0u
#define I2C_IC_SMBUS_INTR_STAT_R_QUICK_CMD_DET_FIELD_MASK 0x00000004ul
#define I2C_IC_SMBUS_INTR_STAT_R_QUICK_CMD_DET_GET(x) \
   (((x) & 0x00000004ul) >> 2)
#define I2C_IC_SMBUS_INTR_STAT_R_QUICK_CMD_DET_SET(x) \
   (((x) << 2) & 0x00000004ul)
#define I2C_IC_SMBUS_INTR_STAT_R_QUICK_CMD_DET_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004ul) | ((r) & 0xfffffffbul))
/* Field member: i2c::IC_SMBUS_INTR_STAT.R_MST_CLOCK_EXTND_TIMEOUT         */
#define I2C_IC_SMBUS_INTR_STAT_R_MST_CLOCK_EXTND_TIMEOUT_MSB 1u
#define I2C_IC_SMBUS_INTR_STAT_R_MST_CLOCK_EXTND_TIMEOUT_LSB 1u
#define I2C_IC_SMBUS_INTR_STAT_R_MST_CLOCK_EXTND_TIMEOUT_WIDTH 1u
#define I2C_IC_SMBUS_INTR_STAT_R_MST_CLOCK_EXTND_TIMEOUT_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_STAT_R_MST_CLOCK_EXTND_TIMEOUT_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_INTR_STAT_R_MST_CLOCK_EXTND_TIMEOUT_RESET 0x0u
#define I2C_IC_SMBUS_INTR_STAT_R_MST_CLOCK_EXTND_TIMEOUT_FIELD_MASK 0x00000002ul
#define I2C_IC_SMBUS_INTR_STAT_R_MST_CLOCK_EXTND_TIMEOUT_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define I2C_IC_SMBUS_INTR_STAT_R_MST_CLOCK_EXTND_TIMEOUT_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define I2C_IC_SMBUS_INTR_STAT_R_MST_CLOCK_EXTND_TIMEOUT_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: i2c::IC_SMBUS_INTR_STAT.R_SLV_CLOCK_EXTND_TIMEOUT         */
#define I2C_IC_SMBUS_INTR_STAT_R_SLV_CLOCK_EXTND_TIMEOUT_MSB 0u
#define I2C_IC_SMBUS_INTR_STAT_R_SLV_CLOCK_EXTND_TIMEOUT_LSB 0u
#define I2C_IC_SMBUS_INTR_STAT_R_SLV_CLOCK_EXTND_TIMEOUT_WIDTH 1u
#define I2C_IC_SMBUS_INTR_STAT_R_SLV_CLOCK_EXTND_TIMEOUT_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_STAT_R_SLV_CLOCK_EXTND_TIMEOUT_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_INTR_STAT_R_SLV_CLOCK_EXTND_TIMEOUT_RESET 0x0u
#define I2C_IC_SMBUS_INTR_STAT_R_SLV_CLOCK_EXTND_TIMEOUT_FIELD_MASK 0x00000001ul
#define I2C_IC_SMBUS_INTR_STAT_R_SLV_CLOCK_EXTND_TIMEOUT_GET(x) \
   ((x) & 0x00000001ul)
#define I2C_IC_SMBUS_INTR_STAT_R_SLV_CLOCK_EXTND_TIMEOUT_SET(x) \
   ((x) & 0x00000001ul)
#define I2C_IC_SMBUS_INTR_STAT_R_SLV_CLOCK_EXTND_TIMEOUT_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_SMBUS_INTR_MASK                                  */
/* Register template: i2c::IC_SMBUS_INTR_MASK                              */
/* Field member: i2c::IC_SMBUS_INTR_MASK.RSVD_IC_SMBUS_INTR_MASK           */
#define I2C_IC_SMBUS_INTR_MASK_RSVD_IC_SMBUS_INTR_MASK_MSB 31u
#define I2C_IC_SMBUS_INTR_MASK_RSVD_IC_SMBUS_INTR_MASK_LSB 11u
#define I2C_IC_SMBUS_INTR_MASK_RSVD_IC_SMBUS_INTR_MASK_WIDTH 21u
#define I2C_IC_SMBUS_INTR_MASK_RSVD_IC_SMBUS_INTR_MASK_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_MASK_RSVD_IC_SMBUS_INTR_MASK_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_INTR_MASK_RSVD_IC_SMBUS_INTR_MASK_FIELD_MASK 0xfffff800ul
#define I2C_IC_SMBUS_INTR_MASK_RSVD_IC_SMBUS_INTR_MASK_GET(x) \
   (((x) & 0xfffff800ul) >> 11)
#define I2C_IC_SMBUS_INTR_MASK_RSVD_IC_SMBUS_INTR_MASK_SET(x) \
   (((x) << 11) & 0xfffff800ul)
#define I2C_IC_SMBUS_INTR_MASK_RSVD_IC_SMBUS_INTR_MASK_MODIFY(r, x) \
   ((((x) << 11) & 0xfffff800ul) | ((r) & 0x000007fful))
/* Field member: i2c::IC_SMBUS_INTR_MASK.RSVD_IC_SMBUS_INTR_MASK_9_10      */
#define I2C_IC_SMBUS_INTR_MASK_RSVD_IC_SMBUS_INTR_MASK_9_10_MSB 10u
#define I2C_IC_SMBUS_INTR_MASK_RSVD_IC_SMBUS_INTR_MASK_9_10_LSB 9u
#define I2C_IC_SMBUS_INTR_MASK_RSVD_IC_SMBUS_INTR_MASK_9_10_WIDTH 2u
#define I2C_IC_SMBUS_INTR_MASK_RSVD_IC_SMBUS_INTR_MASK_9_10_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_MASK_RSVD_IC_SMBUS_INTR_MASK_9_10_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_INTR_MASK_RSVD_IC_SMBUS_INTR_MASK_9_10_FIELD_MASK 0x00000600ul
#define I2C_IC_SMBUS_INTR_MASK_RSVD_IC_SMBUS_INTR_MASK_9_10_GET(x) \
   (((x) & 0x00000600ul) >> 9)
#define I2C_IC_SMBUS_INTR_MASK_RSVD_IC_SMBUS_INTR_MASK_9_10_SET(x) \
   (((x) << 9) & 0x00000600ul)
#define I2C_IC_SMBUS_INTR_MASK_RSVD_IC_SMBUS_INTR_MASK_9_10_MODIFY(r, x) \
   ((((x) << 9) & 0x00000600ul) | ((r) & 0xfffff9fful))
/* Field member: i2c::IC_SMBUS_INTR_MASK.RSVD_M_ARP_4_8                    */
#define I2C_IC_SMBUS_INTR_MASK_RSVD_M_ARP_4_8_MSB 8u
#define I2C_IC_SMBUS_INTR_MASK_RSVD_M_ARP_4_8_LSB 4u
#define I2C_IC_SMBUS_INTR_MASK_RSVD_M_ARP_4_8_WIDTH 5u
#define I2C_IC_SMBUS_INTR_MASK_RSVD_M_ARP_4_8_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_MASK_RSVD_M_ARP_4_8_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_INTR_MASK_RSVD_M_ARP_4_8_RESET 0x00u
#define I2C_IC_SMBUS_INTR_MASK_RSVD_M_ARP_4_8_FIELD_MASK 0x000001f0ul
#define I2C_IC_SMBUS_INTR_MASK_RSVD_M_ARP_4_8_GET(x) \
   (((x) & 0x000001f0ul) >> 4)
#define I2C_IC_SMBUS_INTR_MASK_RSVD_M_ARP_4_8_SET(x) \
   (((x) << 4) & 0x000001f0ul)
#define I2C_IC_SMBUS_INTR_MASK_RSVD_M_ARP_4_8_MODIFY(r, x) \
   ((((x) << 4) & 0x000001f0ul) | ((r) & 0xfffffe0ful))
/* Field member: i2c::IC_SMBUS_INTR_MASK.M_HOST_NOTIFY_MST_DET             */
#define I2C_IC_SMBUS_INTR_MASK_M_HOST_NOTIFY_MST_DET_MSB 3u
#define I2C_IC_SMBUS_INTR_MASK_M_HOST_NOTIFY_MST_DET_LSB 3u
#define I2C_IC_SMBUS_INTR_MASK_M_HOST_NOTIFY_MST_DET_WIDTH 1u
#define I2C_IC_SMBUS_INTR_MASK_M_HOST_NOTIFY_MST_DET_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_MASK_M_HOST_NOTIFY_MST_DET_WRITE_ACCESS 1u
#define I2C_IC_SMBUS_INTR_MASK_M_HOST_NOTIFY_MST_DET_RESET 0x1u
#define I2C_IC_SMBUS_INTR_MASK_M_HOST_NOTIFY_MST_DET_FIELD_MASK 0x00000008ul
#define I2C_IC_SMBUS_INTR_MASK_M_HOST_NOTIFY_MST_DET_GET(x) \
   (((x) & 0x00000008ul) >> 3)
#define I2C_IC_SMBUS_INTR_MASK_M_HOST_NOTIFY_MST_DET_SET(x) \
   (((x) << 3) & 0x00000008ul)
#define I2C_IC_SMBUS_INTR_MASK_M_HOST_NOTIFY_MST_DET_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: i2c::IC_SMBUS_INTR_MASK.M_QUICK_CMD_DET                   */
#define I2C_IC_SMBUS_INTR_MASK_M_QUICK_CMD_DET_MSB 2u
#define I2C_IC_SMBUS_INTR_MASK_M_QUICK_CMD_DET_LSB 2u
#define I2C_IC_SMBUS_INTR_MASK_M_QUICK_CMD_DET_WIDTH 1u
#define I2C_IC_SMBUS_INTR_MASK_M_QUICK_CMD_DET_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_MASK_M_QUICK_CMD_DET_WRITE_ACCESS 1u
#define I2C_IC_SMBUS_INTR_MASK_M_QUICK_CMD_DET_RESET 0x1u
#define I2C_IC_SMBUS_INTR_MASK_M_QUICK_CMD_DET_FIELD_MASK 0x00000004ul
#define I2C_IC_SMBUS_INTR_MASK_M_QUICK_CMD_DET_GET(x) \
   (((x) & 0x00000004ul) >> 2)
#define I2C_IC_SMBUS_INTR_MASK_M_QUICK_CMD_DET_SET(x) \
   (((x) << 2) & 0x00000004ul)
#define I2C_IC_SMBUS_INTR_MASK_M_QUICK_CMD_DET_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004ul) | ((r) & 0xfffffffbul))
/* Field member: i2c::IC_SMBUS_INTR_MASK.M_MST_CLOCK_EXTND_TIMEOUT         */
#define I2C_IC_SMBUS_INTR_MASK_M_MST_CLOCK_EXTND_TIMEOUT_MSB 1u
#define I2C_IC_SMBUS_INTR_MASK_M_MST_CLOCK_EXTND_TIMEOUT_LSB 1u
#define I2C_IC_SMBUS_INTR_MASK_M_MST_CLOCK_EXTND_TIMEOUT_WIDTH 1u
#define I2C_IC_SMBUS_INTR_MASK_M_MST_CLOCK_EXTND_TIMEOUT_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_MASK_M_MST_CLOCK_EXTND_TIMEOUT_WRITE_ACCESS 1u
#define I2C_IC_SMBUS_INTR_MASK_M_MST_CLOCK_EXTND_TIMEOUT_RESET 0x1u
#define I2C_IC_SMBUS_INTR_MASK_M_MST_CLOCK_EXTND_TIMEOUT_FIELD_MASK 0x00000002ul
#define I2C_IC_SMBUS_INTR_MASK_M_MST_CLOCK_EXTND_TIMEOUT_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define I2C_IC_SMBUS_INTR_MASK_M_MST_CLOCK_EXTND_TIMEOUT_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define I2C_IC_SMBUS_INTR_MASK_M_MST_CLOCK_EXTND_TIMEOUT_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: i2c::IC_SMBUS_INTR_MASK.M_SLV_CLOCK_EXTND_TIMEOUT         */
#define I2C_IC_SMBUS_INTR_MASK_M_SLV_CLOCK_EXTND_TIMEOUT_MSB 0u
#define I2C_IC_SMBUS_INTR_MASK_M_SLV_CLOCK_EXTND_TIMEOUT_LSB 0u
#define I2C_IC_SMBUS_INTR_MASK_M_SLV_CLOCK_EXTND_TIMEOUT_WIDTH 1u
#define I2C_IC_SMBUS_INTR_MASK_M_SLV_CLOCK_EXTND_TIMEOUT_READ_ACCESS 1u
#define I2C_IC_SMBUS_INTR_MASK_M_SLV_CLOCK_EXTND_TIMEOUT_WRITE_ACCESS 1u
#define I2C_IC_SMBUS_INTR_MASK_M_SLV_CLOCK_EXTND_TIMEOUT_RESET 0x1u
#define I2C_IC_SMBUS_INTR_MASK_M_SLV_CLOCK_EXTND_TIMEOUT_FIELD_MASK 0x00000001ul
#define I2C_IC_SMBUS_INTR_MASK_M_SLV_CLOCK_EXTND_TIMEOUT_GET(x) \
   ((x) & 0x00000001ul)
#define I2C_IC_SMBUS_INTR_MASK_M_SLV_CLOCK_EXTND_TIMEOUT_SET(x) \
   ((x) & 0x00000001ul)
#define I2C_IC_SMBUS_INTR_MASK_M_SLV_CLOCK_EXTND_TIMEOUT_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_SMBUS_RAW_INTR_STAT                              */
/* Register template: i2c::IC_SMBUS_RAW_INTR_STAT                          */
/* Field member: i2c::IC_SMBUS_RAW_INTR_STAT.RSVD_IC_SMBUS_RAW_INTR_STAT   */
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_IC_SMBUS_RAW_INTR_STAT_MSB 31u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_IC_SMBUS_RAW_INTR_STAT_LSB 11u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_IC_SMBUS_RAW_INTR_STAT_WIDTH 21u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_IC_SMBUS_RAW_INTR_STAT_READ_ACCESS 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_IC_SMBUS_RAW_INTR_STAT_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_IC_SMBUS_RAW_INTR_STAT_FIELD_MASK 0xfffff800ul
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_IC_SMBUS_RAW_INTR_STAT_GET(x) \
   (((x) & 0xfffff800ul) >> 11)
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_IC_SMBUS_RAW_INTR_STAT_SET(x) \
   (((x) << 11) & 0xfffff800ul)
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_IC_SMBUS_RAW_INTR_STAT_MODIFY(r, x) \
   ((((x) << 11) & 0xfffff800ul) | ((r) & 0x000007fful))
/* Field member: i2c::IC_SMBUS_RAW_INTR_STAT.RSVD_SMBUS_ALERT_DET          */
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SMBUS_ALERT_DET_MSB 10u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SMBUS_ALERT_DET_LSB 10u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SMBUS_ALERT_DET_WIDTH 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SMBUS_ALERT_DET_READ_ACCESS 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SMBUS_ALERT_DET_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SMBUS_ALERT_DET_FIELD_MASK 0x00000400ul
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SMBUS_ALERT_DET_GET(x) \
   (((x) & 0x00000400ul) >> 10)
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SMBUS_ALERT_DET_SET(x) \
   (((x) << 10) & 0x00000400ul)
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SMBUS_ALERT_DET_MODIFY(r, x) \
   ((((x) << 10) & 0x00000400ul) | ((r) & 0xfffffbfful))
/* Field member: i2c::IC_SMBUS_RAW_INTR_STAT.RSVD_SMBUS_SUSPEND_DET        */
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SMBUS_SUSPEND_DET_MSB 9u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SMBUS_SUSPEND_DET_LSB 9u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SMBUS_SUSPEND_DET_WIDTH 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SMBUS_SUSPEND_DET_READ_ACCESS 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SMBUS_SUSPEND_DET_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SMBUS_SUSPEND_DET_FIELD_MASK 0x00000200ul
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SMBUS_SUSPEND_DET_GET(x) \
   (((x) & 0x00000200ul) >> 9)
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SMBUS_SUSPEND_DET_SET(x) \
   (((x) << 9) & 0x00000200ul)
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SMBUS_SUSPEND_DET_MODIFY(r, x) \
   ((((x) << 9) & 0x00000200ul) | ((r) & 0xfffffdfful))
/* Field member: i2c::IC_SMBUS_RAW_INTR_STAT.RSVD_SLV_RX_PEC_NACK          */
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SLV_RX_PEC_NACK_MSB 8u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SLV_RX_PEC_NACK_LSB 8u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SLV_RX_PEC_NACK_WIDTH 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SLV_RX_PEC_NACK_READ_ACCESS 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SLV_RX_PEC_NACK_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SLV_RX_PEC_NACK_FIELD_MASK 0x00000100ul
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SLV_RX_PEC_NACK_GET(x) \
   (((x) & 0x00000100ul) >> 8)
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SLV_RX_PEC_NACK_SET(x) \
   (((x) << 8) & 0x00000100ul)
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_SLV_RX_PEC_NACK_MODIFY(r, x) \
   ((((x) << 8) & 0x00000100ul) | ((r) & 0xfffffefful))
/* Field member: i2c::IC_SMBUS_RAW_INTR_STAT.RSVD_ARP_ASSGN_ADDR_CMD_DET   */
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_ASSGN_ADDR_CMD_DET_MSB 7u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_ASSGN_ADDR_CMD_DET_LSB 7u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_ASSGN_ADDR_CMD_DET_WIDTH 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_ASSGN_ADDR_CMD_DET_READ_ACCESS 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_ASSGN_ADDR_CMD_DET_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_ASSGN_ADDR_CMD_DET_FIELD_MASK 0x00000080ul
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_ASSGN_ADDR_CMD_DET_GET(x) \
   (((x) & 0x00000080ul) >> 7)
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_ASSGN_ADDR_CMD_DET_SET(x) \
   (((x) << 7) & 0x00000080ul)
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_ASSGN_ADDR_CMD_DET_MODIFY(r, x) \
   ((((x) << 7) & 0x00000080ul) | ((r) & 0xffffff7ful))
/* Field member: i2c::IC_SMBUS_RAW_INTR_STAT.RSVD_ARP_GET_UDID_CMD_DET     */
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_GET_UDID_CMD_DET_MSB 6u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_GET_UDID_CMD_DET_LSB 6u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_GET_UDID_CMD_DET_WIDTH 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_GET_UDID_CMD_DET_READ_ACCESS 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_GET_UDID_CMD_DET_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_GET_UDID_CMD_DET_FIELD_MASK 0x00000040ul
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_GET_UDID_CMD_DET_GET(x) \
   (((x) & 0x00000040ul) >> 6)
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_GET_UDID_CMD_DET_SET(x) \
   (((x) << 6) & 0x00000040ul)
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_GET_UDID_CMD_DET_MODIFY(r, x) \
   ((((x) << 6) & 0x00000040ul) | ((r) & 0xffffffbful))
/* Field member: i2c::IC_SMBUS_RAW_INTR_STAT.RSVD_ARP_RST_CMD_DET          */
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_RST_CMD_DET_MSB 5u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_RST_CMD_DET_LSB 5u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_RST_CMD_DET_WIDTH 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_RST_CMD_DET_READ_ACCESS 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_RST_CMD_DET_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_RST_CMD_DET_FIELD_MASK 0x00000020ul
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_RST_CMD_DET_GET(x) \
   (((x) & 0x00000020ul) >> 5)
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_RST_CMD_DET_SET(x) \
   (((x) << 5) & 0x00000020ul)
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_RST_CMD_DET_MODIFY(r, x) \
   ((((x) << 5) & 0x00000020ul) | ((r) & 0xffffffdful))
/* Field member: i2c::IC_SMBUS_RAW_INTR_STAT.RSVD_ARP_PREPARE_CMD_DET      */
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_PREPARE_CMD_DET_MSB 4u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_PREPARE_CMD_DET_LSB 4u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_PREPARE_CMD_DET_WIDTH 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_PREPARE_CMD_DET_READ_ACCESS 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_PREPARE_CMD_DET_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_PREPARE_CMD_DET_FIELD_MASK 0x00000010ul
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_PREPARE_CMD_DET_GET(x) \
   (((x) & 0x00000010ul) >> 4)
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_PREPARE_CMD_DET_SET(x) \
   (((x) << 4) & 0x00000010ul)
#define I2C_IC_SMBUS_RAW_INTR_STAT_RSVD_ARP_PREPARE_CMD_DET_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010ul) | ((r) & 0xffffffeful))
/* Field member: i2c::IC_SMBUS_RAW_INTR_STAT.HOST_NTFY_MST_DET             */
#define I2C_IC_SMBUS_RAW_INTR_STAT_HOST_NTFY_MST_DET_MSB 3u
#define I2C_IC_SMBUS_RAW_INTR_STAT_HOST_NTFY_MST_DET_LSB 3u
#define I2C_IC_SMBUS_RAW_INTR_STAT_HOST_NTFY_MST_DET_WIDTH 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_HOST_NTFY_MST_DET_READ_ACCESS 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_HOST_NTFY_MST_DET_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_HOST_NTFY_MST_DET_RESET 0x0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_HOST_NTFY_MST_DET_FIELD_MASK 0x00000008ul
#define I2C_IC_SMBUS_RAW_INTR_STAT_HOST_NTFY_MST_DET_GET(x) \
   (((x) & 0x00000008ul) >> 3)
#define I2C_IC_SMBUS_RAW_INTR_STAT_HOST_NTFY_MST_DET_SET(x) \
   (((x) << 3) & 0x00000008ul)
#define I2C_IC_SMBUS_RAW_INTR_STAT_HOST_NTFY_MST_DET_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: i2c::IC_SMBUS_RAW_INTR_STAT.QUICK_CMD_DET                 */
#define I2C_IC_SMBUS_RAW_INTR_STAT_QUICK_CMD_DET_MSB 2u
#define I2C_IC_SMBUS_RAW_INTR_STAT_QUICK_CMD_DET_LSB 2u
#define I2C_IC_SMBUS_RAW_INTR_STAT_QUICK_CMD_DET_WIDTH 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_QUICK_CMD_DET_READ_ACCESS 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_QUICK_CMD_DET_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_QUICK_CMD_DET_RESET 0x0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_QUICK_CMD_DET_FIELD_MASK 0x00000004ul
#define I2C_IC_SMBUS_RAW_INTR_STAT_QUICK_CMD_DET_GET(x) \
   (((x) & 0x00000004ul) >> 2)
#define I2C_IC_SMBUS_RAW_INTR_STAT_QUICK_CMD_DET_SET(x) \
   (((x) << 2) & 0x00000004ul)
#define I2C_IC_SMBUS_RAW_INTR_STAT_QUICK_CMD_DET_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004ul) | ((r) & 0xfffffffbul))
/* Field member: i2c::IC_SMBUS_RAW_INTR_STAT.MST_CLOCK_EXTND_TIMEOUT       */
#define I2C_IC_SMBUS_RAW_INTR_STAT_MST_CLOCK_EXTND_TIMEOUT_MSB 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_MST_CLOCK_EXTND_TIMEOUT_LSB 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_MST_CLOCK_EXTND_TIMEOUT_WIDTH 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_MST_CLOCK_EXTND_TIMEOUT_READ_ACCESS 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_MST_CLOCK_EXTND_TIMEOUT_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_MST_CLOCK_EXTND_TIMEOUT_RESET 0x0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_MST_CLOCK_EXTND_TIMEOUT_FIELD_MASK 0x00000002ul
#define I2C_IC_SMBUS_RAW_INTR_STAT_MST_CLOCK_EXTND_TIMEOUT_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define I2C_IC_SMBUS_RAW_INTR_STAT_MST_CLOCK_EXTND_TIMEOUT_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define I2C_IC_SMBUS_RAW_INTR_STAT_MST_CLOCK_EXTND_TIMEOUT_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: i2c::IC_SMBUS_RAW_INTR_STAT.SLV_CLOCK_EXTND_TIMEOUT       */
#define I2C_IC_SMBUS_RAW_INTR_STAT_SLV_CLOCK_EXTND_TIMEOUT_MSB 0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_SLV_CLOCK_EXTND_TIMEOUT_LSB 0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_SLV_CLOCK_EXTND_TIMEOUT_WIDTH 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_SLV_CLOCK_EXTND_TIMEOUT_READ_ACCESS 1u
#define I2C_IC_SMBUS_RAW_INTR_STAT_SLV_CLOCK_EXTND_TIMEOUT_WRITE_ACCESS 0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_SLV_CLOCK_EXTND_TIMEOUT_RESET 0x0u
#define I2C_IC_SMBUS_RAW_INTR_STAT_SLV_CLOCK_EXTND_TIMEOUT_FIELD_MASK 0x00000001ul
#define I2C_IC_SMBUS_RAW_INTR_STAT_SLV_CLOCK_EXTND_TIMEOUT_GET(x) \
   ((x) & 0x00000001ul)
#define I2C_IC_SMBUS_RAW_INTR_STAT_SLV_CLOCK_EXTND_TIMEOUT_SET(x) \
   ((x) & 0x00000001ul)
#define I2C_IC_SMBUS_RAW_INTR_STAT_SLV_CLOCK_EXTND_TIMEOUT_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::IC_CLR_SMBUS_INTR                                   */
/* Register template: i2c::IC_CLR_SMBUS_INTR                               */
/* Field member: i2c::IC_CLR_SMBUS_INTR.RSVD_IC_CLR_SMBUS_INTR             */
#define I2C_IC_CLR_SMBUS_INTR_RSVD_IC_CLR_SMBUS_INTR_MSB 31u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_IC_CLR_SMBUS_INTR_LSB 11u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_IC_CLR_SMBUS_INTR_WIDTH 21u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_IC_CLR_SMBUS_INTR_READ_ACCESS 0u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_IC_CLR_SMBUS_INTR_WRITE_ACCESS 1u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_IC_CLR_SMBUS_INTR_FIELD_MASK 0xfffff800ul
#define I2C_IC_CLR_SMBUS_INTR_RSVD_IC_CLR_SMBUS_INTR_GET(x) \
   (((x) & 0xfffff800ul) >> 11)
#define I2C_IC_CLR_SMBUS_INTR_RSVD_IC_CLR_SMBUS_INTR_SET(x) \
   (((x) << 11) & 0xfffff800ul)
#define I2C_IC_CLR_SMBUS_INTR_RSVD_IC_CLR_SMBUS_INTR_MODIFY(r, x) \
   ((((x) << 11) & 0xfffff800ul) | ((r) & 0x000007fful))
/* Field member: i2c::IC_CLR_SMBUS_INTR.RSVD_CLR_SMBUS_ALERT_DET           */
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SMBUS_ALERT_DET_MSB 10u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SMBUS_ALERT_DET_LSB 10u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SMBUS_ALERT_DET_WIDTH 1u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SMBUS_ALERT_DET_READ_ACCESS 0u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SMBUS_ALERT_DET_WRITE_ACCESS 1u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SMBUS_ALERT_DET_FIELD_MASK 0x00000400ul
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SMBUS_ALERT_DET_GET(x) \
   (((x) & 0x00000400ul) >> 10)
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SMBUS_ALERT_DET_SET(x) \
   (((x) << 10) & 0x00000400ul)
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SMBUS_ALERT_DET_MODIFY(r, x) \
   ((((x) << 10) & 0x00000400ul) | ((r) & 0xfffffbfful))
/* Field member: i2c::IC_CLR_SMBUS_INTR.RSVD_CLR_SMBUS_SUSPEND_DET         */
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SMBUS_SUSPEND_DET_MSB 9u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SMBUS_SUSPEND_DET_LSB 9u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SMBUS_SUSPEND_DET_WIDTH 1u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SMBUS_SUSPEND_DET_READ_ACCESS 0u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SMBUS_SUSPEND_DET_WRITE_ACCESS 1u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SMBUS_SUSPEND_DET_FIELD_MASK 0x00000200ul
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SMBUS_SUSPEND_DET_GET(x) \
   (((x) & 0x00000200ul) >> 9)
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SMBUS_SUSPEND_DET_SET(x) \
   (((x) << 9) & 0x00000200ul)
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SMBUS_SUSPEND_DET_MODIFY(r, x) \
   ((((x) << 9) & 0x00000200ul) | ((r) & 0xfffffdfful))
/* Field member: i2c::IC_CLR_SMBUS_INTR.RSVD_CLR_SLV_RX_PEC_NACK           */
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SLV_RX_PEC_NACK_MSB 8u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SLV_RX_PEC_NACK_LSB 8u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SLV_RX_PEC_NACK_WIDTH 1u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SLV_RX_PEC_NACK_READ_ACCESS 0u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SLV_RX_PEC_NACK_WRITE_ACCESS 1u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SLV_RX_PEC_NACK_FIELD_MASK 0x00000100ul
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SLV_RX_PEC_NACK_GET(x) \
   (((x) & 0x00000100ul) >> 8)
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SLV_RX_PEC_NACK_SET(x) \
   (((x) << 8) & 0x00000100ul)
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_SLV_RX_PEC_NACK_MODIFY(r, x) \
   ((((x) << 8) & 0x00000100ul) | ((r) & 0xfffffefful))
/* Field member: i2c::IC_CLR_SMBUS_INTR.RSVD_CLR_ARP_ASSGN_ADDR_CMD_DET    */
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_ASSGN_ADDR_CMD_DET_MSB 7u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_ASSGN_ADDR_CMD_DET_LSB 7u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_ASSGN_ADDR_CMD_DET_WIDTH 1u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_ASSGN_ADDR_CMD_DET_READ_ACCESS 0u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_ASSGN_ADDR_CMD_DET_WRITE_ACCESS 1u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_ASSGN_ADDR_CMD_DET_FIELD_MASK 0x00000080ul
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_ASSGN_ADDR_CMD_DET_GET(x) \
   (((x) & 0x00000080ul) >> 7)
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_ASSGN_ADDR_CMD_DET_SET(x) \
   (((x) << 7) & 0x00000080ul)
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_ASSGN_ADDR_CMD_DET_MODIFY(r, x) \
   ((((x) << 7) & 0x00000080ul) | ((r) & 0xffffff7ful))
/* Field member: i2c::IC_CLR_SMBUS_INTR.RSVD_CLR_ARP_GET_UDID_CMD_DET      */
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_GET_UDID_CMD_DET_MSB 6u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_GET_UDID_CMD_DET_LSB 6u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_GET_UDID_CMD_DET_WIDTH 1u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_GET_UDID_CMD_DET_READ_ACCESS 0u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_GET_UDID_CMD_DET_WRITE_ACCESS 1u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_GET_UDID_CMD_DET_FIELD_MASK 0x00000040ul
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_GET_UDID_CMD_DET_GET(x) \
   (((x) & 0x00000040ul) >> 6)
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_GET_UDID_CMD_DET_SET(x) \
   (((x) << 6) & 0x00000040ul)
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_GET_UDID_CMD_DET_MODIFY(r, x) \
   ((((x) << 6) & 0x00000040ul) | ((r) & 0xffffffbful))
/* Field member: i2c::IC_CLR_SMBUS_INTR.RSVD_CLR_ARP_RST_CMD_DET           */
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_RST_CMD_DET_MSB 5u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_RST_CMD_DET_LSB 5u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_RST_CMD_DET_WIDTH 1u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_RST_CMD_DET_READ_ACCESS 0u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_RST_CMD_DET_WRITE_ACCESS 1u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_RST_CMD_DET_FIELD_MASK 0x00000020ul
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_RST_CMD_DET_GET(x) \
   (((x) & 0x00000020ul) >> 5)
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_RST_CMD_DET_SET(x) \
   (((x) << 5) & 0x00000020ul)
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_RST_CMD_DET_MODIFY(r, x) \
   ((((x) << 5) & 0x00000020ul) | ((r) & 0xffffffdful))
/* Field member: i2c::IC_CLR_SMBUS_INTR.RSVD_CLR_ARP_PREPARE_CMD_DET       */
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_PREPARE_CMD_DET_MSB 4u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_PREPARE_CMD_DET_LSB 4u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_PREPARE_CMD_DET_WIDTH 1u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_PREPARE_CMD_DET_READ_ACCESS 0u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_PREPARE_CMD_DET_WRITE_ACCESS 1u
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_PREPARE_CMD_DET_FIELD_MASK 0x00000010ul
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_PREPARE_CMD_DET_GET(x) \
   (((x) & 0x00000010ul) >> 4)
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_PREPARE_CMD_DET_SET(x) \
   (((x) << 4) & 0x00000010ul)
#define I2C_IC_CLR_SMBUS_INTR_RSVD_CLR_ARP_PREPARE_CMD_DET_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010ul) | ((r) & 0xffffffeful))
/* Field member: i2c::IC_CLR_SMBUS_INTR.CLR_HOST_NOTIFY_MST_DET            */
#define I2C_IC_CLR_SMBUS_INTR_CLR_HOST_NOTIFY_MST_DET_MSB 3u
#define I2C_IC_CLR_SMBUS_INTR_CLR_HOST_NOTIFY_MST_DET_LSB 3u
#define I2C_IC_CLR_SMBUS_INTR_CLR_HOST_NOTIFY_MST_DET_WIDTH 1u
#define I2C_IC_CLR_SMBUS_INTR_CLR_HOST_NOTIFY_MST_DET_READ_ACCESS 0u
#define I2C_IC_CLR_SMBUS_INTR_CLR_HOST_NOTIFY_MST_DET_WRITE_ACCESS 1u
#define I2C_IC_CLR_SMBUS_INTR_CLR_HOST_NOTIFY_MST_DET_RESET 0x0u
#define I2C_IC_CLR_SMBUS_INTR_CLR_HOST_NOTIFY_MST_DET_FIELD_MASK 0x00000008ul
#define I2C_IC_CLR_SMBUS_INTR_CLR_HOST_NOTIFY_MST_DET_GET(x) \
   (((x) & 0x00000008ul) >> 3)
#define I2C_IC_CLR_SMBUS_INTR_CLR_HOST_NOTIFY_MST_DET_SET(x) \
   (((x) << 3) & 0x00000008ul)
#define I2C_IC_CLR_SMBUS_INTR_CLR_HOST_NOTIFY_MST_DET_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: i2c::IC_CLR_SMBUS_INTR.CLR_QUICK_CMD_DET                  */
#define I2C_IC_CLR_SMBUS_INTR_CLR_QUICK_CMD_DET_MSB 2u
#define I2C_IC_CLR_SMBUS_INTR_CLR_QUICK_CMD_DET_LSB 2u
#define I2C_IC_CLR_SMBUS_INTR_CLR_QUICK_CMD_DET_WIDTH 1u
#define I2C_IC_CLR_SMBUS_INTR_CLR_QUICK_CMD_DET_READ_ACCESS 0u
#define I2C_IC_CLR_SMBUS_INTR_CLR_QUICK_CMD_DET_WRITE_ACCESS 1u
#define I2C_IC_CLR_SMBUS_INTR_CLR_QUICK_CMD_DET_RESET 0x0u
#define I2C_IC_CLR_SMBUS_INTR_CLR_QUICK_CMD_DET_FIELD_MASK 0x00000004ul
#define I2C_IC_CLR_SMBUS_INTR_CLR_QUICK_CMD_DET_GET(x) \
   (((x) & 0x00000004ul) >> 2)
#define I2C_IC_CLR_SMBUS_INTR_CLR_QUICK_CMD_DET_SET(x) \
   (((x) << 2) & 0x00000004ul)
#define I2C_IC_CLR_SMBUS_INTR_CLR_QUICK_CMD_DET_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004ul) | ((r) & 0xfffffffbul))
/* Field member: i2c::IC_CLR_SMBUS_INTR.CLR_MST_CLOCK_EXTND_TIMEOUT        */
#define I2C_IC_CLR_SMBUS_INTR_CLR_MST_CLOCK_EXTND_TIMEOUT_MSB 1u
#define I2C_IC_CLR_SMBUS_INTR_CLR_MST_CLOCK_EXTND_TIMEOUT_LSB 1u
#define I2C_IC_CLR_SMBUS_INTR_CLR_MST_CLOCK_EXTND_TIMEOUT_WIDTH 1u
#define I2C_IC_CLR_SMBUS_INTR_CLR_MST_CLOCK_EXTND_TIMEOUT_READ_ACCESS 0u
#define I2C_IC_CLR_SMBUS_INTR_CLR_MST_CLOCK_EXTND_TIMEOUT_WRITE_ACCESS 1u
#define I2C_IC_CLR_SMBUS_INTR_CLR_MST_CLOCK_EXTND_TIMEOUT_RESET 0x0u
#define I2C_IC_CLR_SMBUS_INTR_CLR_MST_CLOCK_EXTND_TIMEOUT_FIELD_MASK 0x00000002ul
#define I2C_IC_CLR_SMBUS_INTR_CLR_MST_CLOCK_EXTND_TIMEOUT_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define I2C_IC_CLR_SMBUS_INTR_CLR_MST_CLOCK_EXTND_TIMEOUT_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define I2C_IC_CLR_SMBUS_INTR_CLR_MST_CLOCK_EXTND_TIMEOUT_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: i2c::IC_CLR_SMBUS_INTR.CLR_SLV_CLOCK_EXTND_TIMEOUT        */
#define I2C_IC_CLR_SMBUS_INTR_CLR_SLV_CLOCK_EXTND_TIMEOUT_MSB 0u
#define I2C_IC_CLR_SMBUS_INTR_CLR_SLV_CLOCK_EXTND_TIMEOUT_LSB 0u
#define I2C_IC_CLR_SMBUS_INTR_CLR_SLV_CLOCK_EXTND_TIMEOUT_WIDTH 1u
#define I2C_IC_CLR_SMBUS_INTR_CLR_SLV_CLOCK_EXTND_TIMEOUT_READ_ACCESS 0u
#define I2C_IC_CLR_SMBUS_INTR_CLR_SLV_CLOCK_EXTND_TIMEOUT_WRITE_ACCESS 1u
#define I2C_IC_CLR_SMBUS_INTR_CLR_SLV_CLOCK_EXTND_TIMEOUT_RESET 0x0u
#define I2C_IC_CLR_SMBUS_INTR_CLR_SLV_CLOCK_EXTND_TIMEOUT_FIELD_MASK 0x00000001ul
#define I2C_IC_CLR_SMBUS_INTR_CLR_SLV_CLOCK_EXTND_TIMEOUT_GET(x) \
   ((x) & 0x00000001ul)
#define I2C_IC_CLR_SMBUS_INTR_CLR_SLV_CLOCK_EXTND_TIMEOUT_SET(x) \
   ((x) & 0x00000001ul)
#define I2C_IC_CLR_SMBUS_INTR_CLR_SLV_CLOCK_EXTND_TIMEOUT_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: i2c::REG_TIMEOUT_RST                                     */
/* Register template: i2c::REG_TIMEOUT_RST                                 */
/* Field member: i2c::REG_TIMEOUT_RST.RSVD_REG_TIMEOUT_RST                 */
#define I2C_REG_TIMEOUT_RST_RSVD_REG_TIMEOUT_RST_MSB 31u
#define I2C_REG_TIMEOUT_RST_RSVD_REG_TIMEOUT_RST_LSB 4u
#define I2C_REG_TIMEOUT_RST_RSVD_REG_TIMEOUT_RST_WIDTH 28u
#define I2C_REG_TIMEOUT_RST_RSVD_REG_TIMEOUT_RST_READ_ACCESS 1u
#define I2C_REG_TIMEOUT_RST_RSVD_REG_TIMEOUT_RST_WRITE_ACCESS 0u
#define I2C_REG_TIMEOUT_RST_RSVD_REG_TIMEOUT_RST_FIELD_MASK 0xfffffff0ul
#define I2C_REG_TIMEOUT_RST_RSVD_REG_TIMEOUT_RST_GET(x) \
   (((x) & 0xfffffff0ul) >> 4)
#define I2C_REG_TIMEOUT_RST_RSVD_REG_TIMEOUT_RST_SET(x) \
   (((x) << 4) & 0xfffffff0ul)
#define I2C_REG_TIMEOUT_RST_RSVD_REG_TIMEOUT_RST_MODIFY(r, x) \
   ((((x) << 4) & 0xfffffff0ul) | ((r) & 0x0000000ful))
/* Field member: i2c::REG_TIMEOUT_RST.REG_TIMEOUT_RST_rw                   */
#define I2C_REG_TIMEOUT_RST_REG_TIMEOUT_RST_RW_MSB 3u
#define I2C_REG_TIMEOUT_RST_REG_TIMEOUT_RST_RW_LSB 0u
#define I2C_REG_TIMEOUT_RST_REG_TIMEOUT_RST_RW_WIDTH 4u
#define I2C_REG_TIMEOUT_RST_REG_TIMEOUT_RST_RW_READ_ACCESS 1u
#define I2C_REG_TIMEOUT_RST_REG_TIMEOUT_RST_RW_WRITE_ACCESS 1u
#define I2C_REG_TIMEOUT_RST_REG_TIMEOUT_RST_RW_RESET 0x8u
#define I2C_REG_TIMEOUT_RST_REG_TIMEOUT_RST_RW_FIELD_MASK 0x0000000ful
#define I2C_REG_TIMEOUT_RST_REG_TIMEOUT_RST_RW_GET(x) ((x) & 0x0000000ful)
#define I2C_REG_TIMEOUT_RST_REG_TIMEOUT_RST_RW_SET(x) ((x) & 0x0000000ful)
#define I2C_REG_TIMEOUT_RST_REG_TIMEOUT_RST_RW_MODIFY(r, x) \
   (((x) & 0x0000000ful) | ((r) & 0xfffffff0ul))

/* Register type: i2c::IC_COMP_PARAM_1                                     */
/* Register template: i2c::IC_COMP_PARAM_1                                 */
/* Field member: i2c::IC_COMP_PARAM_1.RSVD_IC_COMP_PARAM_1                 */
#define I2C_IC_COMP_PARAM_1_RSVD_IC_COMP_PARAM_1_MSB 31u
#define I2C_IC_COMP_PARAM_1_RSVD_IC_COMP_PARAM_1_LSB 24u
#define I2C_IC_COMP_PARAM_1_RSVD_IC_COMP_PARAM_1_WIDTH 8u
#define I2C_IC_COMP_PARAM_1_RSVD_IC_COMP_PARAM_1_READ_ACCESS 1u
#define I2C_IC_COMP_PARAM_1_RSVD_IC_COMP_PARAM_1_WRITE_ACCESS 0u
#define I2C_IC_COMP_PARAM_1_RSVD_IC_COMP_PARAM_1_FIELD_MASK 0xff000000ul
#define I2C_IC_COMP_PARAM_1_RSVD_IC_COMP_PARAM_1_GET(x) \
   (((x) & 0xff000000ul) >> 24)
#define I2C_IC_COMP_PARAM_1_RSVD_IC_COMP_PARAM_1_SET(x) \
   (((x) << 24) & 0xff000000ul)
#define I2C_IC_COMP_PARAM_1_RSVD_IC_COMP_PARAM_1_MODIFY(r, x) \
   ((((x) << 24) & 0xff000000ul) | ((r) & 0x00fffffful))
/* Field member: i2c::IC_COMP_PARAM_1.TX_BUFFER_DEPTH                      */
#define I2C_IC_COMP_PARAM_1_TX_BUFFER_DEPTH_MSB 23u
#define I2C_IC_COMP_PARAM_1_TX_BUFFER_DEPTH_LSB 16u
#define I2C_IC_COMP_PARAM_1_TX_BUFFER_DEPTH_WIDTH 8u
#define I2C_IC_COMP_PARAM_1_TX_BUFFER_DEPTH_READ_ACCESS 1u
#define I2C_IC_COMP_PARAM_1_TX_BUFFER_DEPTH_WRITE_ACCESS 0u
#define I2C_IC_COMP_PARAM_1_TX_BUFFER_DEPTH_RESET 0xffu
#define I2C_IC_COMP_PARAM_1_TX_BUFFER_DEPTH_FIELD_MASK 0x00ff0000ul
#define I2C_IC_COMP_PARAM_1_TX_BUFFER_DEPTH_GET(x) \
   (((x) & 0x00ff0000ul) >> 16)
#define I2C_IC_COMP_PARAM_1_TX_BUFFER_DEPTH_SET(x) \
   (((x) << 16) & 0x00ff0000ul)
#define I2C_IC_COMP_PARAM_1_TX_BUFFER_DEPTH_MODIFY(r, x) \
   ((((x) << 16) & 0x00ff0000ul) | ((r) & 0xff00fffful))
/* Field member: i2c::IC_COMP_PARAM_1.RX_BUFFER_DEPTH                      */
#define I2C_IC_COMP_PARAM_1_RX_BUFFER_DEPTH_MSB 15u
#define I2C_IC_COMP_PARAM_1_RX_BUFFER_DEPTH_LSB 8u
#define I2C_IC_COMP_PARAM_1_RX_BUFFER_DEPTH_WIDTH 8u
#define I2C_IC_COMP_PARAM_1_RX_BUFFER_DEPTH_READ_ACCESS 1u
#define I2C_IC_COMP_PARAM_1_RX_BUFFER_DEPTH_WRITE_ACCESS 0u
#define I2C_IC_COMP_PARAM_1_RX_BUFFER_DEPTH_RESET 0xffu
#define I2C_IC_COMP_PARAM_1_RX_BUFFER_DEPTH_FIELD_MASK 0x0000ff00ul
#define I2C_IC_COMP_PARAM_1_RX_BUFFER_DEPTH_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define I2C_IC_COMP_PARAM_1_RX_BUFFER_DEPTH_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define I2C_IC_COMP_PARAM_1_RX_BUFFER_DEPTH_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: i2c::IC_COMP_PARAM_1.ADD_ENCODED_PARAMS                   */
#define I2C_IC_COMP_PARAM_1_ADD_ENCODED_PARAMS_MSB 7u
#define I2C_IC_COMP_PARAM_1_ADD_ENCODED_PARAMS_LSB 7u
#define I2C_IC_COMP_PARAM_1_ADD_ENCODED_PARAMS_WIDTH 1u
#define I2C_IC_COMP_PARAM_1_ADD_ENCODED_PARAMS_READ_ACCESS 1u
#define I2C_IC_COMP_PARAM_1_ADD_ENCODED_PARAMS_WRITE_ACCESS 0u
#define I2C_IC_COMP_PARAM_1_ADD_ENCODED_PARAMS_RESET 0x1u
#define I2C_IC_COMP_PARAM_1_ADD_ENCODED_PARAMS_FIELD_MASK 0x00000080ul
#define I2C_IC_COMP_PARAM_1_ADD_ENCODED_PARAMS_GET(x) \
   (((x) & 0x00000080ul) >> 7)
#define I2C_IC_COMP_PARAM_1_ADD_ENCODED_PARAMS_SET(x) \
   (((x) << 7) & 0x00000080ul)
#define I2C_IC_COMP_PARAM_1_ADD_ENCODED_PARAMS_MODIFY(r, x) \
   ((((x) << 7) & 0x00000080ul) | ((r) & 0xffffff7ful))
/* Field member: i2c::IC_COMP_PARAM_1.HAS_DMA                              */
#define I2C_IC_COMP_PARAM_1_HAS_DMA_MSB 6u
#define I2C_IC_COMP_PARAM_1_HAS_DMA_LSB 6u
#define I2C_IC_COMP_PARAM_1_HAS_DMA_WIDTH 1u
#define I2C_IC_COMP_PARAM_1_HAS_DMA_READ_ACCESS 1u
#define I2C_IC_COMP_PARAM_1_HAS_DMA_WRITE_ACCESS 0u
#define I2C_IC_COMP_PARAM_1_HAS_DMA_RESET 0x0u
#define I2C_IC_COMP_PARAM_1_HAS_DMA_FIELD_MASK 0x00000040ul
#define I2C_IC_COMP_PARAM_1_HAS_DMA_GET(x) (((x) & 0x00000040ul) >> 6)
#define I2C_IC_COMP_PARAM_1_HAS_DMA_SET(x) (((x) << 6) & 0x00000040ul)
#define I2C_IC_COMP_PARAM_1_HAS_DMA_MODIFY(r, x) \
   ((((x) << 6) & 0x00000040ul) | ((r) & 0xffffffbful))
/* Field member: i2c::IC_COMP_PARAM_1.INTR_IO                              */
#define I2C_IC_COMP_PARAM_1_INTR_IO_MSB 5u
#define I2C_IC_COMP_PARAM_1_INTR_IO_LSB 5u
#define I2C_IC_COMP_PARAM_1_INTR_IO_WIDTH 1u
#define I2C_IC_COMP_PARAM_1_INTR_IO_READ_ACCESS 1u
#define I2C_IC_COMP_PARAM_1_INTR_IO_WRITE_ACCESS 0u
#define I2C_IC_COMP_PARAM_1_INTR_IO_RESET 0x1u
#define I2C_IC_COMP_PARAM_1_INTR_IO_FIELD_MASK 0x00000020ul
#define I2C_IC_COMP_PARAM_1_INTR_IO_GET(x) (((x) & 0x00000020ul) >> 5)
#define I2C_IC_COMP_PARAM_1_INTR_IO_SET(x) (((x) << 5) & 0x00000020ul)
#define I2C_IC_COMP_PARAM_1_INTR_IO_MODIFY(r, x) \
   ((((x) << 5) & 0x00000020ul) | ((r) & 0xffffffdful))
/* Field member: i2c::IC_COMP_PARAM_1.HC_COUNT_VALUES                      */
#define I2C_IC_COMP_PARAM_1_HC_COUNT_VALUES_MSB 4u
#define I2C_IC_COMP_PARAM_1_HC_COUNT_VALUES_LSB 4u
#define I2C_IC_COMP_PARAM_1_HC_COUNT_VALUES_WIDTH 1u
#define I2C_IC_COMP_PARAM_1_HC_COUNT_VALUES_READ_ACCESS 1u
#define I2C_IC_COMP_PARAM_1_HC_COUNT_VALUES_WRITE_ACCESS 0u
#define I2C_IC_COMP_PARAM_1_HC_COUNT_VALUES_RESET 0x0u
#define I2C_IC_COMP_PARAM_1_HC_COUNT_VALUES_FIELD_MASK 0x00000010ul
#define I2C_IC_COMP_PARAM_1_HC_COUNT_VALUES_GET(x) \
   (((x) & 0x00000010ul) >> 4)
#define I2C_IC_COMP_PARAM_1_HC_COUNT_VALUES_SET(x) \
   (((x) << 4) & 0x00000010ul)
#define I2C_IC_COMP_PARAM_1_HC_COUNT_VALUES_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010ul) | ((r) & 0xffffffeful))
/* Field member: i2c::IC_COMP_PARAM_1.MAX_SPEED_MODE                       */
#define I2C_IC_COMP_PARAM_1_MAX_SPEED_MODE_MSB 3u
#define I2C_IC_COMP_PARAM_1_MAX_SPEED_MODE_LSB 2u
#define I2C_IC_COMP_PARAM_1_MAX_SPEED_MODE_WIDTH 2u
#define I2C_IC_COMP_PARAM_1_MAX_SPEED_MODE_READ_ACCESS 1u
#define I2C_IC_COMP_PARAM_1_MAX_SPEED_MODE_WRITE_ACCESS 0u
#define I2C_IC_COMP_PARAM_1_MAX_SPEED_MODE_RESET 0x2u
#define I2C_IC_COMP_PARAM_1_MAX_SPEED_MODE_FIELD_MASK 0x0000000cul
#define I2C_IC_COMP_PARAM_1_MAX_SPEED_MODE_GET(x) (((x) & 0x0000000cul) >> 2)
#define I2C_IC_COMP_PARAM_1_MAX_SPEED_MODE_SET(x) \
   (((x) << 2) & 0x0000000cul)
#define I2C_IC_COMP_PARAM_1_MAX_SPEED_MODE_MODIFY(r, x) \
   ((((x) << 2) & 0x0000000cul) | ((r) & 0xfffffff3ul))
/* Field member: i2c::IC_COMP_PARAM_1.APB_DATA_WIDTH                       */
#define I2C_IC_COMP_PARAM_1_APB_DATA_WIDTH_MSB 1u
#define I2C_IC_COMP_PARAM_1_APB_DATA_WIDTH_LSB 0u
#define I2C_IC_COMP_PARAM_1_APB_DATA_WIDTH_WIDTH 2u
#define I2C_IC_COMP_PARAM_1_APB_DATA_WIDTH_READ_ACCESS 1u
#define I2C_IC_COMP_PARAM_1_APB_DATA_WIDTH_WRITE_ACCESS 0u
#define I2C_IC_COMP_PARAM_1_APB_DATA_WIDTH_RESET 0x2u
#define I2C_IC_COMP_PARAM_1_APB_DATA_WIDTH_FIELD_MASK 0x00000003ul
#define I2C_IC_COMP_PARAM_1_APB_DATA_WIDTH_GET(x) ((x) & 0x00000003ul)
#define I2C_IC_COMP_PARAM_1_APB_DATA_WIDTH_SET(x) ((x) & 0x00000003ul)
#define I2C_IC_COMP_PARAM_1_APB_DATA_WIDTH_MODIFY(r, x) \
   (((x) & 0x00000003ul) | ((r) & 0xfffffffcul))

/* Register type: i2c::IC_COMP_VERSION                                     */
/* Register template: i2c::IC_COMP_VERSION                                 */
/* Field member: i2c::IC_COMP_VERSION.IC_COMP_VERSION                      */
#define I2C_IC_COMP_VERSION_IC_COMP_VERSION_MSB 31u
#define I2C_IC_COMP_VERSION_IC_COMP_VERSION_LSB 0u
#define I2C_IC_COMP_VERSION_IC_COMP_VERSION_WIDTH 32u
#define I2C_IC_COMP_VERSION_IC_COMP_VERSION_READ_ACCESS 1u
#define I2C_IC_COMP_VERSION_IC_COMP_VERSION_WRITE_ACCESS 0u
#define I2C_IC_COMP_VERSION_IC_COMP_VERSION_RESET 0x3230322aul
#define I2C_IC_COMP_VERSION_IC_COMP_VERSION_FIELD_MASK 0xfffffffful
#define I2C_IC_COMP_VERSION_IC_COMP_VERSION_GET(x) ((x) & 0xfffffffful)
#define I2C_IC_COMP_VERSION_IC_COMP_VERSION_SET(x) ((x) & 0xfffffffful)
#define I2C_IC_COMP_VERSION_IC_COMP_VERSION_MODIFY(r, x) ((x) & 0xfffffffful)

/* Register type: i2c::IC_COMP_TYPE                                        */
/* Register template: i2c::IC_COMP_TYPE                                    */
/* Field member: i2c::IC_COMP_TYPE.IC_COMP_TYPE                            */
#define I2C_IC_COMP_TYPE_IC_COMP_TYPE_MSB 31u
#define I2C_IC_COMP_TYPE_IC_COMP_TYPE_LSB 0u
#define I2C_IC_COMP_TYPE_IC_COMP_TYPE_WIDTH 32u
#define I2C_IC_COMP_TYPE_IC_COMP_TYPE_READ_ACCESS 1u
#define I2C_IC_COMP_TYPE_IC_COMP_TYPE_WRITE_ACCESS 0u
#define I2C_IC_COMP_TYPE_IC_COMP_TYPE_RESET 0x44570140ul
#define I2C_IC_COMP_TYPE_IC_COMP_TYPE_FIELD_MASK 0xfffffffful
#define I2C_IC_COMP_TYPE_IC_COMP_TYPE_GET(x) ((x) & 0xfffffffful)
#define I2C_IC_COMP_TYPE_IC_COMP_TYPE_SET(x) ((x) & 0xfffffffful)
#define I2C_IC_COMP_TYPE_IC_COMP_TYPE_MODIFY(r, x) ((x) & 0xfffffffful)

/* ####################################################################### */
/*        TYPE DEFINITIONS                                                 */
/* ####################################################################### */

/* Typedef for Addressmap: i2c                                             */
typedef struct {
   volatile uint32_t IC_CON; /**< Offset 0x0 (R/W) */
   volatile uint32_t IC_TAR; /**< Offset 0x4 (R/W) */
   volatile uint32_t IC_SAR; /**< Offset 0x8 (R/W) */
   uint8_t _pad0[0x4];
   volatile uint32_t IC_DATA_CMD; /**< Offset 0x10 (R/W) */
   volatile uint32_t IC_SS_SCL_HCNT; /**< Offset 0x14 (R/W) */
   volatile uint32_t IC_SS_SCL_LCNT; /**< Offset 0x18 (R/W) */
   volatile uint32_t IC_FS_SCL_HCNT; /**< Offset 0x1c (R/W) */
   volatile uint32_t IC_FS_SCL_LCNT; /**< Offset 0x20 (R/W) */
   uint8_t _pad1[0x8];
   volatile uint32_t IC_INTR_STAT; /**< Offset 0x2c (R) */
   volatile uint32_t IC_INTR_MASK; /**< Offset 0x30 (R/W) */
   volatile uint32_t IC_RAW_INTR_STAT; /**< Offset 0x34 (R) */
   volatile uint32_t IC_RX_TL; /**< Offset 0x38 (R/W) */
   volatile uint32_t IC_TX_TL; /**< Offset 0x3c (R/W) */
   volatile uint32_t IC_CLR_INTR; /**< Offset 0x40 (R) */
   volatile uint32_t IC_CLR_RX_UNDER; /**< Offset 0x44 (R) */
   volatile uint32_t IC_CLR_RX_OVER; /**< Offset 0x48 (R) */
   volatile uint32_t IC_CLR_TX_OVER; /**< Offset 0x4c (R) */
   volatile uint32_t IC_CLR_RD_REQ; /**< Offset 0x50 (R) */
   uint32_t IC_CLR_TX_ABRT; /**< Offset 0x54 (R) */
   volatile uint32_t IC_CLR_RX_DONE; /**< Offset 0x58 (R) */
   volatile uint32_t IC_CLR_ACTIVITY; /**< Offset 0x5c (R) */
   volatile uint32_t IC_CLR_STOP_DET; /**< Offset 0x60 (R) */
   volatile uint32_t IC_CLR_START_DET; /**< Offset 0x64 (R) */
   volatile uint32_t IC_CLR_GEN_CALL; /**< Offset 0x68 (R) */
   volatile uint32_t IC_ENABLE; /**< Offset 0x6c (R/W) */
   volatile uint32_t IC_STATUS; /**< Offset 0x70 (R) */
   volatile uint32_t IC_TXFLR; /**< Offset 0x74 (R) */
   volatile uint32_t IC_RXFLR; /**< Offset 0x78 (R) */
   volatile uint32_t IC_SDA_HOLD; /**< Offset 0x7c (R/W) */
   volatile uint32_t IC_TX_ABRT_SOURCE; /**< Offset 0x80 (R) */
   uint8_t _pad2[0x10];
   volatile uint32_t IC_SDA_SETUP; /**< Offset 0x94 (R/W) */
   volatile uint32_t IC_ACK_GENERAL_CALL; /**< Offset 0x98 (R/W) */
   volatile uint32_t IC_ENABLE_STATUS; /**< Offset 0x9c (R) */
   volatile uint32_t IC_FS_SPKLEN; /**< Offset 0xa0 (R/W) */
   uint8_t _pad3[0x8];
   volatile uint32_t IC_SCL_STUCK_AT_LOW_TIMEOUT; /**< Offset 0xac (R/W) */
   volatile uint32_t IC_SDA_STUCK_AT_LOW_TIMEOUT; /**< Offset 0xb0 (R/W) */
   volatile uint32_t IC_CLR_SCL_STUCK_DET; /**< Offset 0xb4 (R) */
   uint8_t _pad4[0x4];
   volatile uint32_t IC_SMBUS_CLK_LOW_SEXT; /**< Offset 0xbc (R/W) */
   volatile uint32_t IC_SMBUS_CLK_LOW_MEXT; /**< Offset 0xc0 (R/W) */
   volatile uint32_t IC_SMBUS_THIGH_MAX_IDLE_COUNT; /**< Offset 0xc4 (R/W) */
   volatile uint32_t IC_SMBUS_INTR_STAT; /**< Offset 0xc8 (R) */
   volatile uint32_t IC_SMBUS_INTR_MASK; /**< Offset 0xcc (R/W) */
   volatile uint32_t IC_SMBUS_RAW_INTR_STAT; /**< Offset 0xd0 (R) */
   volatile uint32_t IC_CLR_SMBUS_INTR; /**< Offset 0xd4 (W) */
   uint8_t _pad5[0x18];
   volatile uint32_t REG_TIMEOUT_RST; /**< Offset 0xf0 (R/W) */
   volatile uint32_t IC_COMP_PARAM_1; /**< Offset 0xf4 (R) */
   uint32_t IC_COMP_VERSION; /**< Offset 0xf8 (R) */
   uint32_t IC_COMP_TYPE; /**< Offset 0xfc (R) */
   uint8_t _pad6[0x300];
} I2c, *PTR_I2c;

#endif
