/* Copyright (c) 2025 Ainekko, Co. */
/* SPDX-License-Identifier: Apache-2.0 */
/*                                                                         */
/*                                                                         */
/* Generated by Semifore, Inc. csrCompile                                  */
/*    C Header output                                                      */

#ifndef _PU_SRAM_HI_H_
#define _PU_SRAM_HI_H_



/* ####################################################################### */
/*        ADDRESS MACROS                                                   */
/* ####################################################################### */

/* Address Space for Addressmap: pu_128kram                                */
/* Memory: pu_128kram.pu_128kB_sram                                        */
#define PU_128KRAM_PU_128KB_SRAM_ADDRESS 0x0ul
#define PU_128KRAM_PU_128KB_SRAM_BYTE_ADDRESS 0x0ul


/* ####################################################################### */
/*        TEMPLATE MACROS                                                  */
/* ####################################################################### */

/* Addressmap type: pu_128kram                                             */
/* Addressmap template: pu_128kram                                         */
#define PU_128KRAM_SIZE 0x20000ul
#define PU_128KRAM_BYTE_SIZE 0x20000ul
/* Memory member: pu_128kram.pu_128kB_sram                                 */
/* Memory type referenced: pu_128kram::pu_128kB_sram                       */
/* Memory template referenced: pu_128kram::pu_128kB_sram                   */
#define PU_128KRAM_PU_128KB_SRAM_OFFSET 0x0ul
#define PU_128KRAM_PU_128KB_SRAM_BYTE_OFFSET 0x0ul
#define PU_128KRAM_PU_128KB_SRAM_READ_ACCESS 1u
#define PU_128KRAM_PU_128KB_SRAM_WRITE_ACCESS 1u
#define PU_128KRAM_PU_128KB_SRAM_READ_MASK 0xfffffffful
#define PU_128KRAM_PU_128KB_SRAM_WRITE_MASK 0xfffffffful

/* Memory type: pu_128kram::pu_128kB_sram                                  */
/* Memory template: pu_128kram::pu_128kB_sram                              */
#define PU_128KRAM_PU_128KB_SRAM_SIZE 0x20000ul
#define PU_128KRAM_PU_128KB_SRAM_BYTE_SIZE 0x20000ul
#define PU_128KRAM_PU_128KB_SRAM_ENTRIES 0x8000ull
#define PU_128KRAM_PU_128KB_SRAM_MSB 31u
#define PU_128KRAM_PU_128KB_SRAM_LSB 0u
#define PU_128KRAM_PU_128KB_SRAM_WIDTH 32u
#define PU_128KRAM_PU_128KB_SRAM_MASK 0xfffffffful
#define PU_128KRAM_PU_128KB_SRAM_GET(x) ((x) & 0xfffffffful)
#define PU_128KRAM_PU_128KB_SRAM_SET(x) ((x) & 0xfffffffful)

/* ####################################################################### */
/*        TYPE DEFINITIONS                                                 */
/* ####################################################################### */

/* Typedef for Memory: pu_128kram::pu_128kB_sram                           */
typedef struct {
   uint8_t _pad0[0x20000];
} Pu_128kram_pu_128kB_sram, *PTR_Pu_128kram_pu_128kB_sram;

/* Typedef for Addressmap: pu_128kram                                      */
typedef struct {
   Pu_128kram_pu_128kB_sram pu_128kB_sram; /**< Offset 0x0 (R/W) */
} Pu_128kram, *PTR_Pu_128kram;

#endif
