/* Copyright (C) 2021, Esperanto Technologies Inc.                         */
/* The copyright to the computer program(s) herein is the                  */
/* property of Esperanto Technologies, Inc. All Rights Reserved.           */
/* The program(s) may be used and/or copied only with                      */
/* the written permission of Esperanto Technologies and                    */
/* in accordance with the terms and conditions stipulated in the           */
/* agreement/contract under which the program(s) have been supplied.       */
/*                                                                         */
/*                                                                         */
/* Generated by Semifore, Inc. csrCompile                                  */
/*    C Header output                                                      */

#ifndef _MX_GLOBAL_ATOMIC3_H_
#define _MX_GLOBAL_ATOMIC3_H_



/* ####################################################################### */
/*        ADDRESS MACROS                                                   */
/* ####################################################################### */

/* Address Space for Addressmap: gag                                       */
/* Register: gag.req_addr                                                  */
#define GAG_REQ_ADDR_ADDRESS 0x0u
#define GAG_REQ_ADDR_BYTE_ADDRESS 0x0u
/* Register: gag.req_data                                                  */
#define GAG_REQ_DATA_ADDRESS 0x8u
#define GAG_REQ_DATA_BYTE_ADDRESS 0x8u
/* Register: gag.req_op                                                    */
#define GAG_REQ_OP_ADDRESS 0x10u
#define GAG_REQ_OP_BYTE_ADDRESS 0x10u
/* Register: gag.resp_data                                                 */
#define GAG_RESP_DATA_ADDRESS 0x20u
#define GAG_RESP_DATA_BYTE_ADDRESS 0x20u


/* ####################################################################### */
/*        TEMPLATE MACROS                                                  */
/* ####################################################################### */

/* Addressmap type: gag                                                    */
/* Addressmap template: gag                                                */
#define GAG_SIZE 0x28u
#define GAG_BYTE_SIZE 0x28u
/* Register member: gag.req_addr                                           */
/* Register type referenced: gag::req_addr                                 */
/* Register template referenced: gag::req_addr                             */
#define GAG_REQ_ADDR_OFFSET 0x0u
#define GAG_REQ_ADDR_BYTE_OFFSET 0x0u
#define GAG_REQ_ADDR_READ_ACCESS 1u
#define GAG_REQ_ADDR_WRITE_ACCESS 0u
#define GAG_REQ_ADDR_READ_MASK 0xffffffffffffffffull
#define GAG_REQ_ADDR_WRITE_MASK 0x0000000000000000ull
/* Register member: gag.req_data                                           */
/* Register type referenced: gag::req_data                                 */
/* Register template referenced: gag::req_data                             */
#define GAG_REQ_DATA_OFFSET 0x8u
#define GAG_REQ_DATA_BYTE_OFFSET 0x8u
#define GAG_REQ_DATA_READ_ACCESS 1u
#define GAG_REQ_DATA_WRITE_ACCESS 0u
#define GAG_REQ_DATA_READ_MASK 0xffffffffffffffffull
#define GAG_REQ_DATA_WRITE_MASK 0x0000000000000000ull
/* Register member: gag.req_op                                             */
/* Register type referenced: gag::req_op                                   */
/* Register template referenced: gag::req_op                               */
#define GAG_REQ_OP_OFFSET 0x10u
#define GAG_REQ_OP_BYTE_OFFSET 0x10u
#define GAG_REQ_OP_READ_ACCESS 1u
#define GAG_REQ_OP_WRITE_ACCESS 0u
#define GAG_REQ_OP_READ_MASK 0xffu
#define GAG_REQ_OP_WRITE_MASK 0x00u
/* Register member: gag.resp_data                                          */
/* Register type referenced: gag::resp_data                                */
/* Register template referenced: gag::resp_data                            */
#define GAG_RESP_DATA_OFFSET 0x20u
#define GAG_RESP_DATA_BYTE_OFFSET 0x20u
#define GAG_RESP_DATA_READ_ACCESS 1u
#define GAG_RESP_DATA_WRITE_ACCESS 0u
#define GAG_RESP_DATA_READ_MASK 0xffffffffffffffffull
#define GAG_RESP_DATA_WRITE_MASK 0x0000000000000000ull

/* Register type: gag::req_addr                                            */
/* Register template: gag::req_addr                                        */
/* Field member: gag::req_addr.req_addr                                    */
#define GAG_REQ_ADDR_REQ_ADDR_MSB 63u
#define GAG_REQ_ADDR_REQ_ADDR_LSB 0u
#define GAG_REQ_ADDR_REQ_ADDR_WIDTH 64u
#define GAG_REQ_ADDR_REQ_ADDR_READ_ACCESS 1u
#define GAG_REQ_ADDR_REQ_ADDR_WRITE_ACCESS 0u
#define GAG_REQ_ADDR_REQ_ADDR_FIELD_MASK 0xffffffffffffffffull
#define GAG_REQ_ADDR_REQ_ADDR_GET(x) ((x) & 0xffffffffffffffffull)
#define GAG_REQ_ADDR_REQ_ADDR_SET(x) ((x) & 0xffffffffffffffffull)
#define GAG_REQ_ADDR_REQ_ADDR_MODIFY(r, x) ((x) & 0xffffffffffffffffull)

/* Register type: gag::req_data                                            */
/* Register template: gag::req_data                                        */
/* Field member: gag::req_data.req_data                                    */
#define GAG_REQ_DATA_REQ_DATA_MSB 63u
#define GAG_REQ_DATA_REQ_DATA_LSB 0u
#define GAG_REQ_DATA_REQ_DATA_WIDTH 64u
#define GAG_REQ_DATA_REQ_DATA_READ_ACCESS 1u
#define GAG_REQ_DATA_REQ_DATA_WRITE_ACCESS 0u
#define GAG_REQ_DATA_REQ_DATA_FIELD_MASK 0xffffffffffffffffull
#define GAG_REQ_DATA_REQ_DATA_GET(x) ((x) & 0xffffffffffffffffull)
#define GAG_REQ_DATA_REQ_DATA_SET(x) ((x) & 0xffffffffffffffffull)
#define GAG_REQ_DATA_REQ_DATA_MODIFY(r, x) ((x) & 0xffffffffffffffffull)

/* Register type: gag::req_op                                              */
/* Register template: gag::req_op                                          */
/* Field member: gag::req_op.req_op                                        */
#define GAG_REQ_OP_REQ_OP_MSB 7u
#define GAG_REQ_OP_REQ_OP_LSB 0u
#define GAG_REQ_OP_REQ_OP_WIDTH 8u
#define GAG_REQ_OP_REQ_OP_READ_ACCESS 1u
#define GAG_REQ_OP_REQ_OP_WRITE_ACCESS 0u
#define GAG_REQ_OP_REQ_OP_FIELD_MASK 0xffu
#define GAG_REQ_OP_REQ_OP_GET(x) ((x) & 0xffu)
#define GAG_REQ_OP_REQ_OP_SET(x) ((x) & 0xffu)
#define GAG_REQ_OP_REQ_OP_MODIFY(r, x) ((x) & 0xffu)

/* Register type: gag::resp_data                                           */
/* Register template: gag::resp_data                                       */
/* Field member: gag::resp_data.resp_data                                  */
#define GAG_RESP_DATA_RESP_DATA_MSB 63u
#define GAG_RESP_DATA_RESP_DATA_LSB 0u
#define GAG_RESP_DATA_RESP_DATA_WIDTH 64u
#define GAG_RESP_DATA_RESP_DATA_READ_ACCESS 1u
#define GAG_RESP_DATA_RESP_DATA_WRITE_ACCESS 0u
#define GAG_RESP_DATA_RESP_DATA_FIELD_MASK 0xffffffffffffffffull
#define GAG_RESP_DATA_RESP_DATA_GET(x) ((x) & 0xffffffffffffffffull)
#define GAG_RESP_DATA_RESP_DATA_SET(x) ((x) & 0xffffffffffffffffull)
#define GAG_RESP_DATA_RESP_DATA_MODIFY(r, x) ((x) & 0xffffffffffffffffull)

/* ####################################################################### */
/*        TYPE DEFINITIONS                                                 */
/* ####################################################################### */

/* Typedef for Addressmap: gag                                             */
typedef struct {
   volatile uint64_t req_addr; /**< Offset 0x0 (R) */
   volatile uint64_t req_data; /**< Offset 0x8 (R) */
   volatile uint8_t req_op; /**< Offset 0x10 (R) */
   uint8_t _pad0[0xf];
   volatile uint64_t resp_data; /**< Offset 0x20 (R) */
} Gag, *PTR_Gag;

#endif
