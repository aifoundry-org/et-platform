/* Copyright (C) 2021, Esperanto Technologies Inc.                         */
/* The copyright to the computer program(s) herein is the                  */
/* property of Esperanto Technologies, Inc. All Rights Reserved.           */
/* The program(s) may be used and/or copied only with                      */
/* the written permission of Esperanto Technologies and                    */
/* in accordance with the terms and conditions stipulated in the           */
/* agreement/contract under which the program(s) have been supplied.       */
/*                                                                         */
/*                                                                         */
/* Generated by Semifore, Inc. csrCompile                                  */
/*    C Header output                                                      */

#ifndef _PVT_PD_H_
#define _PVT_PD_H_


/* ####################################################################### */
/*        ENUMERATION MACROS                                               */
/* ####################################################################### */

/* Enumeration: pvt_pd::OSC_CNT_DIVIDE                                     */
#define PVT_PD_OSC_CNT_DIVIDE_RATIO_1 0x0u
#define PVT_PD_OSC_CNT_DIVIDE_RATIO_4 0x1u
#define PVT_PD_OSC_CNT_DIVIDE_RATIO_8 0x2u
#define PVT_PD_OSC_CNT_DIVIDE_RATIO_16 0x3u

/* Enumeration: pvt_pd::OSC_CNT_GATE                                       */
#define PVT_PD_OSC_CNT_GATE_CYCLES_31 0x0u
#define PVT_PD_OSC_CNT_GATE_CYCLES_63 0x1u
#define PVT_PD_OSC_CNT_GATE_CYCLES_127 0x2u
#define PVT_PD_OSC_CNT_GATE_CYCLES_255 0x3u

/* Enumeration: pvt_pd::OSC_SELECT                                         */
#define PVT_PD_OSC_SELECT_MEASUREMENT_DISABLED 0x0u
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_1 0x1u
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_2 0x2u
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_3 0x3u
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_4 0x4u
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_5 0x5u
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_6 0x6u
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_7 0x7u
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_8 0x8u
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_9 0x9u
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_10 0xau
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_11 0xbu
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_12 0xcu
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_13 0xdu
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_14 0xeu
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_15 0xfu
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_16 0x10u
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_17 0x11u
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_18 0x12u
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_19 0x13u
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_20 0x14u
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_21 0x15u
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_22 0x16u
#define PVT_PD_OSC_SELECT_INTERNAL_DELAY_CHAIN_23 0x17u
#define PVT_PD_OSC_SELECT_EXTERNAL_DELAY_CHAIN_0 0x18u
#define PVT_PD_OSC_SELECT_EXTERNAL_DELAY_CHAIN_1 0x19u
#define PVT_PD_OSC_SELECT_EXTERNAL_DELAY_CHAIN_2 0x1au
#define PVT_PD_OSC_SELECT_EXTERNAL_DELAY_CHAIN_3 0x1bu
#define PVT_PD_OSC_SELECT_EXTERNAL_DELAY_CHAIN_4 0x1cu
#define PVT_PD_OSC_SELECT_EXTERNAL_DELAY_CHAIN_5 0x1du
#define PVT_PD_OSC_SELECT_EXTERNAL_DELAY_CHAIN_6 0x1eu
#define PVT_PD_OSC_SELECT_EXTERNAL_DELAY_CHAIN_7 0x1fu

/* Enumeration: pvt_pd::RUN_MODE                                           */
#define PVT_PD_RUN_MODE_RUN_0 0x0u
#define PVT_PD_RUN_MODE_RUN_1 0x1u
#define PVT_PD_RUN_MODE_RUN_2 0x2u
#define PVT_PD_RUN_MODE_RUN_3 0x3u
#define PVT_PD_RUN_MODE_STATUS 0x4u
#define PVT_PD_RUN_MODE_CFG_R0 0x5u
#define PVT_PD_RUN_MODE_CFG_R1 0x6u
#define PVT_PD_RUN_MODE_CFG_R2 0x7u
#define PVT_PD_RUN_MODE_SIG 0x8u
#define PVT_PD_RUN_MODE_SIGN 0x9u
#define PVT_PD_RUN_MODE_RUN_SIG 0xau
#define PVT_PD_RUN_MODE_RUN_SIGN 0xbu


/* ####################################################################### */
/*        ADDRESS MACROS                                                   */
/* ####################################################################### */

/* Address Space for Addressmap: pvt_pd                                    */
/* Register: pvt_pd.cfg0                                                   */
#define PVT_PD_CFG0_ADDRESS 0x0u
#define PVT_PD_CFG0_BYTE_ADDRESS 0x0u
/* Register: pvt_pd.cfg1                                                   */
#define PVT_PD_CFG1_ADDRESS 0x1u
#define PVT_PD_CFG1_BYTE_ADDRESS 0x1u
/* Register: pvt_pd.cfg2                                                   */
#define PVT_PD_CFG2_ADDRESS 0x2u
#define PVT_PD_CFG2_BYTE_ADDRESS 0x2u


/* ####################################################################### */
/*        TEMPLATE MACROS                                                  */
/* ####################################################################### */

/* Addressmap type: pvt_pd                                                 */
/* Addressmap template: pvt_pd                                             */
#define PVT_PD_SIZE 0x3u
#define PVT_PD_BYTE_SIZE 0x3u
/* Register member: pvt_pd.cfg0                                            */
/* Register type referenced: pvt_pd::cfg0                                  */
/* Register template referenced: pvt_pd::cfg0                              */
#define PVT_PD_CFG0_OFFSET 0x0u
#define PVT_PD_CFG0_BYTE_OFFSET 0x0u
#define PVT_PD_CFG0_READ_ACCESS 1u
#define PVT_PD_CFG0_WRITE_ACCESS 1u
#define PVT_PD_CFG0_RESET_VALUE 0x00u
#define PVT_PD_CFG0_RESET_MASK 0xffu
#define PVT_PD_CFG0_READ_MASK 0xffu
#define PVT_PD_CFG0_WRITE_MASK 0x0fu
/* Register member: pvt_pd.cfg1                                            */
/* Register type referenced: pvt_pd::cfg1                                  */
/* Register template referenced: pvt_pd::cfg1                              */
#define PVT_PD_CFG1_OFFSET 0x1u
#define PVT_PD_CFG1_BYTE_OFFSET 0x1u
#define PVT_PD_CFG1_READ_ACCESS 1u
#define PVT_PD_CFG1_WRITE_ACCESS 1u
#define PVT_PD_CFG1_RESET_VALUE 0x00u
#define PVT_PD_CFG1_RESET_MASK 0xffu
#define PVT_PD_CFG1_READ_MASK 0xffu
#define PVT_PD_CFG1_WRITE_MASK 0xffu
/* Register member: pvt_pd.cfg2                                            */
/* Register type referenced: pvt_pd::cfg2                                  */
/* Register template referenced: pvt_pd::cfg2                              */
#define PVT_PD_CFG2_OFFSET 0x2u
#define PVT_PD_CFG2_BYTE_OFFSET 0x2u
#define PVT_PD_CFG2_READ_ACCESS 1u
#define PVT_PD_CFG2_WRITE_ACCESS 1u
#define PVT_PD_CFG2_RESET_VALUE 0x00u
#define PVT_PD_CFG2_RESET_MASK 0xffu
#define PVT_PD_CFG2_READ_MASK 0xffu
#define PVT_PD_CFG2_WRITE_MASK 0x33u

/* Register type: pvt_pd::cfg0                                             */
/* Register template: pvt_pd::cfg0                                         */
/* Field member: pvt_pd::cfg0.run_mode                                     */
#define PVT_PD_CFG0_RUN_MODE_MSB 3u
#define PVT_PD_CFG0_RUN_MODE_LSB 0u
#define PVT_PD_CFG0_RUN_MODE_WIDTH 4u
#define PVT_PD_CFG0_RUN_MODE_READ_ACCESS 1u
#define PVT_PD_CFG0_RUN_MODE_WRITE_ACCESS 1u
#define PVT_PD_CFG0_RUN_MODE_RESET 0x0u
#define PVT_PD_CFG0_RUN_MODE_FIELD_MASK 0x0fu
#define PVT_PD_CFG0_RUN_MODE_GET(x) ((x) & 0x0fu)
#define PVT_PD_CFG0_RUN_MODE_SET(x) ((x) & 0x0fu)
#define PVT_PD_CFG0_RUN_MODE_MODIFY(r, x) (((x) & 0x0fu) | ((r) & 0xf0u))

/* Register type: pvt_pd::cfg1                                             */
/* Register template: pvt_pd::cfg1                                         */
/* Field member: pvt_pd::cfg1.intertnal_delay_chain_21_always_on           */
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_21_ALWAYS_ON_MSB 7u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_21_ALWAYS_ON_LSB 7u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_21_ALWAYS_ON_WIDTH 1u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_21_ALWAYS_ON_READ_ACCESS 1u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_21_ALWAYS_ON_WRITE_ACCESS 1u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_21_ALWAYS_ON_RESET 0x0u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_21_ALWAYS_ON_FIELD_MASK 0x80u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_21_ALWAYS_ON_GET(x) \
   (((x) & 0x80u) >> 7)
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_21_ALWAYS_ON_SET(x) \
   (((x) << 7) & 0x80u)
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_21_ALWAYS_ON_MODIFY(r, x) \
   ((((x) << 7) & 0x80u) | ((r) & 0x7fu))
/* Field member: pvt_pd::cfg1.intertnal_delay_chain_20_always_on           */
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_20_ALWAYS_ON_MSB 6u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_20_ALWAYS_ON_LSB 6u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_20_ALWAYS_ON_WIDTH 1u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_20_ALWAYS_ON_READ_ACCESS 1u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_20_ALWAYS_ON_WRITE_ACCESS 1u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_20_ALWAYS_ON_RESET 0x0u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_20_ALWAYS_ON_FIELD_MASK 0x40u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_20_ALWAYS_ON_GET(x) \
   (((x) & 0x40u) >> 6)
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_20_ALWAYS_ON_SET(x) \
   (((x) << 6) & 0x40u)
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_20_ALWAYS_ON_MODIFY(r, x) \
   ((((x) << 6) & 0x40u) | ((r) & 0xbfu))
/* Field member: pvt_pd::cfg1.intertnal_delay_chain_19_always_on           */
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_19_ALWAYS_ON_MSB 5u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_19_ALWAYS_ON_LSB 5u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_19_ALWAYS_ON_WIDTH 1u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_19_ALWAYS_ON_READ_ACCESS 1u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_19_ALWAYS_ON_WRITE_ACCESS 1u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_19_ALWAYS_ON_RESET 0x0u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_19_ALWAYS_ON_FIELD_MASK 0x20u
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_19_ALWAYS_ON_GET(x) \
   (((x) & 0x20u) >> 5)
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_19_ALWAYS_ON_SET(x) \
   (((x) << 5) & 0x20u)
#define PVT_PD_CFG1_INTERTNAL_DELAY_CHAIN_19_ALWAYS_ON_MODIFY(r, x) \
   ((((x) << 5) & 0x20u) | ((r) & 0xdfu))
/* Field member: pvt_pd::cfg1.oscillator_select                            */
#define PVT_PD_CFG1_OSCILLATOR_SELECT_MSB 4u
#define PVT_PD_CFG1_OSCILLATOR_SELECT_LSB 0u
#define PVT_PD_CFG1_OSCILLATOR_SELECT_WIDTH 5u
#define PVT_PD_CFG1_OSCILLATOR_SELECT_READ_ACCESS 1u
#define PVT_PD_CFG1_OSCILLATOR_SELECT_WRITE_ACCESS 1u
#define PVT_PD_CFG1_OSCILLATOR_SELECT_RESET 0x00u
#define PVT_PD_CFG1_OSCILLATOR_SELECT_FIELD_MASK 0x1fu
#define PVT_PD_CFG1_OSCILLATOR_SELECT_GET(x) ((x) & 0x1fu)
#define PVT_PD_CFG1_OSCILLATOR_SELECT_SET(x) ((x) & 0x1fu)
#define PVT_PD_CFG1_OSCILLATOR_SELECT_MODIFY(r, x) \
   (((x) & 0x1fu) | ((r) & 0xe0u))

/* Register type: pvt_pd::cfg2                                             */
/* Register template: pvt_pd::cfg2                                         */
/* Field member: pvt_pd::cfg2.osc_cnt_gate_value                           */
#define PVT_PD_CFG2_OSC_CNT_GATE_VALUE_MSB 5u
#define PVT_PD_CFG2_OSC_CNT_GATE_VALUE_LSB 4u
#define PVT_PD_CFG2_OSC_CNT_GATE_VALUE_WIDTH 2u
#define PVT_PD_CFG2_OSC_CNT_GATE_VALUE_READ_ACCESS 1u
#define PVT_PD_CFG2_OSC_CNT_GATE_VALUE_WRITE_ACCESS 1u
#define PVT_PD_CFG2_OSC_CNT_GATE_VALUE_RESET 0x0u
#define PVT_PD_CFG2_OSC_CNT_GATE_VALUE_FIELD_MASK 0x30u
#define PVT_PD_CFG2_OSC_CNT_GATE_VALUE_GET(x) (((x) & 0x30u) >> 4)
#define PVT_PD_CFG2_OSC_CNT_GATE_VALUE_SET(x) (((x) << 4) & 0x30u)
#define PVT_PD_CFG2_OSC_CNT_GATE_VALUE_MODIFY(r, x) \
   ((((x) << 4) & 0x30u) | ((r) & 0xcfu))
/* Field member: pvt_pd::cfg2.osc_cnt_pre_scaler                           */
#define PVT_PD_CFG2_OSC_CNT_PRE_SCALER_MSB 1u
#define PVT_PD_CFG2_OSC_CNT_PRE_SCALER_LSB 0u
#define PVT_PD_CFG2_OSC_CNT_PRE_SCALER_WIDTH 2u
#define PVT_PD_CFG2_OSC_CNT_PRE_SCALER_READ_ACCESS 1u
#define PVT_PD_CFG2_OSC_CNT_PRE_SCALER_WRITE_ACCESS 1u
#define PVT_PD_CFG2_OSC_CNT_PRE_SCALER_RESET 0x0u
#define PVT_PD_CFG2_OSC_CNT_PRE_SCALER_FIELD_MASK 0x03u
#define PVT_PD_CFG2_OSC_CNT_PRE_SCALER_GET(x) ((x) & 0x03u)
#define PVT_PD_CFG2_OSC_CNT_PRE_SCALER_SET(x) ((x) & 0x03u)
#define PVT_PD_CFG2_OSC_CNT_PRE_SCALER_MODIFY(r, x) \
   (((x) & 0x03u) | ((r) & 0xfcu))

/* ####################################################################### */
/*        TYPE DEFINITIONS                                                 */
/* ####################################################################### */

/* Typedef for Addressmap: pvt_pd                                          */
typedef struct {
   volatile uint8_t cfg0; /**< Offset 0x0 (R/W) */
   volatile uint8_t cfg1; /**< Offset 0x1 (R/W) */
   volatile uint8_t cfg2; /**< Offset 0x2 (R/W) */
} Pvt_pd, *PTR_Pvt_pd;

#endif
