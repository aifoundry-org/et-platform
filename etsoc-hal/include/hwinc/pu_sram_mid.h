/* Copyright (C) 2021, Esperanto Technologies Inc.                         */
/* The copyright to the computer program(s) herein is the                  */
/* property of Esperanto Technologies, Inc. All Rights Reserved.           */
/* The program(s) may be used and/or copied only with                      */
/* the written permission of Esperanto Technologies and                    */
/* in accordance with the terms and conditions stipulated in the           */
/* agreement/contract under which the program(s) have been supplied.       */
/*                                                                         */
/*                                                                         */
/* Generated by Semifore, Inc. csrCompile                                  */
/*    C Header output                                                      */

#ifndef _PU_SRAM_MID_H_
#define _PU_SRAM_MID_H_



/* ####################################################################### */
/*        ADDRESS MACROS                                                   */
/* ####################################################################### */

/* Address Space for Addressmap: pu_64kram                                 */
/* Memory: pu_64kram.pu_64kB_sram                                          */
#define PU_64KRAM_PU_64KB_SRAM_ADDRESS 0x0u
#define PU_64KRAM_PU_64KB_SRAM_BYTE_ADDRESS 0x0u


/* ####################################################################### */
/*        TEMPLATE MACROS                                                  */
/* ####################################################################### */

/* Addressmap type: pu_64kram                                              */
/* Addressmap template: pu_64kram                                          */
#define PU_64KRAM_SIZE 0x10000ul
#define PU_64KRAM_BYTE_SIZE 0x10000ul
/* Memory member: pu_64kram.pu_64kB_sram                                   */
/* Memory type referenced: pu_64kram::pu_64kB_sram                         */
/* Memory template referenced: pu_64kram::pu_64kB_sram                     */
#define PU_64KRAM_PU_64KB_SRAM_OFFSET 0x0u
#define PU_64KRAM_PU_64KB_SRAM_BYTE_OFFSET 0x0u
#define PU_64KRAM_PU_64KB_SRAM_READ_ACCESS 1u
#define PU_64KRAM_PU_64KB_SRAM_WRITE_ACCESS 1u
#define PU_64KRAM_PU_64KB_SRAM_READ_MASK 0xfffffffful
#define PU_64KRAM_PU_64KB_SRAM_WRITE_MASK 0xfffffffful

/* Memory type: pu_64kram::pu_64kB_sram                                    */
/* Memory template: pu_64kram::pu_64kB_sram                                */
#define PU_64KRAM_PU_64KB_SRAM_SIZE 0x10000ul
#define PU_64KRAM_PU_64KB_SRAM_BYTE_SIZE 0x10000ul
#define PU_64KRAM_PU_64KB_SRAM_ENTRIES 0x4000ull
#define PU_64KRAM_PU_64KB_SRAM_MSB 31u
#define PU_64KRAM_PU_64KB_SRAM_LSB 0u
#define PU_64KRAM_PU_64KB_SRAM_WIDTH 32u
#define PU_64KRAM_PU_64KB_SRAM_MASK 0xfffffffful
#define PU_64KRAM_PU_64KB_SRAM_GET(x) ((x) & 0xfffffffful)
#define PU_64KRAM_PU_64KB_SRAM_SET(x) ((x) & 0xfffffffful)

/* ####################################################################### */
/*        TYPE DEFINITIONS                                                 */
/* ####################################################################### */

/* Typedef for Memory: pu_64kram::pu_64kB_sram                             */
typedef struct {
   uint8_t _pad0[0x10000];
} Pu_64kram_pu_64kB_sram, *PTR_Pu_64kram_pu_64kB_sram;

/* Typedef for Addressmap: pu_64kram                                       */
typedef struct {
   Pu_64kram_pu_64kB_sram pu_64kB_sram; /**< Offset 0x0 (R/W) */
} Pu_64kram, *PTR_Pu_64kram;

#endif
