/* Copyright (c) 2025 Ainekko, Co. */
/* SPDX-License-Identifier: Apache-2.0 */
/*                                                                         */
/*                                                                         */
/* Generated by Semifore, Inc. csrCompile                                  */
/*    C Header output                                                      */

#ifndef _SP_PVT0_H_
#define _SP_PVT0_H_



/* ####################################################################### */
/*        ADDRESS MACROS                                                   */
/* ####################################################################### */

/* Address Space for Addressmap: pvtc                                      */
/* Addressmap: pvtc.common                                                 */
#define PVTC_COMMON_ADDRESS 0x0u
#define PVTC_COMMON_BYTE_ADDRESS 0x0u
/* Register: pvtc.common.pvt_comp_id                                       */
#define PVTC_COMMON_PVT_COMP_ID_ADDRESS 0x0u
#define PVTC_COMMON_PVT_COMP_ID_BYTE_ADDRESS 0x0u
/* Register: pvtc.common.pvt_ip_cfg                                        */
#define PVTC_COMMON_PVT_IP_CFG_ADDRESS 0x4u
#define PVTC_COMMON_PVT_IP_CFG_BYTE_ADDRESS 0x4u
/* Register: pvtc.common.pvt_ip_num                                        */
#define PVTC_COMMON_PVT_IP_NUM_ADDRESS 0x8u
#define PVTC_COMMON_PVT_IP_NUM_BYTE_ADDRESS 0x8u
/* Register: pvtc.common.pvt_tm_scratch                                    */
#define PVTC_COMMON_PVT_TM_SCRATCH_ADDRESS 0xcu
#define PVTC_COMMON_PVT_TM_SCRATCH_BYTE_ADDRESS 0xcu
/* Register: pvtc.common.pvt_reg_lock                                      */
#define PVTC_COMMON_PVT_REG_LOCK_ADDRESS 0x10u
#define PVTC_COMMON_PVT_REG_LOCK_BYTE_ADDRESS 0x10u
/* Register: pvtc.common.pvt_reg_lock_status                               */
#define PVTC_COMMON_PVT_REG_LOCK_STATUS_ADDRESS 0x14u
#define PVTC_COMMON_PVT_REG_LOCK_STATUS_BYTE_ADDRESS 0x14u
/* Register: pvtc.common.pvt_tam_status                                    */
#define PVTC_COMMON_PVT_TAM_STATUS_ADDRESS 0x18u
#define PVTC_COMMON_PVT_TAM_STATUS_BYTE_ADDRESS 0x18u
/* Register: pvtc.common.pvt_tam_clear                                     */
#define PVTC_COMMON_PVT_TAM_CLEAR_ADDRESS 0x1cu
#define PVTC_COMMON_PVT_TAM_CLEAR_BYTE_ADDRESS 0x1cu
/* Register: pvtc.common.pvt_tmr_ctrl                                      */
#define PVTC_COMMON_PVT_TMR_CTRL_ADDRESS 0x20u
#define PVTC_COMMON_PVT_TMR_CTRL_BYTE_ADDRESS 0x20u
/* Register: pvtc.common.pvt_tmr_status                                    */
#define PVTC_COMMON_PVT_TMR_STATUS_ADDRESS 0x24u
#define PVTC_COMMON_PVT_TMR_STATUS_BYTE_ADDRESS 0x24u
/* Register: pvtc.common.pvt_tmr_irq_clear                                 */
#define PVTC_COMMON_PVT_TMR_IRQ_CLEAR_ADDRESS 0x28u
#define PVTC_COMMON_PVT_TMR_IRQ_CLEAR_BYTE_ADDRESS 0x28u
/* Register: pvtc.common.pvt_tmr_irq_test                                  */
#define PVTC_COMMON_PVT_TMR_IRQ_TEST_ADDRESS 0x2cu
#define PVTC_COMMON_PVT_TMR_IRQ_TEST_BYTE_ADDRESS 0x2cu
/* Addressmap: pvtc.irq                                                    */
#define PVTC_IRQ_ADDRESS 0x40u
#define PVTC_IRQ_BYTE_ADDRESS 0x40u
/* Register: pvtc.irq.irq_en                                               */
#define PVTC_IRQ_IRQ_EN_ADDRESS 0x40u
#define PVTC_IRQ_IRQ_EN_BYTE_ADDRESS 0x40u
/* Register: pvtc.irq.irq_tr_mask                                          */
#define PVTC_IRQ_IRQ_TR_MASK_ADDRESS 0x50u
#define PVTC_IRQ_IRQ_TR_MASK_BYTE_ADDRESS 0x50u
/* Register: pvtc.irq.irq_ts_mask                                          */
#define PVTC_IRQ_IRQ_TS_MASK_ADDRESS 0x54u
#define PVTC_IRQ_IRQ_TS_MASK_BYTE_ADDRESS 0x54u
/* Register: pvtc.irq.irq_vm_mask                                          */
#define PVTC_IRQ_IRQ_VM_MASK_ADDRESS 0x58u
#define PVTC_IRQ_IRQ_VM_MASK_BYTE_ADDRESS 0x58u
/* Register: pvtc.irq.irq_pd_mask                                          */
#define PVTC_IRQ_IRQ_PD_MASK_ADDRESS 0x5cu
#define PVTC_IRQ_IRQ_PD_MASK_BYTE_ADDRESS 0x5cu
/* Register: pvtc.irq.irq_tr_status                                        */
#define PVTC_IRQ_IRQ_TR_STATUS_ADDRESS 0x60u
#define PVTC_IRQ_IRQ_TR_STATUS_BYTE_ADDRESS 0x60u
/* Register: pvtc.irq.irq_ts_status                                        */
#define PVTC_IRQ_IRQ_TS_STATUS_ADDRESS 0x64u
#define PVTC_IRQ_IRQ_TS_STATUS_BYTE_ADDRESS 0x64u
/* Register: pvtc.irq.irq_vm_status                                        */
#define PVTC_IRQ_IRQ_VM_STATUS_ADDRESS 0x68u
#define PVTC_IRQ_IRQ_VM_STATUS_BYTE_ADDRESS 0x68u
/* Register: pvtc.irq.irq_pd_status                                        */
#define PVTC_IRQ_IRQ_PD_STATUS_ADDRESS 0x6cu
#define PVTC_IRQ_IRQ_PD_STATUS_BYTE_ADDRESS 0x6cu
/* Register: pvtc.irq.irq_tr_raw_status                                    */
#define PVTC_IRQ_IRQ_TR_RAW_STATUS_ADDRESS 0x70u
#define PVTC_IRQ_IRQ_TR_RAW_STATUS_BYTE_ADDRESS 0x70u
/* Register: pvtc.irq.irq_ts_raw_status                                    */
#define PVTC_IRQ_IRQ_TS_RAW_STATUS_ADDRESS 0x74u
#define PVTC_IRQ_IRQ_TS_RAW_STATUS_BYTE_ADDRESS 0x74u
/* Register: pvtc.irq.irq_vm_raw_status                                    */
#define PVTC_IRQ_IRQ_VM_RAW_STATUS_ADDRESS 0x78u
#define PVTC_IRQ_IRQ_VM_RAW_STATUS_BYTE_ADDRESS 0x78u
/* Register: pvtc.irq.irq_pd_raw_status                                    */
#define PVTC_IRQ_IRQ_PD_RAW_STATUS_ADDRESS 0x7cu
#define PVTC_IRQ_IRQ_PD_RAW_STATUS_BYTE_ADDRESS 0x7cu
/* Addressmap: pvtc.ts                                                     */
#define PVTC_TS_ADDRESS 0x80u
#define PVTC_TS_BYTE_ADDRESS 0x80u
/* Addressmap: pvtc.ts.ts_common                                           */
#define PVTC_TS_TS_COMMON_ADDRESS 0x80u
#define PVTC_TS_TS_COMMON_BYTE_ADDRESS 0x80u
/* Register: pvtc.ts.ts_common.clk_synth                                   */
#define PVTC_TS_TS_COMMON_CLK_SYNTH_ADDRESS 0x80u
#define PVTC_TS_TS_COMMON_CLK_SYNTH_BYTE_ADDRESS 0x80u
/* Register: pvtc.ts.ts_common.sdif_disable                                */
#define PVTC_TS_TS_COMMON_SDIF_DISABLE_ADDRESS 0x84u
#define PVTC_TS_TS_COMMON_SDIF_DISABLE_BYTE_ADDRESS 0x84u
/* Register: pvtc.ts.ts_common.sdif_status                                 */
#define PVTC_TS_TS_COMMON_SDIF_STATUS_ADDRESS 0x88u
#define PVTC_TS_TS_COMMON_SDIF_STATUS_BYTE_ADDRESS 0x88u
/* Register: pvtc.ts.ts_common.sdif                                        */
#define PVTC_TS_TS_COMMON_SDIF_ADDRESS 0x8cu
#define PVTC_TS_TS_COMMON_SDIF_BYTE_ADDRESS 0x8cu
/* Register: pvtc.ts.ts_common.sdif_halt                                   */
#define PVTC_TS_TS_COMMON_SDIF_HALT_ADDRESS 0x90u
#define PVTC_TS_TS_COMMON_SDIF_HALT_BYTE_ADDRESS 0x90u
/* Register: pvtc.ts.ts_common.sdif_ctrl                                   */
#define PVTC_TS_TS_COMMON_SDIF_CTRL_ADDRESS 0x94u
#define PVTC_TS_TS_COMMON_SDIF_CTRL_BYTE_ADDRESS 0x94u
/* Register: pvtc.ts.ts_common.smpl_ctrl                                   */
#define PVTC_TS_TS_COMMON_SMPL_CTRL_ADDRESS 0xa0u
#define PVTC_TS_TS_COMMON_SMPL_CTRL_BYTE_ADDRESS 0xa0u
/* Register: pvtc.ts.ts_common.smpl_clr                                    */
#define PVTC_TS_TS_COMMON_SMPL_CLR_ADDRESS 0xa4u
#define PVTC_TS_TS_COMMON_SMPL_CLR_BYTE_ADDRESS 0xa4u
/* Register: pvtc.ts.ts_common.smpl_cnt                                    */
#define PVTC_TS_TS_COMMON_SMPL_CNT_ADDRESS 0xa8u
#define PVTC_TS_TS_COMMON_SMPL_CNT_BYTE_ADDRESS 0xa8u
/* Addressmap: pvtc.ts.ts_individual                                       */
#define PVTC_TS_TS_INDIVIDUAL_ADDRESS 0xc0u
#define PVTC_TS_TS_INDIVIDUAL_BYTE_ADDRESS 0xc0u
#define PVTC_TS_TS_INDIVIDUAL_ARRAY_ELEMENT_SIZE 0x40ull
#define PVTC_TS_TS_INDIVIDUAL_ARRAY_COUNT 0x8ull
#define PVTC_TS_TS_INDIVIDUAL_ARRAY_INDEX_MAX 0x7ull
#define PVTC_TS_TS_INDIVIDUAL_ARRAY_INDEX_MIN 0x0ull
/* Register: pvtc.ts.ts_individual.irq_enable                              */
#define PVTC_TS_TS_INDIVIDUAL_IRQ_ENABLE_ADDRESS 0xc0u
#define PVTC_TS_TS_INDIVIDUAL_IRQ_ENABLE_BYTE_ADDRESS 0xc0u
/* Register: pvtc.ts.ts_individual.irq_status                              */
#define PVTC_TS_TS_INDIVIDUAL_IRQ_STATUS_ADDRESS 0xc4u
#define PVTC_TS_TS_INDIVIDUAL_IRQ_STATUS_BYTE_ADDRESS 0xc4u
/* Register: pvtc.ts.ts_individual.irq_clr                                 */
#define PVTC_TS_TS_INDIVIDUAL_IRQ_CLR_ADDRESS 0xc8u
#define PVTC_TS_TS_INDIVIDUAL_IRQ_CLR_BYTE_ADDRESS 0xc8u
/* Register: pvtc.ts.ts_individual.irq_test                                */
#define PVTC_TS_TS_INDIVIDUAL_IRQ_TEST_ADDRESS 0xccu
#define PVTC_TS_TS_INDIVIDUAL_IRQ_TEST_BYTE_ADDRESS 0xccu
/* Register: pvtc.ts.ts_individual.sdif_rdata                              */
#define PVTC_TS_TS_INDIVIDUAL_SDIF_RDATA_ADDRESS 0xd0u
#define PVTC_TS_TS_INDIVIDUAL_SDIF_RDATA_BYTE_ADDRESS 0xd0u
/* Register: pvtc.ts.ts_individual.sdif_done                               */
#define PVTC_TS_TS_INDIVIDUAL_SDIF_DONE_ADDRESS 0xd4u
#define PVTC_TS_TS_INDIVIDUAL_SDIF_DONE_BYTE_ADDRESS 0xd4u
/* Register: pvtc.ts.ts_individual.sdif_data                               */
#define PVTC_TS_TS_INDIVIDUAL_SDIF_DATA_ADDRESS 0xd8u
#define PVTC_TS_TS_INDIVIDUAL_SDIF_DATA_BYTE_ADDRESS 0xd8u
/* Register: pvtc.ts.ts_individual.alarma_cfg                              */
#define PVTC_TS_TS_INDIVIDUAL_ALARMA_CFG_ADDRESS 0xe0u
#define PVTC_TS_TS_INDIVIDUAL_ALARMA_CFG_BYTE_ADDRESS 0xe0u
/* Register: pvtc.ts.ts_individual.alarmb_cfg                              */
#define PVTC_TS_TS_INDIVIDUAL_ALARMB_CFG_ADDRESS 0xe4u
#define PVTC_TS_TS_INDIVIDUAL_ALARMB_CFG_BYTE_ADDRESS 0xe4u
/* Register: pvtc.ts.ts_individual.smpl_hilo                               */
#define PVTC_TS_TS_INDIVIDUAL_SMPL_HILO_ADDRESS 0xe8u
#define PVTC_TS_TS_INDIVIDUAL_SMPL_HILO_BYTE_ADDRESS 0xe8u
/* Register: pvtc.ts.ts_individual.hilo_reset                              */
#define PVTC_TS_TS_INDIVIDUAL_HILO_RESET_ADDRESS 0xecu
#define PVTC_TS_TS_INDIVIDUAL_HILO_RESET_BYTE_ADDRESS 0xecu
/* Addressmap: pvtc.pd                                                     */
#define PVTC_PD_ADDRESS 0x300u
#define PVTC_PD_BYTE_ADDRESS 0x300u
/* Addressmap: pvtc.pd.pd_common                                           */
#define PVTC_PD_PD_COMMON_ADDRESS 0x300u
#define PVTC_PD_PD_COMMON_BYTE_ADDRESS 0x300u
/* Register: pvtc.pd.pd_common.clk_synth                                   */
#define PVTC_PD_PD_COMMON_CLK_SYNTH_ADDRESS 0x300u
#define PVTC_PD_PD_COMMON_CLK_SYNTH_BYTE_ADDRESS 0x300u
/* Register: pvtc.pd.pd_common.sdif_disable                                */
#define PVTC_PD_PD_COMMON_SDIF_DISABLE_ADDRESS 0x304u
#define PVTC_PD_PD_COMMON_SDIF_DISABLE_BYTE_ADDRESS 0x304u
/* Register: pvtc.pd.pd_common.sdif_status                                 */
#define PVTC_PD_PD_COMMON_SDIF_STATUS_ADDRESS 0x308u
#define PVTC_PD_PD_COMMON_SDIF_STATUS_BYTE_ADDRESS 0x308u
/* Register: pvtc.pd.pd_common.sdif                                        */
#define PVTC_PD_PD_COMMON_SDIF_ADDRESS 0x30cu
#define PVTC_PD_PD_COMMON_SDIF_BYTE_ADDRESS 0x30cu
/* Register: pvtc.pd.pd_common.sdif_halt                                   */
#define PVTC_PD_PD_COMMON_SDIF_HALT_ADDRESS 0x310u
#define PVTC_PD_PD_COMMON_SDIF_HALT_BYTE_ADDRESS 0x310u
/* Register: pvtc.pd.pd_common.sdif_ctrl                                   */
#define PVTC_PD_PD_COMMON_SDIF_CTRL_ADDRESS 0x314u
#define PVTC_PD_PD_COMMON_SDIF_CTRL_BYTE_ADDRESS 0x314u
/* Register: pvtc.pd.pd_common.smpl_ctrl                                   */
#define PVTC_PD_PD_COMMON_SMPL_CTRL_ADDRESS 0x320u
#define PVTC_PD_PD_COMMON_SMPL_CTRL_BYTE_ADDRESS 0x320u
/* Register: pvtc.pd.pd_common.smpl_clr                                    */
#define PVTC_PD_PD_COMMON_SMPL_CLR_ADDRESS 0x324u
#define PVTC_PD_PD_COMMON_SMPL_CLR_BYTE_ADDRESS 0x324u
/* Register: pvtc.pd.pd_common.smpl_cnt                                    */
#define PVTC_PD_PD_COMMON_SMPL_CNT_ADDRESS 0x328u
#define PVTC_PD_PD_COMMON_SMPL_CNT_BYTE_ADDRESS 0x328u
/* Addressmap: pvtc.pd.pd_individual                                       */
#define PVTC_PD_PD_INDIVIDUAL_ADDRESS 0x340u
#define PVTC_PD_PD_INDIVIDUAL_BYTE_ADDRESS 0x340u
#define PVTC_PD_PD_INDIVIDUAL_ARRAY_ELEMENT_SIZE 0x40ull
#define PVTC_PD_PD_INDIVIDUAL_ARRAY_COUNT 0x8ull
#define PVTC_PD_PD_INDIVIDUAL_ARRAY_INDEX_MAX 0x7ull
#define PVTC_PD_PD_INDIVIDUAL_ARRAY_INDEX_MIN 0x0ull
/* Register: pvtc.pd.pd_individual.irq_enable                              */
#define PVTC_PD_PD_INDIVIDUAL_IRQ_ENABLE_ADDRESS 0x340u
#define PVTC_PD_PD_INDIVIDUAL_IRQ_ENABLE_BYTE_ADDRESS 0x340u
/* Register: pvtc.pd.pd_individual.irq_status                              */
#define PVTC_PD_PD_INDIVIDUAL_IRQ_STATUS_ADDRESS 0x344u
#define PVTC_PD_PD_INDIVIDUAL_IRQ_STATUS_BYTE_ADDRESS 0x344u
/* Register: pvtc.pd.pd_individual.irq_clr                                 */
#define PVTC_PD_PD_INDIVIDUAL_IRQ_CLR_ADDRESS 0x348u
#define PVTC_PD_PD_INDIVIDUAL_IRQ_CLR_BYTE_ADDRESS 0x348u
/* Register: pvtc.pd.pd_individual.irq_test                                */
#define PVTC_PD_PD_INDIVIDUAL_IRQ_TEST_ADDRESS 0x34cu
#define PVTC_PD_PD_INDIVIDUAL_IRQ_TEST_BYTE_ADDRESS 0x34cu
/* Register: pvtc.pd.pd_individual.sdif_rdata                              */
#define PVTC_PD_PD_INDIVIDUAL_SDIF_RDATA_ADDRESS 0x350u
#define PVTC_PD_PD_INDIVIDUAL_SDIF_RDATA_BYTE_ADDRESS 0x350u
/* Register: pvtc.pd.pd_individual.sdif_done                               */
#define PVTC_PD_PD_INDIVIDUAL_SDIF_DONE_ADDRESS 0x354u
#define PVTC_PD_PD_INDIVIDUAL_SDIF_DONE_BYTE_ADDRESS 0x354u
/* Register: pvtc.pd.pd_individual.sdif_data                               */
#define PVTC_PD_PD_INDIVIDUAL_SDIF_DATA_ADDRESS 0x358u
#define PVTC_PD_PD_INDIVIDUAL_SDIF_DATA_BYTE_ADDRESS 0x358u
/* Register: pvtc.pd.pd_individual.alarma_cfg                              */
#define PVTC_PD_PD_INDIVIDUAL_ALARMA_CFG_ADDRESS 0x360u
#define PVTC_PD_PD_INDIVIDUAL_ALARMA_CFG_BYTE_ADDRESS 0x360u
/* Register: pvtc.pd.pd_individual.alarmb_cfg                              */
#define PVTC_PD_PD_INDIVIDUAL_ALARMB_CFG_ADDRESS 0x364u
#define PVTC_PD_PD_INDIVIDUAL_ALARMB_CFG_BYTE_ADDRESS 0x364u
/* Register: pvtc.pd.pd_individual.smpl_hilo                               */
#define PVTC_PD_PD_INDIVIDUAL_SMPL_HILO_ADDRESS 0x368u
#define PVTC_PD_PD_INDIVIDUAL_SMPL_HILO_BYTE_ADDRESS 0x368u
/* Register: pvtc.pd.pd_individual.hilo_reset                              */
#define PVTC_PD_PD_INDIVIDUAL_HILO_RESET_ADDRESS 0x36cu
#define PVTC_PD_PD_INDIVIDUAL_HILO_RESET_BYTE_ADDRESS 0x36cu
/* Addressmap: pvtc.vm                                                     */
#define PVTC_VM_ADDRESS 0x800u
#define PVTC_VM_BYTE_ADDRESS 0x800u
/* Addressmap: pvtc.vm.vm_common                                           */
#define PVTC_VM_VM_COMMON_ADDRESS 0x800u
#define PVTC_VM_VM_COMMON_BYTE_ADDRESS 0x800u
/* Register: pvtc.vm.vm_common.clk_synth                                   */
#define PVTC_VM_VM_COMMON_CLK_SYNTH_ADDRESS 0x800u
#define PVTC_VM_VM_COMMON_CLK_SYNTH_BYTE_ADDRESS 0x800u
/* Register: pvtc.vm.vm_common.sdif_disable                                */
#define PVTC_VM_VM_COMMON_SDIF_DISABLE_ADDRESS 0x804u
#define PVTC_VM_VM_COMMON_SDIF_DISABLE_BYTE_ADDRESS 0x804u
/* Register: pvtc.vm.vm_common.sdif_status                                 */
#define PVTC_VM_VM_COMMON_SDIF_STATUS_ADDRESS 0x808u
#define PVTC_VM_VM_COMMON_SDIF_STATUS_BYTE_ADDRESS 0x808u
/* Register: pvtc.vm.vm_common.sdif                                        */
#define PVTC_VM_VM_COMMON_SDIF_ADDRESS 0x80cu
#define PVTC_VM_VM_COMMON_SDIF_BYTE_ADDRESS 0x80cu
/* Register: pvtc.vm.vm_common.sdif_halt                                   */
#define PVTC_VM_VM_COMMON_SDIF_HALT_ADDRESS 0x810u
#define PVTC_VM_VM_COMMON_SDIF_HALT_BYTE_ADDRESS 0x810u
/* Register: pvtc.vm.vm_common.sdif_ctrl                                   */
#define PVTC_VM_VM_COMMON_SDIF_CTRL_ADDRESS 0x814u
#define PVTC_VM_VM_COMMON_SDIF_CTRL_BYTE_ADDRESS 0x814u
/* Register: pvtc.vm.vm_common.smpl_ctrl                                   */
#define PVTC_VM_VM_COMMON_SMPL_CTRL_ADDRESS 0x820u
#define PVTC_VM_VM_COMMON_SMPL_CTRL_BYTE_ADDRESS 0x820u
/* Register: pvtc.vm.vm_common.smpl_clr                                    */
#define PVTC_VM_VM_COMMON_SMPL_CLR_ADDRESS 0x824u
#define PVTC_VM_VM_COMMON_SMPL_CLR_BYTE_ADDRESS 0x824u
/* Register: pvtc.vm.vm_common.smpl_cnt                                    */
#define PVTC_VM_VM_COMMON_SMPL_CNT_ADDRESS 0x828u
#define PVTC_VM_VM_COMMON_SMPL_CNT_BYTE_ADDRESS 0x828u
/* Addressmap: pvtc.vm.vm_individual                                       */
#define PVTC_VM_VM_INDIVIDUAL_ADDRESS 0xa00u
#define PVTC_VM_VM_INDIVIDUAL_BYTE_ADDRESS 0xa00u
#define PVTC_VM_VM_INDIVIDUAL_ARRAY_ELEMENT_SIZE 0x200ull
#define PVTC_VM_VM_INDIVIDUAL_ARRAY_COUNT 0x2ull
#define PVTC_VM_VM_INDIVIDUAL_ARRAY_INDEX_MAX 0x1ull
#define PVTC_VM_VM_INDIVIDUAL_ARRAY_INDEX_MIN 0x0ull
/* Register: pvtc.vm.vm_individual.irq_enable                              */
#define PVTC_VM_VM_INDIVIDUAL_IRQ_ENABLE_ADDRESS 0xa00u
#define PVTC_VM_VM_INDIVIDUAL_IRQ_ENABLE_BYTE_ADDRESS 0xa00u
/* Register: pvtc.vm.vm_individual.irq_status                              */
#define PVTC_VM_VM_INDIVIDUAL_IRQ_STATUS_ADDRESS 0xa04u
#define PVTC_VM_VM_INDIVIDUAL_IRQ_STATUS_BYTE_ADDRESS 0xa04u
/* Register: pvtc.vm.vm_individual.irq_clr                                 */
#define PVTC_VM_VM_INDIVIDUAL_IRQ_CLR_ADDRESS 0xa08u
#define PVTC_VM_VM_INDIVIDUAL_IRQ_CLR_BYTE_ADDRESS 0xa08u
/* Register: pvtc.vm.vm_individual.irq_test                                */
#define PVTC_VM_VM_INDIVIDUAL_IRQ_TEST_ADDRESS 0xa0cu
#define PVTC_VM_VM_INDIVIDUAL_IRQ_TEST_BYTE_ADDRESS 0xa0cu
/* Register: pvtc.vm.vm_individual.irq_alarma_enable                       */
#define PVTC_VM_VM_INDIVIDUAL_IRQ_ALARMA_ENABLE_ADDRESS 0xa10u
#define PVTC_VM_VM_INDIVIDUAL_IRQ_ALARMA_ENABLE_BYTE_ADDRESS 0xa10u
/* Register: pvtc.vm.vm_individual.irq_alarma_status                       */
#define PVTC_VM_VM_INDIVIDUAL_IRQ_ALARMA_STATUS_ADDRESS 0xa14u
#define PVTC_VM_VM_INDIVIDUAL_IRQ_ALARMA_STATUS_BYTE_ADDRESS 0xa14u
/* Register: pvtc.vm.vm_individual.irq_alarma_clr                          */
#define PVTC_VM_VM_INDIVIDUAL_IRQ_ALARMA_CLR_ADDRESS 0xa18u
#define PVTC_VM_VM_INDIVIDUAL_IRQ_ALARMA_CLR_BYTE_ADDRESS 0xa18u
/* Register: pvtc.vm.vm_individual.irq_alarma_test                         */
#define PVTC_VM_VM_INDIVIDUAL_IRQ_ALARMA_TEST_ADDRESS 0xa1cu
#define PVTC_VM_VM_INDIVIDUAL_IRQ_ALARMA_TEST_BYTE_ADDRESS 0xa1cu
/* Register: pvtc.vm.vm_individual.irq_alarmb_enable                       */
#define PVTC_VM_VM_INDIVIDUAL_IRQ_ALARMB_ENABLE_ADDRESS 0xa20u
#define PVTC_VM_VM_INDIVIDUAL_IRQ_ALARMB_ENABLE_BYTE_ADDRESS 0xa20u
/* Register: pvtc.vm.vm_individual.irq_alarmb_status                       */
#define PVTC_VM_VM_INDIVIDUAL_IRQ_ALARMB_STATUS_ADDRESS 0xa24u
#define PVTC_VM_VM_INDIVIDUAL_IRQ_ALARMB_STATUS_BYTE_ADDRESS 0xa24u
/* Register: pvtc.vm.vm_individual.irq_alarmb_clr                          */
#define PVTC_VM_VM_INDIVIDUAL_IRQ_ALARMB_CLR_ADDRESS 0xa28u
#define PVTC_VM_VM_INDIVIDUAL_IRQ_ALARMB_CLR_BYTE_ADDRESS 0xa28u
/* Register: pvtc.vm.vm_individual.irq_alarmb_test                         */
#define PVTC_VM_VM_INDIVIDUAL_IRQ_ALARMB_TEST_ADDRESS 0xa2cu
#define PVTC_VM_VM_INDIVIDUAL_IRQ_ALARMB_TEST_BYTE_ADDRESS 0xa2cu
/* Register: pvtc.vm.vm_individual.sdif_rdata                              */
#define PVTC_VM_VM_INDIVIDUAL_SDIF_RDATA_ADDRESS 0xa30u
#define PVTC_VM_VM_INDIVIDUAL_SDIF_RDATA_BYTE_ADDRESS 0xa30u
/* Register: pvtc.vm.vm_individual.sdif_done                               */
#define PVTC_VM_VM_INDIVIDUAL_SDIF_DONE_ADDRESS 0xa34u
#define PVTC_VM_VM_INDIVIDUAL_SDIF_DONE_BYTE_ADDRESS 0xa34u
/* Register: pvtc.vm.vm_individual.sdif_data                               */
#define PVTC_VM_VM_INDIVIDUAL_SDIF_DATA_ADDRESS 0xa40u
#define PVTC_VM_VM_INDIVIDUAL_SDIF_DATA_BYTE_ADDRESS 0xa40u
#define PVTC_VM_VM_INDIVIDUAL_SDIF_DATA_ARRAY_ELEMENT_SIZE 0x4ull
#define PVTC_VM_VM_INDIVIDUAL_SDIF_DATA_ARRAY_COUNT 0x10ull
#define PVTC_VM_VM_INDIVIDUAL_SDIF_DATA_ARRAY_INDEX_MAX 0xfull
#define PVTC_VM_VM_INDIVIDUAL_SDIF_DATA_ARRAY_INDEX_MIN 0x0ull
/* Group: pvtc.vm.vm_individual.alarm_and_hilo                             */
#define PVTC_VM_VM_INDIVIDUAL_ALARM_AND_HILO_ADDRESS 0xa80u
#define PVTC_VM_VM_INDIVIDUAL_ALARM_AND_HILO_BYTE_ADDRESS 0xa80u
#define PVTC_VM_VM_INDIVIDUAL_ALARM_AND_HILO_ARRAY_ELEMENT_SIZE 0x10ull
#define PVTC_VM_VM_INDIVIDUAL_ALARM_AND_HILO_ARRAY_COUNT 0x10ull
#define PVTC_VM_VM_INDIVIDUAL_ALARM_AND_HILO_ARRAY_INDEX_MAX 0xfull
#define PVTC_VM_VM_INDIVIDUAL_ALARM_AND_HILO_ARRAY_INDEX_MIN 0x0ull
/* Register: pvtc.vm.vm_individual.alarm_and_hilo.alarma_cfg               */
#define PVTC_VM_VM_INDIVIDUAL_ALARM_AND_HILO_ALARMA_CFG_ADDRESS 0xa80u
#define PVTC_VM_VM_INDIVIDUAL_ALARM_AND_HILO_ALARMA_CFG_BYTE_ADDRESS 0xa80u
/* Register: pvtc.vm.vm_individual.alarm_and_hilo.alarmb_cfg               */
#define PVTC_VM_VM_INDIVIDUAL_ALARM_AND_HILO_ALARMB_CFG_ADDRESS 0xa84u
#define PVTC_VM_VM_INDIVIDUAL_ALARM_AND_HILO_ALARMB_CFG_BYTE_ADDRESS 0xa84u
/* Register: pvtc.vm.vm_individual.alarm_and_hilo.smpl_hilo                */
#define PVTC_VM_VM_INDIVIDUAL_ALARM_AND_HILO_SMPL_HILO_ADDRESS 0xa88u
#define PVTC_VM_VM_INDIVIDUAL_ALARM_AND_HILO_SMPL_HILO_BYTE_ADDRESS 0xa88u
/* Register: pvtc.vm.vm_individual.alarm_and_hilo.hilo_reset               */
#define PVTC_VM_VM_INDIVIDUAL_ALARM_AND_HILO_HILO_RESET_ADDRESS 0xa8cu
#define PVTC_VM_VM_INDIVIDUAL_ALARM_AND_HILO_HILO_RESET_BYTE_ADDRESS 0xa8cu


/* ####################################################################### */
/*        TEMPLATE MACROS                                                  */
/* ####################################################################### */

/* Addressmap type: pvtc                                                   */
/* Addressmap template: pvtc                                               */
#define PVTC_SIZE 0xe00u
#define PVTC_BYTE_SIZE 0xe00u
/* Addressmap member: pvtc.common                                          */
/* Addressmap type referenced: common                                      */
/* Addressmap template referenced: common                                  */
#define PVTC_COMMON_OFFSET 0x0u
#define PVTC_COMMON_BYTE_OFFSET 0x0u
#define PVTC_COMMON_READ_ACCESS 1u
#define PVTC_COMMON_WRITE_ACCESS 1u
/* Addressmap member: pvtc.irq                                             */
/* Addressmap type referenced: irq                                         */
/* Addressmap template referenced: irq                                     */
#define PVTC_IRQ_OFFSET 0x40u
#define PVTC_IRQ_BYTE_OFFSET 0x40u
#define PVTC_IRQ_READ_ACCESS 1u
#define PVTC_IRQ_WRITE_ACCESS 1u
/* Addressmap member: pvtc.ts                                              */
/* Addressmap type referenced: ts_ip                                       */
/* Addressmap template referenced: ts_ip                                   */
#define PVTC_TS_OFFSET 0x80u
#define PVTC_TS_BYTE_OFFSET 0x80u
#define PVTC_TS_READ_ACCESS 1u
#define PVTC_TS_WRITE_ACCESS 1u
/* Addressmap member: pvtc.pd                                              */
/* Addressmap type referenced: pd_ip                                       */
/* Addressmap template referenced: pd_ip                                   */
#define PVTC_PD_OFFSET 0x300u
#define PVTC_PD_BYTE_OFFSET 0x300u
#define PVTC_PD_READ_ACCESS 1u
#define PVTC_PD_WRITE_ACCESS 1u
/* Addressmap member: pvtc.vm                                              */
/* Addressmap type referenced: vm_ip                                       */
/* Addressmap template referenced: vm_ip                                   */
#define PVTC_VM_OFFSET 0x800u
#define PVTC_VM_BYTE_OFFSET 0x800u
#define PVTC_VM_READ_ACCESS 1u
#define PVTC_VM_WRITE_ACCESS 1u

/* Addressmap type: common                                                 */
/* Addressmap template: common                                             */
#define COMMON_SIZE 0x40u
#define COMMON_BYTE_SIZE 0x40u
/* Register member: common.pvt_comp_id                                     */
/* Register type referenced: common::pvt_comp_id                           */
/* Register template referenced: common::pvt_comp_id                       */
#define COMMON_PVT_COMP_ID_OFFSET 0x0u
#define COMMON_PVT_COMP_ID_BYTE_OFFSET 0x0u
#define COMMON_PVT_COMP_ID_READ_ACCESS 1u
#define COMMON_PVT_COMP_ID_WRITE_ACCESS 0u
#define COMMON_PVT_COMP_ID_RESET_VALUE 0x9b487062ul
#define COMMON_PVT_COMP_ID_RESET_MASK 0xfffffffful
#define COMMON_PVT_COMP_ID_READ_MASK 0xfffffffful
#define COMMON_PVT_COMP_ID_WRITE_MASK 0x00000000ul
/* Register member: common.pvt_ip_cfg                                      */
/* Register type referenced: common::pvt_ip_cfg                            */
/* Register template referenced: common::pvt_ip_cfg                        */
#define COMMON_PVT_IP_CFG_OFFSET 0x4u
#define COMMON_PVT_IP_CFG_BYTE_OFFSET 0x4u
#define COMMON_PVT_IP_CFG_READ_ACCESS 1u
#define COMMON_PVT_IP_CFG_WRITE_ACCESS 0u
#define COMMON_PVT_IP_CFG_RESET_VALUE 0x10020808ul
#define COMMON_PVT_IP_CFG_RESET_MASK 0xfffffffful
#define COMMON_PVT_IP_CFG_READ_MASK 0xfffffffful
#define COMMON_PVT_IP_CFG_WRITE_MASK 0x00000000ul
/* Register member: common.pvt_ip_num                                      */
/* Register type referenced: common::pvt_ip_num                            */
/* Register template referenced: common::pvt_ip_num                        */
#define COMMON_PVT_IP_NUM_OFFSET 0x8u
#define COMMON_PVT_IP_NUM_BYTE_OFFSET 0x8u
#define COMMON_PVT_IP_NUM_READ_ACCESS 1u
#define COMMON_PVT_IP_NUM_WRITE_ACCESS 1u
#define COMMON_PVT_IP_NUM_RESET_VALUE 0x00000000ul
#define COMMON_PVT_IP_NUM_RESET_MASK 0xfffffffful
#define COMMON_PVT_IP_NUM_READ_MASK 0xfffffffful
#define COMMON_PVT_IP_NUM_WRITE_MASK 0xfffffffful
/* Register member: common.pvt_tm_scratch                                  */
/* Register type referenced: common::pvt_tm_scratch                        */
/* Register template referenced: common::pvt_tm_scratch                    */
#define COMMON_PVT_TM_SCRATCH_OFFSET 0xcu
#define COMMON_PVT_TM_SCRATCH_BYTE_OFFSET 0xcu
#define COMMON_PVT_TM_SCRATCH_READ_ACCESS 1u
#define COMMON_PVT_TM_SCRATCH_WRITE_ACCESS 1u
#define COMMON_PVT_TM_SCRATCH_RESET_VALUE 0x00000000ul
#define COMMON_PVT_TM_SCRATCH_RESET_MASK 0xfffffffful
#define COMMON_PVT_TM_SCRATCH_READ_MASK 0xfffffffful
#define COMMON_PVT_TM_SCRATCH_WRITE_MASK 0xfffffffful
/* Register member: common.pvt_reg_lock                                    */
/* Register type referenced: common::pvt_reg_lock                          */
/* Register template referenced: common::pvt_reg_lock                      */
#define COMMON_PVT_REG_LOCK_OFFSET 0x10u
#define COMMON_PVT_REG_LOCK_BYTE_OFFSET 0x10u
#define COMMON_PVT_REG_LOCK_READ_ACCESS 1u
#define COMMON_PVT_REG_LOCK_WRITE_ACCESS 1u
#define COMMON_PVT_REG_LOCK_RESET_VALUE 0x00000000ul
#define COMMON_PVT_REG_LOCK_RESET_MASK 0xfffffffful
#define COMMON_PVT_REG_LOCK_READ_MASK 0xfffffffful
#define COMMON_PVT_REG_LOCK_WRITE_MASK 0xfffffffful
/* Register member: common.pvt_reg_lock_status                             */
/* Register type referenced: common::pvt_reg_lock_status                   */
/* Register template referenced: common::pvt_reg_lock_status               */
#define COMMON_PVT_REG_LOCK_STATUS_OFFSET 0x14u
#define COMMON_PVT_REG_LOCK_STATUS_BYTE_OFFSET 0x14u
#define COMMON_PVT_REG_LOCK_STATUS_READ_ACCESS 1u
#define COMMON_PVT_REG_LOCK_STATUS_WRITE_ACCESS 0u
#define COMMON_PVT_REG_LOCK_STATUS_RESET_VALUE 0x00000000ul
#define COMMON_PVT_REG_LOCK_STATUS_RESET_MASK 0xfffffffful
#define COMMON_PVT_REG_LOCK_STATUS_READ_MASK 0xfffffffful
#define COMMON_PVT_REG_LOCK_STATUS_WRITE_MASK 0x00000000ul
/* Register member: common.pvt_tam_status                                  */
/* Register type referenced: common::pvt_tam_status                        */
/* Register template referenced: common::pvt_tam_status                    */
#define COMMON_PVT_TAM_STATUS_OFFSET 0x18u
#define COMMON_PVT_TAM_STATUS_BYTE_OFFSET 0x18u
#define COMMON_PVT_TAM_STATUS_READ_ACCESS 1u
#define COMMON_PVT_TAM_STATUS_WRITE_ACCESS 0u
#define COMMON_PVT_TAM_STATUS_RESET_VALUE 0x00000000ul
#define COMMON_PVT_TAM_STATUS_RESET_MASK 0xfffffffful
#define COMMON_PVT_TAM_STATUS_READ_MASK 0xfffffffful
#define COMMON_PVT_TAM_STATUS_WRITE_MASK 0x00000000ul
/* Register member: common.pvt_tam_clear                                   */
/* Register type referenced: common::pvt_tam_clear                         */
/* Register template referenced: common::pvt_tam_clear                     */
#define COMMON_PVT_TAM_CLEAR_OFFSET 0x1cu
#define COMMON_PVT_TAM_CLEAR_BYTE_OFFSET 0x1cu
#define COMMON_PVT_TAM_CLEAR_READ_ACCESS 0u
#define COMMON_PVT_TAM_CLEAR_WRITE_ACCESS 1u
#define COMMON_PVT_TAM_CLEAR_RESET_VALUE 0x00000000ul
#define COMMON_PVT_TAM_CLEAR_RESET_MASK 0xfffffffful
#define COMMON_PVT_TAM_CLEAR_READ_MASK 0x00000000ul
#define COMMON_PVT_TAM_CLEAR_WRITE_MASK 0x00000001ul
/* Register member: common.pvt_tmr_ctrl                                    */
/* Register type referenced: common::pvt_tmr_ctrl                          */
/* Register template referenced: common::pvt_tmr_ctrl                      */
#define COMMON_PVT_TMR_CTRL_OFFSET 0x20u
#define COMMON_PVT_TMR_CTRL_BYTE_OFFSET 0x20u
#define COMMON_PVT_TMR_CTRL_READ_ACCESS 1u
#define COMMON_PVT_TMR_CTRL_WRITE_ACCESS 1u
#define COMMON_PVT_TMR_CTRL_RESET_VALUE 0x00000000ul
#define COMMON_PVT_TMR_CTRL_RESET_MASK 0xfffffffful
#define COMMON_PVT_TMR_CTRL_READ_MASK 0xfffffffful
#define COMMON_PVT_TMR_CTRL_WRITE_MASK 0x0001fffful
/* Register member: common.pvt_tmr_status                                  */
/* Register type referenced: common::pvt_tmr_status                        */
/* Register template referenced: common::pvt_tmr_status                    */
#define COMMON_PVT_TMR_STATUS_OFFSET 0x24u
#define COMMON_PVT_TMR_STATUS_BYTE_OFFSET 0x24u
#define COMMON_PVT_TMR_STATUS_READ_ACCESS 1u
#define COMMON_PVT_TMR_STATUS_WRITE_ACCESS 1u
#define COMMON_PVT_TMR_STATUS_RESET_VALUE 0x00000000ul
#define COMMON_PVT_TMR_STATUS_RESET_MASK 0xfffffffful
#define COMMON_PVT_TMR_STATUS_READ_MASK 0xfffffffful
#define COMMON_PVT_TMR_STATUS_WRITE_MASK 0x00000003ul
/* Register member: common.pvt_tmr_irq_clear                               */
/* Register type referenced: common::pvt_tmr_irq_clear                     */
/* Register template referenced: common::pvt_tmr_irq_clear                 */
#define COMMON_PVT_TMR_IRQ_CLEAR_OFFSET 0x28u
#define COMMON_PVT_TMR_IRQ_CLEAR_BYTE_OFFSET 0x28u
#define COMMON_PVT_TMR_IRQ_CLEAR_READ_ACCESS 0u
#define COMMON_PVT_TMR_IRQ_CLEAR_WRITE_ACCESS 1u
#define COMMON_PVT_TMR_IRQ_CLEAR_RESET_VALUE 0x00000000ul
#define COMMON_PVT_TMR_IRQ_CLEAR_RESET_MASK 0xfffffffful
#define COMMON_PVT_TMR_IRQ_CLEAR_READ_MASK 0x00000000ul
#define COMMON_PVT_TMR_IRQ_CLEAR_WRITE_MASK 0x00000001ul
/* Register member: common.pvt_tmr_irq_test                                */
/* Register type referenced: common::pvt_tmr_irq_test                      */
/* Register template referenced: common::pvt_tmr_irq_test                  */
#define COMMON_PVT_TMR_IRQ_TEST_OFFSET 0x2cu
#define COMMON_PVT_TMR_IRQ_TEST_BYTE_OFFSET 0x2cu
#define COMMON_PVT_TMR_IRQ_TEST_READ_ACCESS 1u
#define COMMON_PVT_TMR_IRQ_TEST_WRITE_ACCESS 1u
#define COMMON_PVT_TMR_IRQ_TEST_RESET_VALUE 0x00000000ul
#define COMMON_PVT_TMR_IRQ_TEST_RESET_MASK 0xfffffffful
#define COMMON_PVT_TMR_IRQ_TEST_READ_MASK 0xfffffffful
#define COMMON_PVT_TMR_IRQ_TEST_WRITE_MASK 0x00000001ul

/* Register type: common::pvt_comp_id                                      */
/* Register template: common::pvt_comp_id                                  */
/* Field member: common::pvt_comp_id.moortec_id                            */
#define COMMON_PVT_COMP_ID_MOORTEC_ID_MSB 31u
#define COMMON_PVT_COMP_ID_MOORTEC_ID_LSB 18u
#define COMMON_PVT_COMP_ID_MOORTEC_ID_WIDTH 14u
#define COMMON_PVT_COMP_ID_MOORTEC_ID_READ_ACCESS 1u
#define COMMON_PVT_COMP_ID_MOORTEC_ID_WRITE_ACCESS 0u
#define COMMON_PVT_COMP_ID_MOORTEC_ID_RESET 0x26d2u
#define COMMON_PVT_COMP_ID_MOORTEC_ID_FIELD_MASK 0xfffc0000ul
#define COMMON_PVT_COMP_ID_MOORTEC_ID_GET(x) (((x) & 0xfffc0000ul) >> 18)
#define COMMON_PVT_COMP_ID_MOORTEC_ID_SET(x) (((x) << 18) & 0xfffc0000ul)
#define COMMON_PVT_COMP_ID_MOORTEC_ID_MODIFY(r, x) \
   ((((x) << 18) & 0xfffc0000ul) | ((r) & 0x0003fffful))
/* Field member: common::pvt_comp_id.component_id                          */
#define COMMON_PVT_COMP_ID_COMPONENT_ID_MSB 17u
#define COMMON_PVT_COMP_ID_COMPONENT_ID_LSB 12u
#define COMMON_PVT_COMP_ID_COMPONENT_ID_WIDTH 6u
#define COMMON_PVT_COMP_ID_COMPONENT_ID_READ_ACCESS 1u
#define COMMON_PVT_COMP_ID_COMPONENT_ID_WRITE_ACCESS 0u
#define COMMON_PVT_COMP_ID_COMPONENT_ID_RESET 0x07u
#define COMMON_PVT_COMP_ID_COMPONENT_ID_FIELD_MASK 0x0003f000ul
#define COMMON_PVT_COMP_ID_COMPONENT_ID_GET(x) (((x) & 0x0003f000ul) >> 12)
#define COMMON_PVT_COMP_ID_COMPONENT_ID_SET(x) (((x) << 12) & 0x0003f000ul)
#define COMMON_PVT_COMP_ID_COMPONENT_ID_MODIFY(r, x) \
   ((((x) << 12) & 0x0003f000ul) | ((r) & 0xfffc0ffful))
/* Field member: common::pvt_comp_id.rev_major                             */
#define COMMON_PVT_COMP_ID_REV_MAJOR_MSB 9u
#define COMMON_PVT_COMP_ID_REV_MAJOR_LSB 5u
#define COMMON_PVT_COMP_ID_REV_MAJOR_WIDTH 5u
#define COMMON_PVT_COMP_ID_REV_MAJOR_READ_ACCESS 1u
#define COMMON_PVT_COMP_ID_REV_MAJOR_WRITE_ACCESS 0u
#define COMMON_PVT_COMP_ID_REV_MAJOR_RESET 0x03u
#define COMMON_PVT_COMP_ID_REV_MAJOR_FIELD_MASK 0x000003e0ul
#define COMMON_PVT_COMP_ID_REV_MAJOR_GET(x) (((x) & 0x000003e0ul) >> 5)
#define COMMON_PVT_COMP_ID_REV_MAJOR_SET(x) (((x) << 5) & 0x000003e0ul)
#define COMMON_PVT_COMP_ID_REV_MAJOR_MODIFY(r, x) \
   ((((x) << 5) & 0x000003e0ul) | ((r) & 0xfffffc1ful))
/* Field member: common::pvt_comp_id.rev_minor                             */
#define COMMON_PVT_COMP_ID_REV_MINOR_MSB 4u
#define COMMON_PVT_COMP_ID_REV_MINOR_LSB 0u
#define COMMON_PVT_COMP_ID_REV_MINOR_WIDTH 5u
#define COMMON_PVT_COMP_ID_REV_MINOR_READ_ACCESS 1u
#define COMMON_PVT_COMP_ID_REV_MINOR_WRITE_ACCESS 0u
#define COMMON_PVT_COMP_ID_REV_MINOR_RESET 0x02u
#define COMMON_PVT_COMP_ID_REV_MINOR_FIELD_MASK 0x0000001ful
#define COMMON_PVT_COMP_ID_REV_MINOR_GET(x) ((x) & 0x0000001ful)
#define COMMON_PVT_COMP_ID_REV_MINOR_SET(x) ((x) & 0x0000001ful)
#define COMMON_PVT_COMP_ID_REV_MINOR_MODIFY(r, x) \
   (((x) & 0x0000001ful) | ((r) & 0xffffffe0ul))

/* Register type: common::pvt_ip_cfg                                       */
/* Register template: common::pvt_ip_cfg                                   */
/* Field member: common::pvt_ip_cfg.ch_num                                 */
#define COMMON_PVT_IP_CFG_CH_NUM_MSB 31u
#define COMMON_PVT_IP_CFG_CH_NUM_LSB 24u
#define COMMON_PVT_IP_CFG_CH_NUM_WIDTH 8u
#define COMMON_PVT_IP_CFG_CH_NUM_READ_ACCESS 1u
#define COMMON_PVT_IP_CFG_CH_NUM_WRITE_ACCESS 0u
#define COMMON_PVT_IP_CFG_CH_NUM_RESET 0x10u
#define COMMON_PVT_IP_CFG_CH_NUM_FIELD_MASK 0xff000000ul
#define COMMON_PVT_IP_CFG_CH_NUM_GET(x) (((x) & 0xff000000ul) >> 24)
#define COMMON_PVT_IP_CFG_CH_NUM_SET(x) (((x) << 24) & 0xff000000ul)
#define COMMON_PVT_IP_CFG_CH_NUM_MODIFY(r, x) \
   ((((x) << 24) & 0xff000000ul) | ((r) & 0x00fffffful))
/* Field member: common::pvt_ip_cfg.vm_num                                 */
#define COMMON_PVT_IP_CFG_VM_NUM_MSB 23u
#define COMMON_PVT_IP_CFG_VM_NUM_LSB 16u
#define COMMON_PVT_IP_CFG_VM_NUM_WIDTH 8u
#define COMMON_PVT_IP_CFG_VM_NUM_READ_ACCESS 1u
#define COMMON_PVT_IP_CFG_VM_NUM_WRITE_ACCESS 0u
#define COMMON_PVT_IP_CFG_VM_NUM_RESET 0x02u
#define COMMON_PVT_IP_CFG_VM_NUM_FIELD_MASK 0x00ff0000ul
#define COMMON_PVT_IP_CFG_VM_NUM_GET(x) (((x) & 0x00ff0000ul) >> 16)
#define COMMON_PVT_IP_CFG_VM_NUM_SET(x) (((x) << 16) & 0x00ff0000ul)
#define COMMON_PVT_IP_CFG_VM_NUM_MODIFY(r, x) \
   ((((x) << 16) & 0x00ff0000ul) | ((r) & 0xff00fffful))
/* Field member: common::pvt_ip_cfg.pd_num                                 */
#define COMMON_PVT_IP_CFG_PD_NUM_MSB 15u
#define COMMON_PVT_IP_CFG_PD_NUM_LSB 8u
#define COMMON_PVT_IP_CFG_PD_NUM_WIDTH 8u
#define COMMON_PVT_IP_CFG_PD_NUM_READ_ACCESS 1u
#define COMMON_PVT_IP_CFG_PD_NUM_WRITE_ACCESS 0u
#define COMMON_PVT_IP_CFG_PD_NUM_RESET 0x08u
#define COMMON_PVT_IP_CFG_PD_NUM_FIELD_MASK 0x0000ff00ul
#define COMMON_PVT_IP_CFG_PD_NUM_GET(x) (((x) & 0x0000ff00ul) >> 8)
#define COMMON_PVT_IP_CFG_PD_NUM_SET(x) (((x) << 8) & 0x0000ff00ul)
#define COMMON_PVT_IP_CFG_PD_NUM_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: common::pvt_ip_cfg.ts_num                                 */
#define COMMON_PVT_IP_CFG_TS_NUM_MSB 7u
#define COMMON_PVT_IP_CFG_TS_NUM_LSB 0u
#define COMMON_PVT_IP_CFG_TS_NUM_WIDTH 8u
#define COMMON_PVT_IP_CFG_TS_NUM_READ_ACCESS 1u
#define COMMON_PVT_IP_CFG_TS_NUM_WRITE_ACCESS 0u
#define COMMON_PVT_IP_CFG_TS_NUM_RESET 0x08u
#define COMMON_PVT_IP_CFG_TS_NUM_FIELD_MASK 0x000000fful
#define COMMON_PVT_IP_CFG_TS_NUM_GET(x) ((x) & 0x000000fful)
#define COMMON_PVT_IP_CFG_TS_NUM_SET(x) ((x) & 0x000000fful)
#define COMMON_PVT_IP_CFG_TS_NUM_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: common::pvt_ip_num                                       */
/* Register template: common::pvt_ip_num                                   */
/* Field member: common::pvt_ip_num.custom_id                              */
#define COMMON_PVT_IP_NUM_CUSTOM_ID_MSB 31u
#define COMMON_PVT_IP_NUM_CUSTOM_ID_LSB 0u
#define COMMON_PVT_IP_NUM_CUSTOM_ID_WIDTH 32u
#define COMMON_PVT_IP_NUM_CUSTOM_ID_READ_ACCESS 1u
#define COMMON_PVT_IP_NUM_CUSTOM_ID_WRITE_ACCESS 1u
#define COMMON_PVT_IP_NUM_CUSTOM_ID_RESET 0x00000000ul
#define COMMON_PVT_IP_NUM_CUSTOM_ID_FIELD_MASK 0xfffffffful
#define COMMON_PVT_IP_NUM_CUSTOM_ID_GET(x) ((x) & 0xfffffffful)
#define COMMON_PVT_IP_NUM_CUSTOM_ID_SET(x) ((x) & 0xfffffffful)
#define COMMON_PVT_IP_NUM_CUSTOM_ID_MODIFY(r, x) ((x) & 0xfffffffful)

/* Register type: common::pvt_tm_scratch                                   */
/* Register template: common::pvt_tm_scratch                               */
/* Field member: common::pvt_tm_scratch.scratch                            */
#define COMMON_PVT_TM_SCRATCH_SCRATCH_MSB 31u
#define COMMON_PVT_TM_SCRATCH_SCRATCH_LSB 0u
#define COMMON_PVT_TM_SCRATCH_SCRATCH_WIDTH 32u
#define COMMON_PVT_TM_SCRATCH_SCRATCH_READ_ACCESS 1u
#define COMMON_PVT_TM_SCRATCH_SCRATCH_WRITE_ACCESS 1u
#define COMMON_PVT_TM_SCRATCH_SCRATCH_RESET 0x00000000ul
#define COMMON_PVT_TM_SCRATCH_SCRATCH_FIELD_MASK 0xfffffffful
#define COMMON_PVT_TM_SCRATCH_SCRATCH_GET(x) ((x) & 0xfffffffful)
#define COMMON_PVT_TM_SCRATCH_SCRATCH_SET(x) ((x) & 0xfffffffful)
#define COMMON_PVT_TM_SCRATCH_SCRATCH_MODIFY(r, x) ((x) & 0xfffffffful)

/* Register type: common::pvt_reg_lock                                     */
/* Register template: common::pvt_reg_lock                                 */
/* Field member: common::pvt_reg_lock.lock                                 */
#define COMMON_PVT_REG_LOCK_LOCK_MSB 31u
#define COMMON_PVT_REG_LOCK_LOCK_LSB 0u
#define COMMON_PVT_REG_LOCK_LOCK_WIDTH 32u
#define COMMON_PVT_REG_LOCK_LOCK_READ_ACCESS 1u
#define COMMON_PVT_REG_LOCK_LOCK_WRITE_ACCESS 1u
#define COMMON_PVT_REG_LOCK_LOCK_RESET 0x00000000ul
#define COMMON_PVT_REG_LOCK_LOCK_FIELD_MASK 0xfffffffful
#define COMMON_PVT_REG_LOCK_LOCK_GET(x) ((x) & 0xfffffffful)
#define COMMON_PVT_REG_LOCK_LOCK_SET(x) ((x) & 0xfffffffful)
#define COMMON_PVT_REG_LOCK_LOCK_MODIFY(r, x) ((x) & 0xfffffffful)

/* Register type: common::pvt_reg_lock_status                              */
/* Register template: common::pvt_reg_lock_status                          */
/* Field member: common::pvt_reg_lock_status.hw_lock_status                */
#define COMMON_PVT_REG_LOCK_STATUS_HW_LOCK_STATUS_MSB 1u
#define COMMON_PVT_REG_LOCK_STATUS_HW_LOCK_STATUS_LSB 1u
#define COMMON_PVT_REG_LOCK_STATUS_HW_LOCK_STATUS_WIDTH 1u
#define COMMON_PVT_REG_LOCK_STATUS_HW_LOCK_STATUS_READ_ACCESS 1u
#define COMMON_PVT_REG_LOCK_STATUS_HW_LOCK_STATUS_WRITE_ACCESS 0u
#define COMMON_PVT_REG_LOCK_STATUS_HW_LOCK_STATUS_RESET 0x0u
#define COMMON_PVT_REG_LOCK_STATUS_HW_LOCK_STATUS_FIELD_MASK 0x00000002ul
#define COMMON_PVT_REG_LOCK_STATUS_HW_LOCK_STATUS_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define COMMON_PVT_REG_LOCK_STATUS_HW_LOCK_STATUS_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define COMMON_PVT_REG_LOCK_STATUS_HW_LOCK_STATUS_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: common::pvt_reg_lock_status.sw_lock_status                */
#define COMMON_PVT_REG_LOCK_STATUS_SW_LOCK_STATUS_MSB 0u
#define COMMON_PVT_REG_LOCK_STATUS_SW_LOCK_STATUS_LSB 0u
#define COMMON_PVT_REG_LOCK_STATUS_SW_LOCK_STATUS_WIDTH 1u
#define COMMON_PVT_REG_LOCK_STATUS_SW_LOCK_STATUS_READ_ACCESS 1u
#define COMMON_PVT_REG_LOCK_STATUS_SW_LOCK_STATUS_WRITE_ACCESS 0u
#define COMMON_PVT_REG_LOCK_STATUS_SW_LOCK_STATUS_RESET 0x0u
#define COMMON_PVT_REG_LOCK_STATUS_SW_LOCK_STATUS_FIELD_MASK 0x00000001ul
#define COMMON_PVT_REG_LOCK_STATUS_SW_LOCK_STATUS_GET(x) ((x) & 0x00000001ul)
#define COMMON_PVT_REG_LOCK_STATUS_SW_LOCK_STATUS_SET(x) ((x) & 0x00000001ul)
#define COMMON_PVT_REG_LOCK_STATUS_SW_LOCK_STATUS_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: common::pvt_tam_status                                   */
/* Register template: common::pvt_tam_status                               */
/* Field member: common::pvt_tam_status.tam_status                         */
#define COMMON_PVT_TAM_STATUS_TAM_STATUS_MSB 0u
#define COMMON_PVT_TAM_STATUS_TAM_STATUS_LSB 0u
#define COMMON_PVT_TAM_STATUS_TAM_STATUS_WIDTH 1u
#define COMMON_PVT_TAM_STATUS_TAM_STATUS_READ_ACCESS 1u
#define COMMON_PVT_TAM_STATUS_TAM_STATUS_WRITE_ACCESS 0u
#define COMMON_PVT_TAM_STATUS_TAM_STATUS_RESET 0x0u
#define COMMON_PVT_TAM_STATUS_TAM_STATUS_FIELD_MASK 0x00000001ul
#define COMMON_PVT_TAM_STATUS_TAM_STATUS_GET(x) ((x) & 0x00000001ul)
#define COMMON_PVT_TAM_STATUS_TAM_STATUS_SET(x) ((x) & 0x00000001ul)
#define COMMON_PVT_TAM_STATUS_TAM_STATUS_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: common::pvt_tam_clear                                    */
/* Register template: common::pvt_tam_clear                                */
/* Field member: common::pvt_tam_clear.tam_status_clr                      */
#define COMMON_PVT_TAM_CLEAR_TAM_STATUS_CLR_MSB 0u
#define COMMON_PVT_TAM_CLEAR_TAM_STATUS_CLR_LSB 0u
#define COMMON_PVT_TAM_CLEAR_TAM_STATUS_CLR_WIDTH 1u
#define COMMON_PVT_TAM_CLEAR_TAM_STATUS_CLR_READ_ACCESS 0u
#define COMMON_PVT_TAM_CLEAR_TAM_STATUS_CLR_WRITE_ACCESS 1u
#define COMMON_PVT_TAM_CLEAR_TAM_STATUS_CLR_RESET 0x0u
#define COMMON_PVT_TAM_CLEAR_TAM_STATUS_CLR_FIELD_MASK 0x00000001ul
#define COMMON_PVT_TAM_CLEAR_TAM_STATUS_CLR_GET(x) ((x) & 0x00000001ul)
#define COMMON_PVT_TAM_CLEAR_TAM_STATUS_CLR_SET(x) ((x) & 0x00000001ul)
#define COMMON_PVT_TAM_CLEAR_TAM_STATUS_CLR_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: common::pvt_tmr_ctrl                                     */
/* Register template: common::pvt_tmr_ctrl                                 */
/* Field member: common::pvt_tmr_ctrl.tmr_run                              */
#define COMMON_PVT_TMR_CTRL_TMR_RUN_MSB 16u
#define COMMON_PVT_TMR_CTRL_TMR_RUN_LSB 16u
#define COMMON_PVT_TMR_CTRL_TMR_RUN_WIDTH 1u
#define COMMON_PVT_TMR_CTRL_TMR_RUN_READ_ACCESS 1u
#define COMMON_PVT_TMR_CTRL_TMR_RUN_WRITE_ACCESS 1u
#define COMMON_PVT_TMR_CTRL_TMR_RUN_RESET 0x0u
#define COMMON_PVT_TMR_CTRL_TMR_RUN_FIELD_MASK 0x00010000ul
#define COMMON_PVT_TMR_CTRL_TMR_RUN_GET(x) (((x) & 0x00010000ul) >> 16)
#define COMMON_PVT_TMR_CTRL_TMR_RUN_SET(x) (((x) << 16) & 0x00010000ul)
#define COMMON_PVT_TMR_CTRL_TMR_RUN_MODIFY(r, x) \
   ((((x) << 16) & 0x00010000ul) | ((r) & 0xfffefffful))
/* Field member: common::pvt_tmr_ctrl.tmr_delay                            */
#define COMMON_PVT_TMR_CTRL_TMR_DELAY_MSB 15u
#define COMMON_PVT_TMR_CTRL_TMR_DELAY_LSB 0u
#define COMMON_PVT_TMR_CTRL_TMR_DELAY_WIDTH 16u
#define COMMON_PVT_TMR_CTRL_TMR_DELAY_READ_ACCESS 1u
#define COMMON_PVT_TMR_CTRL_TMR_DELAY_WRITE_ACCESS 1u
#define COMMON_PVT_TMR_CTRL_TMR_DELAY_RESET 0x0000u
#define COMMON_PVT_TMR_CTRL_TMR_DELAY_FIELD_MASK 0x0000fffful
#define COMMON_PVT_TMR_CTRL_TMR_DELAY_GET(x) ((x) & 0x0000fffful)
#define COMMON_PVT_TMR_CTRL_TMR_DELAY_SET(x) ((x) & 0x0000fffful)
#define COMMON_PVT_TMR_CTRL_TMR_DELAY_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: common::pvt_tmr_status                                   */
/* Register template: common::pvt_tmr_status                               */
/* Field member: common::pvt_tmr_status.tmr_done                           */
#define COMMON_PVT_TMR_STATUS_TMR_DONE_MSB 1u
#define COMMON_PVT_TMR_STATUS_TMR_DONE_LSB 1u
#define COMMON_PVT_TMR_STATUS_TMR_DONE_WIDTH 1u
#define COMMON_PVT_TMR_STATUS_TMR_DONE_READ_ACCESS 1u
#define COMMON_PVT_TMR_STATUS_TMR_DONE_WRITE_ACCESS 1u
#define COMMON_PVT_TMR_STATUS_TMR_DONE_RESET 0x0u
#define COMMON_PVT_TMR_STATUS_TMR_DONE_FIELD_MASK 0x00000002ul
#define COMMON_PVT_TMR_STATUS_TMR_DONE_GET(x) (((x) & 0x00000002ul) >> 1)
#define COMMON_PVT_TMR_STATUS_TMR_DONE_SET(x) (((x) << 1) & 0x00000002ul)
#define COMMON_PVT_TMR_STATUS_TMR_DONE_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: common::pvt_tmr_status.tmr_busy                           */
#define COMMON_PVT_TMR_STATUS_TMR_BUSY_MSB 0u
#define COMMON_PVT_TMR_STATUS_TMR_BUSY_LSB 0u
#define COMMON_PVT_TMR_STATUS_TMR_BUSY_WIDTH 1u
#define COMMON_PVT_TMR_STATUS_TMR_BUSY_READ_ACCESS 1u
#define COMMON_PVT_TMR_STATUS_TMR_BUSY_WRITE_ACCESS 1u
#define COMMON_PVT_TMR_STATUS_TMR_BUSY_RESET 0x0u
#define COMMON_PVT_TMR_STATUS_TMR_BUSY_FIELD_MASK 0x00000001ul
#define COMMON_PVT_TMR_STATUS_TMR_BUSY_GET(x) ((x) & 0x00000001ul)
#define COMMON_PVT_TMR_STATUS_TMR_BUSY_SET(x) ((x) & 0x00000001ul)
#define COMMON_PVT_TMR_STATUS_TMR_BUSY_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: common::pvt_tmr_irq_clear                                */
/* Register template: common::pvt_tmr_irq_clear                            */
/* Field member: common::pvt_tmr_irq_clear.tmr_irq_clr                     */
#define COMMON_PVT_TMR_IRQ_CLEAR_TMR_IRQ_CLR_MSB 0u
#define COMMON_PVT_TMR_IRQ_CLEAR_TMR_IRQ_CLR_LSB 0u
#define COMMON_PVT_TMR_IRQ_CLEAR_TMR_IRQ_CLR_WIDTH 1u
#define COMMON_PVT_TMR_IRQ_CLEAR_TMR_IRQ_CLR_READ_ACCESS 0u
#define COMMON_PVT_TMR_IRQ_CLEAR_TMR_IRQ_CLR_WRITE_ACCESS 1u
#define COMMON_PVT_TMR_IRQ_CLEAR_TMR_IRQ_CLR_RESET 0x0u
#define COMMON_PVT_TMR_IRQ_CLEAR_TMR_IRQ_CLR_FIELD_MASK 0x00000001ul
#define COMMON_PVT_TMR_IRQ_CLEAR_TMR_IRQ_CLR_GET(x) ((x) & 0x00000001ul)
#define COMMON_PVT_TMR_IRQ_CLEAR_TMR_IRQ_CLR_SET(x) ((x) & 0x00000001ul)
#define COMMON_PVT_TMR_IRQ_CLEAR_TMR_IRQ_CLR_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: common::pvt_tmr_irq_test                                 */
/* Register template: common::pvt_tmr_irq_test                             */
/* Field member: common::pvt_tmr_irq_test.tmr_irq_test                     */
#define COMMON_PVT_TMR_IRQ_TEST_TMR_IRQ_TEST_MSB 0u
#define COMMON_PVT_TMR_IRQ_TEST_TMR_IRQ_TEST_LSB 0u
#define COMMON_PVT_TMR_IRQ_TEST_TMR_IRQ_TEST_WIDTH 1u
#define COMMON_PVT_TMR_IRQ_TEST_TMR_IRQ_TEST_READ_ACCESS 1u
#define COMMON_PVT_TMR_IRQ_TEST_TMR_IRQ_TEST_WRITE_ACCESS 1u
#define COMMON_PVT_TMR_IRQ_TEST_TMR_IRQ_TEST_RESET 0x0u
#define COMMON_PVT_TMR_IRQ_TEST_TMR_IRQ_TEST_FIELD_MASK 0x00000001ul
#define COMMON_PVT_TMR_IRQ_TEST_TMR_IRQ_TEST_GET(x) ((x) & 0x00000001ul)
#define COMMON_PVT_TMR_IRQ_TEST_TMR_IRQ_TEST_SET(x) ((x) & 0x00000001ul)
#define COMMON_PVT_TMR_IRQ_TEST_TMR_IRQ_TEST_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Addressmap type: irq                                                    */
/* Addressmap template: irq                                                */
#define IRQ_SIZE 0x40u
#define IRQ_BYTE_SIZE 0x40u
/* Register member: irq.irq_en                                             */
/* Register type referenced: irq::irq_en                                   */
/* Register template referenced: irq::irq_en                               */
#define IRQ_IRQ_EN_OFFSET 0x0u
#define IRQ_IRQ_EN_BYTE_OFFSET 0x0u
#define IRQ_IRQ_EN_READ_ACCESS 1u
#define IRQ_IRQ_EN_WRITE_ACCESS 1u
#define IRQ_IRQ_EN_RESET_VALUE 0x00000000ul
#define IRQ_IRQ_EN_RESET_MASK 0xfffffffful
#define IRQ_IRQ_EN_READ_MASK 0xfffffffful
#define IRQ_IRQ_EN_WRITE_MASK 0x0000000ful
/* Register member: irq.irq_tr_mask                                        */
/* Register type referenced: irq::irq_tr_mask                              */
/* Register template referenced: irq::irq_tr_mask                          */
#define IRQ_IRQ_TR_MASK_OFFSET 0x10u
#define IRQ_IRQ_TR_MASK_BYTE_OFFSET 0x10u
#define IRQ_IRQ_TR_MASK_READ_ACCESS 1u
#define IRQ_IRQ_TR_MASK_WRITE_ACCESS 1u
#define IRQ_IRQ_TR_MASK_RESET_VALUE 0x00000000ul
#define IRQ_IRQ_TR_MASK_RESET_MASK 0xfffffffful
#define IRQ_IRQ_TR_MASK_READ_MASK 0xfffffffful
#define IRQ_IRQ_TR_MASK_WRITE_MASK 0x00000001ul
/* Register member: irq.irq_ts_mask                                        */
/* Register type referenced: irq::irq_ts_mask                              */
/* Register template referenced: irq::irq_ts_mask                          */
#define IRQ_IRQ_TS_MASK_OFFSET 0x14u
#define IRQ_IRQ_TS_MASK_BYTE_OFFSET 0x14u
#define IRQ_IRQ_TS_MASK_READ_ACCESS 1u
#define IRQ_IRQ_TS_MASK_WRITE_ACCESS 1u
#define IRQ_IRQ_TS_MASK_RESET_VALUE 0x00000000ul
#define IRQ_IRQ_TS_MASK_RESET_MASK 0xfffffffful
#define IRQ_IRQ_TS_MASK_READ_MASK 0xfffffffful
#define IRQ_IRQ_TS_MASK_WRITE_MASK 0x000000fful
/* Register member: irq.irq_vm_mask                                        */
/* Register type referenced: irq::irq_vm_mask                              */
/* Register template referenced: irq::irq_vm_mask                          */
#define IRQ_IRQ_VM_MASK_OFFSET 0x18u
#define IRQ_IRQ_VM_MASK_BYTE_OFFSET 0x18u
#define IRQ_IRQ_VM_MASK_READ_ACCESS 1u
#define IRQ_IRQ_VM_MASK_WRITE_ACCESS 1u
#define IRQ_IRQ_VM_MASK_RESET_VALUE 0x00000000ul
#define IRQ_IRQ_VM_MASK_RESET_MASK 0xfffffffful
#define IRQ_IRQ_VM_MASK_READ_MASK 0xfffffffful
#define IRQ_IRQ_VM_MASK_WRITE_MASK 0x00000003ul
/* Register member: irq.irq_pd_mask                                        */
/* Register type referenced: irq::irq_pd_mask                              */
/* Register template referenced: irq::irq_pd_mask                          */
#define IRQ_IRQ_PD_MASK_OFFSET 0x1cu
#define IRQ_IRQ_PD_MASK_BYTE_OFFSET 0x1cu
#define IRQ_IRQ_PD_MASK_READ_ACCESS 1u
#define IRQ_IRQ_PD_MASK_WRITE_ACCESS 1u
#define IRQ_IRQ_PD_MASK_RESET_VALUE 0x00000000ul
#define IRQ_IRQ_PD_MASK_RESET_MASK 0xfffffffful
#define IRQ_IRQ_PD_MASK_READ_MASK 0xfffffffful
#define IRQ_IRQ_PD_MASK_WRITE_MASK 0x000000fful
/* Register member: irq.irq_tr_status                                      */
/* Register type referenced: irq::irq_tr_status                            */
/* Register template referenced: irq::irq_tr_status                        */
#define IRQ_IRQ_TR_STATUS_OFFSET 0x20u
#define IRQ_IRQ_TR_STATUS_BYTE_OFFSET 0x20u
#define IRQ_IRQ_TR_STATUS_READ_ACCESS 1u
#define IRQ_IRQ_TR_STATUS_WRITE_ACCESS 0u
#define IRQ_IRQ_TR_STATUS_RESET_VALUE 0x00000000ul
#define IRQ_IRQ_TR_STATUS_RESET_MASK 0xfffffffful
#define IRQ_IRQ_TR_STATUS_READ_MASK 0xfffffffful
#define IRQ_IRQ_TR_STATUS_WRITE_MASK 0x00000000ul
/* Register member: irq.irq_ts_status                                      */
/* Register type referenced: irq::irq_ts_status                            */
/* Register template referenced: irq::irq_ts_status                        */
#define IRQ_IRQ_TS_STATUS_OFFSET 0x24u
#define IRQ_IRQ_TS_STATUS_BYTE_OFFSET 0x24u
#define IRQ_IRQ_TS_STATUS_READ_ACCESS 1u
#define IRQ_IRQ_TS_STATUS_WRITE_ACCESS 0u
#define IRQ_IRQ_TS_STATUS_RESET_VALUE 0x00000000ul
#define IRQ_IRQ_TS_STATUS_RESET_MASK 0xfffffffful
#define IRQ_IRQ_TS_STATUS_READ_MASK 0xfffffffful
#define IRQ_IRQ_TS_STATUS_WRITE_MASK 0x00000000ul
/* Register member: irq.irq_vm_status                                      */
/* Register type referenced: irq::irq_vm_status                            */
/* Register template referenced: irq::irq_vm_status                        */
#define IRQ_IRQ_VM_STATUS_OFFSET 0x28u
#define IRQ_IRQ_VM_STATUS_BYTE_OFFSET 0x28u
#define IRQ_IRQ_VM_STATUS_READ_ACCESS 1u
#define IRQ_IRQ_VM_STATUS_WRITE_ACCESS 0u
#define IRQ_IRQ_VM_STATUS_RESET_VALUE 0x00000000ul
#define IRQ_IRQ_VM_STATUS_RESET_MASK 0xfffffffful
#define IRQ_IRQ_VM_STATUS_READ_MASK 0xfffffffful
#define IRQ_IRQ_VM_STATUS_WRITE_MASK 0x00000000ul
/* Register member: irq.irq_pd_status                                      */
/* Register type referenced: irq::irq_pd_status                            */
/* Register template referenced: irq::irq_pd_status                        */
#define IRQ_IRQ_PD_STATUS_OFFSET 0x2cu
#define IRQ_IRQ_PD_STATUS_BYTE_OFFSET 0x2cu
#define IRQ_IRQ_PD_STATUS_READ_ACCESS 1u
#define IRQ_IRQ_PD_STATUS_WRITE_ACCESS 0u
#define IRQ_IRQ_PD_STATUS_RESET_VALUE 0x00000000ul
#define IRQ_IRQ_PD_STATUS_RESET_MASK 0xfffffffful
#define IRQ_IRQ_PD_STATUS_READ_MASK 0xfffffffful
#define IRQ_IRQ_PD_STATUS_WRITE_MASK 0x00000000ul
/* Register member: irq.irq_tr_raw_status                                  */
/* Register type referenced: irq::irq_tr_raw_status                        */
/* Register template referenced: irq::irq_tr_raw_status                    */
#define IRQ_IRQ_TR_RAW_STATUS_OFFSET 0x30u
#define IRQ_IRQ_TR_RAW_STATUS_BYTE_OFFSET 0x30u
#define IRQ_IRQ_TR_RAW_STATUS_READ_ACCESS 1u
#define IRQ_IRQ_TR_RAW_STATUS_WRITE_ACCESS 0u
#define IRQ_IRQ_TR_RAW_STATUS_RESET_VALUE 0x00000000ul
#define IRQ_IRQ_TR_RAW_STATUS_RESET_MASK 0xfffffffful
#define IRQ_IRQ_TR_RAW_STATUS_READ_MASK 0xfffffffful
#define IRQ_IRQ_TR_RAW_STATUS_WRITE_MASK 0x00000000ul
/* Register member: irq.irq_ts_raw_status                                  */
/* Register type referenced: irq::irq_ts_raw_status                        */
/* Register template referenced: irq::irq_ts_raw_status                    */
#define IRQ_IRQ_TS_RAW_STATUS_OFFSET 0x34u
#define IRQ_IRQ_TS_RAW_STATUS_BYTE_OFFSET 0x34u
#define IRQ_IRQ_TS_RAW_STATUS_READ_ACCESS 1u
#define IRQ_IRQ_TS_RAW_STATUS_WRITE_ACCESS 0u
#define IRQ_IRQ_TS_RAW_STATUS_RESET_VALUE 0x00000000ul
#define IRQ_IRQ_TS_RAW_STATUS_RESET_MASK 0xfffffffful
#define IRQ_IRQ_TS_RAW_STATUS_READ_MASK 0xfffffffful
#define IRQ_IRQ_TS_RAW_STATUS_WRITE_MASK 0x00000000ul
/* Register member: irq.irq_vm_raw_status                                  */
/* Register type referenced: irq::irq_vm_raw_status                        */
/* Register template referenced: irq::irq_vm_raw_status                    */
#define IRQ_IRQ_VM_RAW_STATUS_OFFSET 0x38u
#define IRQ_IRQ_VM_RAW_STATUS_BYTE_OFFSET 0x38u
#define IRQ_IRQ_VM_RAW_STATUS_READ_ACCESS 1u
#define IRQ_IRQ_VM_RAW_STATUS_WRITE_ACCESS 0u
#define IRQ_IRQ_VM_RAW_STATUS_RESET_VALUE 0x00000000ul
#define IRQ_IRQ_VM_RAW_STATUS_RESET_MASK 0xfffffffful
#define IRQ_IRQ_VM_RAW_STATUS_READ_MASK 0xfffffffful
#define IRQ_IRQ_VM_RAW_STATUS_WRITE_MASK 0x00000000ul
/* Register member: irq.irq_pd_raw_status                                  */
/* Register type referenced: irq::irq_pd_raw_status                        */
/* Register template referenced: irq::irq_pd_raw_status                    */
#define IRQ_IRQ_PD_RAW_STATUS_OFFSET 0x3cu
#define IRQ_IRQ_PD_RAW_STATUS_BYTE_OFFSET 0x3cu
#define IRQ_IRQ_PD_RAW_STATUS_READ_ACCESS 1u
#define IRQ_IRQ_PD_RAW_STATUS_WRITE_ACCESS 0u
#define IRQ_IRQ_PD_RAW_STATUS_RESET_VALUE 0x00000000ul
#define IRQ_IRQ_PD_RAW_STATUS_RESET_MASK 0xfffffffful
#define IRQ_IRQ_PD_RAW_STATUS_READ_MASK 0xfffffffful
#define IRQ_IRQ_PD_RAW_STATUS_WRITE_MASK 0x00000000ul

/* Register type: irq::irq_en                                              */
/* Register template: irq::irq_en                                          */
/* Field member: irq::irq_en.pd_irq_enable                                 */
#define IRQ_IRQ_EN_PD_IRQ_ENABLE_MSB 3u
#define IRQ_IRQ_EN_PD_IRQ_ENABLE_LSB 3u
#define IRQ_IRQ_EN_PD_IRQ_ENABLE_WIDTH 1u
#define IRQ_IRQ_EN_PD_IRQ_ENABLE_READ_ACCESS 1u
#define IRQ_IRQ_EN_PD_IRQ_ENABLE_WRITE_ACCESS 1u
#define IRQ_IRQ_EN_PD_IRQ_ENABLE_RESET 0x0u
#define IRQ_IRQ_EN_PD_IRQ_ENABLE_FIELD_MASK 0x00000008ul
#define IRQ_IRQ_EN_PD_IRQ_ENABLE_GET(x) (((x) & 0x00000008ul) >> 3)
#define IRQ_IRQ_EN_PD_IRQ_ENABLE_SET(x) (((x) << 3) & 0x00000008ul)
#define IRQ_IRQ_EN_PD_IRQ_ENABLE_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: irq::irq_en.vm_irq_enbale                                 */
#define IRQ_IRQ_EN_VM_IRQ_ENBALE_MSB 2u
#define IRQ_IRQ_EN_VM_IRQ_ENBALE_LSB 2u
#define IRQ_IRQ_EN_VM_IRQ_ENBALE_WIDTH 1u
#define IRQ_IRQ_EN_VM_IRQ_ENBALE_READ_ACCESS 1u
#define IRQ_IRQ_EN_VM_IRQ_ENBALE_WRITE_ACCESS 1u
#define IRQ_IRQ_EN_VM_IRQ_ENBALE_RESET 0x0u
#define IRQ_IRQ_EN_VM_IRQ_ENBALE_FIELD_MASK 0x00000004ul
#define IRQ_IRQ_EN_VM_IRQ_ENBALE_GET(x) (((x) & 0x00000004ul) >> 2)
#define IRQ_IRQ_EN_VM_IRQ_ENBALE_SET(x) (((x) << 2) & 0x00000004ul)
#define IRQ_IRQ_EN_VM_IRQ_ENBALE_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004ul) | ((r) & 0xfffffffbul))
/* Field member: irq::irq_en.ts_irq_enbale                                 */
#define IRQ_IRQ_EN_TS_IRQ_ENBALE_MSB 1u
#define IRQ_IRQ_EN_TS_IRQ_ENBALE_LSB 1u
#define IRQ_IRQ_EN_TS_IRQ_ENBALE_WIDTH 1u
#define IRQ_IRQ_EN_TS_IRQ_ENBALE_READ_ACCESS 1u
#define IRQ_IRQ_EN_TS_IRQ_ENBALE_WRITE_ACCESS 1u
#define IRQ_IRQ_EN_TS_IRQ_ENBALE_RESET 0x0u
#define IRQ_IRQ_EN_TS_IRQ_ENBALE_FIELD_MASK 0x00000002ul
#define IRQ_IRQ_EN_TS_IRQ_ENBALE_GET(x) (((x) & 0x00000002ul) >> 1)
#define IRQ_IRQ_EN_TS_IRQ_ENBALE_SET(x) (((x) << 1) & 0x00000002ul)
#define IRQ_IRQ_EN_TS_IRQ_ENBALE_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: irq::irq_en.tmr_irq_enable                                */
#define IRQ_IRQ_EN_TMR_IRQ_ENABLE_MSB 0u
#define IRQ_IRQ_EN_TMR_IRQ_ENABLE_LSB 0u
#define IRQ_IRQ_EN_TMR_IRQ_ENABLE_WIDTH 1u
#define IRQ_IRQ_EN_TMR_IRQ_ENABLE_READ_ACCESS 1u
#define IRQ_IRQ_EN_TMR_IRQ_ENABLE_WRITE_ACCESS 1u
#define IRQ_IRQ_EN_TMR_IRQ_ENABLE_RESET 0x0u
#define IRQ_IRQ_EN_TMR_IRQ_ENABLE_FIELD_MASK 0x00000001ul
#define IRQ_IRQ_EN_TMR_IRQ_ENABLE_GET(x) ((x) & 0x00000001ul)
#define IRQ_IRQ_EN_TMR_IRQ_ENABLE_SET(x) ((x) & 0x00000001ul)
#define IRQ_IRQ_EN_TMR_IRQ_ENABLE_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: irq::irq_tr_mask                                         */
/* Register template: irq::irq_tr_mask                                     */
/* Field member: irq::irq_tr_mask.mask                                     */
#define IRQ_IRQ_TR_MASK_MASK_MSB 0u
#define IRQ_IRQ_TR_MASK_MASK_LSB 0u
#define IRQ_IRQ_TR_MASK_MASK_WIDTH 1u
#define IRQ_IRQ_TR_MASK_MASK_READ_ACCESS 1u
#define IRQ_IRQ_TR_MASK_MASK_WRITE_ACCESS 1u
#define IRQ_IRQ_TR_MASK_MASK_RESET 0x0u
#define IRQ_IRQ_TR_MASK_MASK_FIELD_MASK 0x00000001ul
#define IRQ_IRQ_TR_MASK_MASK_GET(x) ((x) & 0x00000001ul)
#define IRQ_IRQ_TR_MASK_MASK_SET(x) ((x) & 0x00000001ul)
#define IRQ_IRQ_TR_MASK_MASK_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: irq::irq_ts_mask                                         */
/* Register template: irq::irq_ts_mask                                     */
/* Field member: irq::irq_ts_mask.mask                                     */
#define IRQ_IRQ_TS_MASK_MASK_MSB 7u
#define IRQ_IRQ_TS_MASK_MASK_LSB 0u
#define IRQ_IRQ_TS_MASK_MASK_WIDTH 8u
#define IRQ_IRQ_TS_MASK_MASK_READ_ACCESS 1u
#define IRQ_IRQ_TS_MASK_MASK_WRITE_ACCESS 1u
#define IRQ_IRQ_TS_MASK_MASK_RESET 0x00u
#define IRQ_IRQ_TS_MASK_MASK_FIELD_MASK 0x000000fful
#define IRQ_IRQ_TS_MASK_MASK_GET(x) ((x) & 0x000000fful)
#define IRQ_IRQ_TS_MASK_MASK_SET(x) ((x) & 0x000000fful)
#define IRQ_IRQ_TS_MASK_MASK_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: irq::irq_vm_mask                                         */
/* Register template: irq::irq_vm_mask                                     */
/* Field member: irq::irq_vm_mask.mask                                     */
#define IRQ_IRQ_VM_MASK_MASK_MSB 1u
#define IRQ_IRQ_VM_MASK_MASK_LSB 0u
#define IRQ_IRQ_VM_MASK_MASK_WIDTH 2u
#define IRQ_IRQ_VM_MASK_MASK_READ_ACCESS 1u
#define IRQ_IRQ_VM_MASK_MASK_WRITE_ACCESS 1u
#define IRQ_IRQ_VM_MASK_MASK_RESET 0x0u
#define IRQ_IRQ_VM_MASK_MASK_FIELD_MASK 0x00000003ul
#define IRQ_IRQ_VM_MASK_MASK_GET(x) ((x) & 0x00000003ul)
#define IRQ_IRQ_VM_MASK_MASK_SET(x) ((x) & 0x00000003ul)
#define IRQ_IRQ_VM_MASK_MASK_MODIFY(r, x) \
   (((x) & 0x00000003ul) | ((r) & 0xfffffffcul))

/* Register type: irq::irq_pd_mask                                         */
/* Register template: irq::irq_pd_mask                                     */
/* Field member: irq::irq_pd_mask.mask                                     */
#define IRQ_IRQ_PD_MASK_MASK_MSB 7u
#define IRQ_IRQ_PD_MASK_MASK_LSB 0u
#define IRQ_IRQ_PD_MASK_MASK_WIDTH 8u
#define IRQ_IRQ_PD_MASK_MASK_READ_ACCESS 1u
#define IRQ_IRQ_PD_MASK_MASK_WRITE_ACCESS 1u
#define IRQ_IRQ_PD_MASK_MASK_RESET 0x00u
#define IRQ_IRQ_PD_MASK_MASK_FIELD_MASK 0x000000fful
#define IRQ_IRQ_PD_MASK_MASK_GET(x) ((x) & 0x000000fful)
#define IRQ_IRQ_PD_MASK_MASK_SET(x) ((x) & 0x000000fful)
#define IRQ_IRQ_PD_MASK_MASK_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: irq::irq_tr_status                                       */
/* Register template: irq::irq_tr_status                                   */
/* Field member: irq::irq_tr_status.status                                 */
#define IRQ_IRQ_TR_STATUS_STATUS_MSB 0u
#define IRQ_IRQ_TR_STATUS_STATUS_LSB 0u
#define IRQ_IRQ_TR_STATUS_STATUS_WIDTH 1u
#define IRQ_IRQ_TR_STATUS_STATUS_READ_ACCESS 1u
#define IRQ_IRQ_TR_STATUS_STATUS_WRITE_ACCESS 0u
#define IRQ_IRQ_TR_STATUS_STATUS_RESET 0x0u
#define IRQ_IRQ_TR_STATUS_STATUS_FIELD_MASK 0x00000001ul
#define IRQ_IRQ_TR_STATUS_STATUS_GET(x) ((x) & 0x00000001ul)
#define IRQ_IRQ_TR_STATUS_STATUS_SET(x) ((x) & 0x00000001ul)
#define IRQ_IRQ_TR_STATUS_STATUS_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: irq::irq_ts_status                                       */
/* Register template: irq::irq_ts_status                                   */
/* Field member: irq::irq_ts_status.status                                 */
#define IRQ_IRQ_TS_STATUS_STATUS_MSB 7u
#define IRQ_IRQ_TS_STATUS_STATUS_LSB 0u
#define IRQ_IRQ_TS_STATUS_STATUS_WIDTH 8u
#define IRQ_IRQ_TS_STATUS_STATUS_READ_ACCESS 1u
#define IRQ_IRQ_TS_STATUS_STATUS_WRITE_ACCESS 0u
#define IRQ_IRQ_TS_STATUS_STATUS_RESET 0x00u
#define IRQ_IRQ_TS_STATUS_STATUS_FIELD_MASK 0x000000fful
#define IRQ_IRQ_TS_STATUS_STATUS_GET(x) ((x) & 0x000000fful)
#define IRQ_IRQ_TS_STATUS_STATUS_SET(x) ((x) & 0x000000fful)
#define IRQ_IRQ_TS_STATUS_STATUS_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: irq::irq_vm_status                                       */
/* Register template: irq::irq_vm_status                                   */
/* Field member: irq::irq_vm_status.status                                 */
#define IRQ_IRQ_VM_STATUS_STATUS_MSB 1u
#define IRQ_IRQ_VM_STATUS_STATUS_LSB 0u
#define IRQ_IRQ_VM_STATUS_STATUS_WIDTH 2u
#define IRQ_IRQ_VM_STATUS_STATUS_READ_ACCESS 1u
#define IRQ_IRQ_VM_STATUS_STATUS_WRITE_ACCESS 0u
#define IRQ_IRQ_VM_STATUS_STATUS_RESET 0x0u
#define IRQ_IRQ_VM_STATUS_STATUS_FIELD_MASK 0x00000003ul
#define IRQ_IRQ_VM_STATUS_STATUS_GET(x) ((x) & 0x00000003ul)
#define IRQ_IRQ_VM_STATUS_STATUS_SET(x) ((x) & 0x00000003ul)
#define IRQ_IRQ_VM_STATUS_STATUS_MODIFY(r, x) \
   (((x) & 0x00000003ul) | ((r) & 0xfffffffcul))

/* Register type: irq::irq_pd_status                                       */
/* Register template: irq::irq_pd_status                                   */
/* Field member: irq::irq_pd_status.status                                 */
#define IRQ_IRQ_PD_STATUS_STATUS_MSB 7u
#define IRQ_IRQ_PD_STATUS_STATUS_LSB 0u
#define IRQ_IRQ_PD_STATUS_STATUS_WIDTH 8u
#define IRQ_IRQ_PD_STATUS_STATUS_READ_ACCESS 1u
#define IRQ_IRQ_PD_STATUS_STATUS_WRITE_ACCESS 0u
#define IRQ_IRQ_PD_STATUS_STATUS_RESET 0x00u
#define IRQ_IRQ_PD_STATUS_STATUS_FIELD_MASK 0x000000fful
#define IRQ_IRQ_PD_STATUS_STATUS_GET(x) ((x) & 0x000000fful)
#define IRQ_IRQ_PD_STATUS_STATUS_SET(x) ((x) & 0x000000fful)
#define IRQ_IRQ_PD_STATUS_STATUS_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: irq::irq_tr_raw_status                                   */
/* Register template: irq::irq_tr_raw_status                               */
/* Field member: irq::irq_tr_raw_status.status                             */
#define IRQ_IRQ_TR_RAW_STATUS_STATUS_MSB 0u
#define IRQ_IRQ_TR_RAW_STATUS_STATUS_LSB 0u
#define IRQ_IRQ_TR_RAW_STATUS_STATUS_WIDTH 1u
#define IRQ_IRQ_TR_RAW_STATUS_STATUS_READ_ACCESS 1u
#define IRQ_IRQ_TR_RAW_STATUS_STATUS_WRITE_ACCESS 0u
#define IRQ_IRQ_TR_RAW_STATUS_STATUS_RESET 0x0u
#define IRQ_IRQ_TR_RAW_STATUS_STATUS_FIELD_MASK 0x00000001ul
#define IRQ_IRQ_TR_RAW_STATUS_STATUS_GET(x) ((x) & 0x00000001ul)
#define IRQ_IRQ_TR_RAW_STATUS_STATUS_SET(x) ((x) & 0x00000001ul)
#define IRQ_IRQ_TR_RAW_STATUS_STATUS_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: irq::irq_ts_raw_status                                   */
/* Register template: irq::irq_ts_raw_status                               */
/* Field member: irq::irq_ts_raw_status.status                             */
#define IRQ_IRQ_TS_RAW_STATUS_STATUS_MSB 7u
#define IRQ_IRQ_TS_RAW_STATUS_STATUS_LSB 0u
#define IRQ_IRQ_TS_RAW_STATUS_STATUS_WIDTH 8u
#define IRQ_IRQ_TS_RAW_STATUS_STATUS_READ_ACCESS 1u
#define IRQ_IRQ_TS_RAW_STATUS_STATUS_WRITE_ACCESS 0u
#define IRQ_IRQ_TS_RAW_STATUS_STATUS_RESET 0x00u
#define IRQ_IRQ_TS_RAW_STATUS_STATUS_FIELD_MASK 0x000000fful
#define IRQ_IRQ_TS_RAW_STATUS_STATUS_GET(x) ((x) & 0x000000fful)
#define IRQ_IRQ_TS_RAW_STATUS_STATUS_SET(x) ((x) & 0x000000fful)
#define IRQ_IRQ_TS_RAW_STATUS_STATUS_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: irq::irq_vm_raw_status                                   */
/* Register template: irq::irq_vm_raw_status                               */
/* Field member: irq::irq_vm_raw_status.status                             */
#define IRQ_IRQ_VM_RAW_STATUS_STATUS_MSB 1u
#define IRQ_IRQ_VM_RAW_STATUS_STATUS_LSB 0u
#define IRQ_IRQ_VM_RAW_STATUS_STATUS_WIDTH 2u
#define IRQ_IRQ_VM_RAW_STATUS_STATUS_READ_ACCESS 1u
#define IRQ_IRQ_VM_RAW_STATUS_STATUS_WRITE_ACCESS 0u
#define IRQ_IRQ_VM_RAW_STATUS_STATUS_RESET 0x0u
#define IRQ_IRQ_VM_RAW_STATUS_STATUS_FIELD_MASK 0x00000003ul
#define IRQ_IRQ_VM_RAW_STATUS_STATUS_GET(x) ((x) & 0x00000003ul)
#define IRQ_IRQ_VM_RAW_STATUS_STATUS_SET(x) ((x) & 0x00000003ul)
#define IRQ_IRQ_VM_RAW_STATUS_STATUS_MODIFY(r, x) \
   (((x) & 0x00000003ul) | ((r) & 0xfffffffcul))

/* Register type: irq::irq_pd_raw_status                                   */
/* Register template: irq::irq_pd_raw_status                               */
/* Field member: irq::irq_pd_raw_status.status                             */
#define IRQ_IRQ_PD_RAW_STATUS_STATUS_MSB 7u
#define IRQ_IRQ_PD_RAW_STATUS_STATUS_LSB 0u
#define IRQ_IRQ_PD_RAW_STATUS_STATUS_WIDTH 8u
#define IRQ_IRQ_PD_RAW_STATUS_STATUS_READ_ACCESS 1u
#define IRQ_IRQ_PD_RAW_STATUS_STATUS_WRITE_ACCESS 0u
#define IRQ_IRQ_PD_RAW_STATUS_STATUS_RESET 0x00u
#define IRQ_IRQ_PD_RAW_STATUS_STATUS_FIELD_MASK 0x000000fful
#define IRQ_IRQ_PD_RAW_STATUS_STATUS_GET(x) ((x) & 0x000000fful)
#define IRQ_IRQ_PD_RAW_STATUS_STATUS_SET(x) ((x) & 0x000000fful)
#define IRQ_IRQ_PD_RAW_STATUS_STATUS_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Addressmap type: ts_ip                                                  */
/* Addressmap template: ts_ip                                              */
#define TS_IP_SIZE 0x240u
#define TS_IP_BYTE_SIZE 0x240u
/* Addressmap member: ts_ip.ts_common                                      */
/* Addressmap type referenced: ts_common_ip                                */
/* Addressmap template referenced: ts_common_ip                            */
#define TS_IP_TS_COMMON_OFFSET 0x0u
#define TS_IP_TS_COMMON_BYTE_OFFSET 0x0u
#define TS_IP_TS_COMMON_READ_ACCESS 1u
#define TS_IP_TS_COMMON_WRITE_ACCESS 1u
/* Addressmap member: ts_ip.ts_individual                                  */
/* Addressmap type referenced: ts_pd_individual_ip                         */
/* Addressmap template referenced: ts_pd_individual_ip                     */
#define TS_IP_TS_INDIVIDUAL_OFFSET 0x40u
#define TS_IP_TS_INDIVIDUAL_BYTE_OFFSET 0x40u
#define TS_IP_TS_INDIVIDUAL_READ_ACCESS 1u
#define TS_IP_TS_INDIVIDUAL_WRITE_ACCESS 1u

/* Addressmap type: ts_common_ip                                           */
/* Addressmap template: ts_common_ip                                       */
#define TS_COMMON_IP_SIZE 0x40u
#define TS_COMMON_IP_BYTE_SIZE 0x40u
/* Register member: ts_common_ip.clk_synth                                 */
/* Register type referenced: ts_common_ip::clk_synth                       */
/* Register template referenced: ts_common_ip::clk_synth                   */
#define TS_COMMON_IP_CLK_SYNTH_OFFSET 0x0u
#define TS_COMMON_IP_CLK_SYNTH_BYTE_OFFSET 0x0u
#define TS_COMMON_IP_CLK_SYNTH_READ_ACCESS 1u
#define TS_COMMON_IP_CLK_SYNTH_WRITE_ACCESS 1u
#define TS_COMMON_IP_CLK_SYNTH_RESET_VALUE 0x00010000ul
#define TS_COMMON_IP_CLK_SYNTH_RESET_MASK 0xfffffffful
#define TS_COMMON_IP_CLK_SYNTH_READ_MASK 0xfffffffful
#define TS_COMMON_IP_CLK_SYNTH_WRITE_MASK 0x010ffffful
/* Register member: ts_common_ip.sdif_disable                              */
/* Register type referenced: ts_common_ip::sdif_disable                    */
/* Register template referenced: ts_common_ip::sdif_disable                */
#define TS_COMMON_IP_SDIF_DISABLE_OFFSET 0x4u
#define TS_COMMON_IP_SDIF_DISABLE_BYTE_OFFSET 0x4u
#define TS_COMMON_IP_SDIF_DISABLE_READ_ACCESS 1u
#define TS_COMMON_IP_SDIF_DISABLE_WRITE_ACCESS 1u
#define TS_COMMON_IP_SDIF_DISABLE_RESET_VALUE 0x00000000ul
#define TS_COMMON_IP_SDIF_DISABLE_RESET_MASK 0xfffffffful
#define TS_COMMON_IP_SDIF_DISABLE_READ_MASK 0xfffffffful
#define TS_COMMON_IP_SDIF_DISABLE_WRITE_MASK 0x000000fful
/* Register member: ts_common_ip.sdif_status                               */
/* Register type referenced: ts_common_ip::sdif_status                     */
/* Register template referenced: ts_common_ip::sdif_status                 */
#define TS_COMMON_IP_SDIF_STATUS_OFFSET 0x8u
#define TS_COMMON_IP_SDIF_STATUS_BYTE_OFFSET 0x8u
#define TS_COMMON_IP_SDIF_STATUS_READ_ACCESS 1u
#define TS_COMMON_IP_SDIF_STATUS_WRITE_ACCESS 0u
#define TS_COMMON_IP_SDIF_STATUS_RESET_VALUE 0x00000000ul
#define TS_COMMON_IP_SDIF_STATUS_RESET_MASK 0xfffffffful
#define TS_COMMON_IP_SDIF_STATUS_READ_MASK 0xfffffffful
#define TS_COMMON_IP_SDIF_STATUS_WRITE_MASK 0x00000000ul
/* Register member: ts_common_ip.sdif                                      */
/* Register type referenced: ts_common_ip::sdif                            */
/* Register template referenced: ts_common_ip::sdif                        */
#define TS_COMMON_IP_SDIF_OFFSET 0xcu
#define TS_COMMON_IP_SDIF_BYTE_OFFSET 0xcu
#define TS_COMMON_IP_SDIF_READ_ACCESS 1u
#define TS_COMMON_IP_SDIF_WRITE_ACCESS 1u
#define TS_COMMON_IP_SDIF_RESET_VALUE 0x00000000ul
#define TS_COMMON_IP_SDIF_RESET_MASK 0xfffffffful
#define TS_COMMON_IP_SDIF_READ_MASK 0xfffffffful
#define TS_COMMON_IP_SDIF_WRITE_MASK 0x8ffffffful
/* Register member: ts_common_ip.sdif_halt                                 */
/* Register type referenced: ts_common_ip::sdif_halt                       */
/* Register template referenced: ts_common_ip::sdif_halt                   */
#define TS_COMMON_IP_SDIF_HALT_OFFSET 0x10u
#define TS_COMMON_IP_SDIF_HALT_BYTE_OFFSET 0x10u
#define TS_COMMON_IP_SDIF_HALT_READ_ACCESS 0u
#define TS_COMMON_IP_SDIF_HALT_WRITE_ACCESS 1u
#define TS_COMMON_IP_SDIF_HALT_RESET_VALUE 0x00000000ul
#define TS_COMMON_IP_SDIF_HALT_RESET_MASK 0xfffffffful
#define TS_COMMON_IP_SDIF_HALT_READ_MASK 0x00000000ul
#define TS_COMMON_IP_SDIF_HALT_WRITE_MASK 0x00000001ul
/* Register member: ts_common_ip.sdif_ctrl                                 */
/* Register type referenced: ts_common_ip::sdif_ctrl                       */
/* Register template referenced: ts_common_ip::sdif_ctrl                   */
#define TS_COMMON_IP_SDIF_CTRL_OFFSET 0x14u
#define TS_COMMON_IP_SDIF_CTRL_BYTE_OFFSET 0x14u
#define TS_COMMON_IP_SDIF_CTRL_READ_ACCESS 1u
#define TS_COMMON_IP_SDIF_CTRL_WRITE_ACCESS 1u
#define TS_COMMON_IP_SDIF_CTRL_RESET_VALUE 0x00000000ul
#define TS_COMMON_IP_SDIF_CTRL_RESET_MASK 0xfffffffful
#define TS_COMMON_IP_SDIF_CTRL_READ_MASK 0xfffffffful
#define TS_COMMON_IP_SDIF_CTRL_WRITE_MASK 0x000000fful
/* Register member: ts_common_ip.smpl_ctrl                                 */
/* Register type referenced: ts_common_ip::smpl_ctrl                       */
/* Register template referenced: ts_common_ip::smpl_ctrl                   */
#define TS_COMMON_IP_SMPL_CTRL_OFFSET 0x20u
#define TS_COMMON_IP_SMPL_CTRL_BYTE_OFFSET 0x20u
#define TS_COMMON_IP_SMPL_CTRL_READ_ACCESS 1u
#define TS_COMMON_IP_SMPL_CTRL_WRITE_ACCESS 1u
#define TS_COMMON_IP_SMPL_CTRL_RESET_VALUE 0x00000000ul
#define TS_COMMON_IP_SMPL_CTRL_RESET_MASK 0xfffffffful
#define TS_COMMON_IP_SMPL_CTRL_READ_MASK 0xfffffffful
#define TS_COMMON_IP_SMPL_CTRL_WRITE_MASK 0x00000007ul
/* Register member: ts_common_ip.smpl_clr                                  */
/* Register type referenced: ts_common_ip::smpl_clr                        */
/* Register template referenced: ts_common_ip::smpl_clr                    */
#define TS_COMMON_IP_SMPL_CLR_OFFSET 0x24u
#define TS_COMMON_IP_SMPL_CLR_BYTE_OFFSET 0x24u
#define TS_COMMON_IP_SMPL_CLR_READ_ACCESS 0u
#define TS_COMMON_IP_SMPL_CLR_WRITE_ACCESS 1u
#define TS_COMMON_IP_SMPL_CLR_RESET_VALUE 0x00000000ul
#define TS_COMMON_IP_SMPL_CLR_RESET_MASK 0xfffffffful
#define TS_COMMON_IP_SMPL_CLR_READ_MASK 0x00000000ul
#define TS_COMMON_IP_SMPL_CLR_WRITE_MASK 0x00000001ul
/* Register member: ts_common_ip.smpl_cnt                                  */
/* Register type referenced: ts_common_ip::smpl_cnt                        */
/* Register template referenced: ts_common_ip::smpl_cnt                    */
#define TS_COMMON_IP_SMPL_CNT_OFFSET 0x28u
#define TS_COMMON_IP_SMPL_CNT_BYTE_OFFSET 0x28u
#define TS_COMMON_IP_SMPL_CNT_READ_ACCESS 1u
#define TS_COMMON_IP_SMPL_CNT_WRITE_ACCESS 0u
#define TS_COMMON_IP_SMPL_CNT_RESET_VALUE 0x00000000ul
#define TS_COMMON_IP_SMPL_CNT_RESET_MASK 0xfffffffful
#define TS_COMMON_IP_SMPL_CNT_READ_MASK 0xfffffffful
#define TS_COMMON_IP_SMPL_CNT_WRITE_MASK 0x00000000ul

/* Register type: ts_common_ip::clk_synth                                  */
/* Register template: ts_common_ip::clk_synth                              */
/* Field member: ts_common_ip::clk_synth.clk_synth_en                      */
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_MSB 24u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_LSB 24u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_WIDTH 1u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_READ_ACCESS 1u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_WRITE_ACCESS 1u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_RESET 0x0u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_FIELD_MASK 0x01000000ul
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_GET(x) \
   (((x) & 0x01000000ul) >> 24)
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_SET(x) \
   (((x) << 24) & 0x01000000ul)
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_MODIFY(r, x) \
   ((((x) << 24) & 0x01000000ul) | ((r) & 0xfefffffful))
/* Field member: ts_common_ip::clk_synth.clk_synth_hold                    */
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_MSB 19u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_LSB 16u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_WIDTH 4u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_READ_ACCESS 1u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_WRITE_ACCESS 1u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_RESET 0x1u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_FIELD_MASK 0x000f0000ul
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_GET(x) \
   (((x) & 0x000f0000ul) >> 16)
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_SET(x) \
   (((x) << 16) & 0x000f0000ul)
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_MODIFY(r, x) \
   ((((x) << 16) & 0x000f0000ul) | ((r) & 0xfff0fffful))
/* Field member: ts_common_ip::clk_synth.clk_synth_hi                      */
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_MSB 15u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_LSB 8u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_WIDTH 8u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_READ_ACCESS 1u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_WRITE_ACCESS 1u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_RESET 0x00u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_FIELD_MASK 0x0000ff00ul
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: ts_common_ip::clk_synth.clk_synth_lo                      */
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_MSB 7u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_LSB 0u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_WIDTH 8u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_READ_ACCESS 1u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_WRITE_ACCESS 1u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_RESET 0x00u
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_FIELD_MASK 0x000000fful
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_GET(x) ((x) & 0x000000fful)
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_SET(x) ((x) & 0x000000fful)
#define TS_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: ts_common_ip::sdif_disable                               */
/* Register template: ts_common_ip::sdif_disable                           */
/* Field member: ts_common_ip::sdif_disable.sdif_disable                   */
#define TS_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_MSB 7u
#define TS_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_LSB 0u
#define TS_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_WIDTH 8u
#define TS_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_READ_ACCESS 1u
#define TS_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_WRITE_ACCESS 1u
#define TS_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_RESET 0x00u
#define TS_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_FIELD_MASK 0x000000fful
#define TS_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_GET(x) ((x) & 0x000000fful)
#define TS_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_SET(x) ((x) & 0x000000fful)
#define TS_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: ts_common_ip::sdif_status                                */
/* Register template: ts_common_ip::sdif_status                            */
/* Field member: ts_common_ip::sdif_status.sdif_lock                       */
#define TS_COMMON_IP_SDIF_STATUS_SDIF_LOCK_MSB 1u
#define TS_COMMON_IP_SDIF_STATUS_SDIF_LOCK_LSB 1u
#define TS_COMMON_IP_SDIF_STATUS_SDIF_LOCK_WIDTH 1u
#define TS_COMMON_IP_SDIF_STATUS_SDIF_LOCK_READ_ACCESS 1u
#define TS_COMMON_IP_SDIF_STATUS_SDIF_LOCK_WRITE_ACCESS 0u
#define TS_COMMON_IP_SDIF_STATUS_SDIF_LOCK_RESET 0x0u
#define TS_COMMON_IP_SDIF_STATUS_SDIF_LOCK_FIELD_MASK 0x00000002ul
#define TS_COMMON_IP_SDIF_STATUS_SDIF_LOCK_GET(x) (((x) & 0x00000002ul) >> 1)
#define TS_COMMON_IP_SDIF_STATUS_SDIF_LOCK_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define TS_COMMON_IP_SDIF_STATUS_SDIF_LOCK_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: ts_common_ip::sdif_status.sdif_busy                       */
#define TS_COMMON_IP_SDIF_STATUS_SDIF_BUSY_MSB 0u
#define TS_COMMON_IP_SDIF_STATUS_SDIF_BUSY_LSB 0u
#define TS_COMMON_IP_SDIF_STATUS_SDIF_BUSY_WIDTH 1u
#define TS_COMMON_IP_SDIF_STATUS_SDIF_BUSY_READ_ACCESS 1u
#define TS_COMMON_IP_SDIF_STATUS_SDIF_BUSY_WRITE_ACCESS 0u
#define TS_COMMON_IP_SDIF_STATUS_SDIF_BUSY_RESET 0x0u
#define TS_COMMON_IP_SDIF_STATUS_SDIF_BUSY_FIELD_MASK 0x00000001ul
#define TS_COMMON_IP_SDIF_STATUS_SDIF_BUSY_GET(x) ((x) & 0x00000001ul)
#define TS_COMMON_IP_SDIF_STATUS_SDIF_BUSY_SET(x) ((x) & 0x00000001ul)
#define TS_COMMON_IP_SDIF_STATUS_SDIF_BUSY_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: ts_common_ip::sdif                                       */
/* Register template: ts_common_ip::sdif                                   */
/* Field member: ts_common_ip::sdif.sdif_prog                              */
#define TS_COMMON_IP_SDIF_SDIF_PROG_MSB 31u
#define TS_COMMON_IP_SDIF_SDIF_PROG_LSB 31u
#define TS_COMMON_IP_SDIF_SDIF_PROG_WIDTH 1u
#define TS_COMMON_IP_SDIF_SDIF_PROG_READ_ACCESS 1u
#define TS_COMMON_IP_SDIF_SDIF_PROG_WRITE_ACCESS 1u
#define TS_COMMON_IP_SDIF_SDIF_PROG_RESET 0x0u
#define TS_COMMON_IP_SDIF_SDIF_PROG_FIELD_MASK 0x80000000ul
#define TS_COMMON_IP_SDIF_SDIF_PROG_GET(x) (((x) & 0x80000000ul) >> 31)
#define TS_COMMON_IP_SDIF_SDIF_PROG_SET(x) (((x) << 31) & 0x80000000ul)
#define TS_COMMON_IP_SDIF_SDIF_PROG_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: ts_common_ip::sdif.sdif_wrn                               */
#define TS_COMMON_IP_SDIF_SDIF_WRN_MSB 27u
#define TS_COMMON_IP_SDIF_SDIF_WRN_LSB 27u
#define TS_COMMON_IP_SDIF_SDIF_WRN_WIDTH 1u
#define TS_COMMON_IP_SDIF_SDIF_WRN_READ_ACCESS 1u
#define TS_COMMON_IP_SDIF_SDIF_WRN_WRITE_ACCESS 1u
#define TS_COMMON_IP_SDIF_SDIF_WRN_RESET 0x0u
#define TS_COMMON_IP_SDIF_SDIF_WRN_FIELD_MASK 0x08000000ul
#define TS_COMMON_IP_SDIF_SDIF_WRN_GET(x) (((x) & 0x08000000ul) >> 27)
#define TS_COMMON_IP_SDIF_SDIF_WRN_SET(x) (((x) << 27) & 0x08000000ul)
#define TS_COMMON_IP_SDIF_SDIF_WRN_MODIFY(r, x) \
   ((((x) << 27) & 0x08000000ul) | ((r) & 0xf7fffffful))
/* Field member: ts_common_ip::sdif.sdif_addr                              */
#define TS_COMMON_IP_SDIF_SDIF_ADDR_MSB 26u
#define TS_COMMON_IP_SDIF_SDIF_ADDR_LSB 24u
#define TS_COMMON_IP_SDIF_SDIF_ADDR_WIDTH 3u
#define TS_COMMON_IP_SDIF_SDIF_ADDR_READ_ACCESS 1u
#define TS_COMMON_IP_SDIF_SDIF_ADDR_WRITE_ACCESS 1u
#define TS_COMMON_IP_SDIF_SDIF_ADDR_RESET 0x0u
#define TS_COMMON_IP_SDIF_SDIF_ADDR_FIELD_MASK 0x07000000ul
#define TS_COMMON_IP_SDIF_SDIF_ADDR_GET(x) (((x) & 0x07000000ul) >> 24)
#define TS_COMMON_IP_SDIF_SDIF_ADDR_SET(x) (((x) << 24) & 0x07000000ul)
#define TS_COMMON_IP_SDIF_SDIF_ADDR_MODIFY(r, x) \
   ((((x) << 24) & 0x07000000ul) | ((r) & 0xf8fffffful))
/* Field member: ts_common_ip::sdif.sdif_data                              */
#define TS_COMMON_IP_SDIF_SDIF_DATA_MSB 23u
#define TS_COMMON_IP_SDIF_SDIF_DATA_LSB 0u
#define TS_COMMON_IP_SDIF_SDIF_DATA_WIDTH 24u
#define TS_COMMON_IP_SDIF_SDIF_DATA_READ_ACCESS 1u
#define TS_COMMON_IP_SDIF_SDIF_DATA_WRITE_ACCESS 1u
#define TS_COMMON_IP_SDIF_SDIF_DATA_RESET 0x000000ul
#define TS_COMMON_IP_SDIF_SDIF_DATA_FIELD_MASK 0x00fffffful
#define TS_COMMON_IP_SDIF_SDIF_DATA_GET(x) ((x) & 0x00fffffful)
#define TS_COMMON_IP_SDIF_SDIF_DATA_SET(x) ((x) & 0x00fffffful)
#define TS_COMMON_IP_SDIF_SDIF_DATA_MODIFY(r, x) \
   (((x) & 0x00fffffful) | ((r) & 0xff000000ul))

/* Register type: ts_common_ip::sdif_halt                                  */
/* Register template: ts_common_ip::sdif_halt                              */
/* Field member: ts_common_ip::sdif_halt.sdif_stop                         */
#define TS_COMMON_IP_SDIF_HALT_SDIF_STOP_MSB 0u
#define TS_COMMON_IP_SDIF_HALT_SDIF_STOP_LSB 0u
#define TS_COMMON_IP_SDIF_HALT_SDIF_STOP_WIDTH 1u
#define TS_COMMON_IP_SDIF_HALT_SDIF_STOP_READ_ACCESS 0u
#define TS_COMMON_IP_SDIF_HALT_SDIF_STOP_WRITE_ACCESS 1u
#define TS_COMMON_IP_SDIF_HALT_SDIF_STOP_RESET 0x0u
#define TS_COMMON_IP_SDIF_HALT_SDIF_STOP_FIELD_MASK 0x00000001ul
#define TS_COMMON_IP_SDIF_HALT_SDIF_STOP_GET(x) ((x) & 0x00000001ul)
#define TS_COMMON_IP_SDIF_HALT_SDIF_STOP_SET(x) ((x) & 0x00000001ul)
#define TS_COMMON_IP_SDIF_HALT_SDIF_STOP_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: ts_common_ip::sdif_ctrl                                  */
/* Register template: ts_common_ip::sdif_ctrl                              */
/* Field member: ts_common_ip::sdif_ctrl.sdif_inhibit                      */
#define TS_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_MSB 7u
#define TS_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_LSB 0u
#define TS_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_WIDTH 8u
#define TS_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_READ_ACCESS 1u
#define TS_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_WRITE_ACCESS 1u
#define TS_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_RESET 0x00u
#define TS_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_FIELD_MASK 0x000000fful
#define TS_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_GET(x) ((x) & 0x000000fful)
#define TS_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_SET(x) ((x) & 0x000000fful)
#define TS_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: ts_common_ip::smpl_ctrl                                  */
/* Register template: ts_common_ip::smpl_ctrl                              */
/* Field member: ts_common_ip::smpl_ctrl.smpl_discard                      */
#define TS_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_MSB 2u
#define TS_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_LSB 2u
#define TS_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_WIDTH 1u
#define TS_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_READ_ACCESS 1u
#define TS_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_WRITE_ACCESS 1u
#define TS_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_RESET 0x0u
#define TS_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_FIELD_MASK 0x00000004ul
#define TS_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_GET(x) \
   (((x) & 0x00000004ul) >> 2)
#define TS_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_SET(x) \
   (((x) << 2) & 0x00000004ul)
#define TS_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004ul) | ((r) & 0xfffffffbul))
/* Field member: ts_common_ip::smpl_ctrl.smpl_ctr_hold                     */
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_MSB 1u
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_LSB 1u
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_WIDTH 1u
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_READ_ACCESS 1u
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_WRITE_ACCESS 1u
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_RESET 0x0u
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_FIELD_MASK 0x00000002ul
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: ts_common_ip::smpl_ctrl.smpl_ctr_disable                  */
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_MSB 0u
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_LSB 0u
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_WIDTH 1u
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_READ_ACCESS 1u
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_WRITE_ACCESS 1u
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_RESET 0x0u
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_FIELD_MASK 0x00000001ul
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_GET(x) ((x) & 0x00000001ul)
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_SET(x) ((x) & 0x00000001ul)
#define TS_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: ts_common_ip::smpl_clr                                   */
/* Register template: ts_common_ip::smpl_clr                               */
/* Field member: ts_common_ip::smpl_clr.smpl_ctr_clear                     */
#define TS_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_MSB 0u
#define TS_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_LSB 0u
#define TS_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_WIDTH 1u
#define TS_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_READ_ACCESS 0u
#define TS_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_WRITE_ACCESS 1u
#define TS_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_RESET 0x0u
#define TS_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_FIELD_MASK 0x00000001ul
#define TS_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_GET(x) ((x) & 0x00000001ul)
#define TS_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_SET(x) ((x) & 0x00000001ul)
#define TS_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: ts_common_ip::smpl_cnt                                   */
/* Register template: ts_common_ip::smpl_cnt                               */
/* Field member: ts_common_ip::smpl_cnt.smpl_count                         */
#define TS_COMMON_IP_SMPL_CNT_SMPL_COUNT_MSB 15u
#define TS_COMMON_IP_SMPL_CNT_SMPL_COUNT_LSB 0u
#define TS_COMMON_IP_SMPL_CNT_SMPL_COUNT_WIDTH 16u
#define TS_COMMON_IP_SMPL_CNT_SMPL_COUNT_READ_ACCESS 1u
#define TS_COMMON_IP_SMPL_CNT_SMPL_COUNT_WRITE_ACCESS 0u
#define TS_COMMON_IP_SMPL_CNT_SMPL_COUNT_RESET 0x0000u
#define TS_COMMON_IP_SMPL_CNT_SMPL_COUNT_FIELD_MASK 0x0000fffful
#define TS_COMMON_IP_SMPL_CNT_SMPL_COUNT_GET(x) ((x) & 0x0000fffful)
#define TS_COMMON_IP_SMPL_CNT_SMPL_COUNT_SET(x) ((x) & 0x0000fffful)
#define TS_COMMON_IP_SMPL_CNT_SMPL_COUNT_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Addressmap type: ts_pd_individual_ip                                    */
/* Addressmap template: ts_pd_individual_ip                                */
#define TS_PD_INDIVIDUAL_IP_SIZE 0x40u
#define TS_PD_INDIVIDUAL_IP_BYTE_SIZE 0x40u
/* Register member: ts_pd_individual_ip.irq_enable                         */
/* Register type referenced: ts_pd_individual_ip::irq_enable               */
/* Register template referenced: ts_pd_individual_ip::irq_enable           */
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_OFFSET 0x0u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_BYTE_OFFSET 0x0u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_RESET_VALUE 0x00000000ul
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_RESET_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_READ_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_WRITE_MASK 0x0000001bul
/* Register member: ts_pd_individual_ip.irq_status                         */
/* Register type referenced: ts_pd_individual_ip::irq_status               */
/* Register template referenced: ts_pd_individual_ip::irq_status           */
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_OFFSET 0x4u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_BYTE_OFFSET 0x4u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_WRITE_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_RESET_VALUE 0x00000000ul
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_RESET_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_READ_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_WRITE_MASK 0x00000000ul
/* Register member: ts_pd_individual_ip.irq_clr                            */
/* Register type referenced: ts_pd_individual_ip::irq_clr                  */
/* Register template referenced: ts_pd_individual_ip::irq_clr              */
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_OFFSET 0x8u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_BYTE_OFFSET 0x8u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_READ_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_RESET_VALUE 0x00000000ul
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_RESET_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_READ_MASK 0x00000000ul
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_WRITE_MASK 0x0000001bul
/* Register member: ts_pd_individual_ip.irq_test                           */
/* Register type referenced: ts_pd_individual_ip::irq_test                 */
/* Register template referenced: ts_pd_individual_ip::irq_test             */
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_OFFSET 0xcu
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_BYTE_OFFSET 0xcu
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_RESET_VALUE 0x00000000ul
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_RESET_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_READ_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_WRITE_MASK 0x0000001bul
/* Register member: ts_pd_individual_ip.sdif_rdata                         */
/* Register type referenced: ts_pd_individual_ip::sdif_rdata               */
/* Register template referenced: ts_pd_individual_ip::sdif_rdata           */
#define TS_PD_INDIVIDUAL_IP_SDIF_RDATA_OFFSET 0x10u
#define TS_PD_INDIVIDUAL_IP_SDIF_RDATA_BYTE_OFFSET 0x10u
#define TS_PD_INDIVIDUAL_IP_SDIF_RDATA_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_SDIF_RDATA_WRITE_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_SDIF_RDATA_RESET_VALUE 0x00000000ul
#define TS_PD_INDIVIDUAL_IP_SDIF_RDATA_RESET_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_SDIF_RDATA_READ_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_SDIF_RDATA_WRITE_MASK 0x00000000ul
/* Register member: ts_pd_individual_ip.sdif_done                          */
/* Register type referenced: ts_pd_individual_ip::sdif_done                */
/* Register template referenced: ts_pd_individual_ip::sdif_done            */
#define TS_PD_INDIVIDUAL_IP_SDIF_DONE_OFFSET 0x14u
#define TS_PD_INDIVIDUAL_IP_SDIF_DONE_BYTE_OFFSET 0x14u
#define TS_PD_INDIVIDUAL_IP_SDIF_DONE_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_SDIF_DONE_WRITE_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_SDIF_DONE_RESET_VALUE 0x00000000ul
#define TS_PD_INDIVIDUAL_IP_SDIF_DONE_RESET_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_SDIF_DONE_READ_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_SDIF_DONE_WRITE_MASK 0x00000000ul
/* Register member: ts_pd_individual_ip.sdif_data                          */
/* Register type referenced: ts_pd_individual_ip::sdif_data                */
/* Register template referenced: ts_pd_individual_ip::sdif_data            */
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_OFFSET 0x18u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_BYTE_OFFSET 0x18u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_WRITE_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_RESET_VALUE 0x00000000ul
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_RESET_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_READ_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_WRITE_MASK 0x00000000ul
/* Register member: ts_pd_individual_ip.alarma_cfg                         */
/* Register type referenced: ts_pd_individual_ip::alarma_cfg               */
/* Register template referenced: ts_pd_individual_ip::alarma_cfg           */
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_OFFSET 0x20u
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_BYTE_OFFSET 0x20u
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_RESET_VALUE 0x00000000ul
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_RESET_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_READ_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_WRITE_MASK 0xfffffffful
/* Register member: ts_pd_individual_ip.alarmb_cfg                         */
/* Register type referenced: ts_pd_individual_ip::alarmb_cfg               */
/* Register template referenced: ts_pd_individual_ip::alarmb_cfg           */
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_OFFSET 0x24u
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_BYTE_OFFSET 0x24u
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_RESET_VALUE 0x00000000ul
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_RESET_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_READ_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_WRITE_MASK 0xfffffffful
/* Register member: ts_pd_individual_ip.smpl_hilo                          */
/* Register type referenced: ts_pd_individual_ip::smpl_hilo                */
/* Register template referenced: ts_pd_individual_ip::smpl_hilo            */
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_OFFSET 0x28u
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_BYTE_OFFSET 0x28u
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_WRITE_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_RESET_VALUE 0x00000000ul
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_RESET_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_READ_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_WRITE_MASK 0x00000000ul
/* Register member: ts_pd_individual_ip.hilo_reset                         */
/* Register type referenced: ts_pd_individual_ip::hilo_reset               */
/* Register template referenced: ts_pd_individual_ip::hilo_reset           */
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_OFFSET 0x2cu
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_BYTE_OFFSET 0x2cu
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_READ_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_RESET_VALUE 0x00000000ul
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_RESET_MASK 0xfffffffful
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_READ_MASK 0x00000000ul
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_WRITE_MASK 0x00000003ul

/* Register type: ts_pd_individual_ip::irq_enable                          */
/* Register template: ts_pd_individual_ip::irq_enable                      */
/* Field member: ts_pd_individual_ip::irq_enable.irq_en_alarmb             */
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMB_MSB 4u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMB_LSB 4u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMB_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMB_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMB_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMB_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMB_FIELD_MASK 0x00000010ul
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMB_GET(x) \
   (((x) & 0x00000010ul) >> 4)
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMB_SET(x) \
   (((x) << 4) & 0x00000010ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMB_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010ul) | ((r) & 0xffffffeful))
/* Field member: ts_pd_individual_ip::irq_enable.irq_en_alarma             */
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMA_MSB 3u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMA_LSB 3u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMA_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMA_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMA_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMA_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMA_FIELD_MASK 0x00000008ul
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMA_GET(x) \
   (((x) & 0x00000008ul) >> 3)
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMA_SET(x) \
   (((x) << 3) & 0x00000008ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_ALARMA_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: ts_pd_individual_ip::irq_enable.irq_en_done               */
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_MSB 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_LSB 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_FIELD_MASK 0x00000002ul
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: ts_pd_individual_ip::irq_enable.irq_en_fault              */
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_MSB 0u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_LSB 0u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_FIELD_MASK 0x00000001ul
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_GET(x) \
   ((x) & 0x00000001ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_SET(x) \
   ((x) & 0x00000001ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: ts_pd_individual_ip::irq_status                          */
/* Register template: ts_pd_individual_ip::irq_status                      */
/* Field member: ts_pd_individual_ip::irq_status.irq_status_alarmb         */
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMB_MSB 4u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMB_LSB 4u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMB_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMB_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMB_WRITE_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMB_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMB_FIELD_MASK 0x00000010ul
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMB_GET(x) \
   (((x) & 0x00000010ul) >> 4)
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMB_SET(x) \
   (((x) << 4) & 0x00000010ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMB_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010ul) | ((r) & 0xffffffeful))
/* Field member: ts_pd_individual_ip::irq_status.irq_status_alarma         */
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMA_MSB 3u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMA_LSB 3u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMA_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMA_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMA_WRITE_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMA_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMA_FIELD_MASK 0x00000008ul
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMA_GET(x) \
   (((x) & 0x00000008ul) >> 3)
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMA_SET(x) \
   (((x) << 3) & 0x00000008ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_ALARMA_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: ts_pd_individual_ip::irq_status.irq_status_done           */
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_MSB 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_LSB 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_WRITE_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_FIELD_MASK 0x00000002ul
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: ts_pd_individual_ip::irq_status.irq_status_fault          */
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_MSB 0u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_LSB 0u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_WRITE_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_FIELD_MASK 0x00000001ul
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_GET(x) \
   ((x) & 0x00000001ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_SET(x) \
   ((x) & 0x00000001ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: ts_pd_individual_ip::irq_clr                             */
/* Register template: ts_pd_individual_ip::irq_clr                         */
/* Field member: ts_pd_individual_ip::irq_clr.irq_clr_alarmb               */
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMB_MSB 4u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMB_LSB 4u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMB_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMB_READ_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMB_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMB_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMB_FIELD_MASK 0x00000010ul
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMB_GET(x) \
   (((x) & 0x00000010ul) >> 4)
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMB_SET(x) \
   (((x) << 4) & 0x00000010ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMB_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010ul) | ((r) & 0xffffffeful))
/* Field member: ts_pd_individual_ip::irq_clr.irq_clr_alarma               */
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMA_MSB 3u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMA_LSB 3u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMA_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMA_READ_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMA_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMA_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMA_FIELD_MASK 0x00000008ul
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMA_GET(x) \
   (((x) & 0x00000008ul) >> 3)
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMA_SET(x) \
   (((x) << 3) & 0x00000008ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_ALARMA_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: ts_pd_individual_ip::irq_clr.irq_clr_done                 */
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_MSB 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_LSB 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_READ_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_FIELD_MASK 0x00000002ul
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: ts_pd_individual_ip::irq_clr.irq_clr_fault                */
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_MSB 0u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_LSB 0u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_READ_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_FIELD_MASK 0x00000001ul
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_GET(x) ((x) & 0x00000001ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_SET(x) ((x) & 0x00000001ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: ts_pd_individual_ip::irq_test                            */
/* Register template: ts_pd_individual_ip::irq_test                        */
/* Field member: ts_pd_individual_ip::irq_test.irq_test_alarmb             */
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMB_MSB 4u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMB_LSB 4u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMB_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMB_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMB_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMB_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMB_FIELD_MASK 0x00000010ul
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMB_GET(x) \
   (((x) & 0x00000010ul) >> 4)
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMB_SET(x) \
   (((x) << 4) & 0x00000010ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMB_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010ul) | ((r) & 0xffffffeful))
/* Field member: ts_pd_individual_ip::irq_test.irq_test_alarma             */
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMA_MSB 3u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMA_LSB 3u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMA_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMA_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMA_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMA_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMA_FIELD_MASK 0x00000008ul
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMA_GET(x) \
   (((x) & 0x00000008ul) >> 3)
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMA_SET(x) \
   (((x) << 3) & 0x00000008ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_ALARMA_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: ts_pd_individual_ip::irq_test.irq_test_done               */
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_MSB 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_LSB 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_FIELD_MASK 0x00000002ul
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: ts_pd_individual_ip::irq_test.irq_test_fault              */
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_MSB 0u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_LSB 0u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_FIELD_MASK 0x00000001ul
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_GET(x) \
   ((x) & 0x00000001ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_SET(x) \
   ((x) & 0x00000001ul)
#define TS_PD_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: ts_pd_individual_ip::sdif_rdata                          */
/* Register template: ts_pd_individual_ip::sdif_rdata                      */
/* Field member: ts_pd_individual_ip::sdif_rdata.sdif_rdata                */
#define TS_PD_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_MSB 23u
#define TS_PD_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_LSB 0u
#define TS_PD_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_WIDTH 24u
#define TS_PD_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_WRITE_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_RESET 0x000000ul
#define TS_PD_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_FIELD_MASK 0x00fffffful
#define TS_PD_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_GET(x) ((x) & 0x00fffffful)
#define TS_PD_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_SET(x) ((x) & 0x00fffffful)
#define TS_PD_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_MODIFY(r, x) \
   (((x) & 0x00fffffful) | ((r) & 0xff000000ul))

/* Register type: ts_pd_individual_ip::sdif_done                           */
/* Register template: ts_pd_individual_ip::sdif_done                       */
/* Field member: ts_pd_individual_ip::sdif_done.sdif_smpl_done             */
#define TS_PD_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_MSB 0u
#define TS_PD_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_LSB 0u
#define TS_PD_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_WRITE_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_FIELD_MASK 0x00000001ul
#define TS_PD_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_GET(x) \
   ((x) & 0x00000001ul)
#define TS_PD_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_SET(x) \
   ((x) & 0x00000001ul)
#define TS_PD_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: ts_pd_individual_ip::sdif_data                           */
/* Register template: ts_pd_individual_ip::sdif_data                       */
/* Field member: ts_pd_individual_ip::sdif_data.sample_fault               */
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_FAULT_MSB 17u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_FAULT_LSB 17u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_FAULT_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_FAULT_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_FAULT_WRITE_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_FAULT_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_FAULT_FIELD_MASK 0x00020000ul
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_FAULT_GET(x) \
   (((x) & 0x00020000ul) >> 17)
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_FAULT_SET(x) \
   (((x) << 17) & 0x00020000ul)
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_FAULT_MODIFY(r, x) \
   ((((x) << 17) & 0x00020000ul) | ((r) & 0xfffdfffful))
/* Field member: ts_pd_individual_ip::sdif_data.sample_type                */
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_TYPE_MSB 16u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_TYPE_LSB 16u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_TYPE_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_TYPE_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_TYPE_WRITE_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_TYPE_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_TYPE_FIELD_MASK 0x00010000ul
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_TYPE_GET(x) \
   (((x) & 0x00010000ul) >> 16)
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_TYPE_SET(x) \
   (((x) << 16) & 0x00010000ul)
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_TYPE_MODIFY(r, x) \
   ((((x) << 16) & 0x00010000ul) | ((r) & 0xfffefffful))
/* Field member: ts_pd_individual_ip::sdif_data.sample_data                */
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_MSB 15u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_LSB 0u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_WIDTH 16u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_WRITE_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_RESET 0x0000u
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_FIELD_MASK 0x0000fffful
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_GET(x) ((x) & 0x0000fffful)
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_SET(x) ((x) & 0x0000fffful)
#define TS_PD_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: ts_pd_individual_ip::alarma_cfg                          */
/* Register template: ts_pd_individual_ip::alarma_cfg                      */
/* Field member: ts_pd_individual_ip::alarma_cfg.alarm_thresh              */
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_ALARM_THRESH_MSB 31u
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_ALARM_THRESH_LSB 16u
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_ALARM_THRESH_WIDTH 16u
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_ALARM_THRESH_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_ALARM_THRESH_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_ALARM_THRESH_RESET 0x0000u
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_ALARM_THRESH_FIELD_MASK 0xffff0000ul
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_ALARM_THRESH_GET(x) \
   (((x) & 0xffff0000ul) >> 16)
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_ALARM_THRESH_SET(x) \
   (((x) << 16) & 0xffff0000ul)
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_ALARM_THRESH_MODIFY(r, x) \
   ((((x) << 16) & 0xffff0000ul) | ((r) & 0x0000fffful))
/* Field member: ts_pd_individual_ip::alarma_cfg.hyst_thresh               */
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_HYST_THRESH_MSB 15u
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_HYST_THRESH_LSB 0u
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_HYST_THRESH_WIDTH 16u
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_HYST_THRESH_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_HYST_THRESH_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_HYST_THRESH_RESET 0x0000u
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_HYST_THRESH_FIELD_MASK 0x0000fffful
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_HYST_THRESH_GET(x) \
   ((x) & 0x0000fffful)
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_HYST_THRESH_SET(x) \
   ((x) & 0x0000fffful)
#define TS_PD_INDIVIDUAL_IP_ALARMA_CFG_HYST_THRESH_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: ts_pd_individual_ip::alarmb_cfg                          */
/* Register template: ts_pd_individual_ip::alarmb_cfg                      */
/* Field member: ts_pd_individual_ip::alarmb_cfg.alarm_thresh              */
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_ALARM_THRESH_MSB 31u
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_ALARM_THRESH_LSB 16u
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_ALARM_THRESH_WIDTH 16u
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_ALARM_THRESH_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_ALARM_THRESH_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_ALARM_THRESH_RESET 0x0000u
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_ALARM_THRESH_FIELD_MASK 0xffff0000ul
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_ALARM_THRESH_GET(x) \
   (((x) & 0xffff0000ul) >> 16)
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_ALARM_THRESH_SET(x) \
   (((x) << 16) & 0xffff0000ul)
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_ALARM_THRESH_MODIFY(r, x) \
   ((((x) << 16) & 0xffff0000ul) | ((r) & 0x0000fffful))
/* Field member: ts_pd_individual_ip::alarmb_cfg.hyst_thresh               */
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_HYST_THRESH_MSB 15u
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_HYST_THRESH_LSB 0u
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_HYST_THRESH_WIDTH 16u
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_HYST_THRESH_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_HYST_THRESH_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_HYST_THRESH_RESET 0x0000u
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_HYST_THRESH_FIELD_MASK 0x0000fffful
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_HYST_THRESH_GET(x) \
   ((x) & 0x0000fffful)
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_HYST_THRESH_SET(x) \
   ((x) & 0x0000fffful)
#define TS_PD_INDIVIDUAL_IP_ALARMB_CFG_HYST_THRESH_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: ts_pd_individual_ip::smpl_hilo                           */
/* Register template: ts_pd_individual_ip::smpl_hilo                       */
/* Field member: ts_pd_individual_ip::smpl_hilo.smpl_hi                    */
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_HI_MSB 31u
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_HI_LSB 16u
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_HI_WIDTH 16u
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_HI_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_HI_WRITE_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_HI_RESET 0x0000u
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_HI_FIELD_MASK 0xffff0000ul
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_HI_GET(x) \
   (((x) & 0xffff0000ul) >> 16)
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_HI_SET(x) \
   (((x) << 16) & 0xffff0000ul)
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_HI_MODIFY(r, x) \
   ((((x) << 16) & 0xffff0000ul) | ((r) & 0x0000fffful))
/* Field member: ts_pd_individual_ip::smpl_hilo.smpl_lo                    */
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_LO_MSB 15u
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_LO_LSB 0u
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_LO_WIDTH 16u
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_LO_READ_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_LO_WRITE_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_LO_RESET 0x0000u
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_LO_FIELD_MASK 0x0000fffful
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_LO_GET(x) ((x) & 0x0000fffful)
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_LO_SET(x) ((x) & 0x0000fffful)
#define TS_PD_INDIVIDUAL_IP_SMPL_HILO_SMPL_LO_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: ts_pd_individual_ip::hilo_reset                          */
/* Register template: ts_pd_individual_ip::hilo_reset                      */
/* Field member: ts_pd_individual_ip::hilo_reset.smpl_hi_clr               */
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_HI_CLR_MSB 1u
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_HI_CLR_LSB 1u
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_HI_CLR_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_HI_CLR_READ_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_HI_CLR_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_HI_CLR_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_HI_CLR_FIELD_MASK 0x00000002ul
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_HI_CLR_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_HI_CLR_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_HI_CLR_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: ts_pd_individual_ip::hilo_reset.smpl_lo_set               */
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_LO_SET_MSB 0u
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_LO_SET_LSB 0u
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_LO_SET_WIDTH 1u
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_LO_SET_READ_ACCESS 0u
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_LO_SET_WRITE_ACCESS 1u
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_LO_SET_RESET 0x0u
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_LO_SET_FIELD_MASK 0x00000001ul
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_LO_SET_GET(x) \
   ((x) & 0x00000001ul)
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_LO_SET_SET(x) \
   ((x) & 0x00000001ul)
#define TS_PD_INDIVIDUAL_IP_HILO_RESET_SMPL_LO_SET_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Addressmap type: pd_ip                                                  */
/* Addressmap template: pd_ip                                              */
#define PD_IP_SIZE 0x240u
#define PD_IP_BYTE_SIZE 0x240u
/* Addressmap member: pd_ip.pd_common                                      */
/* Addressmap type referenced: pd_common_ip                                */
/* Addressmap template referenced: pd_common_ip                            */
#define PD_IP_PD_COMMON_OFFSET 0x0u
#define PD_IP_PD_COMMON_BYTE_OFFSET 0x0u
#define PD_IP_PD_COMMON_READ_ACCESS 1u
#define PD_IP_PD_COMMON_WRITE_ACCESS 1u
/* Addressmap member: pd_ip.pd_individual                                  */
/* Addressmap type referenced: ts_pd_individual_ip                         */
/* Addressmap template referenced: ts_pd_individual_ip                     */
#define PD_IP_PD_INDIVIDUAL_OFFSET 0x40u
#define PD_IP_PD_INDIVIDUAL_BYTE_OFFSET 0x40u
#define PD_IP_PD_INDIVIDUAL_READ_ACCESS 1u
#define PD_IP_PD_INDIVIDUAL_WRITE_ACCESS 1u

/* Addressmap type: pd_common_ip                                           */
/* Addressmap template: pd_common_ip                                       */
#define PD_COMMON_IP_SIZE 0x40u
#define PD_COMMON_IP_BYTE_SIZE 0x40u
/* Register member: pd_common_ip.clk_synth                                 */
/* Register type referenced: pd_common_ip::clk_synth                       */
/* Register template referenced: pd_common_ip::clk_synth                   */
#define PD_COMMON_IP_CLK_SYNTH_OFFSET 0x0u
#define PD_COMMON_IP_CLK_SYNTH_BYTE_OFFSET 0x0u
#define PD_COMMON_IP_CLK_SYNTH_READ_ACCESS 1u
#define PD_COMMON_IP_CLK_SYNTH_WRITE_ACCESS 1u
#define PD_COMMON_IP_CLK_SYNTH_RESET_VALUE 0x00010000ul
#define PD_COMMON_IP_CLK_SYNTH_RESET_MASK 0xfffffffful
#define PD_COMMON_IP_CLK_SYNTH_READ_MASK 0xfffffffful
#define PD_COMMON_IP_CLK_SYNTH_WRITE_MASK 0x010ffffful
/* Register member: pd_common_ip.sdif_disable                              */
/* Register type referenced: pd_common_ip::sdif_disable                    */
/* Register template referenced: pd_common_ip::sdif_disable                */
#define PD_COMMON_IP_SDIF_DISABLE_OFFSET 0x4u
#define PD_COMMON_IP_SDIF_DISABLE_BYTE_OFFSET 0x4u
#define PD_COMMON_IP_SDIF_DISABLE_READ_ACCESS 1u
#define PD_COMMON_IP_SDIF_DISABLE_WRITE_ACCESS 1u
#define PD_COMMON_IP_SDIF_DISABLE_RESET_VALUE 0x00000000ul
#define PD_COMMON_IP_SDIF_DISABLE_RESET_MASK 0xfffffffful
#define PD_COMMON_IP_SDIF_DISABLE_READ_MASK 0xfffffffful
#define PD_COMMON_IP_SDIF_DISABLE_WRITE_MASK 0x000000fful
/* Register member: pd_common_ip.sdif_status                               */
/* Register type referenced: pd_common_ip::sdif_status                     */
/* Register template referenced: pd_common_ip::sdif_status                 */
#define PD_COMMON_IP_SDIF_STATUS_OFFSET 0x8u
#define PD_COMMON_IP_SDIF_STATUS_BYTE_OFFSET 0x8u
#define PD_COMMON_IP_SDIF_STATUS_READ_ACCESS 1u
#define PD_COMMON_IP_SDIF_STATUS_WRITE_ACCESS 0u
#define PD_COMMON_IP_SDIF_STATUS_RESET_VALUE 0x00000000ul
#define PD_COMMON_IP_SDIF_STATUS_RESET_MASK 0xfffffffful
#define PD_COMMON_IP_SDIF_STATUS_READ_MASK 0xfffffffful
#define PD_COMMON_IP_SDIF_STATUS_WRITE_MASK 0x00000000ul
/* Register member: pd_common_ip.sdif                                      */
/* Register type referenced: pd_common_ip::sdif                            */
/* Register template referenced: pd_common_ip::sdif                        */
#define PD_COMMON_IP_SDIF_OFFSET 0xcu
#define PD_COMMON_IP_SDIF_BYTE_OFFSET 0xcu
#define PD_COMMON_IP_SDIF_READ_ACCESS 1u
#define PD_COMMON_IP_SDIF_WRITE_ACCESS 1u
#define PD_COMMON_IP_SDIF_RESET_VALUE 0x00000000ul
#define PD_COMMON_IP_SDIF_RESET_MASK 0xfffffffful
#define PD_COMMON_IP_SDIF_READ_MASK 0xfffffffful
#define PD_COMMON_IP_SDIF_WRITE_MASK 0x8ffffffful
/* Register member: pd_common_ip.sdif_halt                                 */
/* Register type referenced: pd_common_ip::sdif_halt                       */
/* Register template referenced: pd_common_ip::sdif_halt                   */
#define PD_COMMON_IP_SDIF_HALT_OFFSET 0x10u
#define PD_COMMON_IP_SDIF_HALT_BYTE_OFFSET 0x10u
#define PD_COMMON_IP_SDIF_HALT_READ_ACCESS 0u
#define PD_COMMON_IP_SDIF_HALT_WRITE_ACCESS 1u
#define PD_COMMON_IP_SDIF_HALT_RESET_VALUE 0x00000000ul
#define PD_COMMON_IP_SDIF_HALT_RESET_MASK 0xfffffffful
#define PD_COMMON_IP_SDIF_HALT_READ_MASK 0x00000000ul
#define PD_COMMON_IP_SDIF_HALT_WRITE_MASK 0x00000001ul
/* Register member: pd_common_ip.sdif_ctrl                                 */
/* Register type referenced: pd_common_ip::sdif_ctrl                       */
/* Register template referenced: pd_common_ip::sdif_ctrl                   */
#define PD_COMMON_IP_SDIF_CTRL_OFFSET 0x14u
#define PD_COMMON_IP_SDIF_CTRL_BYTE_OFFSET 0x14u
#define PD_COMMON_IP_SDIF_CTRL_READ_ACCESS 1u
#define PD_COMMON_IP_SDIF_CTRL_WRITE_ACCESS 1u
#define PD_COMMON_IP_SDIF_CTRL_RESET_VALUE 0x00000000ul
#define PD_COMMON_IP_SDIF_CTRL_RESET_MASK 0xfffffffful
#define PD_COMMON_IP_SDIF_CTRL_READ_MASK 0xfffffffful
#define PD_COMMON_IP_SDIF_CTRL_WRITE_MASK 0x000000fful
/* Register member: pd_common_ip.smpl_ctrl                                 */
/* Register type referenced: pd_common_ip::smpl_ctrl                       */
/* Register template referenced: pd_common_ip::smpl_ctrl                   */
#define PD_COMMON_IP_SMPL_CTRL_OFFSET 0x20u
#define PD_COMMON_IP_SMPL_CTRL_BYTE_OFFSET 0x20u
#define PD_COMMON_IP_SMPL_CTRL_READ_ACCESS 1u
#define PD_COMMON_IP_SMPL_CTRL_WRITE_ACCESS 1u
#define PD_COMMON_IP_SMPL_CTRL_RESET_VALUE 0x00000000ul
#define PD_COMMON_IP_SMPL_CTRL_RESET_MASK 0xfffffffful
#define PD_COMMON_IP_SMPL_CTRL_READ_MASK 0xfffffffful
#define PD_COMMON_IP_SMPL_CTRL_WRITE_MASK 0x00000007ul
/* Register member: pd_common_ip.smpl_clr                                  */
/* Register type referenced: pd_common_ip::smpl_clr                        */
/* Register template referenced: pd_common_ip::smpl_clr                    */
#define PD_COMMON_IP_SMPL_CLR_OFFSET 0x24u
#define PD_COMMON_IP_SMPL_CLR_BYTE_OFFSET 0x24u
#define PD_COMMON_IP_SMPL_CLR_READ_ACCESS 0u
#define PD_COMMON_IP_SMPL_CLR_WRITE_ACCESS 1u
#define PD_COMMON_IP_SMPL_CLR_RESET_VALUE 0x00000000ul
#define PD_COMMON_IP_SMPL_CLR_RESET_MASK 0xfffffffful
#define PD_COMMON_IP_SMPL_CLR_READ_MASK 0x00000000ul
#define PD_COMMON_IP_SMPL_CLR_WRITE_MASK 0x00000001ul
/* Register member: pd_common_ip.smpl_cnt                                  */
/* Register type referenced: pd_common_ip::smpl_cnt                        */
/* Register template referenced: pd_common_ip::smpl_cnt                    */
#define PD_COMMON_IP_SMPL_CNT_OFFSET 0x28u
#define PD_COMMON_IP_SMPL_CNT_BYTE_OFFSET 0x28u
#define PD_COMMON_IP_SMPL_CNT_READ_ACCESS 1u
#define PD_COMMON_IP_SMPL_CNT_WRITE_ACCESS 0u
#define PD_COMMON_IP_SMPL_CNT_RESET_VALUE 0x00000000ul
#define PD_COMMON_IP_SMPL_CNT_RESET_MASK 0xfffffffful
#define PD_COMMON_IP_SMPL_CNT_READ_MASK 0xfffffffful
#define PD_COMMON_IP_SMPL_CNT_WRITE_MASK 0x00000000ul

/* Register type: pd_common_ip::clk_synth                                  */
/* Register template: pd_common_ip::clk_synth                              */
/* Field member: pd_common_ip::clk_synth.clk_synth_en                      */
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_MSB 24u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_LSB 24u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_WIDTH 1u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_READ_ACCESS 1u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_WRITE_ACCESS 1u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_RESET 0x0u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_FIELD_MASK 0x01000000ul
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_GET(x) \
   (((x) & 0x01000000ul) >> 24)
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_SET(x) \
   (((x) << 24) & 0x01000000ul)
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_MODIFY(r, x) \
   ((((x) << 24) & 0x01000000ul) | ((r) & 0xfefffffful))
/* Field member: pd_common_ip::clk_synth.clk_synth_hold                    */
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_MSB 19u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_LSB 16u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_WIDTH 4u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_READ_ACCESS 1u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_WRITE_ACCESS 1u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_RESET 0x1u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_FIELD_MASK 0x000f0000ul
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_GET(x) \
   (((x) & 0x000f0000ul) >> 16)
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_SET(x) \
   (((x) << 16) & 0x000f0000ul)
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_MODIFY(r, x) \
   ((((x) << 16) & 0x000f0000ul) | ((r) & 0xfff0fffful))
/* Field member: pd_common_ip::clk_synth.clk_synth_hi                      */
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_MSB 15u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_LSB 8u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_WIDTH 8u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_READ_ACCESS 1u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_WRITE_ACCESS 1u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_RESET 0x00u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_FIELD_MASK 0x0000ff00ul
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: pd_common_ip::clk_synth.clk_synth_lo                      */
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_MSB 7u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_LSB 0u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_WIDTH 8u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_READ_ACCESS 1u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_WRITE_ACCESS 1u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_RESET 0x00u
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_FIELD_MASK 0x000000fful
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_GET(x) ((x) & 0x000000fful)
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_SET(x) ((x) & 0x000000fful)
#define PD_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: pd_common_ip::sdif_disable                               */
/* Register template: pd_common_ip::sdif_disable                           */
/* Field member: pd_common_ip::sdif_disable.sdif_disable                   */
#define PD_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_MSB 7u
#define PD_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_LSB 0u
#define PD_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_WIDTH 8u
#define PD_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_READ_ACCESS 1u
#define PD_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_WRITE_ACCESS 1u
#define PD_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_RESET 0x00u
#define PD_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_FIELD_MASK 0x000000fful
#define PD_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_GET(x) ((x) & 0x000000fful)
#define PD_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_SET(x) ((x) & 0x000000fful)
#define PD_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: pd_common_ip::sdif_status                                */
/* Register template: pd_common_ip::sdif_status                            */
/* Field member: pd_common_ip::sdif_status.sdif_lock                       */
#define PD_COMMON_IP_SDIF_STATUS_SDIF_LOCK_MSB 1u
#define PD_COMMON_IP_SDIF_STATUS_SDIF_LOCK_LSB 1u
#define PD_COMMON_IP_SDIF_STATUS_SDIF_LOCK_WIDTH 1u
#define PD_COMMON_IP_SDIF_STATUS_SDIF_LOCK_READ_ACCESS 1u
#define PD_COMMON_IP_SDIF_STATUS_SDIF_LOCK_WRITE_ACCESS 0u
#define PD_COMMON_IP_SDIF_STATUS_SDIF_LOCK_RESET 0x0u
#define PD_COMMON_IP_SDIF_STATUS_SDIF_LOCK_FIELD_MASK 0x00000002ul
#define PD_COMMON_IP_SDIF_STATUS_SDIF_LOCK_GET(x) (((x) & 0x00000002ul) >> 1)
#define PD_COMMON_IP_SDIF_STATUS_SDIF_LOCK_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define PD_COMMON_IP_SDIF_STATUS_SDIF_LOCK_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: pd_common_ip::sdif_status.sdif_busy                       */
#define PD_COMMON_IP_SDIF_STATUS_SDIF_BUSY_MSB 0u
#define PD_COMMON_IP_SDIF_STATUS_SDIF_BUSY_LSB 0u
#define PD_COMMON_IP_SDIF_STATUS_SDIF_BUSY_WIDTH 1u
#define PD_COMMON_IP_SDIF_STATUS_SDIF_BUSY_READ_ACCESS 1u
#define PD_COMMON_IP_SDIF_STATUS_SDIF_BUSY_WRITE_ACCESS 0u
#define PD_COMMON_IP_SDIF_STATUS_SDIF_BUSY_RESET 0x0u
#define PD_COMMON_IP_SDIF_STATUS_SDIF_BUSY_FIELD_MASK 0x00000001ul
#define PD_COMMON_IP_SDIF_STATUS_SDIF_BUSY_GET(x) ((x) & 0x00000001ul)
#define PD_COMMON_IP_SDIF_STATUS_SDIF_BUSY_SET(x) ((x) & 0x00000001ul)
#define PD_COMMON_IP_SDIF_STATUS_SDIF_BUSY_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: pd_common_ip::sdif                                       */
/* Register template: pd_common_ip::sdif                                   */
/* Field member: pd_common_ip::sdif.sdif_prog                              */
#define PD_COMMON_IP_SDIF_SDIF_PROG_MSB 31u
#define PD_COMMON_IP_SDIF_SDIF_PROG_LSB 31u
#define PD_COMMON_IP_SDIF_SDIF_PROG_WIDTH 1u
#define PD_COMMON_IP_SDIF_SDIF_PROG_READ_ACCESS 1u
#define PD_COMMON_IP_SDIF_SDIF_PROG_WRITE_ACCESS 1u
#define PD_COMMON_IP_SDIF_SDIF_PROG_RESET 0x0u
#define PD_COMMON_IP_SDIF_SDIF_PROG_FIELD_MASK 0x80000000ul
#define PD_COMMON_IP_SDIF_SDIF_PROG_GET(x) (((x) & 0x80000000ul) >> 31)
#define PD_COMMON_IP_SDIF_SDIF_PROG_SET(x) (((x) << 31) & 0x80000000ul)
#define PD_COMMON_IP_SDIF_SDIF_PROG_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: pd_common_ip::sdif.sdif_wrn                               */
#define PD_COMMON_IP_SDIF_SDIF_WRN_MSB 27u
#define PD_COMMON_IP_SDIF_SDIF_WRN_LSB 27u
#define PD_COMMON_IP_SDIF_SDIF_WRN_WIDTH 1u
#define PD_COMMON_IP_SDIF_SDIF_WRN_READ_ACCESS 1u
#define PD_COMMON_IP_SDIF_SDIF_WRN_WRITE_ACCESS 1u
#define PD_COMMON_IP_SDIF_SDIF_WRN_RESET 0x0u
#define PD_COMMON_IP_SDIF_SDIF_WRN_FIELD_MASK 0x08000000ul
#define PD_COMMON_IP_SDIF_SDIF_WRN_GET(x) (((x) & 0x08000000ul) >> 27)
#define PD_COMMON_IP_SDIF_SDIF_WRN_SET(x) (((x) << 27) & 0x08000000ul)
#define PD_COMMON_IP_SDIF_SDIF_WRN_MODIFY(r, x) \
   ((((x) << 27) & 0x08000000ul) | ((r) & 0xf7fffffful))
/* Field member: pd_common_ip::sdif.sdif_addr                              */
#define PD_COMMON_IP_SDIF_SDIF_ADDR_MSB 26u
#define PD_COMMON_IP_SDIF_SDIF_ADDR_LSB 24u
#define PD_COMMON_IP_SDIF_SDIF_ADDR_WIDTH 3u
#define PD_COMMON_IP_SDIF_SDIF_ADDR_READ_ACCESS 1u
#define PD_COMMON_IP_SDIF_SDIF_ADDR_WRITE_ACCESS 1u
#define PD_COMMON_IP_SDIF_SDIF_ADDR_RESET 0x0u
#define PD_COMMON_IP_SDIF_SDIF_ADDR_FIELD_MASK 0x07000000ul
#define PD_COMMON_IP_SDIF_SDIF_ADDR_GET(x) (((x) & 0x07000000ul) >> 24)
#define PD_COMMON_IP_SDIF_SDIF_ADDR_SET(x) (((x) << 24) & 0x07000000ul)
#define PD_COMMON_IP_SDIF_SDIF_ADDR_MODIFY(r, x) \
   ((((x) << 24) & 0x07000000ul) | ((r) & 0xf8fffffful))
/* Field member: pd_common_ip::sdif.sdif_data                              */
#define PD_COMMON_IP_SDIF_SDIF_DATA_MSB 23u
#define PD_COMMON_IP_SDIF_SDIF_DATA_LSB 0u
#define PD_COMMON_IP_SDIF_SDIF_DATA_WIDTH 24u
#define PD_COMMON_IP_SDIF_SDIF_DATA_READ_ACCESS 1u
#define PD_COMMON_IP_SDIF_SDIF_DATA_WRITE_ACCESS 1u
#define PD_COMMON_IP_SDIF_SDIF_DATA_RESET 0x000000ul
#define PD_COMMON_IP_SDIF_SDIF_DATA_FIELD_MASK 0x00fffffful
#define PD_COMMON_IP_SDIF_SDIF_DATA_GET(x) ((x) & 0x00fffffful)
#define PD_COMMON_IP_SDIF_SDIF_DATA_SET(x) ((x) & 0x00fffffful)
#define PD_COMMON_IP_SDIF_SDIF_DATA_MODIFY(r, x) \
   (((x) & 0x00fffffful) | ((r) & 0xff000000ul))

/* Register type: pd_common_ip::sdif_halt                                  */
/* Register template: pd_common_ip::sdif_halt                              */
/* Field member: pd_common_ip::sdif_halt.sdif_stop                         */
#define PD_COMMON_IP_SDIF_HALT_SDIF_STOP_MSB 0u
#define PD_COMMON_IP_SDIF_HALT_SDIF_STOP_LSB 0u
#define PD_COMMON_IP_SDIF_HALT_SDIF_STOP_WIDTH 1u
#define PD_COMMON_IP_SDIF_HALT_SDIF_STOP_READ_ACCESS 0u
#define PD_COMMON_IP_SDIF_HALT_SDIF_STOP_WRITE_ACCESS 1u
#define PD_COMMON_IP_SDIF_HALT_SDIF_STOP_RESET 0x0u
#define PD_COMMON_IP_SDIF_HALT_SDIF_STOP_FIELD_MASK 0x00000001ul
#define PD_COMMON_IP_SDIF_HALT_SDIF_STOP_GET(x) ((x) & 0x00000001ul)
#define PD_COMMON_IP_SDIF_HALT_SDIF_STOP_SET(x) ((x) & 0x00000001ul)
#define PD_COMMON_IP_SDIF_HALT_SDIF_STOP_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: pd_common_ip::sdif_ctrl                                  */
/* Register template: pd_common_ip::sdif_ctrl                              */
/* Field member: pd_common_ip::sdif_ctrl.sdif_inhibit                      */
#define PD_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_MSB 7u
#define PD_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_LSB 0u
#define PD_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_WIDTH 8u
#define PD_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_READ_ACCESS 1u
#define PD_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_WRITE_ACCESS 1u
#define PD_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_RESET 0x00u
#define PD_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_FIELD_MASK 0x000000fful
#define PD_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_GET(x) ((x) & 0x000000fful)
#define PD_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_SET(x) ((x) & 0x000000fful)
#define PD_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: pd_common_ip::smpl_ctrl                                  */
/* Register template: pd_common_ip::smpl_ctrl                              */
/* Field member: pd_common_ip::smpl_ctrl.smpl_discard                      */
#define PD_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_MSB 2u
#define PD_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_LSB 2u
#define PD_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_WIDTH 1u
#define PD_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_READ_ACCESS 1u
#define PD_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_WRITE_ACCESS 1u
#define PD_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_RESET 0x0u
#define PD_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_FIELD_MASK 0x00000004ul
#define PD_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_GET(x) \
   (((x) & 0x00000004ul) >> 2)
#define PD_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_SET(x) \
   (((x) << 2) & 0x00000004ul)
#define PD_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004ul) | ((r) & 0xfffffffbul))
/* Field member: pd_common_ip::smpl_ctrl.smpl_ctr_hold                     */
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_MSB 1u
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_LSB 1u
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_WIDTH 1u
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_READ_ACCESS 1u
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_WRITE_ACCESS 1u
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_RESET 0x0u
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_FIELD_MASK 0x00000002ul
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: pd_common_ip::smpl_ctrl.smpl_ctr_disable                  */
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_MSB 0u
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_LSB 0u
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_WIDTH 1u
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_READ_ACCESS 1u
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_WRITE_ACCESS 1u
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_RESET 0x0u
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_FIELD_MASK 0x00000001ul
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_GET(x) ((x) & 0x00000001ul)
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_SET(x) ((x) & 0x00000001ul)
#define PD_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: pd_common_ip::smpl_clr                                   */
/* Register template: pd_common_ip::smpl_clr                               */
/* Field member: pd_common_ip::smpl_clr.smpl_ctr_clear                     */
#define PD_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_MSB 0u
#define PD_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_LSB 0u
#define PD_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_WIDTH 1u
#define PD_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_READ_ACCESS 0u
#define PD_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_WRITE_ACCESS 1u
#define PD_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_RESET 0x0u
#define PD_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_FIELD_MASK 0x00000001ul
#define PD_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_GET(x) ((x) & 0x00000001ul)
#define PD_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_SET(x) ((x) & 0x00000001ul)
#define PD_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: pd_common_ip::smpl_cnt                                   */
/* Register template: pd_common_ip::smpl_cnt                               */
/* Field member: pd_common_ip::smpl_cnt.smpl_count                         */
#define PD_COMMON_IP_SMPL_CNT_SMPL_COUNT_MSB 15u
#define PD_COMMON_IP_SMPL_CNT_SMPL_COUNT_LSB 0u
#define PD_COMMON_IP_SMPL_CNT_SMPL_COUNT_WIDTH 16u
#define PD_COMMON_IP_SMPL_CNT_SMPL_COUNT_READ_ACCESS 1u
#define PD_COMMON_IP_SMPL_CNT_SMPL_COUNT_WRITE_ACCESS 0u
#define PD_COMMON_IP_SMPL_CNT_SMPL_COUNT_RESET 0x0000u
#define PD_COMMON_IP_SMPL_CNT_SMPL_COUNT_FIELD_MASK 0x0000fffful
#define PD_COMMON_IP_SMPL_CNT_SMPL_COUNT_GET(x) ((x) & 0x0000fffful)
#define PD_COMMON_IP_SMPL_CNT_SMPL_COUNT_SET(x) ((x) & 0x0000fffful)
#define PD_COMMON_IP_SMPL_CNT_SMPL_COUNT_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Addressmap type: vm_ip                                                  */
/* Addressmap template: vm_ip                                              */
#define VM_IP_SIZE 0x600u
#define VM_IP_BYTE_SIZE 0x600u
/* Addressmap member: vm_ip.vm_common                                      */
/* Addressmap type referenced: vm_common_ip                                */
/* Addressmap template referenced: vm_common_ip                            */
#define VM_IP_VM_COMMON_OFFSET 0x0u
#define VM_IP_VM_COMMON_BYTE_OFFSET 0x0u
#define VM_IP_VM_COMMON_READ_ACCESS 1u
#define VM_IP_VM_COMMON_WRITE_ACCESS 1u
/* Addressmap member: vm_ip.vm_individual                                  */
/* Addressmap type referenced: vm_individual_ip                            */
/* Addressmap template referenced: vm_individual_ip                        */
#define VM_IP_VM_INDIVIDUAL_OFFSET 0x200u
#define VM_IP_VM_INDIVIDUAL_BYTE_OFFSET 0x200u
#define VM_IP_VM_INDIVIDUAL_READ_ACCESS 1u
#define VM_IP_VM_INDIVIDUAL_WRITE_ACCESS 1u

/* Addressmap type: vm_common_ip                                           */
/* Addressmap template: vm_common_ip                                       */
#define VM_COMMON_IP_SIZE 0x200u
#define VM_COMMON_IP_BYTE_SIZE 0x200u
/* Register member: vm_common_ip.clk_synth                                 */
/* Register type referenced: vm_common_ip::clk_synth                       */
/* Register template referenced: vm_common_ip::clk_synth                   */
#define VM_COMMON_IP_CLK_SYNTH_OFFSET 0x0u
#define VM_COMMON_IP_CLK_SYNTH_BYTE_OFFSET 0x0u
#define VM_COMMON_IP_CLK_SYNTH_READ_ACCESS 1u
#define VM_COMMON_IP_CLK_SYNTH_WRITE_ACCESS 1u
#define VM_COMMON_IP_CLK_SYNTH_RESET_VALUE 0x00010000ul
#define VM_COMMON_IP_CLK_SYNTH_RESET_MASK 0xfffffffful
#define VM_COMMON_IP_CLK_SYNTH_READ_MASK 0xfffffffful
#define VM_COMMON_IP_CLK_SYNTH_WRITE_MASK 0x010ffffful
/* Register member: vm_common_ip.sdif_disable                              */
/* Register type referenced: vm_common_ip::sdif_disable                    */
/* Register template referenced: vm_common_ip::sdif_disable                */
#define VM_COMMON_IP_SDIF_DISABLE_OFFSET 0x4u
#define VM_COMMON_IP_SDIF_DISABLE_BYTE_OFFSET 0x4u
#define VM_COMMON_IP_SDIF_DISABLE_READ_ACCESS 1u
#define VM_COMMON_IP_SDIF_DISABLE_WRITE_ACCESS 1u
#define VM_COMMON_IP_SDIF_DISABLE_RESET_VALUE 0x00000000ul
#define VM_COMMON_IP_SDIF_DISABLE_RESET_MASK 0xfffffffful
#define VM_COMMON_IP_SDIF_DISABLE_READ_MASK 0xfffffffful
#define VM_COMMON_IP_SDIF_DISABLE_WRITE_MASK 0x00000003ul
/* Register member: vm_common_ip.sdif_status                               */
/* Register type referenced: vm_common_ip::sdif_status                     */
/* Register template referenced: vm_common_ip::sdif_status                 */
#define VM_COMMON_IP_SDIF_STATUS_OFFSET 0x8u
#define VM_COMMON_IP_SDIF_STATUS_BYTE_OFFSET 0x8u
#define VM_COMMON_IP_SDIF_STATUS_READ_ACCESS 1u
#define VM_COMMON_IP_SDIF_STATUS_WRITE_ACCESS 0u
#define VM_COMMON_IP_SDIF_STATUS_RESET_VALUE 0x00000000ul
#define VM_COMMON_IP_SDIF_STATUS_RESET_MASK 0xfffffffful
#define VM_COMMON_IP_SDIF_STATUS_READ_MASK 0xfffffffful
#define VM_COMMON_IP_SDIF_STATUS_WRITE_MASK 0x00000000ul
/* Register member: vm_common_ip.sdif                                      */
/* Register type referenced: vm_common_ip::sdif                            */
/* Register template referenced: vm_common_ip::sdif                        */
#define VM_COMMON_IP_SDIF_OFFSET 0xcu
#define VM_COMMON_IP_SDIF_BYTE_OFFSET 0xcu
#define VM_COMMON_IP_SDIF_READ_ACCESS 1u
#define VM_COMMON_IP_SDIF_WRITE_ACCESS 1u
#define VM_COMMON_IP_SDIF_RESET_VALUE 0x00000000ul
#define VM_COMMON_IP_SDIF_RESET_MASK 0xfffffffful
#define VM_COMMON_IP_SDIF_READ_MASK 0xfffffffful
#define VM_COMMON_IP_SDIF_WRITE_MASK 0x8ffffffful
/* Register member: vm_common_ip.sdif_halt                                 */
/* Register type referenced: vm_common_ip::sdif_halt                       */
/* Register template referenced: vm_common_ip::sdif_halt                   */
#define VM_COMMON_IP_SDIF_HALT_OFFSET 0x10u
#define VM_COMMON_IP_SDIF_HALT_BYTE_OFFSET 0x10u
#define VM_COMMON_IP_SDIF_HALT_READ_ACCESS 0u
#define VM_COMMON_IP_SDIF_HALT_WRITE_ACCESS 1u
#define VM_COMMON_IP_SDIF_HALT_RESET_VALUE 0x00000000ul
#define VM_COMMON_IP_SDIF_HALT_RESET_MASK 0xfffffffful
#define VM_COMMON_IP_SDIF_HALT_READ_MASK 0x00000000ul
#define VM_COMMON_IP_SDIF_HALT_WRITE_MASK 0x00000001ul
/* Register member: vm_common_ip.sdif_ctrl                                 */
/* Register type referenced: vm_common_ip::sdif_ctrl                       */
/* Register template referenced: vm_common_ip::sdif_ctrl                   */
#define VM_COMMON_IP_SDIF_CTRL_OFFSET 0x14u
#define VM_COMMON_IP_SDIF_CTRL_BYTE_OFFSET 0x14u
#define VM_COMMON_IP_SDIF_CTRL_READ_ACCESS 1u
#define VM_COMMON_IP_SDIF_CTRL_WRITE_ACCESS 1u
#define VM_COMMON_IP_SDIF_CTRL_RESET_VALUE 0x00000000ul
#define VM_COMMON_IP_SDIF_CTRL_RESET_MASK 0xfffffffful
#define VM_COMMON_IP_SDIF_CTRL_READ_MASK 0xfffffffful
#define VM_COMMON_IP_SDIF_CTRL_WRITE_MASK 0x00000003ul
/* Register member: vm_common_ip.smpl_ctrl                                 */
/* Register type referenced: vm_common_ip::smpl_ctrl                       */
/* Register template referenced: vm_common_ip::smpl_ctrl                   */
#define VM_COMMON_IP_SMPL_CTRL_OFFSET 0x20u
#define VM_COMMON_IP_SMPL_CTRL_BYTE_OFFSET 0x20u
#define VM_COMMON_IP_SMPL_CTRL_READ_ACCESS 1u
#define VM_COMMON_IP_SMPL_CTRL_WRITE_ACCESS 1u
#define VM_COMMON_IP_SMPL_CTRL_RESET_VALUE 0x00000000ul
#define VM_COMMON_IP_SMPL_CTRL_RESET_MASK 0xfffffffful
#define VM_COMMON_IP_SMPL_CTRL_READ_MASK 0xfffffffful
#define VM_COMMON_IP_SMPL_CTRL_WRITE_MASK 0x00000007ul
/* Register member: vm_common_ip.smpl_clr                                  */
/* Register type referenced: vm_common_ip::smpl_clr                        */
/* Register template referenced: vm_common_ip::smpl_clr                    */
#define VM_COMMON_IP_SMPL_CLR_OFFSET 0x24u
#define VM_COMMON_IP_SMPL_CLR_BYTE_OFFSET 0x24u
#define VM_COMMON_IP_SMPL_CLR_READ_ACCESS 0u
#define VM_COMMON_IP_SMPL_CLR_WRITE_ACCESS 1u
#define VM_COMMON_IP_SMPL_CLR_RESET_VALUE 0x00000000ul
#define VM_COMMON_IP_SMPL_CLR_RESET_MASK 0xfffffffful
#define VM_COMMON_IP_SMPL_CLR_READ_MASK 0x00000000ul
#define VM_COMMON_IP_SMPL_CLR_WRITE_MASK 0x00000001ul
/* Register member: vm_common_ip.smpl_cnt                                  */
/* Register type referenced: vm_common_ip::smpl_cnt                        */
/* Register template referenced: vm_common_ip::smpl_cnt                    */
#define VM_COMMON_IP_SMPL_CNT_OFFSET 0x28u
#define VM_COMMON_IP_SMPL_CNT_BYTE_OFFSET 0x28u
#define VM_COMMON_IP_SMPL_CNT_READ_ACCESS 1u
#define VM_COMMON_IP_SMPL_CNT_WRITE_ACCESS 0u
#define VM_COMMON_IP_SMPL_CNT_RESET_VALUE 0x00000000ul
#define VM_COMMON_IP_SMPL_CNT_RESET_MASK 0xfffffffful
#define VM_COMMON_IP_SMPL_CNT_READ_MASK 0xfffffffful
#define VM_COMMON_IP_SMPL_CNT_WRITE_MASK 0x00000000ul

/* Register type: vm_common_ip::clk_synth                                  */
/* Register template: vm_common_ip::clk_synth                              */
/* Field member: vm_common_ip::clk_synth.clk_synth_en                      */
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_MSB 24u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_LSB 24u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_WIDTH 1u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_READ_ACCESS 1u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_WRITE_ACCESS 1u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_RESET 0x0u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_FIELD_MASK 0x01000000ul
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_GET(x) \
   (((x) & 0x01000000ul) >> 24)
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_SET(x) \
   (((x) << 24) & 0x01000000ul)
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_EN_MODIFY(r, x) \
   ((((x) << 24) & 0x01000000ul) | ((r) & 0xfefffffful))
/* Field member: vm_common_ip::clk_synth.clk_synth_hold                    */
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_MSB 19u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_LSB 16u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_WIDTH 4u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_READ_ACCESS 1u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_WRITE_ACCESS 1u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_RESET 0x1u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_FIELD_MASK 0x000f0000ul
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_GET(x) \
   (((x) & 0x000f0000ul) >> 16)
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_SET(x) \
   (((x) << 16) & 0x000f0000ul)
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HOLD_MODIFY(r, x) \
   ((((x) << 16) & 0x000f0000ul) | ((r) & 0xfff0fffful))
/* Field member: vm_common_ip::clk_synth.clk_synth_hi                      */
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_MSB 15u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_LSB 8u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_WIDTH 8u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_READ_ACCESS 1u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_WRITE_ACCESS 1u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_RESET 0x00u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_FIELD_MASK 0x0000ff00ul
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_HI_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: vm_common_ip::clk_synth.clk_synth_lo                      */
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_MSB 7u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_LSB 0u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_WIDTH 8u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_READ_ACCESS 1u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_WRITE_ACCESS 1u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_RESET 0x00u
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_FIELD_MASK 0x000000fful
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_GET(x) ((x) & 0x000000fful)
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_SET(x) ((x) & 0x000000fful)
#define VM_COMMON_IP_CLK_SYNTH_CLK_SYNTH_LO_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: vm_common_ip::sdif_disable                               */
/* Register template: vm_common_ip::sdif_disable                           */
/* Field member: vm_common_ip::sdif_disable.sdif_disable                   */
#define VM_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_MSB 1u
#define VM_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_LSB 0u
#define VM_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_WIDTH 2u
#define VM_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_READ_ACCESS 1u
#define VM_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_WRITE_ACCESS 1u
#define VM_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_RESET 0x0u
#define VM_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_FIELD_MASK 0x00000003ul
#define VM_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_GET(x) ((x) & 0x00000003ul)
#define VM_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_SET(x) ((x) & 0x00000003ul)
#define VM_COMMON_IP_SDIF_DISABLE_SDIF_DISABLE_MODIFY(r, x) \
   (((x) & 0x00000003ul) | ((r) & 0xfffffffcul))

/* Register type: vm_common_ip::sdif_status                                */
/* Register template: vm_common_ip::sdif_status                            */
/* Field member: vm_common_ip::sdif_status.sdif_lock                       */
#define VM_COMMON_IP_SDIF_STATUS_SDIF_LOCK_MSB 1u
#define VM_COMMON_IP_SDIF_STATUS_SDIF_LOCK_LSB 1u
#define VM_COMMON_IP_SDIF_STATUS_SDIF_LOCK_WIDTH 1u
#define VM_COMMON_IP_SDIF_STATUS_SDIF_LOCK_READ_ACCESS 1u
#define VM_COMMON_IP_SDIF_STATUS_SDIF_LOCK_WRITE_ACCESS 0u
#define VM_COMMON_IP_SDIF_STATUS_SDIF_LOCK_RESET 0x0u
#define VM_COMMON_IP_SDIF_STATUS_SDIF_LOCK_FIELD_MASK 0x00000002ul
#define VM_COMMON_IP_SDIF_STATUS_SDIF_LOCK_GET(x) (((x) & 0x00000002ul) >> 1)
#define VM_COMMON_IP_SDIF_STATUS_SDIF_LOCK_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define VM_COMMON_IP_SDIF_STATUS_SDIF_LOCK_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: vm_common_ip::sdif_status.sdif_busy                       */
#define VM_COMMON_IP_SDIF_STATUS_SDIF_BUSY_MSB 0u
#define VM_COMMON_IP_SDIF_STATUS_SDIF_BUSY_LSB 0u
#define VM_COMMON_IP_SDIF_STATUS_SDIF_BUSY_WIDTH 1u
#define VM_COMMON_IP_SDIF_STATUS_SDIF_BUSY_READ_ACCESS 1u
#define VM_COMMON_IP_SDIF_STATUS_SDIF_BUSY_WRITE_ACCESS 0u
#define VM_COMMON_IP_SDIF_STATUS_SDIF_BUSY_RESET 0x0u
#define VM_COMMON_IP_SDIF_STATUS_SDIF_BUSY_FIELD_MASK 0x00000001ul
#define VM_COMMON_IP_SDIF_STATUS_SDIF_BUSY_GET(x) ((x) & 0x00000001ul)
#define VM_COMMON_IP_SDIF_STATUS_SDIF_BUSY_SET(x) ((x) & 0x00000001ul)
#define VM_COMMON_IP_SDIF_STATUS_SDIF_BUSY_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: vm_common_ip::sdif                                       */
/* Register template: vm_common_ip::sdif                                   */
/* Field member: vm_common_ip::sdif.sdif_prog                              */
#define VM_COMMON_IP_SDIF_SDIF_PROG_MSB 31u
#define VM_COMMON_IP_SDIF_SDIF_PROG_LSB 31u
#define VM_COMMON_IP_SDIF_SDIF_PROG_WIDTH 1u
#define VM_COMMON_IP_SDIF_SDIF_PROG_READ_ACCESS 1u
#define VM_COMMON_IP_SDIF_SDIF_PROG_WRITE_ACCESS 1u
#define VM_COMMON_IP_SDIF_SDIF_PROG_RESET 0x0u
#define VM_COMMON_IP_SDIF_SDIF_PROG_FIELD_MASK 0x80000000ul
#define VM_COMMON_IP_SDIF_SDIF_PROG_GET(x) (((x) & 0x80000000ul) >> 31)
#define VM_COMMON_IP_SDIF_SDIF_PROG_SET(x) (((x) << 31) & 0x80000000ul)
#define VM_COMMON_IP_SDIF_SDIF_PROG_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: vm_common_ip::sdif.sdif_wrn                               */
#define VM_COMMON_IP_SDIF_SDIF_WRN_MSB 27u
#define VM_COMMON_IP_SDIF_SDIF_WRN_LSB 27u
#define VM_COMMON_IP_SDIF_SDIF_WRN_WIDTH 1u
#define VM_COMMON_IP_SDIF_SDIF_WRN_READ_ACCESS 1u
#define VM_COMMON_IP_SDIF_SDIF_WRN_WRITE_ACCESS 1u
#define VM_COMMON_IP_SDIF_SDIF_WRN_RESET 0x0u
#define VM_COMMON_IP_SDIF_SDIF_WRN_FIELD_MASK 0x08000000ul
#define VM_COMMON_IP_SDIF_SDIF_WRN_GET(x) (((x) & 0x08000000ul) >> 27)
#define VM_COMMON_IP_SDIF_SDIF_WRN_SET(x) (((x) << 27) & 0x08000000ul)
#define VM_COMMON_IP_SDIF_SDIF_WRN_MODIFY(r, x) \
   ((((x) << 27) & 0x08000000ul) | ((r) & 0xf7fffffful))
/* Field member: vm_common_ip::sdif.sdif_addr                              */
#define VM_COMMON_IP_SDIF_SDIF_ADDR_MSB 26u
#define VM_COMMON_IP_SDIF_SDIF_ADDR_LSB 24u
#define VM_COMMON_IP_SDIF_SDIF_ADDR_WIDTH 3u
#define VM_COMMON_IP_SDIF_SDIF_ADDR_READ_ACCESS 1u
#define VM_COMMON_IP_SDIF_SDIF_ADDR_WRITE_ACCESS 1u
#define VM_COMMON_IP_SDIF_SDIF_ADDR_RESET 0x0u
#define VM_COMMON_IP_SDIF_SDIF_ADDR_FIELD_MASK 0x07000000ul
#define VM_COMMON_IP_SDIF_SDIF_ADDR_GET(x) (((x) & 0x07000000ul) >> 24)
#define VM_COMMON_IP_SDIF_SDIF_ADDR_SET(x) (((x) << 24) & 0x07000000ul)
#define VM_COMMON_IP_SDIF_SDIF_ADDR_MODIFY(r, x) \
   ((((x) << 24) & 0x07000000ul) | ((r) & 0xf8fffffful))
/* Field member: vm_common_ip::sdif.sdif_data                              */
#define VM_COMMON_IP_SDIF_SDIF_DATA_MSB 23u
#define VM_COMMON_IP_SDIF_SDIF_DATA_LSB 0u
#define VM_COMMON_IP_SDIF_SDIF_DATA_WIDTH 24u
#define VM_COMMON_IP_SDIF_SDIF_DATA_READ_ACCESS 1u
#define VM_COMMON_IP_SDIF_SDIF_DATA_WRITE_ACCESS 1u
#define VM_COMMON_IP_SDIF_SDIF_DATA_RESET 0x000000ul
#define VM_COMMON_IP_SDIF_SDIF_DATA_FIELD_MASK 0x00fffffful
#define VM_COMMON_IP_SDIF_SDIF_DATA_GET(x) ((x) & 0x00fffffful)
#define VM_COMMON_IP_SDIF_SDIF_DATA_SET(x) ((x) & 0x00fffffful)
#define VM_COMMON_IP_SDIF_SDIF_DATA_MODIFY(r, x) \
   (((x) & 0x00fffffful) | ((r) & 0xff000000ul))

/* Register type: vm_common_ip::sdif_halt                                  */
/* Register template: vm_common_ip::sdif_halt                              */
/* Field member: vm_common_ip::sdif_halt.sdif_stop                         */
#define VM_COMMON_IP_SDIF_HALT_SDIF_STOP_MSB 0u
#define VM_COMMON_IP_SDIF_HALT_SDIF_STOP_LSB 0u
#define VM_COMMON_IP_SDIF_HALT_SDIF_STOP_WIDTH 1u
#define VM_COMMON_IP_SDIF_HALT_SDIF_STOP_READ_ACCESS 0u
#define VM_COMMON_IP_SDIF_HALT_SDIF_STOP_WRITE_ACCESS 1u
#define VM_COMMON_IP_SDIF_HALT_SDIF_STOP_RESET 0x0u
#define VM_COMMON_IP_SDIF_HALT_SDIF_STOP_FIELD_MASK 0x00000001ul
#define VM_COMMON_IP_SDIF_HALT_SDIF_STOP_GET(x) ((x) & 0x00000001ul)
#define VM_COMMON_IP_SDIF_HALT_SDIF_STOP_SET(x) ((x) & 0x00000001ul)
#define VM_COMMON_IP_SDIF_HALT_SDIF_STOP_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: vm_common_ip::sdif_ctrl                                  */
/* Register template: vm_common_ip::sdif_ctrl                              */
/* Field member: vm_common_ip::sdif_ctrl.sdif_inhibit                      */
#define VM_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_MSB 1u
#define VM_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_LSB 0u
#define VM_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_WIDTH 2u
#define VM_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_READ_ACCESS 1u
#define VM_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_WRITE_ACCESS 1u
#define VM_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_RESET 0x0u
#define VM_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_FIELD_MASK 0x00000003ul
#define VM_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_GET(x) ((x) & 0x00000003ul)
#define VM_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_SET(x) ((x) & 0x00000003ul)
#define VM_COMMON_IP_SDIF_CTRL_SDIF_INHIBIT_MODIFY(r, x) \
   (((x) & 0x00000003ul) | ((r) & 0xfffffffcul))

/* Register type: vm_common_ip::smpl_ctrl                                  */
/* Register template: vm_common_ip::smpl_ctrl                              */
/* Field member: vm_common_ip::smpl_ctrl.smpl_discard                      */
#define VM_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_MSB 2u
#define VM_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_LSB 2u
#define VM_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_WIDTH 1u
#define VM_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_READ_ACCESS 1u
#define VM_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_WRITE_ACCESS 1u
#define VM_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_RESET 0x0u
#define VM_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_FIELD_MASK 0x00000004ul
#define VM_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_GET(x) \
   (((x) & 0x00000004ul) >> 2)
#define VM_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_SET(x) \
   (((x) << 2) & 0x00000004ul)
#define VM_COMMON_IP_SMPL_CTRL_SMPL_DISCARD_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004ul) | ((r) & 0xfffffffbul))
/* Field member: vm_common_ip::smpl_ctrl.smpl_ctr_hold                     */
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_MSB 1u
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_LSB 1u
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_WIDTH 1u
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_READ_ACCESS 1u
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_WRITE_ACCESS 1u
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_RESET 0x0u
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_FIELD_MASK 0x00000002ul
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_HOLD_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: vm_common_ip::smpl_ctrl.smpl_ctr_disable                  */
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_MSB 0u
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_LSB 0u
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_WIDTH 1u
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_READ_ACCESS 1u
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_WRITE_ACCESS 1u
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_RESET 0x0u
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_FIELD_MASK 0x00000001ul
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_GET(x) ((x) & 0x00000001ul)
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_SET(x) ((x) & 0x00000001ul)
#define VM_COMMON_IP_SMPL_CTRL_SMPL_CTR_DISABLE_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: vm_common_ip::smpl_clr                                   */
/* Register template: vm_common_ip::smpl_clr                               */
/* Field member: vm_common_ip::smpl_clr.smpl_ctr_clear                     */
#define VM_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_MSB 0u
#define VM_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_LSB 0u
#define VM_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_WIDTH 1u
#define VM_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_READ_ACCESS 0u
#define VM_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_WRITE_ACCESS 1u
#define VM_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_RESET 0x0u
#define VM_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_FIELD_MASK 0x00000001ul
#define VM_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_GET(x) ((x) & 0x00000001ul)
#define VM_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_SET(x) ((x) & 0x00000001ul)
#define VM_COMMON_IP_SMPL_CLR_SMPL_CTR_CLEAR_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: vm_common_ip::smpl_cnt                                   */
/* Register template: vm_common_ip::smpl_cnt                               */
/* Field member: vm_common_ip::smpl_cnt.smpl_count                         */
#define VM_COMMON_IP_SMPL_CNT_SMPL_COUNT_MSB 15u
#define VM_COMMON_IP_SMPL_CNT_SMPL_COUNT_LSB 0u
#define VM_COMMON_IP_SMPL_CNT_SMPL_COUNT_WIDTH 16u
#define VM_COMMON_IP_SMPL_CNT_SMPL_COUNT_READ_ACCESS 1u
#define VM_COMMON_IP_SMPL_CNT_SMPL_COUNT_WRITE_ACCESS 0u
#define VM_COMMON_IP_SMPL_CNT_SMPL_COUNT_RESET 0x0000u
#define VM_COMMON_IP_SMPL_CNT_SMPL_COUNT_FIELD_MASK 0x0000fffful
#define VM_COMMON_IP_SMPL_CNT_SMPL_COUNT_GET(x) ((x) & 0x0000fffful)
#define VM_COMMON_IP_SMPL_CNT_SMPL_COUNT_SET(x) ((x) & 0x0000fffful)
#define VM_COMMON_IP_SMPL_CNT_SMPL_COUNT_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Addressmap type: vm_individual_ip                                       */
/* Addressmap template: vm_individual_ip                                   */
#define VM_INDIVIDUAL_IP_SIZE 0x200u
#define VM_INDIVIDUAL_IP_BYTE_SIZE 0x200u
/* Register member: vm_individual_ip.irq_enable                            */
/* Register type referenced: vm_individual_ip::irq_enable                  */
/* Register template referenced: vm_individual_ip::irq_enable              */
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_OFFSET 0x0u
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_BYTE_OFFSET 0x0u
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_RESET_VALUE 0x00000000ul
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_RESET_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_READ_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_WRITE_MASK 0x00000003ul
/* Register member: vm_individual_ip.irq_status                            */
/* Register type referenced: vm_individual_ip::irq_status                  */
/* Register template referenced: vm_individual_ip::irq_status              */
#define VM_INDIVIDUAL_IP_IRQ_STATUS_OFFSET 0x4u
#define VM_INDIVIDUAL_IP_IRQ_STATUS_BYTE_OFFSET 0x4u
#define VM_INDIVIDUAL_IP_IRQ_STATUS_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_STATUS_WRITE_ACCESS 0u
#define VM_INDIVIDUAL_IP_IRQ_STATUS_RESET_VALUE 0x00000000ul
#define VM_INDIVIDUAL_IP_IRQ_STATUS_RESET_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_STATUS_READ_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_STATUS_WRITE_MASK 0x00000000ul
/* Register member: vm_individual_ip.irq_clr                               */
/* Register type referenced: vm_individual_ip::irq_clr                     */
/* Register template referenced: vm_individual_ip::irq_clr                 */
#define VM_INDIVIDUAL_IP_IRQ_CLR_OFFSET 0x8u
#define VM_INDIVIDUAL_IP_IRQ_CLR_BYTE_OFFSET 0x8u
#define VM_INDIVIDUAL_IP_IRQ_CLR_READ_ACCESS 0u
#define VM_INDIVIDUAL_IP_IRQ_CLR_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_CLR_RESET_VALUE 0x00000000ul
#define VM_INDIVIDUAL_IP_IRQ_CLR_RESET_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_CLR_READ_MASK 0x00000000ul
#define VM_INDIVIDUAL_IP_IRQ_CLR_WRITE_MASK 0x00000003ul
/* Register member: vm_individual_ip.irq_test                              */
/* Register type referenced: vm_individual_ip::irq_test                    */
/* Register template referenced: vm_individual_ip::irq_test                */
#define VM_INDIVIDUAL_IP_IRQ_TEST_OFFSET 0xcu
#define VM_INDIVIDUAL_IP_IRQ_TEST_BYTE_OFFSET 0xcu
#define VM_INDIVIDUAL_IP_IRQ_TEST_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_TEST_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_TEST_RESET_VALUE 0x00000000ul
#define VM_INDIVIDUAL_IP_IRQ_TEST_RESET_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_TEST_READ_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_TEST_WRITE_MASK 0x00000003ul
/* Register member: vm_individual_ip.irq_alarma_enable                     */
/* Register type referenced: vm_individual_ip::irq_alarma_enable           */
/* Register template referenced: vm_individual_ip::irq_alarma_enable       */
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_ENABLE_OFFSET 0x10u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_ENABLE_BYTE_OFFSET 0x10u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_ENABLE_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_ENABLE_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_ENABLE_RESET_VALUE 0x00000000ul
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_ENABLE_RESET_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_ENABLE_READ_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_ENABLE_WRITE_MASK 0x0000fffful
/* Register member: vm_individual_ip.irq_alarma_status                     */
/* Register type referenced: vm_individual_ip::irq_alarma_status           */
/* Register template referenced: vm_individual_ip::irq_alarma_status       */
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_STATUS_OFFSET 0x14u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_STATUS_BYTE_OFFSET 0x14u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_STATUS_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_STATUS_WRITE_ACCESS 0u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_STATUS_RESET_VALUE 0x00000000ul
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_STATUS_RESET_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_STATUS_READ_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_STATUS_WRITE_MASK 0x00000000ul
/* Register member: vm_individual_ip.irq_alarma_clr                        */
/* Register type referenced: vm_individual_ip::irq_alarma_clr              */
/* Register template referenced: vm_individual_ip::irq_alarma_clr          */
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_CLR_OFFSET 0x18u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_CLR_BYTE_OFFSET 0x18u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_CLR_READ_ACCESS 0u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_CLR_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_CLR_RESET_VALUE 0x00000000ul
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_CLR_RESET_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_CLR_READ_MASK 0x00000000ul
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_CLR_WRITE_MASK 0x0000fffful
/* Register member: vm_individual_ip.irq_alarma_test                       */
/* Register type referenced: vm_individual_ip::irq_alarma_test             */
/* Register template referenced: vm_individual_ip::irq_alarma_test         */
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_TEST_OFFSET 0x1cu
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_TEST_BYTE_OFFSET 0x1cu
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_TEST_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_TEST_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_TEST_RESET_VALUE 0x00000000ul
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_TEST_RESET_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_TEST_READ_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_TEST_WRITE_MASK 0x0000fffful
/* Register member: vm_individual_ip.irq_alarmb_enable                     */
/* Register type referenced: vm_individual_ip::irq_alarmb_enable           */
/* Register template referenced: vm_individual_ip::irq_alarmb_enable       */
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_ENABLE_OFFSET 0x20u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_ENABLE_BYTE_OFFSET 0x20u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_ENABLE_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_ENABLE_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_ENABLE_RESET_VALUE 0x00000000ul
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_ENABLE_RESET_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_ENABLE_READ_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_ENABLE_WRITE_MASK 0x0000fffful
/* Register member: vm_individual_ip.irq_alarmb_status                     */
/* Register type referenced: vm_individual_ip::irq_alarmb_status           */
/* Register template referenced: vm_individual_ip::irq_alarmb_status       */
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_STATUS_OFFSET 0x24u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_STATUS_BYTE_OFFSET 0x24u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_STATUS_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_STATUS_WRITE_ACCESS 0u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_STATUS_RESET_VALUE 0x00000000ul
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_STATUS_RESET_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_STATUS_READ_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_STATUS_WRITE_MASK 0x00000000ul
/* Register member: vm_individual_ip.irq_alarmb_clr                        */
/* Register type referenced: vm_individual_ip::irq_alarmb_clr              */
/* Register template referenced: vm_individual_ip::irq_alarmb_clr          */
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_CLR_OFFSET 0x28u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_CLR_BYTE_OFFSET 0x28u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_CLR_READ_ACCESS 0u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_CLR_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_CLR_RESET_VALUE 0x00000000ul
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_CLR_RESET_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_CLR_READ_MASK 0x00000000ul
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_CLR_WRITE_MASK 0x0000fffful
/* Register member: vm_individual_ip.irq_alarmb_test                       */
/* Register type referenced: vm_individual_ip::irq_alarmb_test             */
/* Register template referenced: vm_individual_ip::irq_alarmb_test         */
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_TEST_OFFSET 0x2cu
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_TEST_BYTE_OFFSET 0x2cu
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_TEST_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_TEST_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_TEST_RESET_VALUE 0x00000000ul
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_TEST_RESET_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_TEST_READ_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_TEST_WRITE_MASK 0x0000fffful
/* Register member: vm_individual_ip.sdif_rdata                            */
/* Register type referenced: vm_individual_ip::sdif_rdata                  */
/* Register template referenced: vm_individual_ip::sdif_rdata              */
#define VM_INDIVIDUAL_IP_SDIF_RDATA_OFFSET 0x30u
#define VM_INDIVIDUAL_IP_SDIF_RDATA_BYTE_OFFSET 0x30u
#define VM_INDIVIDUAL_IP_SDIF_RDATA_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_SDIF_RDATA_WRITE_ACCESS 0u
#define VM_INDIVIDUAL_IP_SDIF_RDATA_RESET_VALUE 0x00000000ul
#define VM_INDIVIDUAL_IP_SDIF_RDATA_RESET_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_SDIF_RDATA_READ_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_SDIF_RDATA_WRITE_MASK 0x00000000ul
/* Register member: vm_individual_ip.sdif_done                             */
/* Register type referenced: vm_individual_ip::sdif_done                   */
/* Register template referenced: vm_individual_ip::sdif_done               */
#define VM_INDIVIDUAL_IP_SDIF_DONE_OFFSET 0x34u
#define VM_INDIVIDUAL_IP_SDIF_DONE_BYTE_OFFSET 0x34u
#define VM_INDIVIDUAL_IP_SDIF_DONE_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_SDIF_DONE_WRITE_ACCESS 0u
#define VM_INDIVIDUAL_IP_SDIF_DONE_RESET_VALUE 0x00000000ul
#define VM_INDIVIDUAL_IP_SDIF_DONE_RESET_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_SDIF_DONE_READ_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_SDIF_DONE_WRITE_MASK 0x00000000ul
/* Register member: vm_individual_ip.sdif_data                             */
/* Register type referenced: vm_individual_ip::sdif_data                   */
/* Register template referenced: vm_individual_ip::sdif_data               */
#define VM_INDIVIDUAL_IP_SDIF_DATA_OFFSET 0x40u
#define VM_INDIVIDUAL_IP_SDIF_DATA_BYTE_OFFSET 0x40u
#define VM_INDIVIDUAL_IP_SDIF_DATA_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_SDIF_DATA_WRITE_ACCESS 0u
#define VM_INDIVIDUAL_IP_SDIF_DATA_RESET_VALUE 0x00000000ul
#define VM_INDIVIDUAL_IP_SDIF_DATA_RESET_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_SDIF_DATA_READ_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_SDIF_DATA_WRITE_MASK 0x00000000ul
/* Group member: vm_individual_ip.alarm_and_hilo                           */
/* Group type referenced: vm_individual_ip::alarm_and_hilo                 */
/* Group template referenced: vm_individual_ip::alarm_and_hilo             */
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_OFFSET 0x80u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_BYTE_OFFSET 0x80u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_WRITE_ACCESS 1u

/* Register type: vm_individual_ip::irq_enable                             */
/* Register template: vm_individual_ip::irq_enable                         */
/* Field member: vm_individual_ip::irq_enable.irq_en_done                  */
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_MSB 1u
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_LSB 1u
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_WIDTH 1u
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_RESET 0x0u
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_FIELD_MASK 0x00000002ul
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_DONE_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: vm_individual_ip::irq_enable.irq_en_fault                 */
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_MSB 0u
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_LSB 0u
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_WIDTH 1u
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_RESET 0x0u
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_FIELD_MASK 0x00000001ul
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_GET(x) ((x) & 0x00000001ul)
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_SET(x) ((x) & 0x00000001ul)
#define VM_INDIVIDUAL_IP_IRQ_ENABLE_IRQ_EN_FAULT_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: vm_individual_ip::irq_status                             */
/* Register template: vm_individual_ip::irq_status                         */
/* Field member: vm_individual_ip::irq_status.irq_status_done              */
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_MSB 1u
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_LSB 1u
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_WIDTH 1u
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_WRITE_ACCESS 0u
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_RESET 0x0u
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_FIELD_MASK 0x00000002ul
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_DONE_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: vm_individual_ip::irq_status.irq_status_fault             */
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_MSB 0u
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_LSB 0u
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_WIDTH 1u
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_WRITE_ACCESS 0u
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_RESET 0x0u
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_FIELD_MASK 0x00000001ul
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_GET(x) \
   ((x) & 0x00000001ul)
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_SET(x) \
   ((x) & 0x00000001ul)
#define VM_INDIVIDUAL_IP_IRQ_STATUS_IRQ_STATUS_FAULT_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: vm_individual_ip::irq_clr                                */
/* Register template: vm_individual_ip::irq_clr                            */
/* Field member: vm_individual_ip::irq_clr.irq_clr_done                    */
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_MSB 1u
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_LSB 1u
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_WIDTH 1u
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_READ_ACCESS 0u
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_RESET 0x0u
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_FIELD_MASK 0x00000002ul
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_DONE_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: vm_individual_ip::irq_clr.irq_clr_fault                   */
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_MSB 0u
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_LSB 0u
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_WIDTH 1u
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_READ_ACCESS 0u
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_RESET 0x0u
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_FIELD_MASK 0x00000001ul
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_GET(x) ((x) & 0x00000001ul)
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_SET(x) ((x) & 0x00000001ul)
#define VM_INDIVIDUAL_IP_IRQ_CLR_IRQ_CLR_FAULT_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: vm_individual_ip::irq_test                               */
/* Register template: vm_individual_ip::irq_test                           */
/* Field member: vm_individual_ip::irq_test.irq_test_done                  */
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_MSB 1u
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_LSB 1u
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_WIDTH 1u
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_RESET 0x0u
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_FIELD_MASK 0x00000002ul
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_DONE_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: vm_individual_ip::irq_test.irq_test_fault                 */
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_MSB 0u
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_LSB 0u
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_WIDTH 1u
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_RESET 0x0u
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_FIELD_MASK 0x00000001ul
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_GET(x) ((x) & 0x00000001ul)
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_SET(x) ((x) & 0x00000001ul)
#define VM_INDIVIDUAL_IP_IRQ_TEST_IRQ_TEST_FAULT_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: vm_individual_ip::irq_alarma_enable                      */
/* Register template: vm_individual_ip::irq_alarma_enable                  */
/* Field member: vm_individual_ip::irq_alarma_enable.irq_en_alarma         */
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_ENABLE_IRQ_EN_ALARMA_MSB 15u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_ENABLE_IRQ_EN_ALARMA_LSB 0u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_ENABLE_IRQ_EN_ALARMA_WIDTH 16u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_ENABLE_IRQ_EN_ALARMA_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_ENABLE_IRQ_EN_ALARMA_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_ENABLE_IRQ_EN_ALARMA_RESET 0x0000u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_ENABLE_IRQ_EN_ALARMA_FIELD_MASK 0x0000fffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_ENABLE_IRQ_EN_ALARMA_GET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_ENABLE_IRQ_EN_ALARMA_SET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_ENABLE_IRQ_EN_ALARMA_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: vm_individual_ip::irq_alarma_status                      */
/* Register template: vm_individual_ip::irq_alarma_status                  */
/* Field member: vm_individual_ip::irq_alarma_status.irq_status_alarma     */
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_STATUS_IRQ_STATUS_ALARMA_MSB 15u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_STATUS_IRQ_STATUS_ALARMA_LSB 0u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_STATUS_IRQ_STATUS_ALARMA_WIDTH 16u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_STATUS_IRQ_STATUS_ALARMA_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_STATUS_IRQ_STATUS_ALARMA_WRITE_ACCESS 0u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_STATUS_IRQ_STATUS_ALARMA_RESET 0x0000u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_STATUS_IRQ_STATUS_ALARMA_FIELD_MASK 0x0000fffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_STATUS_IRQ_STATUS_ALARMA_GET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_STATUS_IRQ_STATUS_ALARMA_SET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_STATUS_IRQ_STATUS_ALARMA_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: vm_individual_ip::irq_alarma_clr                         */
/* Register template: vm_individual_ip::irq_alarma_clr                     */
/* Field member: vm_individual_ip::irq_alarma_clr.irq_clr_alarma           */
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_CLR_IRQ_CLR_ALARMA_MSB 15u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_CLR_IRQ_CLR_ALARMA_LSB 0u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_CLR_IRQ_CLR_ALARMA_WIDTH 16u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_CLR_IRQ_CLR_ALARMA_READ_ACCESS 0u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_CLR_IRQ_CLR_ALARMA_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_CLR_IRQ_CLR_ALARMA_RESET 0x0000u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_CLR_IRQ_CLR_ALARMA_FIELD_MASK 0x0000fffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_CLR_IRQ_CLR_ALARMA_GET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_CLR_IRQ_CLR_ALARMA_SET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_CLR_IRQ_CLR_ALARMA_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: vm_individual_ip::irq_alarma_test                        */
/* Register template: vm_individual_ip::irq_alarma_test                    */
/* Field member: vm_individual_ip::irq_alarma_test.irq_test_alarma         */
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_TEST_IRQ_TEST_ALARMA_MSB 15u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_TEST_IRQ_TEST_ALARMA_LSB 0u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_TEST_IRQ_TEST_ALARMA_WIDTH 16u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_TEST_IRQ_TEST_ALARMA_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_TEST_IRQ_TEST_ALARMA_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_TEST_IRQ_TEST_ALARMA_RESET 0x0000u
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_TEST_IRQ_TEST_ALARMA_FIELD_MASK 0x0000fffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_TEST_IRQ_TEST_ALARMA_GET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_TEST_IRQ_TEST_ALARMA_SET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_IRQ_ALARMA_TEST_IRQ_TEST_ALARMA_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: vm_individual_ip::irq_alarmb_enable                      */
/* Register template: vm_individual_ip::irq_alarmb_enable                  */
/* Field member: vm_individual_ip::irq_alarmb_enable.irq_en_alarmb         */
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_ENABLE_IRQ_EN_ALARMB_MSB 15u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_ENABLE_IRQ_EN_ALARMB_LSB 0u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_ENABLE_IRQ_EN_ALARMB_WIDTH 16u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_ENABLE_IRQ_EN_ALARMB_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_ENABLE_IRQ_EN_ALARMB_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_ENABLE_IRQ_EN_ALARMB_RESET 0x0000u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_ENABLE_IRQ_EN_ALARMB_FIELD_MASK 0x0000fffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_ENABLE_IRQ_EN_ALARMB_GET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_ENABLE_IRQ_EN_ALARMB_SET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_ENABLE_IRQ_EN_ALARMB_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: vm_individual_ip::irq_alarmb_status                      */
/* Register template: vm_individual_ip::irq_alarmb_status                  */
/* Field member: vm_individual_ip::irq_alarmb_status.irq_status_alarmb     */
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_STATUS_IRQ_STATUS_ALARMB_MSB 15u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_STATUS_IRQ_STATUS_ALARMB_LSB 0u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_STATUS_IRQ_STATUS_ALARMB_WIDTH 16u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_STATUS_IRQ_STATUS_ALARMB_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_STATUS_IRQ_STATUS_ALARMB_WRITE_ACCESS 0u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_STATUS_IRQ_STATUS_ALARMB_RESET 0x0000u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_STATUS_IRQ_STATUS_ALARMB_FIELD_MASK 0x0000fffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_STATUS_IRQ_STATUS_ALARMB_GET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_STATUS_IRQ_STATUS_ALARMB_SET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_STATUS_IRQ_STATUS_ALARMB_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: vm_individual_ip::irq_alarmb_clr                         */
/* Register template: vm_individual_ip::irq_alarmb_clr                     */
/* Field member: vm_individual_ip::irq_alarmb_clr.irq_clr_alarmb           */
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_CLR_IRQ_CLR_ALARMB_MSB 15u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_CLR_IRQ_CLR_ALARMB_LSB 0u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_CLR_IRQ_CLR_ALARMB_WIDTH 16u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_CLR_IRQ_CLR_ALARMB_READ_ACCESS 0u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_CLR_IRQ_CLR_ALARMB_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_CLR_IRQ_CLR_ALARMB_RESET 0x0000u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_CLR_IRQ_CLR_ALARMB_FIELD_MASK 0x0000fffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_CLR_IRQ_CLR_ALARMB_GET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_CLR_IRQ_CLR_ALARMB_SET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_CLR_IRQ_CLR_ALARMB_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: vm_individual_ip::irq_alarmb_test                        */
/* Register template: vm_individual_ip::irq_alarmb_test                    */
/* Field member: vm_individual_ip::irq_alarmb_test.irq_test_alarmb         */
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_TEST_IRQ_TEST_ALARMB_MSB 15u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_TEST_IRQ_TEST_ALARMB_LSB 0u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_TEST_IRQ_TEST_ALARMB_WIDTH 16u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_TEST_IRQ_TEST_ALARMB_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_TEST_IRQ_TEST_ALARMB_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_TEST_IRQ_TEST_ALARMB_RESET 0x0000u
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_TEST_IRQ_TEST_ALARMB_FIELD_MASK 0x0000fffful
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_TEST_IRQ_TEST_ALARMB_GET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_TEST_IRQ_TEST_ALARMB_SET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_IRQ_ALARMB_TEST_IRQ_TEST_ALARMB_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: vm_individual_ip::sdif_rdata                             */
/* Register template: vm_individual_ip::sdif_rdata                         */
/* Field member: vm_individual_ip::sdif_rdata.sdif_rdata                   */
#define VM_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_MSB 23u
#define VM_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_LSB 0u
#define VM_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_WIDTH 24u
#define VM_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_WRITE_ACCESS 0u
#define VM_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_RESET 0x000000ul
#define VM_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_FIELD_MASK 0x00fffffful
#define VM_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_GET(x) ((x) & 0x00fffffful)
#define VM_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_SET(x) ((x) & 0x00fffffful)
#define VM_INDIVIDUAL_IP_SDIF_RDATA_SDIF_RDATA_MODIFY(r, x) \
   (((x) & 0x00fffffful) | ((r) & 0xff000000ul))

/* Register type: vm_individual_ip::sdif_done                              */
/* Register template: vm_individual_ip::sdif_done                          */
/* Field member: vm_individual_ip::sdif_done.sdif_smpl_done                */
#define VM_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_MSB 0u
#define VM_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_LSB 0u
#define VM_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_WIDTH 1u
#define VM_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_WRITE_ACCESS 0u
#define VM_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_RESET 0x0u
#define VM_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_FIELD_MASK 0x00000001ul
#define VM_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_GET(x) ((x) & 0x00000001ul)
#define VM_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_SET(x) ((x) & 0x00000001ul)
#define VM_INDIVIDUAL_IP_SDIF_DONE_SDIF_SMPL_DONE_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: vm_individual_ip::sdif_data                              */
/* Register template: vm_individual_ip::sdif_data                          */
/* Field member: vm_individual_ip::sdif_data.fault                         */
#define VM_INDIVIDUAL_IP_SDIF_DATA_FAULT_MSB 17u
#define VM_INDIVIDUAL_IP_SDIF_DATA_FAULT_LSB 17u
#define VM_INDIVIDUAL_IP_SDIF_DATA_FAULT_WIDTH 1u
#define VM_INDIVIDUAL_IP_SDIF_DATA_FAULT_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_SDIF_DATA_FAULT_WRITE_ACCESS 0u
#define VM_INDIVIDUAL_IP_SDIF_DATA_FAULT_RESET 0x0u
#define VM_INDIVIDUAL_IP_SDIF_DATA_FAULT_FIELD_MASK 0x00020000ul
#define VM_INDIVIDUAL_IP_SDIF_DATA_FAULT_GET(x) (((x) & 0x00020000ul) >> 17)
#define VM_INDIVIDUAL_IP_SDIF_DATA_FAULT_SET(x) \
   (((x) << 17) & 0x00020000ul)
#define VM_INDIVIDUAL_IP_SDIF_DATA_FAULT_MODIFY(r, x) \
   ((((x) << 17) & 0x00020000ul) | ((r) & 0xfffdfffful))
/* Field member: vm_individual_ip::sdif_data.type                          */
#define VM_INDIVIDUAL_IP_SDIF_DATA_TYPE_MSB 16u
#define VM_INDIVIDUAL_IP_SDIF_DATA_TYPE_LSB 16u
#define VM_INDIVIDUAL_IP_SDIF_DATA_TYPE_WIDTH 1u
#define VM_INDIVIDUAL_IP_SDIF_DATA_TYPE_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_SDIF_DATA_TYPE_WRITE_ACCESS 0u
#define VM_INDIVIDUAL_IP_SDIF_DATA_TYPE_RESET 0x0u
#define VM_INDIVIDUAL_IP_SDIF_DATA_TYPE_FIELD_MASK 0x00010000ul
#define VM_INDIVIDUAL_IP_SDIF_DATA_TYPE_GET(x) (((x) & 0x00010000ul) >> 16)
#define VM_INDIVIDUAL_IP_SDIF_DATA_TYPE_SET(x) (((x) << 16) & 0x00010000ul)
#define VM_INDIVIDUAL_IP_SDIF_DATA_TYPE_MODIFY(r, x) \
   ((((x) << 16) & 0x00010000ul) | ((r) & 0xfffefffful))
/* Field member: vm_individual_ip::sdif_data.sample_data                   */
#define VM_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_MSB 15u
#define VM_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_LSB 0u
#define VM_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_WIDTH 16u
#define VM_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_WRITE_ACCESS 0u
#define VM_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_RESET 0x0000u
#define VM_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_FIELD_MASK 0x0000fffful
#define VM_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_GET(x) ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_SET(x) ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_SDIF_DATA_SAMPLE_DATA_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Group type: vm_individual_ip::alarm_and_hilo                            */
/* Group template: vm_individual_ip::alarm_and_hilo                        */
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SIZE 0x10u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_BYTE_SIZE 0x10u
/* Register member: vm_individual_ip::alarm_and_hilo.alarma_cfg            */
/* Register type referenced: vm_individual_ip::alarm_and_hilo::alarma_cfg  */
/* Register template referenced: vm_individual_ip::alarm_and_hilo::alarma_cfg */
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_OFFSET 0x0u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_BYTE_OFFSET 0x0u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_RESET_VALUE 0x00000000ul
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_RESET_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_READ_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_WRITE_MASK 0xfffffffful
/* Register member: vm_individual_ip::alarm_and_hilo.alarmb_cfg            */
/* Register type referenced: vm_individual_ip::alarm_and_hilo::alarmb_cfg  */
/* Register template referenced: vm_individual_ip::alarm_and_hilo::alarmb_cfg */
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_OFFSET 0x4u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_BYTE_OFFSET 0x4u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_RESET_VALUE 0x00000000ul
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_RESET_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_READ_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_WRITE_MASK 0xfffffffful
/* Register member: vm_individual_ip::alarm_and_hilo.smpl_hilo             */
/* Register type referenced: vm_individual_ip::alarm_and_hilo::smpl_hilo   */
/* Register template referenced: vm_individual_ip::alarm_and_hilo::smpl_hilo */
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_OFFSET 0x8u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_BYTE_OFFSET 0x8u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_WRITE_ACCESS 0u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_RESET_VALUE 0x00000000ul
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_RESET_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_READ_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_WRITE_MASK 0x00000000ul
/* Register member: vm_individual_ip::alarm_and_hilo.hilo_reset            */
/* Register type referenced: vm_individual_ip::alarm_and_hilo::hilo_reset  */
/* Register template referenced: vm_individual_ip::alarm_and_hilo::hilo_reset */
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_OFFSET 0xcu
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_BYTE_OFFSET 0xcu
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_READ_ACCESS 0u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_RESET_VALUE 0x00000000ul
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_RESET_MASK 0xfffffffful
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_READ_MASK 0x00000000ul
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_WRITE_MASK 0x00000003ul

/* Register type: vm_individual_ip::alarm_and_hilo::alarma_cfg             */
/* Register template: vm_individual_ip::alarm_and_hilo::alarma_cfg         */
/* Field member: vm_individual_ip::alarm_and_hilo::alarma_cfg.alarm_thresh */
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_ALARM_THRESH_MSB 31u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_ALARM_THRESH_LSB 16u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_ALARM_THRESH_WIDTH 16u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_ALARM_THRESH_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_ALARM_THRESH_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_ALARM_THRESH_RESET 0x0000u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_ALARM_THRESH_FIELD_MASK 0xffff0000ul
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_ALARM_THRESH_GET(x) \
   (((x) & 0xffff0000ul) >> 16)
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_ALARM_THRESH_SET(x) \
   (((x) << 16) & 0xffff0000ul)
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_ALARM_THRESH_MODIFY(r, x) \
   ((((x) << 16) & 0xffff0000ul) | ((r) & 0x0000fffful))
/* Field member: vm_individual_ip::alarm_and_hilo::alarma_cfg.hyst_thresh  */
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_HYST_THRESH_MSB 15u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_HYST_THRESH_LSB 0u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_HYST_THRESH_WIDTH 16u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_HYST_THRESH_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_HYST_THRESH_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_HYST_THRESH_RESET 0x0000u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_HYST_THRESH_FIELD_MASK 0x0000fffful
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_HYST_THRESH_GET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_HYST_THRESH_SET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMA_CFG_HYST_THRESH_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: vm_individual_ip::alarm_and_hilo::alarmb_cfg             */
/* Register template: vm_individual_ip::alarm_and_hilo::alarmb_cfg         */
/* Field member: vm_individual_ip::alarm_and_hilo::alarmb_cfg.alarm_thresh */
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_ALARM_THRESH_MSB 31u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_ALARM_THRESH_LSB 16u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_ALARM_THRESH_WIDTH 16u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_ALARM_THRESH_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_ALARM_THRESH_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_ALARM_THRESH_RESET 0x0000u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_ALARM_THRESH_FIELD_MASK 0xffff0000ul
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_ALARM_THRESH_GET(x) \
   (((x) & 0xffff0000ul) >> 16)
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_ALARM_THRESH_SET(x) \
   (((x) << 16) & 0xffff0000ul)
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_ALARM_THRESH_MODIFY(r, x) \
   ((((x) << 16) & 0xffff0000ul) | ((r) & 0x0000fffful))
/* Field member: vm_individual_ip::alarm_and_hilo::alarmb_cfg.hyst_thresh  */
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_HYST_THRESH_MSB 15u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_HYST_THRESH_LSB 0u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_HYST_THRESH_WIDTH 16u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_HYST_THRESH_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_HYST_THRESH_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_HYST_THRESH_RESET 0x0000u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_HYST_THRESH_FIELD_MASK 0x0000fffful
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_HYST_THRESH_GET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_HYST_THRESH_SET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_ALARMB_CFG_HYST_THRESH_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: vm_individual_ip::alarm_and_hilo::smpl_hilo              */
/* Register template: vm_individual_ip::alarm_and_hilo::smpl_hilo          */
/* Field member: vm_individual_ip::alarm_and_hilo::smpl_hilo.smpl_hi       */
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_HI_MSB 31u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_HI_LSB 16u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_HI_WIDTH 16u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_HI_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_HI_WRITE_ACCESS 0u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_HI_RESET 0x0000u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_HI_FIELD_MASK 0xffff0000ul
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_HI_GET(x) \
   (((x) & 0xffff0000ul) >> 16)
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_HI_SET(x) \
   (((x) << 16) & 0xffff0000ul)
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_HI_MODIFY(r, x) \
   ((((x) << 16) & 0xffff0000ul) | ((r) & 0x0000fffful))
/* Field member: vm_individual_ip::alarm_and_hilo::smpl_hilo.smpl_lo       */
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_LO_MSB 15u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_LO_LSB 0u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_LO_WIDTH 16u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_LO_READ_ACCESS 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_LO_WRITE_ACCESS 0u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_LO_RESET 0x0000u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_LO_FIELD_MASK 0x0000fffful
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_LO_GET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_LO_SET(x) \
   ((x) & 0x0000fffful)
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_SMPL_HILO_SMPL_LO_MODIFY(r, x) \
   (((x) & 0x0000fffful) | ((r) & 0xffff0000ul))

/* Register type: vm_individual_ip::alarm_and_hilo::hilo_reset             */
/* Register template: vm_individual_ip::alarm_and_hilo::hilo_reset         */
/* Field member: vm_individual_ip::alarm_and_hilo::hilo_reset.smpl_hi_clr  */
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_HI_CLR_MSB 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_HI_CLR_LSB 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_HI_CLR_WIDTH 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_HI_CLR_READ_ACCESS 0u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_HI_CLR_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_HI_CLR_RESET 0x0u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_HI_CLR_FIELD_MASK 0x00000002ul
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_HI_CLR_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_HI_CLR_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_HI_CLR_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: vm_individual_ip::alarm_and_hilo::hilo_reset.smpl_lo_set  */
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_LO_SET_MSB 0u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_LO_SET_LSB 0u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_LO_SET_WIDTH 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_LO_SET_READ_ACCESS 0u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_LO_SET_WRITE_ACCESS 1u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_LO_SET_RESET 0x0u
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_LO_SET_FIELD_MASK 0x00000001ul
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_LO_SET_GET(x) \
   ((x) & 0x00000001ul)
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_LO_SET_SET(x) \
   ((x) & 0x00000001ul)
#define VM_INDIVIDUAL_IP_ALARM_AND_HILO_HILO_RESET_SMPL_LO_SET_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* ####################################################################### */
/*        TYPE DEFINITIONS                                                 */
/* ####################################################################### */

/* Typedef for Addressmap: common                                          */
typedef struct {
   volatile uint32_t pvt_comp_id; /**< Offset 0x0 (R) */
   volatile uint32_t pvt_ip_cfg; /**< Offset 0x4 (R) */
   volatile uint32_t pvt_ip_num; /**< Offset 0x8 (R/W) */
   volatile uint32_t pvt_tm_scratch; /**< Offset 0xc (R/W) */
   volatile uint32_t pvt_reg_lock; /**< Offset 0x10 (R/W) */
   volatile uint32_t pvt_reg_lock_status; /**< Offset 0x14 (R) */
   volatile uint32_t pvt_tam_status; /**< Offset 0x18 (R) */
   volatile uint32_t pvt_tam_clear; /**< Offset 0x1c (W) */
   volatile uint32_t pvt_tmr_ctrl; /**< Offset 0x20 (R/W) */
   volatile uint32_t pvt_tmr_status; /**< Offset 0x24 (R/W) */
   volatile uint32_t pvt_tmr_irq_clear; /**< Offset 0x28 (W) */
   volatile uint32_t pvt_tmr_irq_test; /**< Offset 0x2c (R/W) */
   uint8_t _pad0[0x10];
} Common, *PTR_Common;

/* Typedef for Addressmap: irq                                             */
typedef struct {
   volatile uint32_t irq_en; /**< Offset 0x0 (R/W) */
   uint8_t _pad0[0xc];
   volatile uint32_t irq_tr_mask; /**< Offset 0x10 (R/W) */
   volatile uint32_t irq_ts_mask; /**< Offset 0x14 (R/W) */
   volatile uint32_t irq_vm_mask; /**< Offset 0x18 (R/W) */
   volatile uint32_t irq_pd_mask; /**< Offset 0x1c (R/W) */
   volatile uint32_t irq_tr_status; /**< Offset 0x20 (R) */
   volatile uint32_t irq_ts_status; /**< Offset 0x24 (R) */
   volatile uint32_t irq_vm_status; /**< Offset 0x28 (R) */
   volatile uint32_t irq_pd_status; /**< Offset 0x2c (R) */
   volatile uint32_t irq_tr_raw_status; /**< Offset 0x30 (R) */
   volatile uint32_t irq_ts_raw_status; /**< Offset 0x34 (R) */
   volatile uint32_t irq_vm_raw_status; /**< Offset 0x38 (R) */
   volatile uint32_t irq_pd_raw_status; /**< Offset 0x3c (R) */
} Irq, *PTR_Irq;

/* Typedef for Addressmap: ts_common_ip                                    */
typedef struct {
   volatile uint32_t clk_synth; /**< Offset 0x0 (R/W) */
   volatile uint32_t sdif_disable; /**< Offset 0x4 (R/W) */
   volatile uint32_t sdif_status; /**< Offset 0x8 (R) */
   volatile uint32_t sdif; /**< Offset 0xc (R/W) */
   volatile uint32_t sdif_halt; /**< Offset 0x10 (W) */
   volatile uint32_t sdif_ctrl; /**< Offset 0x14 (R/W) */
   uint8_t _pad0[0x8];
   volatile uint32_t smpl_ctrl; /**< Offset 0x20 (R/W) */
   volatile uint32_t smpl_clr; /**< Offset 0x24 (W) */
   volatile uint32_t smpl_cnt; /**< Offset 0x28 (R) */
   uint8_t _pad1[0x14];
} Ts_common_ip, *PTR_Ts_common_ip;

/* Typedef for Addressmap: ts_pd_individual_ip                             */
typedef struct {
   volatile uint32_t irq_enable; /**< Offset 0x0 (R/W) */
   volatile uint32_t irq_status; /**< Offset 0x4 (R) */
   volatile uint32_t irq_clr; /**< Offset 0x8 (W) */
   volatile uint32_t irq_test; /**< Offset 0xc (R/W) */
   volatile uint32_t sdif_rdata; /**< Offset 0x10 (R) */
   volatile uint32_t sdif_done; /**< Offset 0x14 (R) */
   volatile uint32_t sdif_data; /**< Offset 0x18 (R) */
   uint8_t _pad0[0x4];
   volatile uint32_t alarma_cfg; /**< Offset 0x20 (R/W) */
   volatile uint32_t alarmb_cfg; /**< Offset 0x24 (R/W) */
   volatile uint32_t smpl_hilo; /**< Offset 0x28 (R) */
   volatile uint32_t hilo_reset; /**< Offset 0x2c (W) */
   uint8_t _pad1[0x10];
} Ts_pd_individual_ip, *PTR_Ts_pd_individual_ip;

/* Typedef for Addressmap: ts_ip                                           */
typedef struct {
   Ts_common_ip ts_common; /**< Offset 0x0 (R/W) */
   Ts_pd_individual_ip ts_individual[0x8]; /**< Offset 0x40 (R/W) */
} Ts_ip, *PTR_Ts_ip;

/* Typedef for Addressmap: pd_common_ip                                    */
typedef struct {
   volatile uint32_t clk_synth; /**< Offset 0x0 (R/W) */
   volatile uint32_t sdif_disable; /**< Offset 0x4 (R/W) */
   volatile uint32_t sdif_status; /**< Offset 0x8 (R) */
   volatile uint32_t sdif; /**< Offset 0xc (R/W) */
   volatile uint32_t sdif_halt; /**< Offset 0x10 (W) */
   volatile uint32_t sdif_ctrl; /**< Offset 0x14 (R/W) */
   uint8_t _pad0[0x8];
   volatile uint32_t smpl_ctrl; /**< Offset 0x20 (R/W) */
   volatile uint32_t smpl_clr; /**< Offset 0x24 (W) */
   volatile uint32_t smpl_cnt; /**< Offset 0x28 (R) */
   uint8_t _pad1[0x14];
} Pd_common_ip, *PTR_Pd_common_ip;

/* Typedef for Addressmap: pd_ip                                           */
typedef struct {
   Pd_common_ip pd_common; /**< Offset 0x0 (R/W) */
   Ts_pd_individual_ip pd_individual[0x8]; /**< Offset 0x40 (R/W) */
} Pd_ip, *PTR_Pd_ip;

/* Typedef for Addressmap: vm_common_ip                                    */
typedef struct {
   volatile uint32_t clk_synth; /**< Offset 0x0 (R/W) */
   volatile uint32_t sdif_disable; /**< Offset 0x4 (R/W) */
   volatile uint32_t sdif_status; /**< Offset 0x8 (R) */
   volatile uint32_t sdif; /**< Offset 0xc (R/W) */
   volatile uint32_t sdif_halt; /**< Offset 0x10 (W) */
   volatile uint32_t sdif_ctrl; /**< Offset 0x14 (R/W) */
   uint8_t _pad0[0x8];
   volatile uint32_t smpl_ctrl; /**< Offset 0x20 (R/W) */
   volatile uint32_t smpl_clr; /**< Offset 0x24 (W) */
   volatile uint32_t smpl_cnt; /**< Offset 0x28 (R) */
   uint8_t _pad1[0x1d4];
} Vm_common_ip, *PTR_Vm_common_ip;

/* Typedef for Group: vm_individual_ip::alarm_and_hilo                     */
typedef struct {
   volatile uint32_t alarma_cfg; /**< Offset 0x0 (R/W) */
   volatile uint32_t alarmb_cfg; /**< Offset 0x4 (R/W) */
   volatile uint32_t smpl_hilo; /**< Offset 0x8 (R) */
   volatile uint32_t hilo_reset; /**< Offset 0xc (W) */
} Vm_individual_ip_alarm_and_hilo, *PTR_Vm_individual_ip_alarm_and_hilo;

/* Typedef for Addressmap: vm_individual_ip                                */
typedef struct {
   volatile uint32_t irq_enable; /**< Offset 0x0 (R/W) */
   volatile uint32_t irq_status; /**< Offset 0x4 (R) */
   volatile uint32_t irq_clr; /**< Offset 0x8 (W) */
   volatile uint32_t irq_test; /**< Offset 0xc (R/W) */
   volatile uint32_t irq_alarma_enable; /**< Offset 0x10 (R/W) */
   volatile uint32_t irq_alarma_status; /**< Offset 0x14 (R) */
   volatile uint32_t irq_alarma_clr; /**< Offset 0x18 (W) */
   volatile uint32_t irq_alarma_test; /**< Offset 0x1c (R/W) */
   volatile uint32_t irq_alarmb_enable; /**< Offset 0x20 (R/W) */
   volatile uint32_t irq_alarmb_status; /**< Offset 0x24 (R) */
   volatile uint32_t irq_alarmb_clr; /**< Offset 0x28 (W) */
   volatile uint32_t irq_alarmb_test; /**< Offset 0x2c (R/W) */
   volatile uint32_t sdif_rdata; /**< Offset 0x30 (R) */
   volatile uint32_t sdif_done; /**< Offset 0x34 (R) */
   uint8_t _pad0[0x8];
   volatile uint32_t sdif_data[0x10]; /**< Offset 0x40 (R) */
   Vm_individual_ip_alarm_and_hilo alarm_and_hilo[0x10]; /**< Offset 0x80 (R/W) */
   uint8_t _pad1[0x80];
} Vm_individual_ip, *PTR_Vm_individual_ip;

/* Typedef for Addressmap: vm_ip                                           */
typedef struct {
   Vm_common_ip vm_common; /**< Offset 0x0 (R/W) */
   Vm_individual_ip vm_individual[0x2]; /**< Offset 0x200 (R/W) */
} Vm_ip, *PTR_Vm_ip;

/* Typedef for Addressmap: pvtc                                            */
typedef struct {
   Common common; /**< Offset 0x0 (R/W) */
   Irq irq; /**< Offset 0x40 (R/W) */
   Ts_ip ts; /**< Offset 0x80 (R/W) */
   uint8_t _pad0[0x40];
   Pd_ip pd; /**< Offset 0x300 (R/W) */
   uint8_t _pad1[0x2c0];
   Vm_ip vm; /**< Offset 0x800 (R/W) */
} Pvtc, *PTR_Pvtc;

#endif
