/* Copyright (c) 2025 Ainekko, Co. */
/* SPDX-License-Identifier: Apache-2.0 */
/*                                                                         */
/*                                                                         */
/* Generated by Semifore, Inc. csrCompile                                  */
/*    C Header output                                                      */

#ifndef _PVT_TS_H_
#define _PVT_TS_H_


/* ####################################################################### */
/*        ENUMERATION MACROS                                               */
/* ####################################################################### */

/* Enumeration: pvt_ts::RESOLUTION                                         */
#define PVT_TS_RESOLUTION_RES_12_BITS 0x0u
#define PVT_TS_RESOLUTION_RES_10_BITS 0x1u
#define PVT_TS_RESOLUTION_RES_8_BITS 0x2u

/* Enumeration: pvt_ts::RUN_MODE                                           */
#define PVT_TS_RUN_MODE_RUN_0 0x0u
#define PVT_TS_RUN_MODE_RUN_1 0x1u
#define PVT_TS_RUN_MODE_STATUS 0x4u
#define PVT_TS_RUN_MODE_CFG_R0 0x5u
#define PVT_TS_RUN_MODE_CFG_R1 0x6u
#define PVT_TS_RUN_MODE_CFG_R2 0x7u
#define PVT_TS_RUN_MODE_SIG 0x8u
#define PVT_TS_RUN_MODE_SIGN 0x9u
#define PVT_TS_RUN_MODE_RUN_SIG 0xau
#define PVT_TS_RUN_MODE_RUN_SIGN 0xbu


/* ####################################################################### */
/*        ADDRESS MACROS                                                   */
/* ####################################################################### */

/* Address Space for Addressmap: pvt_ts                                    */
/* Register: pvt_ts.cfg0                                                   */
#define PVT_TS_CFG0_ADDRESS 0x0ull
#define PVT_TS_CFG0_BYTE_ADDRESS 0x0ull


/* ####################################################################### */
/*        TEMPLATE MACROS                                                  */
/* ####################################################################### */

/* Addressmap type: pvt_ts                                                 */
/* Addressmap template: pvt_ts                                             */
#define PVT_TS_SIZE 0x1u
#define PVT_TS_BYTE_SIZE 0x1u
/* Register member: pvt_ts.cfg0                                            */
/* Register type referenced: pvt_ts::cfg0                                  */
/* Register template referenced: pvt_ts::cfg0                              */
#define PVT_TS_CFG0_OFFSET 0x0ull
#define PVT_TS_CFG0_BYTE_OFFSET 0x0ull
#define PVT_TS_CFG0_READ_ACCESS 1u
#define PVT_TS_CFG0_WRITE_ACCESS 1u
#define PVT_TS_CFG0_RESET_VALUE 0x00u
#define PVT_TS_CFG0_RESET_MASK 0xffu
#define PVT_TS_CFG0_READ_MASK 0xffu
#define PVT_TS_CFG0_WRITE_MASK 0x6fu

/* Register type: pvt_ts::cfg0                                             */
/* Register template: pvt_ts::cfg0                                         */
/* Field member: pvt_ts::cfg0.resolution                                   */
#define PVT_TS_CFG0_RESOLUTION_MSB 6u
#define PVT_TS_CFG0_RESOLUTION_LSB 5u
#define PVT_TS_CFG0_RESOLUTION_WIDTH 2u
#define PVT_TS_CFG0_RESOLUTION_READ_ACCESS 1u
#define PVT_TS_CFG0_RESOLUTION_WRITE_ACCESS 1u
#define PVT_TS_CFG0_RESOLUTION_RESET 0x0u
#define PVT_TS_CFG0_RESOLUTION_FIELD_MASK 0x60u
#define PVT_TS_CFG0_RESOLUTION_GET(x) (((x) & 0x60u) >> 5)
#define PVT_TS_CFG0_RESOLUTION_SET(x) (((x) << 5) & 0x60u)
#define PVT_TS_CFG0_RESOLUTION_MODIFY(r, x) \
   ((((x) << 5) & 0x60u) | ((r) & 0x9fu))
/* Field member: pvt_ts::cfg0.run_mode                                     */
#define PVT_TS_CFG0_RUN_MODE_MSB 3u
#define PVT_TS_CFG0_RUN_MODE_LSB 0u
#define PVT_TS_CFG0_RUN_MODE_WIDTH 4u
#define PVT_TS_CFG0_RUN_MODE_READ_ACCESS 1u
#define PVT_TS_CFG0_RUN_MODE_WRITE_ACCESS 1u
#define PVT_TS_CFG0_RUN_MODE_RESET 0x0u
#define PVT_TS_CFG0_RUN_MODE_FIELD_MASK 0x0fu
#define PVT_TS_CFG0_RUN_MODE_GET(x) ((x) & 0x0fu)
#define PVT_TS_CFG0_RUN_MODE_SET(x) ((x) & 0x0fu)
#define PVT_TS_CFG0_RUN_MODE_MODIFY(r, x) (((x) & 0x0fu) | ((r) & 0xf0u))

/* ####################################################################### */
/*        TYPE DEFINITIONS                                                 */
/* ####################################################################### */

/* Typedef for Addressmap: pvt_ts                                          */
typedef struct {
   volatile uint8_t cfg0; /**< Offset 0x0 (R/W) */
} Pvt_ts, *PTR_Pvt_ts;

#endif
