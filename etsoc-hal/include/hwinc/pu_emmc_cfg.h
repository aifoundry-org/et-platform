/* Copyright (C) 2021, Esperanto Technologies Inc.                         */
/* The copyright to the computer program(s) herein is the                  */
/* property of Esperanto Technologies, Inc. All Rights Reserved.           */
/* The program(s) may be used and/or copied only with                      */
/* the written permission of Esperanto Technologies and                    */
/* in accordance with the terms and conditions stipulated in the           */
/* agreement/contract under which the program(s) have been supplied.       */
/*                                                                         */
/*                                                                         */
/* Generated by Semifore, Inc. csrCompile                                  */
/*    C Header output                                                      */

#ifndef _PU_EMMC_CFG_H_
#define _PU_EMMC_CFG_H_


/* ####################################################################### */
/*        ENUMERATION MACROS                                               */
/* ####################################################################### */

/* Enumeration: emmc::crypto::ADMA_ERR_STAT_R::ADMA_ERR_STATES::ADMA_ERR_STATES */
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_ERR_STATES_ADMA_ERR_STATES_ST_FDS 0x1u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_ERR_STATES_ADMA_ERR_STATES_ST_STOP 0x0u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_ERR_STATES_ADMA_ERR_STATES_ST_TFR 0x3u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_ERR_STATES_ADMA_ERR_STATES_UNUSED 0x2u

/* Enumeration: emmc::crypto::ADMA_ERR_STAT_R::ADMA_LEN_ERR::ADMA_LEN_ERR  */
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_LEN_ERR_ADMA_LEN_ERR_ERROR 0x1u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_LEN_ERR_ADMA_LEN_ERR_NO_ERR 0x0u

/* Enumeration: emmc::crypto::AUTO_CMD_STAT_R::AUTO_CMD12_NOT_EXEC::AUTO_CMD12_NOT_EXEC */
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD12_NOT_EXEC_AUTO_CMD12_NOT_EXEC_FALSE 0x0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD12_NOT_EXEC_AUTO_CMD12_NOT_EXEC_TRUE 0x1u

/* Enumeration: emmc::crypto::AUTO_CMD_STAT_R::AUTO_CMD_CRC_ERR::AUTO_CMD_CRC_ERR */
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_CRC_ERR_AUTO_CMD_CRC_ERR_FALSE 0x0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_CRC_ERR_AUTO_CMD_CRC_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::AUTO_CMD_STAT_R::AUTO_CMD_EBIT_ERR::AUTO_CMD_EBIT_ERR */
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_EBIT_ERR_AUTO_CMD_EBIT_ERR_FALSE 0x0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_EBIT_ERR_AUTO_CMD_EBIT_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::AUTO_CMD_STAT_R::AUTO_CMD_IDX_ERR::AUTO_CMD_IDX_ERR */
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_IDX_ERR_AUTO_CMD_IDX_ERR_FALSE 0x0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_IDX_ERR_AUTO_CMD_IDX_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::AUTO_CMD_STAT_R::AUTO_CMD_RESP_ERR::AUTO_CMD_RESP_ERR */
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_RESP_ERR_AUTO_CMD_RESP_ERR_FALSE 0x0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_RESP_ERR_AUTO_CMD_RESP_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::AUTO_CMD_STAT_R::AUTO_CMD_TOUT_ERR::AUTO_CMD_TOUT_ERR */
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_TOUT_ERR_AUTO_CMD_TOUT_ERR_FALSE 0x0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_TOUT_ERR_AUTO_CMD_TOUT_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::AUTO_CMD_STAT_R::CMD_NOT_ISSUED_AUTO_CMD12::CMD_NOT_ISSUED_AUTO_CMD12 */
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_CMD_NOT_ISSUED_AUTO_CMD12_CMD_NOT_ISSUED_AUTO_CMD12_FALSE 0x0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_CMD_NOT_ISSUED_AUTO_CMD12_CMD_NOT_ISSUED_AUTO_CMD12_TRUE 0x1u

/* Enumeration: emmc::crypto::BGAP_CTRL_R::CONTINUE_REQ::CONTINUE_REQ      */
#define EMMC_CRYPTO_BGAP_CTRL_R_CONTINUE_REQ_CONTINUE_REQ_NO_AFFECT 0x0u
#define EMMC_CRYPTO_BGAP_CTRL_R_CONTINUE_REQ_CONTINUE_REQ_RESTART 0x1u

/* Enumeration: emmc::crypto::BGAP_CTRL_R::INT_AT_BGAP::INT_AT_BGAP        */
#define EMMC_CRYPTO_BGAP_CTRL_R_INT_AT_BGAP_INT_AT_BGAP_DISABLE 0x0u
#define EMMC_CRYPTO_BGAP_CTRL_R_INT_AT_BGAP_INT_AT_BGAP_ENABLE 0x1u

/* Enumeration: emmc::crypto::BGAP_CTRL_R::RD_WAIT_CTRL::RD_WAIT_CTRL      */
#define EMMC_CRYPTO_BGAP_CTRL_R_RD_WAIT_CTRL_RD_WAIT_CTRL_DISABLE 0x0u
#define EMMC_CRYPTO_BGAP_CTRL_R_RD_WAIT_CTRL_RD_WAIT_CTRL_ENABLE 0x1u

/* Enumeration: emmc::crypto::BGAP_CTRL_R::STOP_BG_REQ::STOP_BG_REQ        */
#define EMMC_CRYPTO_BGAP_CTRL_R_STOP_BG_REQ_STOP_BG_REQ_STOP 0x1u
#define EMMC_CRYPTO_BGAP_CTRL_R_STOP_BG_REQ_STOP_BG_REQ_XFER 0x0u

/* Enumeration: emmc::crypto::BLOCKSIZE_R::SDMA_BUF_BDARY::SDMA_BUF_BDARY  */
#define EMMC_CRYPTO_BLOCKSIZE_R_SDMA_BUF_BDARY_SDMA_BUF_BDARY_BYTES_128K 0x5u
#define EMMC_CRYPTO_BLOCKSIZE_R_SDMA_BUF_BDARY_SDMA_BUF_BDARY_BYTES_16K 0x2u
#define EMMC_CRYPTO_BLOCKSIZE_R_SDMA_BUF_BDARY_SDMA_BUF_BDARY_BYTES_256K 0x6u
#define EMMC_CRYPTO_BLOCKSIZE_R_SDMA_BUF_BDARY_SDMA_BUF_BDARY_BYTES_32K 0x3u
#define EMMC_CRYPTO_BLOCKSIZE_R_SDMA_BUF_BDARY_SDMA_BUF_BDARY_BYTES_4K 0x0u
#define EMMC_CRYPTO_BLOCKSIZE_R_SDMA_BUF_BDARY_SDMA_BUF_BDARY_BYTES_512K 0x7u
#define EMMC_CRYPTO_BLOCKSIZE_R_SDMA_BUF_BDARY_SDMA_BUF_BDARY_BYTES_64K 0x4u
#define EMMC_CRYPTO_BLOCKSIZE_R_SDMA_BUF_BDARY_SDMA_BUF_BDARY_BYTES_8K 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES1_R::ADMA2_SUPPORT::ADMA2_SUPPORT */
#define EMMC_CRYPTO_CAPABILITIES1_R_ADMA2_SUPPORT_ADMA2_SUPPORT_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES1_R_ADMA2_SUPPORT_ADMA2_SUPPORT_TRUE 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES1_R::ASYNC_INT_SUPPORT::ASYNC_INT_SUPPORT */
#define EMMC_CRYPTO_CAPABILITIES1_R_ASYNC_INT_SUPPORT_ASYNC_INT_SUPPORT_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES1_R_ASYNC_INT_SUPPORT_ASYNC_INT_SUPPORT_TRUE 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES1_R::Embedded_8_BIT::Embedded_8_BIT */
#define EMMC_CRYPTO_CAPABILITIES1_R_EMBEDDED_8_BIT_EMBEDDED_8_BIT_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES1_R_EMBEDDED_8_BIT_EMBEDDED_8_BIT_TRUE 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES1_R::HIGH_SPEED_SUPPORT::HIGH_SPEED_SUPPORT */
#define EMMC_CRYPTO_CAPABILITIES1_R_HIGH_SPEED_SUPPORT_HIGH_SPEED_SUPPORT_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES1_R_HIGH_SPEED_SUPPORT_HIGH_SPEED_SUPPORT_TRUE 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES1_R::MAX_BLK_LEN::MAX_BLK_LEN    */
#define EMMC_CRYPTO_CAPABILITIES1_R_MAX_BLK_LEN_MAX_BLK_LEN_ONE 0x1u
#define EMMC_CRYPTO_CAPABILITIES1_R_MAX_BLK_LEN_MAX_BLK_LEN_THREE 0x3u
#define EMMC_CRYPTO_CAPABILITIES1_R_MAX_BLK_LEN_MAX_BLK_LEN_TWO 0x2u
#define EMMC_CRYPTO_CAPABILITIES1_R_MAX_BLK_LEN_MAX_BLK_LEN_ZERO 0x0u

/* Enumeration: emmc::crypto::CAPABILITIES1_R::SDMA_SUPPORT::SDMA_SUPPORT  */
#define EMMC_CRYPTO_CAPABILITIES1_R_SDMA_SUPPORT_SDMA_SUPPORT_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES1_R_SDMA_SUPPORT_SDMA_SUPPORT_TRUE 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES1_R::SLOT_TYPE_R::SLOT_TYPE_R    */
#define EMMC_CRYPTO_CAPABILITIES1_R_SLOT_TYPE_R_SLOT_TYPE_R_EMBEDDED_SLOT 0x1u
#define EMMC_CRYPTO_CAPABILITIES1_R_SLOT_TYPE_R_SLOT_TYPE_R_REMOVABLE_SLOT 0x0u
#define EMMC_CRYPTO_CAPABILITIES1_R_SLOT_TYPE_R_SLOT_TYPE_R_SHARED_SLOT 0x2u
#define EMMC_CRYPTO_CAPABILITIES1_R_SLOT_TYPE_R_SLOT_TYPE_R_UHS2_EMBEDDED_SLOT 0x3u

/* Enumeration: emmc::crypto::CAPABILITIES1_R::SUS_RES_SUPPORT::SUS_RES_SUPPORT */
#define EMMC_CRYPTO_CAPABILITIES1_R_SUS_RES_SUPPORT_SUS_RES_SUPPORT_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES1_R_SUS_RES_SUPPORT_SUS_RES_SUPPORT_TRUE 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES1_R::SYS_ADDR_64_V3::SYS_ADDR_64_V3 */
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V3_SYS_ADDR_64_V3_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V3_SYS_ADDR_64_V3_TRUE 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES1_R::SYS_ADDR_64_V4::SYS_ADDR_64_V4 */
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V4_SYS_ADDR_64_V4_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V4_SYS_ADDR_64_V4_TRUE 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES1_R::TOUT_CLK_UNIT::TOUT_CLK_UNIT */
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_UNIT_TOUT_CLK_UNIT_KHZ 0x0u
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_UNIT_TOUT_CLK_UNIT_MHZ 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES1_R::VOLT_18::VOLT_18            */
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_18_VOLT_18_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_18_VOLT_18_TRUE 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES1_R::VOLT_30::VOLT_30            */
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_30_VOLT_30_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_30_VOLT_30_TRUE 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES1_R::VOLT_33::VOLT_33            */
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_33_VOLT_33_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_33_VOLT_33_TRUE 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES2_R::ADMA3_SUPPORT::ADMA3_SUPPORT */
#define EMMC_CRYPTO_CAPABILITIES2_R_ADMA3_SUPPORT_ADMA3_SUPPORT_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_ADMA3_SUPPORT_ADMA3_SUPPORT_TRUE 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES2_R::DDR50_SUPPORT::DDR50_SUPPORT */
#define EMMC_CRYPTO_CAPABILITIES2_R_DDR50_SUPPORT_DDR50_SUPPORT_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_DDR50_SUPPORT_DDR50_SUPPORT_TRUE 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES2_R::DRV_TYPEA::DRV_TYPEA        */
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEA_DRV_TYPEA_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEA_DRV_TYPEA_TRUE 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES2_R::DRV_TYPEC::DRV_TYPEC        */
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEC_DRV_TYPEC_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEC_DRV_TYPEC_TRUE 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES2_R::DRV_TYPED::DRV_TYPED        */
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPED_DRV_TYPED_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPED_DRV_TYPED_TRUE 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES2_R::RE_TUNING_MODES::RE_TUNING_MODES */
#define EMMC_CRYPTO_CAPABILITIES2_R_RE_TUNING_MODES_RE_TUNING_MODES_MODE1 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_RE_TUNING_MODES_RE_TUNING_MODES_MODE2 0x1u
#define EMMC_CRYPTO_CAPABILITIES2_R_RE_TUNING_MODES_RE_TUNING_MODES_MODE3 0x2u
#define EMMC_CRYPTO_CAPABILITIES2_R_RE_TUNING_MODES_RE_TUNING_MODES_RSVD_MODE 0x3u

/* Enumeration: emmc::crypto::CAPABILITIES2_R::SDR104_SUPPORT::SDR104_SUPPORT */
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR104_SUPPORT_SDR104_SUPPORT_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR104_SUPPORT_SDR104_SUPPORT_TRUE 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES2_R::SDR50_SUPPORT::SDR50_SUPPORT */
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR50_SUPPORT_SDR50_SUPPORT_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR50_SUPPORT_SDR50_SUPPORT_TRUE 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES2_R::UHS2_SUPPORT::UHS2_SUPPORT  */
#define EMMC_CRYPTO_CAPABILITIES2_R_UHS2_SUPPORT_UHS2_SUPPORT_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_UHS2_SUPPORT_UHS2_SUPPORT_TRUE 0x1u

/* Enumeration: emmc::crypto::CAPABILITIES2_R::USE_TUNING_SDR50::USE_TUNING_SDR50 */
#define EMMC_CRYPTO_CAPABILITIES2_R_USE_TUNING_SDR50_USE_TUNING_SDR50_ONE 0x1u
#define EMMC_CRYPTO_CAPABILITIES2_R_USE_TUNING_SDR50_USE_TUNING_SDR50_ZERO 0x0u

/* Enumeration: emmc::crypto::CAPABILITIES2_R::VDD2_18V_SUPPORT::VDD2_18V_SUPPORT */
#define EMMC_CRYPTO_CAPABILITIES2_R_VDD2_18V_SUPPORT_VDD2_18V_SUPPORT_FALSE 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_VDD2_18V_SUPPORT_VDD2_18V_SUPPORT_TRUE 0x1u

/* Enumeration: emmc::crypto::CLK_CTRL_R::CLK_GEN_SELECT::CLK_GEN_SELECT   */
#define EMMC_CRYPTO_CLK_CTRL_R_CLK_GEN_SELECT_CLK_GEN_SELECT_FALSE 0x0u
#define EMMC_CRYPTO_CLK_CTRL_R_CLK_GEN_SELECT_CLK_GEN_SELECT_TRUE 0x1u

/* Enumeration: emmc::crypto::CLK_CTRL_R::INTERNAL_CLK_EN::INTERNAL_CLK_EN */
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_EN_INTERNAL_CLK_EN_FALSE 0x0u
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_EN_INTERNAL_CLK_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::CLK_CTRL_R::INTERNAL_CLK_STABLE::INTERNAL_CLK_STABLE */
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_STABLE_INTERNAL_CLK_STABLE_FALSE 0x0u
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_STABLE_INTERNAL_CLK_STABLE_TRUE 0x1u

/* Enumeration: emmc::crypto::CLK_CTRL_R::PLL_ENABLE::PLL_ENABLE           */
#define EMMC_CRYPTO_CLK_CTRL_R_PLL_ENABLE_PLL_ENABLE_FALSE 0x0u
#define EMMC_CRYPTO_CLK_CTRL_R_PLL_ENABLE_PLL_ENABLE_TRUE 0x1u

/* Enumeration: emmc::crypto::CLK_CTRL_R::SD_CLK_EN::SD_CLK_EN             */
#define EMMC_CRYPTO_CLK_CTRL_R_SD_CLK_EN_SD_CLK_EN_FALSE 0x0u
#define EMMC_CRYPTO_CLK_CTRL_R_SD_CLK_EN_SD_CLK_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::CMD_R::CMD_CRC_CHK_ENABLE::CMD_CRC_CHK_ENABLE */
#define EMMC_CRYPTO_CMD_R_CMD_CRC_CHK_ENABLE_CMD_CRC_CHK_ENABLE_DISABLED 0x0u
#define EMMC_CRYPTO_CMD_R_CMD_CRC_CHK_ENABLE_CMD_CRC_CHK_ENABLE_ENABLED 0x1u

/* Enumeration: emmc::crypto::CMD_R::CMD_IDX_CHK_ENABLE::CMD_IDX_CHK_ENABLE */
#define EMMC_CRYPTO_CMD_R_CMD_IDX_CHK_ENABLE_CMD_IDX_CHK_ENABLE_DISABLED 0x0u
#define EMMC_CRYPTO_CMD_R_CMD_IDX_CHK_ENABLE_CMD_IDX_CHK_ENABLE_ENABLED 0x1u

/* Enumeration: emmc::crypto::CMD_R::CMD_TYPE::CMD_TYPE                    */
#define EMMC_CRYPTO_CMD_R_CMD_TYPE_CMD_TYPE_ABORT_CMD 0x3u
#define EMMC_CRYPTO_CMD_R_CMD_TYPE_CMD_TYPE_NORMAL_CMD 0x0u
#define EMMC_CRYPTO_CMD_R_CMD_TYPE_CMD_TYPE_RESUME_CMD 0x2u
#define EMMC_CRYPTO_CMD_R_CMD_TYPE_CMD_TYPE_SUSPEND_CMD 0x1u

/* Enumeration: emmc::crypto::CMD_R::DATA_PRESENT_SEL::DATA_PRESENT_SEL    */
#define EMMC_CRYPTO_CMD_R_DATA_PRESENT_SEL_DATA_PRESENT_SEL_DATA 0x1u
#define EMMC_CRYPTO_CMD_R_DATA_PRESENT_SEL_DATA_PRESENT_SEL_NO_DATA 0x0u

/* Enumeration: emmc::crypto::CMD_R::RESP_TYPE_SELECT::RESP_TYPE_SELECT    */
#define EMMC_CRYPTO_CMD_R_RESP_TYPE_SELECT_RESP_TYPE_SELECT_NO_RESP 0x0u
#define EMMC_CRYPTO_CMD_R_RESP_TYPE_SELECT_RESP_TYPE_SELECT_RESP_LEN_136 0x1u
#define EMMC_CRYPTO_CMD_R_RESP_TYPE_SELECT_RESP_TYPE_SELECT_RESP_LEN_48 0x2u
#define EMMC_CRYPTO_CMD_R_RESP_TYPE_SELECT_RESP_TYPE_SELECT_RESP_LEN_48B 0x3u

/* Enumeration: emmc::crypto::CMD_R::SUB_CMD_FLAG::SUB_CMD_FLAG            */
#define EMMC_CRYPTO_CMD_R_SUB_CMD_FLAG_SUB_CMD_FLAG_MAIN 0x0u
#define EMMC_CRYPTO_CMD_R_SUB_CMD_FLAG_SUB_CMD_FLAG_SUB 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_SIGNAL_EN_R::ADMA_ERR_SIGNAL_EN::ADMA_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_ADMA_ERR_SIGNAL_EN_ADMA_ERR_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_ADMA_ERR_SIGNAL_EN_ADMA_ERR_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_SIGNAL_EN_R::AUTO_CMD_ERR_SIGNAL_EN::AUTO_CMD_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_AUTO_CMD_ERR_SIGNAL_EN_AUTO_CMD_ERR_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_AUTO_CMD_ERR_SIGNAL_EN_AUTO_CMD_ERR_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_SIGNAL_EN_R::BOOT_ACK_ERR_SIGNAL_EN::BOOT_ACK_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_BOOT_ACK_ERR_SIGNAL_EN_BOOT_ACK_ERR_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_BOOT_ACK_ERR_SIGNAL_EN_BOOT_ACK_ERR_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_SIGNAL_EN_R::CMD_CRC_ERR_SIGNAL_EN::CMD_CRC_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_CRC_ERR_SIGNAL_EN_CMD_CRC_ERR_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_CRC_ERR_SIGNAL_EN_CMD_CRC_ERR_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_SIGNAL_EN_R::CMD_END_BIT_ERR_SIGNAL_EN::CMD_END_BIT_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_END_BIT_ERR_SIGNAL_EN_CMD_END_BIT_ERR_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_END_BIT_ERR_SIGNAL_EN_CMD_END_BIT_ERR_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_SIGNAL_EN_R::CMD_IDX_ERR_SIGNAL_EN::CMD_IDX_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_IDX_ERR_SIGNAL_EN_CMD_IDX_ERR_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_IDX_ERR_SIGNAL_EN_CMD_IDX_ERR_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_SIGNAL_EN_R::CMD_TOUT_ERR_SIGNAL_EN::CMD_TOUT_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_TOUT_ERR_SIGNAL_EN_CMD_TOUT_ERR_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_TOUT_ERR_SIGNAL_EN_CMD_TOUT_ERR_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_SIGNAL_EN_R::CUR_LMT_ERR_SIGNAL_EN::CUR_LMT_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CUR_LMT_ERR_SIGNAL_EN_CUR_LMT_ERR_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CUR_LMT_ERR_SIGNAL_EN_CUR_LMT_ERR_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_SIGNAL_EN_R::DATA_CRC_ERR_SIGNAL_EN::DATA_CRC_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_CRC_ERR_SIGNAL_EN_DATA_CRC_ERR_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_CRC_ERR_SIGNAL_EN_DATA_CRC_ERR_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_SIGNAL_EN_R::DATA_END_BIT_ERR_SIGNAL_EN::DATA_END_BIT_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_END_BIT_ERR_SIGNAL_EN_DATA_END_BIT_ERR_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_END_BIT_ERR_SIGNAL_EN_DATA_END_BIT_ERR_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_SIGNAL_EN_R::DATA_TOUT_ERR_SIGNAL_EN::DATA_TOUT_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_TOUT_ERR_SIGNAL_EN_DATA_TOUT_ERR_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_TOUT_ERR_SIGNAL_EN_DATA_TOUT_ERR_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_SIGNAL_EN_R::RESP_ERR_SIGNAL_EN::RESP_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_RESP_ERR_SIGNAL_EN_RESP_ERR_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_RESP_ERR_SIGNAL_EN_RESP_ERR_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_SIGNAL_EN_R::TUNING_ERR_SIGNAL_EN::TUNING_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_TUNING_ERR_SIGNAL_EN_TUNING_ERR_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_TUNING_ERR_SIGNAL_EN_TUNING_ERR_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_SIGNAL_EN_R::VENDOR_ERR_SIGNAL_EN1::VENDOR_ERR_SIGNAL_EN1 */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN1_VENDOR_ERR_SIGNAL_EN1_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN1_VENDOR_ERR_SIGNAL_EN1_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_SIGNAL_EN_R::VENDOR_ERR_SIGNAL_EN2::VENDOR_ERR_SIGNAL_EN2 */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN2_VENDOR_ERR_SIGNAL_EN2_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN2_VENDOR_ERR_SIGNAL_EN2_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_SIGNAL_EN_R::VENDOR_ERR_SIGNAL_EN3::VENDOR_ERR_SIGNAL_EN3 */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN3_VENDOR_ERR_SIGNAL_EN3_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN3_VENDOR_ERR_SIGNAL_EN3_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_EN_R::ADMA_ERR_STAT_EN::ADMA_ERR_STAT_EN */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_ADMA_ERR_STAT_EN_ADMA_ERR_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_ADMA_ERR_STAT_EN_ADMA_ERR_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_EN_R::AUTO_CMD_ERR_STAT_EN::AUTO_CMD_ERR_STAT_EN */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_AUTO_CMD_ERR_STAT_EN_AUTO_CMD_ERR_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_AUTO_CMD_ERR_STAT_EN_AUTO_CMD_ERR_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_EN_R::BOOT_ACK_ERR_STAT_EN::BOOT_ACK_ERR_STAT_EN */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_BOOT_ACK_ERR_STAT_EN_BOOT_ACK_ERR_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_BOOT_ACK_ERR_STAT_EN_BOOT_ACK_ERR_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_EN_R::CMD_CRC_ERR_STAT_EN::CMD_CRC_ERR_STAT_EN */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_CRC_ERR_STAT_EN_CMD_CRC_ERR_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_CRC_ERR_STAT_EN_CMD_CRC_ERR_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_EN_R::CMD_END_BIT_ERR_STAT_EN::CMD_END_BIT_ERR_STAT_EN */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_END_BIT_ERR_STAT_EN_CMD_END_BIT_ERR_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_END_BIT_ERR_STAT_EN_CMD_END_BIT_ERR_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_EN_R::CMD_IDX_ERR_STAT_EN::CMD_IDX_ERR_STAT_EN */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_IDX_ERR_STAT_EN_CMD_IDX_ERR_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_IDX_ERR_STAT_EN_CMD_IDX_ERR_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_EN_R::CMD_TOUT_ERR_STAT_EN::CMD_TOUT_ERR_STAT_EN */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_TOUT_ERR_STAT_EN_CMD_TOUT_ERR_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_TOUT_ERR_STAT_EN_CMD_TOUT_ERR_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_EN_R::CUR_LMT_ERR_STAT_EN::CUR_LMT_ERR_STAT_EN */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CUR_LMT_ERR_STAT_EN_CUR_LMT_ERR_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CUR_LMT_ERR_STAT_EN_CUR_LMT_ERR_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_EN_R::DATA_CRC_ERR_STAT_EN::DATA_CRC_ERR_STAT_EN */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_CRC_ERR_STAT_EN_DATA_CRC_ERR_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_CRC_ERR_STAT_EN_DATA_CRC_ERR_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_EN_R::DATA_END_BIT_ERR_STAT_EN::DATA_END_BIT_ERR_STAT_EN */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_END_BIT_ERR_STAT_EN_DATA_END_BIT_ERR_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_END_BIT_ERR_STAT_EN_DATA_END_BIT_ERR_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_EN_R::DATA_TOUT_ERR_STAT_EN::DATA_TOUT_ERR_STAT_EN */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_TOUT_ERR_STAT_EN_DATA_TOUT_ERR_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_TOUT_ERR_STAT_EN_DATA_TOUT_ERR_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_EN_R::RESP_ERR_STAT_EN::RESP_ERR_STAT_EN */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_RESP_ERR_STAT_EN_RESP_ERR_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_RESP_ERR_STAT_EN_RESP_ERR_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_EN_R::TUNING_ERR_STAT_EN::TUNING_ERR_STAT_EN */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_TUNING_ERR_STAT_EN_TUNING_ERR_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_TUNING_ERR_STAT_EN_TUNING_ERR_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_EN_R::VENDOR_ERR_STAT_EN1::VENDOR_ERR_STAT_EN1 */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN1_VENDOR_ERR_STAT_EN1_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN1_VENDOR_ERR_STAT_EN1_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_EN_R::VENDOR_ERR_STAT_EN2::VENDOR_ERR_STAT_EN2 */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN2_VENDOR_ERR_STAT_EN2_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN2_VENDOR_ERR_STAT_EN2_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_EN_R::VENDOR_ERR_STAT_EN3::VENDOR_ERR_STAT_EN3 */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN3_VENDOR_ERR_STAT_EN3_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN3_VENDOR_ERR_STAT_EN3_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_R::ADMA_ERR::ADMA_ERR         */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_ADMA_ERR_ADMA_ERR_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_ADMA_ERR_ADMA_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_R::AUTO_CMD_ERR::AUTO_CMD_ERR */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_AUTO_CMD_ERR_AUTO_CMD_ERR_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_AUTO_CMD_ERR_AUTO_CMD_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_R::BOOT_ACK_ERR::BOOT_ACK_ERR */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_BOOT_ACK_ERR_BOOT_ACK_ERR_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_BOOT_ACK_ERR_BOOT_ACK_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_R::CMD_CRC_ERR::CMD_CRC_ERR   */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_CRC_ERR_CMD_CRC_ERR_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_CRC_ERR_CMD_CRC_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_R::CMD_END_BIT_ERR::CMD_END_BIT_ERR */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_END_BIT_ERR_CMD_END_BIT_ERR_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_END_BIT_ERR_CMD_END_BIT_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_R::CMD_IDX_ERR::CMD_IDX_ERR   */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_IDX_ERR_CMD_IDX_ERR_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_IDX_ERR_CMD_IDX_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_R::CMD_TOUT_ERR::CMD_TOUT_ERR */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_TOUT_ERR_CMD_TOUT_ERR_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_TOUT_ERR_CMD_TOUT_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_R::CUR_LMT_ERR::CUR_LMT_ERR   */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CUR_LMT_ERR_CUR_LMT_ERR_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CUR_LMT_ERR_CUR_LMT_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_R::DATA_CRC_ERR::DATA_CRC_ERR */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_CRC_ERR_DATA_CRC_ERR_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_CRC_ERR_DATA_CRC_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_R::DATA_END_BIT_ERR::DATA_END_BIT_ERR */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_END_BIT_ERR_DATA_END_BIT_ERR_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_END_BIT_ERR_DATA_END_BIT_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_R::DATA_TOUT_ERR::DATA_TOUT_ERR */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_TOUT_ERR_DATA_TOUT_ERR_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_TOUT_ERR_DATA_TOUT_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_R::RESP_ERR::RESP_ERR         */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_RESP_ERR_RESP_ERR_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_RESP_ERR_RESP_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::ERROR_INT_STAT_R::TUNING_ERR::TUNING_ERR     */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_TUNING_ERR_TUNING_ERR_FALSE 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_TUNING_ERR_TUNING_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_AUTO_CMD_STAT_R::FORCE_AUTO_CMD12_NOT_EXEC::FORCE_AUTO_CMD12_NOT_EXEC */
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD12_NOT_EXEC_FORCE_AUTO_CMD12_NOT_EXEC_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD12_NOT_EXEC_FORCE_AUTO_CMD12_NOT_EXEC_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_AUTO_CMD_STAT_R::FORCE_AUTO_CMD_CRC_ERR::FORCE_AUTO_CMD_CRC_ERR */
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_CRC_ERR_FORCE_AUTO_CMD_CRC_ERR_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_CRC_ERR_FORCE_AUTO_CMD_CRC_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_AUTO_CMD_STAT_R::FORCE_AUTO_CMD_EBIT_ERR::FORCE_AUTO_CMD_EBIT_ERR */
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_EBIT_ERR_FORCE_AUTO_CMD_EBIT_ERR_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_EBIT_ERR_FORCE_AUTO_CMD_EBIT_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_AUTO_CMD_STAT_R::FORCE_AUTO_CMD_IDX_ERR::FORCE_AUTO_CMD_IDX_ERR */
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_IDX_ERR_FORCE_AUTO_CMD_IDX_ERR_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_IDX_ERR_FORCE_AUTO_CMD_IDX_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_AUTO_CMD_STAT_R::FORCE_AUTO_CMD_RESP_ERR::FORCE_AUTO_CMD_RESP_ERR */
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_RESP_ERR_FORCE_AUTO_CMD_RESP_ERR_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_RESP_ERR_FORCE_AUTO_CMD_RESP_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_AUTO_CMD_STAT_R::FORCE_AUTO_CMD_TOUT_ERR::FORCE_AUTO_CMD_TOUT_ERR */
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_TOUT_ERR_FORCE_AUTO_CMD_TOUT_ERR_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_TOUT_ERR_FORCE_AUTO_CMD_TOUT_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_AUTO_CMD_STAT_R::FORCE_CMD_NOT_ISSUED_AUTO_CMD12::FORCE_CMD_NOT_ISSUED_AUTO_CMD12 */
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_CMD_NOT_ISSUED_AUTO_CMD12_FORCE_CMD_NOT_ISSUED_AUTO_CMD12_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_CMD_NOT_ISSUED_AUTO_CMD12_FORCE_CMD_NOT_ISSUED_AUTO_CMD12_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_ERROR_INT_STAT_R::FORCE_ADMA_ERR::FORCE_ADMA_ERR */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_ADMA_ERR_FORCE_ADMA_ERR_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_ADMA_ERR_FORCE_ADMA_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_ERROR_INT_STAT_R::FORCE_AUTO_CMD_ERR::FORCE_AUTO_CMD_ERR */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_AUTO_CMD_ERR_FORCE_AUTO_CMD_ERR_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_AUTO_CMD_ERR_FORCE_AUTO_CMD_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_ERROR_INT_STAT_R::FORCE_BOOT_ACK_ERR::FORCE_BOOT_ACK_ERR */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_BOOT_ACK_ERR_FORCE_BOOT_ACK_ERR_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_BOOT_ACK_ERR_FORCE_BOOT_ACK_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_ERROR_INT_STAT_R::FORCE_CMD_CRC_ERR::FORCE_CMD_CRC_ERR */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_CRC_ERR_FORCE_CMD_CRC_ERR_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_CRC_ERR_FORCE_CMD_CRC_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_ERROR_INT_STAT_R::FORCE_CMD_END_BIT_ERR::FORCE_CMD_END_BIT_ERR */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_END_BIT_ERR_FORCE_CMD_END_BIT_ERR_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_END_BIT_ERR_FORCE_CMD_END_BIT_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_ERROR_INT_STAT_R::FORCE_CMD_IDX_ERR::FORCE_CMD_IDX_ERR */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_IDX_ERR_FORCE_CMD_IDX_ERR_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_IDX_ERR_FORCE_CMD_IDX_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_ERROR_INT_STAT_R::FORCE_CMD_TOUT_ERR::FORCE_CMD_TOUT_ERR */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_TOUT_ERR_FORCE_CMD_TOUT_ERR_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_TOUT_ERR_FORCE_CMD_TOUT_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_ERROR_INT_STAT_R::FORCE_CUR_LMT_ERR::FORCE_CUR_LMT_ERR */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CUR_LMT_ERR_FORCE_CUR_LMT_ERR_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CUR_LMT_ERR_FORCE_CUR_LMT_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_ERROR_INT_STAT_R::FORCE_DATA_CRC_ERR::FORCE_DATA_CRC_ERR */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_CRC_ERR_FORCE_DATA_CRC_ERR_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_CRC_ERR_FORCE_DATA_CRC_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_ERROR_INT_STAT_R::FORCE_DATA_END_BIT_ERR::FORCE_DATA_END_BIT_ERR */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_END_BIT_ERR_FORCE_DATA_END_BIT_ERR_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_END_BIT_ERR_FORCE_DATA_END_BIT_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_ERROR_INT_STAT_R::FORCE_DATA_TOUT_ERR::FORCE_DATA_TOUT_ERR */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_TOUT_ERR_FORCE_DATA_TOUT_ERR_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_TOUT_ERR_FORCE_DATA_TOUT_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_ERROR_INT_STAT_R::FORCE_RESP_ERR::FORCE_RESP_ERR */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_RESP_ERR_FORCE_RESP_ERR_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_RESP_ERR_FORCE_RESP_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::FORCE_ERROR_INT_STAT_R::FORCE_TUNING_ERR::FORCE_TUNING_ERR */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_TUNING_ERR_FORCE_TUNING_ERR_FALSE 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_TUNING_ERR_FORCE_TUNING_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::HOST_CNTRL_VERS_R::SPEC_VERSION_NUM::SPEC_VERSION_NUM */
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_SPEC_VERSION_NUM_SPEC_VERSION_NUM_VER_1_00 0x0u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_SPEC_VERSION_NUM_SPEC_VERSION_NUM_VER_2_00 0x1u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_SPEC_VERSION_NUM_SPEC_VERSION_NUM_VER_3_00 0x2u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_SPEC_VERSION_NUM_SPEC_VERSION_NUM_VER_4_00 0x3u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_SPEC_VERSION_NUM_SPEC_VERSION_NUM_VER_4_10 0x4u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_SPEC_VERSION_NUM_SPEC_VERSION_NUM_VER_4_20 0x5u

/* Enumeration: emmc::crypto::HOST_CTRL1_R::CARD_DETECT_SIG_SEL::CARD_DETECT_SIG_SEL */
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_SIG_SEL_CARD_DETECT_SIG_SEL_CARD_DT_TEST_LEVEL 0x1u
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_SIG_SEL_CARD_DETECT_SIG_SEL_SDCD_PIN 0x0u

/* Enumeration: emmc::crypto::HOST_CTRL1_R::CARD_DETECT_TEST_LVL::CARD_DETECT_TEST_LVL */
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_TEST_LVL_CARD_DETECT_TEST_LVL_CARD_INSERTED 0x1u
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_TEST_LVL_CARD_DETECT_TEST_LVL_NO_CARD 0x0u

/* Enumeration: emmc::crypto::HOST_CTRL1_R::DAT_XFER_WIDTH::DAT_XFER_WIDTH */
#define EMMC_CRYPTO_HOST_CTRL1_R_DAT_XFER_WIDTH_DAT_XFER_WIDTH_FOUR_BIT 0x1u
#define EMMC_CRYPTO_HOST_CTRL1_R_DAT_XFER_WIDTH_DAT_XFER_WIDTH_ONE_BIT 0x0u

/* Enumeration: emmc::crypto::HOST_CTRL1_R::DMA_SEL::DMA_SEL               */
#define EMMC_CRYPTO_HOST_CTRL1_R_DMA_SEL_DMA_SEL_ADMA2 0x2u
#define EMMC_CRYPTO_HOST_CTRL1_R_DMA_SEL_DMA_SEL_ADMA2_3 0x3u
#define EMMC_CRYPTO_HOST_CTRL1_R_DMA_SEL_DMA_SEL_RSVD_BIT 0x1u
#define EMMC_CRYPTO_HOST_CTRL1_R_DMA_SEL_DMA_SEL_SDMA 0x0u

/* Enumeration: emmc::crypto::HOST_CTRL1_R::EXT_DAT_XFER::EXT_DAT_XFER     */
#define EMMC_CRYPTO_HOST_CTRL1_R_EXT_DAT_XFER_EXT_DAT_XFER_DEFAULT 0x0u
#define EMMC_CRYPTO_HOST_CTRL1_R_EXT_DAT_XFER_EXT_DAT_XFER_EIGHT_BIT 0x1u

/* Enumeration: emmc::crypto::HOST_CTRL1_R::HIGH_SPEED_EN::HIGH_SPEED_EN   */
#define EMMC_CRYPTO_HOST_CTRL1_R_HIGH_SPEED_EN_HIGH_SPEED_EN_HIGH_SPEED 0x1u
#define EMMC_CRYPTO_HOST_CTRL1_R_HIGH_SPEED_EN_HIGH_SPEED_EN_NORMAL_SPEED 0x0u

/* Enumeration: emmc::crypto::HOST_CTRL1_R::LED_CTRL::LED_CTRL             */
#define EMMC_CRYPTO_HOST_CTRL1_R_LED_CTRL_LED_CTRL_OFF 0x0u
#define EMMC_CRYPTO_HOST_CTRL1_R_LED_CTRL_LED_CTRL_ON 0x1u

/* Enumeration: emmc::crypto::HOST_CTRL2_R::ADDRESSING::ADDRESSING         */
#define EMMC_CRYPTO_HOST_CTRL2_R_ADDRESSING_ADDRESSING_FALSE 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_ADDRESSING_ADDRESSING_TRUE 0x1u

/* Enumeration: emmc::crypto::HOST_CTRL2_R::ADMA2_LEN_MODE::ADMA2_LEN_MODE */
#define EMMC_CRYPTO_HOST_CTRL2_R_ADMA2_LEN_MODE_ADMA2_LEN_MODE_FALSE 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_ADMA2_LEN_MODE_ADMA2_LEN_MODE_TRUE 0x1u

/* Enumeration: emmc::crypto::HOST_CTRL2_R::ASYNC_INT_ENABLE::ASYNC_INT_ENABLE */
#define EMMC_CRYPTO_HOST_CTRL2_R_ASYNC_INT_ENABLE_ASYNC_INT_ENABLE_FALSE 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_ASYNC_INT_ENABLE_ASYNC_INT_ENABLE_TRUE 0x1u

/* Enumeration: emmc::crypto::HOST_CTRL2_R::CMD23_ENABLE::CMD23_ENABLE     */
#define EMMC_CRYPTO_HOST_CTRL2_R_CMD23_ENABLE_CMD23_ENABLE_FALSE 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_CMD23_ENABLE_CMD23_ENABLE_TRUE 0x1u

/* Enumeration: emmc::crypto::HOST_CTRL2_R::DRV_STRENGTH_SEL::DRV_STRENGTH_SEL */
#define EMMC_CRYPTO_HOST_CTRL2_R_DRV_STRENGTH_SEL_DRV_STRENGTH_SEL_TYPEA 0x1u
#define EMMC_CRYPTO_HOST_CTRL2_R_DRV_STRENGTH_SEL_DRV_STRENGTH_SEL_TYPEB 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_DRV_STRENGTH_SEL_DRV_STRENGTH_SEL_TYPEC 0x2u
#define EMMC_CRYPTO_HOST_CTRL2_R_DRV_STRENGTH_SEL_DRV_STRENGTH_SEL_TYPED 0x3u

/* Enumeration: emmc::crypto::HOST_CTRL2_R::EXEC_TUNING::EXEC_TUNING       */
#define EMMC_CRYPTO_HOST_CTRL2_R_EXEC_TUNING_EXEC_TUNING_FALSE 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_EXEC_TUNING_EXEC_TUNING_TRUE 0x1u

/* Enumeration: emmc::crypto::HOST_CTRL2_R::HOST_VER4_ENABLE::HOST_VER4_ENABLE */
#define EMMC_CRYPTO_HOST_CTRL2_R_HOST_VER4_ENABLE_HOST_VER4_ENABLE_FALSE 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_HOST_VER4_ENABLE_HOST_VER4_ENABLE_TRUE 0x1u

/* Enumeration: emmc::crypto::HOST_CTRL2_R::PRESET_VAL_ENABLE::PRESET_VAL_ENABLE */
#define EMMC_CRYPTO_HOST_CTRL2_R_PRESET_VAL_ENABLE_PRESET_VAL_ENABLE_FALSE 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_PRESET_VAL_ENABLE_PRESET_VAL_ENABLE_TRUE 0x1u

/* Enumeration: emmc::crypto::HOST_CTRL2_R::SAMPLE_CLK_SEL::SAMPLE_CLK_SEL */
#define EMMC_CRYPTO_HOST_CTRL2_R_SAMPLE_CLK_SEL_SAMPLE_CLK_SEL_FALSE 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_SAMPLE_CLK_SEL_SAMPLE_CLK_SEL_TRUE 0x1u

/* Enumeration: emmc::crypto::HOST_CTRL2_R::SIGNALING_EN::SIGNALING_EN     */
#define EMMC_CRYPTO_HOST_CTRL2_R_SIGNALING_EN_SIGNALING_EN_V_1_8 0x1u
#define EMMC_CRYPTO_HOST_CTRL2_R_SIGNALING_EN_SIGNALING_EN_V_3_3 0x0u

/* Enumeration: emmc::crypto::HOST_CTRL2_R::UHS2_IF_ENABLE::UHS2_IF_ENABLE */
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS2_IF_ENABLE_UHS2_IF_ENABLE_FALSE 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS2_IF_ENABLE_UHS2_IF_ENABLE_TRUE 0x1u

/* Enumeration: emmc::crypto::HOST_CTRL2_R::UHS_MODE_SEL::UHS_MODE_SEL     */
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS_MODE_SEL_UHS_MODE_SEL_DDR50 0x4u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS_MODE_SEL_UHS_MODE_SEL_RSVD5 0x5u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS_MODE_SEL_UHS_MODE_SEL_RSVD6 0x6u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS_MODE_SEL_UHS_MODE_SEL_SDR104 0x3u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS_MODE_SEL_UHS_MODE_SEL_SDR12 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS_MODE_SEL_UHS_MODE_SEL_SDR25 0x1u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS_MODE_SEL_UHS_MODE_SEL_SDR50 0x2u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS_MODE_SEL_UHS_MODE_SEL_UHS2 0x7u

/* Enumeration: emmc::crypto::NORMAL_INT_SIGNAL_EN_R::BGAP_EVENT_SIGNAL_EN::BGAP_EVENT_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BGAP_EVENT_SIGNAL_EN_BGAP_EVENT_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BGAP_EVENT_SIGNAL_EN_BGAP_EVENT_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_SIGNAL_EN_R::BUF_RD_READY_SIGNAL_EN::BUF_RD_READY_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_RD_READY_SIGNAL_EN_BUF_RD_READY_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_RD_READY_SIGNAL_EN_BUF_RD_READY_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_SIGNAL_EN_R::BUF_WR_READY_SIGNAL_EN::BUF_WR_READY_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_WR_READY_SIGNAL_EN_BUF_WR_READY_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_WR_READY_SIGNAL_EN_BUF_WR_READY_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_SIGNAL_EN_R::CARD_INSERTION_SIGNAL_EN::CARD_INSERTION_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INSERTION_SIGNAL_EN_CARD_INSERTION_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INSERTION_SIGNAL_EN_CARD_INSERTION_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_SIGNAL_EN_R::CARD_INTERRUPT_SIGNAL_EN::CARD_INTERRUPT_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INTERRUPT_SIGNAL_EN_CARD_INTERRUPT_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INTERRUPT_SIGNAL_EN_CARD_INTERRUPT_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_SIGNAL_EN_R::CARD_REMOVAL_SIGNAL_EN::CARD_REMOVAL_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_REMOVAL_SIGNAL_EN_CARD_REMOVAL_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_REMOVAL_SIGNAL_EN_CARD_REMOVAL_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_SIGNAL_EN_R::CMD_COMPLETE_SIGNAL_EN::CMD_COMPLETE_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CMD_COMPLETE_SIGNAL_EN_CMD_COMPLETE_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CMD_COMPLETE_SIGNAL_EN_CMD_COMPLETE_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_SIGNAL_EN_R::CQE_EVENT_SIGNAL_EN::CQE_EVENT_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CQE_EVENT_SIGNAL_EN_CQE_EVENT_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CQE_EVENT_SIGNAL_EN_CQE_EVENT_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_SIGNAL_EN_R::DMA_INTERRUPT_SIGNAL_EN::DMA_INTERRUPT_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_DMA_INTERRUPT_SIGNAL_EN_DMA_INTERRUPT_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_DMA_INTERRUPT_SIGNAL_EN_DMA_INTERRUPT_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_SIGNAL_EN_R::FX_EVENT_SIGNAL_EN::FX_EVENT_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_FX_EVENT_SIGNAL_EN_FX_EVENT_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_FX_EVENT_SIGNAL_EN_FX_EVENT_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_SIGNAL_EN_R::INT_A_SIGNAL_EN::INT_A_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_A_SIGNAL_EN_INT_A_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_A_SIGNAL_EN_INT_A_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_SIGNAL_EN_R::INT_B_SIGNAL_EN::INT_B_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_B_SIGNAL_EN_INT_B_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_B_SIGNAL_EN_INT_B_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_SIGNAL_EN_R::INT_C_SIGNAL_EN::INT_C_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_C_SIGNAL_EN_INT_C_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_C_SIGNAL_EN_INT_C_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_SIGNAL_EN_R::RE_TUNE_EVENT_SIGNAL_EN::RE_TUNE_EVENT_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RE_TUNE_EVENT_SIGNAL_EN_RE_TUNE_EVENT_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RE_TUNE_EVENT_SIGNAL_EN_RE_TUNE_EVENT_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_SIGNAL_EN_R::XFER_COMPLETE_SIGNAL_EN::XFER_COMPLETE_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_XFER_COMPLETE_SIGNAL_EN_XFER_COMPLETE_SIGNAL_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_XFER_COMPLETE_SIGNAL_EN_XFER_COMPLETE_SIGNAL_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_EN_R::BGAP_EVENT_STAT_EN::BGAP_EVENT_STAT_EN */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BGAP_EVENT_STAT_EN_BGAP_EVENT_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BGAP_EVENT_STAT_EN_BGAP_EVENT_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_EN_R::BUF_RD_READY_STAT_EN::BUF_RD_READY_STAT_EN */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_RD_READY_STAT_EN_BUF_RD_READY_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_RD_READY_STAT_EN_BUF_RD_READY_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_EN_R::BUF_WR_READY_STAT_EN::BUF_WR_READY_STAT_EN */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_WR_READY_STAT_EN_BUF_WR_READY_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_WR_READY_STAT_EN_BUF_WR_READY_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_EN_R::CARD_INSERTION_STAT_EN::CARD_INSERTION_STAT_EN */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INSERTION_STAT_EN_CARD_INSERTION_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INSERTION_STAT_EN_CARD_INSERTION_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_EN_R::CARD_INTERRUPT_STAT_EN::CARD_INTERRUPT_STAT_EN */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INTERRUPT_STAT_EN_CARD_INTERRUPT_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INTERRUPT_STAT_EN_CARD_INTERRUPT_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_EN_R::CARD_REMOVAL_STAT_EN::CARD_REMOVAL_STAT_EN */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_REMOVAL_STAT_EN_CARD_REMOVAL_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_REMOVAL_STAT_EN_CARD_REMOVAL_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_EN_R::CMD_COMPLETE_STAT_EN::CMD_COMPLETE_STAT_EN */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CMD_COMPLETE_STAT_EN_CMD_COMPLETE_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CMD_COMPLETE_STAT_EN_CMD_COMPLETE_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_EN_R::CQE_EVENT_STAT_EN::CQE_EVENT_STAT_EN */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CQE_EVENT_STAT_EN_CQE_EVENT_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CQE_EVENT_STAT_EN_CQE_EVENT_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_EN_R::DMA_INTERRUPT_STAT_EN::DMA_INTERRUPT_STAT_EN */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_DMA_INTERRUPT_STAT_EN_DMA_INTERRUPT_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_DMA_INTERRUPT_STAT_EN_DMA_INTERRUPT_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_EN_R::FX_EVENT_STAT_EN::FX_EVENT_STAT_EN */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_FX_EVENT_STAT_EN_FX_EVENT_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_FX_EVENT_STAT_EN_FX_EVENT_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_EN_R::INT_A_STAT_EN::INT_A_STAT_EN */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_A_STAT_EN_INT_A_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_A_STAT_EN_INT_A_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_EN_R::INT_B_STAT_EN::INT_B_STAT_EN */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_B_STAT_EN_INT_B_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_B_STAT_EN_INT_B_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_EN_R::INT_C_STAT_EN::INT_C_STAT_EN */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_C_STAT_EN_INT_C_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_C_STAT_EN_INT_C_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_EN_R::RE_TUNE_EVENT_STAT_EN::RE_TUNE_EVENT_STAT_EN */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RE_TUNE_EVENT_STAT_EN_RE_TUNE_EVENT_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RE_TUNE_EVENT_STAT_EN_RE_TUNE_EVENT_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_EN_R::XFER_COMPLETE_STAT_EN::XFER_COMPLETE_STAT_EN */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_XFER_COMPLETE_STAT_EN_XFER_COMPLETE_STAT_EN_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_XFER_COMPLETE_STAT_EN_XFER_COMPLETE_STAT_EN_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_R::BGAP_EVENT::BGAP_EVENT    */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BGAP_EVENT_BGAP_EVENT_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BGAP_EVENT_BGAP_EVENT_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_R::BUF_RD_READY::BUF_RD_READY */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_RD_READY_BUF_RD_READY_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_RD_READY_BUF_RD_READY_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_R::BUF_WR_READY::BUF_WR_READY */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_WR_READY_BUF_WR_READY_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_WR_READY_BUF_WR_READY_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_R::CARD_INSERTION::CARD_INSERTION */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INSERTION_CARD_INSERTION_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INSERTION_CARD_INSERTION_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_R::CARD_INTERRUPT::CARD_INTERRUPT */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INTERRUPT_CARD_INTERRUPT_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INTERRUPT_CARD_INTERRUPT_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_R::CARD_REMOVAL::CARD_REMOVAL */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_REMOVAL_CARD_REMOVAL_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_REMOVAL_CARD_REMOVAL_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_R::CMD_COMPLETE::CMD_COMPLETE */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CMD_COMPLETE_CMD_COMPLETE_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CMD_COMPLETE_CMD_COMPLETE_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_R::CQE_EVENT::CQE_EVENT      */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CQE_EVENT_CQE_EVENT_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CQE_EVENT_CQE_EVENT_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_R::DMA_INTERRUPT::DMA_INTERRUPT */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_DMA_INTERRUPT_DMA_INTERRUPT_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_DMA_INTERRUPT_DMA_INTERRUPT_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_R::ERR_INTERRUPT::ERR_INTERRUPT */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_ERR_INTERRUPT_ERR_INTERRUPT_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_ERR_INTERRUPT_ERR_INTERRUPT_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_R::FX_EVENT::FX_EVENT        */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_FX_EVENT_FX_EVENT_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_FX_EVENT_FX_EVENT_TRUE 0x1u

/* Enumeration: emmc::crypto::NORMAL_INT_STAT_R::XFER_COMPLETE::XFER_COMPLETE */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_XFER_COMPLETE_XFER_COMPLETE_FALSE 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_XFER_COMPLETE_XFER_COMPLETE_TRUE 0x1u

/* Enumeration: emmc::crypto::PRESET_DDR50_R::CLK_GEN_SEL_VAL::CLK_GEN_SEL_VAL */
#define EMMC_CRYPTO_PRESET_DDR50_R_CLK_GEN_SEL_VAL_CLK_GEN_SEL_VAL_FALSE 0x0u
#define EMMC_CRYPTO_PRESET_DDR50_R_CLK_GEN_SEL_VAL_CLK_GEN_SEL_VAL_PROG 0x1u

/* Enumeration: emmc::crypto::PRESET_DDR50_R::DRV_SEL_VAL::DRV_SEL_VAL     */
#define EMMC_CRYPTO_PRESET_DDR50_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEA 0x1u
#define EMMC_CRYPTO_PRESET_DDR50_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEB 0x0u
#define EMMC_CRYPTO_PRESET_DDR50_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEC 0x2u
#define EMMC_CRYPTO_PRESET_DDR50_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPED 0x3u

/* Enumeration: emmc::crypto::PRESET_DS_R::CLK_GEN_SEL_VAL::CLK_GEN_SEL_VAL */
#define EMMC_CRYPTO_PRESET_DS_R_CLK_GEN_SEL_VAL_CLK_GEN_SEL_VAL_FALSE 0x0u
#define EMMC_CRYPTO_PRESET_DS_R_CLK_GEN_SEL_VAL_CLK_GEN_SEL_VAL_PROG 0x1u

/* Enumeration: emmc::crypto::PRESET_DS_R::DRV_SEL_VAL::DRV_SEL_VAL        */
#define EMMC_CRYPTO_PRESET_DS_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEA 0x1u
#define EMMC_CRYPTO_PRESET_DS_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEB 0x0u
#define EMMC_CRYPTO_PRESET_DS_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEC 0x2u
#define EMMC_CRYPTO_PRESET_DS_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPED 0x3u

/* Enumeration: emmc::crypto::PRESET_HS_R::CLK_GEN_SEL_VAL::CLK_GEN_SEL_VAL */
#define EMMC_CRYPTO_PRESET_HS_R_CLK_GEN_SEL_VAL_CLK_GEN_SEL_VAL_FALSE 0x0u
#define EMMC_CRYPTO_PRESET_HS_R_CLK_GEN_SEL_VAL_CLK_GEN_SEL_VAL_PROG 0x1u

/* Enumeration: emmc::crypto::PRESET_HS_R::DRV_SEL_VAL::DRV_SEL_VAL        */
#define EMMC_CRYPTO_PRESET_HS_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEA 0x1u
#define EMMC_CRYPTO_PRESET_HS_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEB 0x0u
#define EMMC_CRYPTO_PRESET_HS_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEC 0x2u
#define EMMC_CRYPTO_PRESET_HS_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPED 0x3u

/* Enumeration: emmc::crypto::PRESET_INIT_R::CLK_GEN_SEL_VAL::CLK_GEN_SEL_VAL */
#define EMMC_CRYPTO_PRESET_INIT_R_CLK_GEN_SEL_VAL_CLK_GEN_SEL_VAL_FALSE 0x0u
#define EMMC_CRYPTO_PRESET_INIT_R_CLK_GEN_SEL_VAL_CLK_GEN_SEL_VAL_PROG 0x1u

/* Enumeration: emmc::crypto::PRESET_INIT_R::DRV_SEL_VAL::DRV_SEL_VAL      */
#define EMMC_CRYPTO_PRESET_INIT_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEA 0x1u
#define EMMC_CRYPTO_PRESET_INIT_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEB 0x0u
#define EMMC_CRYPTO_PRESET_INIT_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEC 0x2u
#define EMMC_CRYPTO_PRESET_INIT_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPED 0x3u

/* Enumeration: emmc::crypto::PRESET_SDR104_R::CLK_GEN_SEL_VAL::CLK_GEN_SEL_VAL */
#define EMMC_CRYPTO_PRESET_SDR104_R_CLK_GEN_SEL_VAL_CLK_GEN_SEL_VAL_FALSE 0x0u
#define EMMC_CRYPTO_PRESET_SDR104_R_CLK_GEN_SEL_VAL_CLK_GEN_SEL_VAL_PROG 0x1u

/* Enumeration: emmc::crypto::PRESET_SDR104_R::DRV_SEL_VAL::DRV_SEL_VAL    */
#define EMMC_CRYPTO_PRESET_SDR104_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEA 0x1u
#define EMMC_CRYPTO_PRESET_SDR104_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEB 0x0u
#define EMMC_CRYPTO_PRESET_SDR104_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEC 0x2u
#define EMMC_CRYPTO_PRESET_SDR104_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPED 0x3u

/* Enumeration: emmc::crypto::PRESET_SDR12_R::CLK_GEN_SEL_VAL::CLK_GEN_SEL_VAL */
#define EMMC_CRYPTO_PRESET_SDR12_R_CLK_GEN_SEL_VAL_CLK_GEN_SEL_VAL_FALSE 0x0u
#define EMMC_CRYPTO_PRESET_SDR12_R_CLK_GEN_SEL_VAL_CLK_GEN_SEL_VAL_PROG 0x1u

/* Enumeration: emmc::crypto::PRESET_SDR12_R::DRV_SEL_VAL::DRV_SEL_VAL     */
#define EMMC_CRYPTO_PRESET_SDR12_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEA 0x1u
#define EMMC_CRYPTO_PRESET_SDR12_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEB 0x0u
#define EMMC_CRYPTO_PRESET_SDR12_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEC 0x2u
#define EMMC_CRYPTO_PRESET_SDR12_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPED 0x3u

/* Enumeration: emmc::crypto::PRESET_SDR25_R::CLK_GEN_SEL_VAL::CLK_GEN_SEL_VAL */
#define EMMC_CRYPTO_PRESET_SDR25_R_CLK_GEN_SEL_VAL_CLK_GEN_SEL_VAL_FALSE 0x0u
#define EMMC_CRYPTO_PRESET_SDR25_R_CLK_GEN_SEL_VAL_CLK_GEN_SEL_VAL_PROG 0x1u

/* Enumeration: emmc::crypto::PRESET_SDR25_R::DRV_SEL_VAL::DRV_SEL_VAL     */
#define EMMC_CRYPTO_PRESET_SDR25_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEA 0x1u
#define EMMC_CRYPTO_PRESET_SDR25_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEB 0x0u
#define EMMC_CRYPTO_PRESET_SDR25_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEC 0x2u
#define EMMC_CRYPTO_PRESET_SDR25_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPED 0x3u

/* Enumeration: emmc::crypto::PRESET_SDR50_R::CLK_GEN_SEL_VAL::CLK_GEN_SEL_VAL */
#define EMMC_CRYPTO_PRESET_SDR50_R_CLK_GEN_SEL_VAL_CLK_GEN_SEL_VAL_FALSE 0x0u
#define EMMC_CRYPTO_PRESET_SDR50_R_CLK_GEN_SEL_VAL_CLK_GEN_SEL_VAL_PROG 0x1u

/* Enumeration: emmc::crypto::PRESET_SDR50_R::DRV_SEL_VAL::DRV_SEL_VAL     */
#define EMMC_CRYPTO_PRESET_SDR50_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEA 0x1u
#define EMMC_CRYPTO_PRESET_SDR50_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEB 0x0u
#define EMMC_CRYPTO_PRESET_SDR50_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEC 0x2u
#define EMMC_CRYPTO_PRESET_SDR50_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPED 0x3u

/* Enumeration: emmc::crypto::PRESET_UHS2_R::CLK_GEN_SEL_VAL::CLK_GEN_SEL_VAL */
#define EMMC_CRYPTO_PRESET_UHS2_R_CLK_GEN_SEL_VAL_CLK_GEN_SEL_VAL_FALSE 0x0u
#define EMMC_CRYPTO_PRESET_UHS2_R_CLK_GEN_SEL_VAL_CLK_GEN_SEL_VAL_PROG 0x1u

/* Enumeration: emmc::crypto::PRESET_UHS2_R::DRV_SEL_VAL::DRV_SEL_VAL      */
#define EMMC_CRYPTO_PRESET_UHS2_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEA 0x1u
#define EMMC_CRYPTO_PRESET_UHS2_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEB 0x0u
#define EMMC_CRYPTO_PRESET_UHS2_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPEC 0x2u
#define EMMC_CRYPTO_PRESET_UHS2_R_DRV_SEL_VAL_DRV_SEL_VAL_TYPED 0x3u

/* Enumeration: emmc::crypto::PSTATE_REG::BUF_RD_ENABLE::BUF_RD_ENABLE     */
#define EMMC_CRYPTO_PSTATE_REG_BUF_RD_ENABLE_BUF_RD_ENABLE_DISABLED 0x0u
#define EMMC_CRYPTO_PSTATE_REG_BUF_RD_ENABLE_BUF_RD_ENABLE_ENABLED 0x1u

/* Enumeration: emmc::crypto::PSTATE_REG::BUF_WR_ENABLE::BUF_WR_ENABLE     */
#define EMMC_CRYPTO_PSTATE_REG_BUF_WR_ENABLE_BUF_WR_ENABLE_DISABLED 0x0u
#define EMMC_CRYPTO_PSTATE_REG_BUF_WR_ENABLE_BUF_WR_ENABLE_ENABLED 0x1u

/* Enumeration: emmc::crypto::PSTATE_REG::CARD_DETECT_PIN_LEVEL::CARD_DETECT_PIN_LEVEL */
#define EMMC_CRYPTO_PSTATE_REG_CARD_DETECT_PIN_LEVEL_CARD_DETECT_PIN_LEVEL_FALSE 0x0u
#define EMMC_CRYPTO_PSTATE_REG_CARD_DETECT_PIN_LEVEL_CARD_DETECT_PIN_LEVEL_TRUE 0x1u

/* Enumeration: emmc::crypto::PSTATE_REG::CARD_INSERTED::CARD_INSERTED     */
#define EMMC_CRYPTO_PSTATE_REG_CARD_INSERTED_CARD_INSERTED_FALSE 0x0u
#define EMMC_CRYPTO_PSTATE_REG_CARD_INSERTED_CARD_INSERTED_TRUE 0x1u

/* Enumeration: emmc::crypto::PSTATE_REG::CARD_STABLE::CARD_STABLE         */
#define EMMC_CRYPTO_PSTATE_REG_CARD_STABLE_CARD_STABLE_FALSE 0x0u
#define EMMC_CRYPTO_PSTATE_REG_CARD_STABLE_CARD_STABLE_TRUE 0x1u

/* Enumeration: emmc::crypto::PSTATE_REG::CMD_INHIBIT::CMD_INHIBIT         */
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_CMD_INHIBIT_NOT_READY 0x1u
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_CMD_INHIBIT_READY 0x0u

/* Enumeration: emmc::crypto::PSTATE_REG::CMD_INHIBIT_DAT::CMD_INHIBIT_DAT */
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_DAT_CMD_INHIBIT_DAT_NOT_READY 0x1u
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_DAT_CMD_INHIBIT_DAT_READY 0x0u

/* Enumeration: emmc::crypto::PSTATE_REG::CMD_ISSUE_ERR::CMD_ISSUE_ERR     */
#define EMMC_CRYPTO_PSTATE_REG_CMD_ISSUE_ERR_CMD_ISSUE_ERR_FALSE 0x0u
#define EMMC_CRYPTO_PSTATE_REG_CMD_ISSUE_ERR_CMD_ISSUE_ERR_TRUE 0x1u

/* Enumeration: emmc::crypto::PSTATE_REG::DAT_LINE_ACTIVE::DAT_LINE_ACTIVE */
#define EMMC_CRYPTO_PSTATE_REG_DAT_LINE_ACTIVE_DAT_LINE_ACTIVE_ACTIVE 0x1u
#define EMMC_CRYPTO_PSTATE_REG_DAT_LINE_ACTIVE_DAT_LINE_ACTIVE_INACTIVE 0x0u

/* Enumeration: emmc::crypto::PSTATE_REG::HOST_REG_VOL::HOST_REG_VOL       */
#define EMMC_CRYPTO_PSTATE_REG_HOST_REG_VOL_HOST_REG_VOL_FALSE 0x0u
#define EMMC_CRYPTO_PSTATE_REG_HOST_REG_VOL_HOST_REG_VOL_TRUE 0x1u

/* Enumeration: emmc::crypto::PSTATE_REG::IN_DORMANT_ST::IN_DORMANT_ST     */
#define EMMC_CRYPTO_PSTATE_REG_IN_DORMANT_ST_IN_DORMANT_ST_FALSE 0x0u
#define EMMC_CRYPTO_PSTATE_REG_IN_DORMANT_ST_IN_DORMANT_ST_TRUE 0x1u

/* Enumeration: emmc::crypto::PSTATE_REG::LANE_SYNC::LANE_SYNC             */
#define EMMC_CRYPTO_PSTATE_REG_LANE_SYNC_LANE_SYNC_FALSE 0x0u
#define EMMC_CRYPTO_PSTATE_REG_LANE_SYNC_LANE_SYNC_TRUE 0x1u

/* Enumeration: emmc::crypto::PSTATE_REG::RD_XFER_ACTIVE::RD_XFER_ACTIVE   */
#define EMMC_CRYPTO_PSTATE_REG_RD_XFER_ACTIVE_RD_XFER_ACTIVE_ACTIVE 0x1u
#define EMMC_CRYPTO_PSTATE_REG_RD_XFER_ACTIVE_RD_XFER_ACTIVE_INACTIVE 0x0u

/* Enumeration: emmc::crypto::PSTATE_REG::SUB_CMD_STAT::SUB_CMD_STAT       */
#define EMMC_CRYPTO_PSTATE_REG_SUB_CMD_STAT_SUB_CMD_STAT_FALSE 0x0u
#define EMMC_CRYPTO_PSTATE_REG_SUB_CMD_STAT_SUB_CMD_STAT_TRUE 0x1u

/* Enumeration: emmc::crypto::PSTATE_REG::UHS2_IF_DETECT::UHS2_IF_DETECT   */
#define EMMC_CRYPTO_PSTATE_REG_UHS2_IF_DETECT_UHS2_IF_DETECT_FALSE 0x0u
#define EMMC_CRYPTO_PSTATE_REG_UHS2_IF_DETECT_UHS2_IF_DETECT_TRUE 0x1u

/* Enumeration: emmc::crypto::PSTATE_REG::WR_PROTECT_SW_LVL::WR_PROTECT_SW_LVL */
#define EMMC_CRYPTO_PSTATE_REG_WR_PROTECT_SW_LVL_WR_PROTECT_SW_LVL_FALSE 0x0u
#define EMMC_CRYPTO_PSTATE_REG_WR_PROTECT_SW_LVL_WR_PROTECT_SW_LVL_TRUE 0x1u

/* Enumeration: emmc::crypto::PSTATE_REG::WR_XFER_ACTIVE::WR_XFER_ACTIVE   */
#define EMMC_CRYPTO_PSTATE_REG_WR_XFER_ACTIVE_WR_XFER_ACTIVE_ACTIVE 0x1u
#define EMMC_CRYPTO_PSTATE_REG_WR_XFER_ACTIVE_WR_XFER_ACTIVE_INACTIVE 0x0u

/* Enumeration: emmc::crypto::PWR_CTRL_R::SD_BUS_PWR_VDD1::SD_BUS_PWR_VDD1 */
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD1_SD_BUS_PWR_VDD1_OFF 0x0u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD1_SD_BUS_PWR_VDD1_ON 0x1u

/* Enumeration: emmc::crypto::PWR_CTRL_R::SD_BUS_PWR_VDD2::SD_BUS_PWR_VDD2 */
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD2_SD_BUS_PWR_VDD2_OFF 0x0u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD2_SD_BUS_PWR_VDD2_ON 0x1u

/* Enumeration: emmc::crypto::PWR_CTRL_R::SD_BUS_VOL_VDD1::SD_BUS_VOL_VDD1 */
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD1_SD_BUS_VOL_VDD1_RSVD0 0x0u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD1_SD_BUS_VOL_VDD1_RSVD1 0x1u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD1_SD_BUS_VOL_VDD1_RSVD2 0x2u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD1_SD_BUS_VOL_VDD1_RSVD3 0x3u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD1_SD_BUS_VOL_VDD1_RSVD4 0x4u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD1_SD_BUS_VOL_VDD1_V_1_8 0x5u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD1_SD_BUS_VOL_VDD1_V_3_0 0x6u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD1_SD_BUS_VOL_VDD1_V_3_3 0x7u

/* Enumeration: emmc::crypto::PWR_CTRL_R::SD_BUS_VOL_VDD2::SD_BUS_VOL_VDD2 */
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD2_SD_BUS_VOL_VDD2_NOT_USED6 0x6u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD2_SD_BUS_VOL_VDD2_NOT_USED7 0x7u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD2_SD_BUS_VOL_VDD2_NO_VDD2 0x0u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD2_SD_BUS_VOL_VDD2_RSVD1 0x1u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD2_SD_BUS_VOL_VDD2_RSVD2 0x2u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD2_SD_BUS_VOL_VDD2_RSVD3 0x3u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD2_SD_BUS_VOL_VDD2_V_1_2 0x4u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD2_SD_BUS_VOL_VDD2_V_1_8 0x5u

/* Enumeration: emmc::crypto::SW_RST_R::SW_RST_ALL::SW_RST_ALL             */
#define EMMC_CRYPTO_SW_RST_R_SW_RST_ALL_SW_RST_ALL_FALSE 0x0u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_ALL_SW_RST_ALL_TRUE 0x1u

/* Enumeration: emmc::crypto::SW_RST_R::SW_RST_CMD::SW_RST_CMD             */
#define EMMC_CRYPTO_SW_RST_R_SW_RST_CMD_SW_RST_CMD_FALSE 0x0u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_CMD_SW_RST_CMD_TRUE 0x1u

/* Enumeration: emmc::crypto::SW_RST_R::SW_RST_DAT::SW_RST_DAT             */
#define EMMC_CRYPTO_SW_RST_R_SW_RST_DAT_SW_RST_DAT_FALSE 0x0u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_DAT_SW_RST_DAT_TRUE 0x1u

/* Enumeration: emmc::crypto::WUP_CTRL_R::CARD_INSERT::CARD_INSERT         */
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INSERT_CARD_INSERT_DISABLED 0x0u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INSERT_CARD_INSERT_ENABLED 0x1u

/* Enumeration: emmc::crypto::WUP_CTRL_R::CARD_INT::CARD_INT               */
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INT_CARD_INT_DISABLED 0x0u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INT_CARD_INT_ENABLED 0x1u

/* Enumeration: emmc::crypto::WUP_CTRL_R::CARD_REMOVAL::CARD_REMOVAL       */
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_REMOVAL_CARD_REMOVAL_DISABLED 0x0u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_REMOVAL_CARD_REMOVAL_ENABLED 0x1u

/* Enumeration: emmc::crypto::XFER_MODE_R::AUTO_CMD_ENABLE::AUTO_CMD_ENABLE */
#define EMMC_CRYPTO_XFER_MODE_R_AUTO_CMD_ENABLE_AUTO_CMD_ENABLE_AUTO_CMD12_ENABLED 0x1u
#define EMMC_CRYPTO_XFER_MODE_R_AUTO_CMD_ENABLE_AUTO_CMD_ENABLE_AUTO_CMD23_ENABLED 0x2u
#define EMMC_CRYPTO_XFER_MODE_R_AUTO_CMD_ENABLE_AUTO_CMD_ENABLE_AUTO_CMD_AUTO_SEL 0x3u
#define EMMC_CRYPTO_XFER_MODE_R_AUTO_CMD_ENABLE_AUTO_CMD_ENABLE_AUTO_CMD_DISABLED 0x0u

/* Enumeration: emmc::crypto::XFER_MODE_R::BLOCK_COUNT_ENABLE::BLOCK_COUNT_ENABLE */
#define EMMC_CRYPTO_XFER_MODE_R_BLOCK_COUNT_ENABLE_BLOCK_COUNT_ENABLE_DISABLED 0x0u
#define EMMC_CRYPTO_XFER_MODE_R_BLOCK_COUNT_ENABLE_BLOCK_COUNT_ENABLE_ENABLED 0x1u

/* Enumeration: emmc::crypto::XFER_MODE_R::DATA_XFER_DIR::DATA_XFER_DIR    */
#define EMMC_CRYPTO_XFER_MODE_R_DATA_XFER_DIR_DATA_XFER_DIR_READ 0x1u
#define EMMC_CRYPTO_XFER_MODE_R_DATA_XFER_DIR_DATA_XFER_DIR_WRITE 0x0u

/* Enumeration: emmc::crypto::XFER_MODE_R::DMA_ENABLE::DMA_ENABLE          */
#define EMMC_CRYPTO_XFER_MODE_R_DMA_ENABLE_DMA_ENABLE_DISABLED 0x0u
#define EMMC_CRYPTO_XFER_MODE_R_DMA_ENABLE_DMA_ENABLE_ENABLED 0x1u

/* Enumeration: emmc::crypto::XFER_MODE_R::MULTI_BLK_SEL::MULTI_BLK_SEL    */
#define EMMC_CRYPTO_XFER_MODE_R_MULTI_BLK_SEL_MULTI_BLK_SEL_MULTI 0x1u
#define EMMC_CRYPTO_XFER_MODE_R_MULTI_BLK_SEL_MULTI_BLK_SEL_SINGLE 0x0u

/* Enumeration: emmc::crypto::XFER_MODE_R::RESP_ERR_CHK_ENABLE::RESP_ERR_CHK_ENABLE */
#define EMMC_CRYPTO_XFER_MODE_R_RESP_ERR_CHK_ENABLE_RESP_ERR_CHK_ENABLE_DISABLED 0x0u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_ERR_CHK_ENABLE_RESP_ERR_CHK_ENABLE_ENABLED 0x1u

/* Enumeration: emmc::crypto::XFER_MODE_R::RESP_INT_DISABLE::RESP_INT_DISABLE */
#define EMMC_CRYPTO_XFER_MODE_R_RESP_INT_DISABLE_RESP_INT_DISABLE_DISABLED 0x1u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_INT_DISABLE_RESP_INT_DISABLE_ENABLED 0x0u

/* Enumeration: emmc::crypto::XFER_MODE_R::RESP_TYPE::RESP_TYPE            */
#define EMMC_CRYPTO_XFER_MODE_R_RESP_TYPE_RESP_TYPE_RESP_R1 0x0u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_TYPE_RESP_TYPE_RESP_R5 0x1u

/* Enumeration: emmc::crypto_phy::ATDL_CNFG::BYPASS_EN::BYPASS_EN          */
#define EMMC_CRYPTO_PHY_ATDL_CNFG_BYPASS_EN_BYPASS_EN_BYPASSMODE 0x1u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_BYPASS_EN_BYPASS_EN_DLMODE 0x0u

/* Enumeration: emmc::crypto_phy::ATDL_CNFG::EXTDLY_EN::EXTDLY_EN          */
#define EMMC_CRYPTO_PHY_ATDL_CNFG_EXTDLY_EN_EXTDLY_EN_DEF_MODE 0x0u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_EXTDLY_EN_EXTDLY_EN_EXTDL_MODE 0x1u

/* Enumeration: emmc::crypto_phy::CLKPAD_CNFG::WEAKPULL_EN::WEAKPULL_EN    */
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_DISABLED 0x0u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_ILLEGAL 0x3u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_PULLDOWN 0x2u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_PULLUP 0x1u

/* Enumeration: emmc::crypto_phy::CMDPAD_CNFG::WEAKPULL_EN::WEAKPULL_EN    */
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_DISABLED 0x0u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_ILLEGAL 0x3u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_PULLDOWN 0x2u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_PULLUP 0x1u

/* Enumeration: emmc::crypto_phy::COMMDL_CNFG::DLOUT_EN::DLOUT_EN          */
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLOUT_EN_DLOUT_EN_DL_OUTDIS 0x0u
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLOUT_EN_DLOUT_EN_DL_OUTEN 0x1u

/* Enumeration: emmc::crypto_phy::DATPAD_CNFG::WEAKPULL_EN::WEAKPULL_EN    */
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_DISABLED 0x0u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_ILLEGAL 0x3u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_PULLDOWN 0x2u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_PULLUP 0x1u

/* Enumeration: emmc::crypto_phy::DLL_CTRL::DLL_EN::DLL_EN                 */
#define EMMC_CRYPTO_PHY_DLL_CTRL_DLL_EN_DLL_EN_DLLDISABLE 0x0u
#define EMMC_CRYPTO_PHY_DLL_CTRL_DLL_EN_DLL_EN_DLLENABLE 0x1u

/* Enumeration: emmc::crypto_phy::DLL_CTRL::OFFST_EN::OFFST_EN             */
#define EMMC_CRYPTO_PHY_DLL_CTRL_OFFST_EN_OFFST_EN_OFFSTDIS 0x0u
#define EMMC_CRYPTO_PHY_DLL_CTRL_OFFST_EN_OFFST_EN_OFFSTEN 0x1u

/* Enumeration: emmc::crypto_phy::DLL_CTRL::SLV_SWDC_UPDATE::SLV_SWDC_UPDATE */
#define EMMC_CRYPTO_PHY_DLL_CTRL_SLV_SWDC_UPDATE_SLV_SWDC_UPDATE_DL_OUT_OFF 0x1u
#define EMMC_CRYPTO_PHY_DLL_CTRL_SLV_SWDC_UPDATE_SLV_SWDC_UPDATE_DL_OUT_ON 0x0u

/* Enumeration: emmc::crypto_phy::DLL_STATUS::ERROR_STS::ERROR_STS         */
#define EMMC_CRYPTO_PHY_DLL_STATUS_ERROR_STS_ERROR_STS_DLL_ERROR 0x1u
#define EMMC_CRYPTO_PHY_DLL_STATUS_ERROR_STS_ERROR_STS_DLL_LOCK_OKAY 0x0u

/* Enumeration: emmc::crypto_phy::DLL_STATUS::LOCK_STS::LOCK_STS           */
#define EMMC_CRYPTO_PHY_DLL_STATUS_LOCK_STS_LOCK_STS_DLL_IS_LOCKED 0x1u
#define EMMC_CRYPTO_PHY_DLL_STATUS_LOCK_STS_LOCK_STS_DLL_NOT_LOCKED 0x0u

/* Enumeration: emmc::crypto_phy::PADTEST_CNFG::TESTMODE_EN::TESTMODE_EN   */
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TESTMODE_EN_TESTMODE_EN_PAD_FUNCMODE 0x0u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TESTMODE_EN_TESTMODE_EN_PAD_TESTMODE 0x1u

/* Enumeration: emmc::crypto_phy::PHYLPBK_CNFG::OUT_EN_PHYLPBK_MODE::OUT_EN_PHYLPBK_MODE */
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_OUT_EN_PHYLPBK_MODE_OUT_EN_PHYLPBK_MODE_OUTPUT_DIS 0x0u
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_OUT_EN_PHYLPBK_MODE_OUT_EN_PHYLPBK_MODE_OUTPUT_EN 0x1u

/* Enumeration: emmc::crypto_phy::PHYLPBK_CNFG::PHYLPBK_EN::PHYLPBK_EN     */
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_PHYLPBK_EN_PHYLPBK_EN_PHYLPBK_MODE_DIS 0x0u
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_PHYLPBK_EN_PHYLPBK_EN_PHYLPBK_MODE_EN 0x1u

/* Enumeration: emmc::crypto_phy::RSTNPAD_CNFG::WEAKPULL_EN::WEAKPULL_EN   */
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_DISABLED 0x0u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_ILLEGAL 0x3u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_PULLDOWN 0x2u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_PULLUP 0x1u

/* Enumeration: emmc::crypto_phy::SDCLKDL_CNFG::BYPASS_EN::BYPASS_EN       */
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_BYPASS_EN_BYPASS_EN_BYPASSMODE 0x1u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_BYPASS_EN_BYPASS_EN_DLMODE 0x0u

/* Enumeration: emmc::crypto_phy::SDCLKDL_CNFG::EXTDLY_EN::EXTDLY_EN       */
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_EXTDLY_EN_EXTDLY_EN_DEF_MODE 0x0u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_EXTDLY_EN_EXTDLY_EN_EXTDL_MODE 0x1u

/* Enumeration: emmc::crypto_phy::SDCLKDL_CNFG::UPDATE_DC::UPDATE_DC       */
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_UPDATE_DC_UPDATE_DC_BYPASSMODE 0x1u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_UPDATE_DC_UPDATE_DC_DLMODE 0x0u

/* Enumeration: emmc::crypto_phy::SMPLDL_CNFG::BYPASS_EN::BYPASS_EN        */
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_BYPASS_EN_BYPASS_EN_BYPASSMODE 0x1u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_BYPASS_EN_BYPASS_EN_DLMODE 0x0u

/* Enumeration: emmc::crypto_phy::SMPLDL_CNFG::EXTDLY_EN::EXTDLY_EN        */
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_EXTDLY_EN_EXTDLY_EN_DEF_MODE 0x0u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_EXTDLY_EN_EXTDLY_EN_EXTDL_MODE 0x1u

/* Enumeration: emmc::crypto_phy::STBPAD_CNFG::WEAKPULL_EN::WEAKPULL_EN    */
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_DISABLED 0x0u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_ILLEGAL 0x3u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_PULLDOWN 0x2u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_WEAKPULL_EN_WEAKPULL_EN_PULLUP 0x1u

/* Enumeration: emmc::crypto_vendor1::AT_CTRL_R::AT_EN::AT_EN              */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_AT_EN_AT_EN_AT_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_AT_EN_AT_EN_AT_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor1::AT_CTRL_R::CI_SEL::CI_SEL            */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_CI_SEL_CI_SEL_WHEN_IN_BLK_GAP 0x0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_CI_SEL_CI_SEL_WHEN_IN_IDLE 0x1u

/* Enumeration: emmc::crypto_vendor1::AT_CTRL_R::POST_CHANGE_DLY::POST_CHANGE_DLY */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_POST_CHANGE_DLY_POST_CHANGE_DLY_LATENCY_LT_1 0x0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_POST_CHANGE_DLY_POST_CHANGE_DLY_LATENCY_LT_2 0x1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_POST_CHANGE_DLY_POST_CHANGE_DLY_LATENCY_LT_3 0x2u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_POST_CHANGE_DLY_POST_CHANGE_DLY_LATENCY_LT_4 0x3u

/* Enumeration: emmc::crypto_vendor1::AT_CTRL_R::PRE_CHANGE_DLY::PRE_CHANGE_DLY */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_PRE_CHANGE_DLY_PRE_CHANGE_DLY_LATENCY_LT_1 0x0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_PRE_CHANGE_DLY_PRE_CHANGE_DLY_LATENCY_LT_2 0x1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_PRE_CHANGE_DLY_PRE_CHANGE_DLY_LATENCY_LT_3 0x2u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_PRE_CHANGE_DLY_PRE_CHANGE_DLY_LATENCY_LT_4 0x3u

/* Enumeration: emmc::crypto_vendor1::AT_CTRL_R::RPT_TUNE_ERR::RPT_TUNE_ERR */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RPT_TUNE_ERR_RPT_TUNE_ERR_DEBUG_ERRORS 0x1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RPT_TUNE_ERR_RPT_TUNE_ERR_ERRORS_DISABLED 0x0u

/* Enumeration: emmc::crypto_vendor1::AT_CTRL_R::SWIN_TH_EN::SWIN_TH_EN    */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_EN_SWIN_TH_EN_LARGEST_WIN_MODE 0x0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_EN_SWIN_TH_EN_THRESHOLD_MODE 0x1u

/* Enumeration: emmc::crypto_vendor1::AT_CTRL_R::SW_TUNE_EN::SW_TUNE_EN    */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SW_TUNE_EN_SW_TUNE_EN_SW_TUNING_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SW_TUNE_EN_SW_TUNE_EN_SW_TUNING_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor1::AT_CTRL_R::TUNE_CLK_STOP_EN::TUNE_CLK_STOP_EN */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_TUNE_CLK_STOP_EN_TUNE_CLK_STOP_EN_DISABLE_CLK_STOPPING 0x0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_TUNE_CLK_STOP_EN_TUNE_CLK_STOP_EN_ENABLE_CLK_STOPPING 0x1u

/* Enumeration: emmc::crypto_vendor1::BOOT_CTRL_R::BOOT_ACK_ENABLE::BOOT_ACK_ENABLE */
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_ACK_ENABLE_BOOT_ACK_ENABLE_FALSE 0x0u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_ACK_ENABLE_BOOT_ACK_ENABLE_TRUE 0x1u

/* Enumeration: emmc::crypto_vendor1::BOOT_CTRL_R::MAN_BOOT_EN::MAN_BOOT_EN */
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_MAN_BOOT_EN_MAN_BOOT_EN_MAN_BOOT_DIS 0x0u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_MAN_BOOT_EN_MAN_BOOT_EN_MAN_BOOT_EN 0x1u

/* Enumeration: emmc::crypto_vendor1::BOOT_CTRL_R::VALIDATE_BOOT::VALIDATE_BOOT */
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_VALIDATE_BOOT_VALIDATE_BOOT_FALSE 0x0u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_VALIDATE_BOOT_VALIDATE_BOOT_TRUE 0x1u

/* Enumeration: emmc::crypto_vendor1::EMMC_CTRL_R::CARD_IS_EMMC::CARD_IS_EMMC */
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_CARD_IS_EMMC_CARD_IS_EMMC_EMMC_CARD 0x1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_CARD_IS_EMMC_CARD_IS_EMMC_NON_EMMC_CARD 0x0u

/* Enumeration: emmc::crypto_vendor1::EMMC_CTRL_R::DISABLE_DATA_CRC_CHK::DISABLE_DATA_CRC_CHK */
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_DISABLE_DATA_CRC_CHK_DISABLE_DATA_CRC_CHK_DISABLE 0x1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_DISABLE_DATA_CRC_CHK_DISABLE_DATA_CRC_CHK_ENABLE 0x0u

/* Enumeration: emmc::crypto_vendor1::EMMC_CTRL_R::EMMC_RST_N::EMMC_RST_N  */
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_EMMC_RST_N_RST_ASSERT 0x0u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_EMMC_RST_N_RST_DEASSERT 0x1u

/* Enumeration: emmc::crypto_vendor1::EMMC_CTRL_R::EMMC_RST_N_OE::EMMC_RST_N_OE */
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_OE_EMMC_RST_N_OE_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_OE_EMMC_RST_N_OE_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor1::EMMC_CTRL_R::ENH_STROBE_ENABLE::ENH_STROBE_ENABLE */
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_ENH_STROBE_ENABLE_ENH_STROBE_ENABLE_ENH_STB_FOR_CMD 0x1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_ENH_STROBE_ENABLE_ENH_STROBE_ENABLE_NO_STB_FOR_CMD 0x0u

/* Enumeration: emmc::crypto_vendor1::MBIU_CTRL_R::BURST_INCR16_EN::BURST_INCR16_EN */
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR16_EN_BURST_INCR16_EN_FALSE 0x0u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR16_EN_BURST_INCR16_EN_TRUE 0x1u

/* Enumeration: emmc::crypto_vendor1::MBIU_CTRL_R::BURST_INCR4_EN::BURST_INCR4_EN */
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR4_EN_BURST_INCR4_EN_FALSE 0x0u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR4_EN_BURST_INCR4_EN_TRUE 0x1u

/* Enumeration: emmc::crypto_vendor1::MBIU_CTRL_R::BURST_INCR8_EN::BURST_INCR8_EN */
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR8_EN_BURST_INCR8_EN_FALSE 0x0u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR8_EN_BURST_INCR8_EN_TRUE 0x1u

/* Enumeration: emmc::crypto_vendor1::MBIU_CTRL_R::UNDEFL_INCR_EN::UNDEFL_INCR_EN */
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_UNDEFL_INCR_EN_UNDEFL_INCR_EN_FALSE 0x0u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_UNDEFL_INCR_EN_UNDEFL_INCR_EN_TRUE 0x1u

/* Enumeration: emmc::crypto_vendor1::MSHC_CTRL_R::CMD_CONFLICT_CHECK::CMD_CONFLICT_CHECK */
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_CMD_CONFLICT_CHECK_CMD_CONFLICT_CHECK_CMD_CONFLICT_CHK_LAT1 0x1u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_CMD_CONFLICT_CHECK_CMD_CONFLICT_CHECK_DISABLE_CMD_CONFLICT_CHK 0x0u

/* Enumeration: emmc::crypto_vendor1::MSHC_CTRL_R::SW_CG_DIS::SW_CG_DIS    */
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_SW_CG_DIS_SW_CG_DIS_DISABLE 0x1u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_SW_CG_DIS_SW_CG_DIS_ENABLE 0x0u

/* Enumeration: emmc::crypto_vendor2::CQCAP::CRYPTO_SUPPORT::CRYPTO_SUPPORT */
#define EMMC_CRYPTO_VENDOR2_CQCAP_CRYPTO_SUPPORT_CRYPTO_SUPPORT_FALSE 0x0u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CRYPTO_SUPPORT_CRYPTO_SUPPORT_TRUE 0x1u

/* Enumeration: emmc::crypto_vendor2::CQCAP::ITCFMUL::ITCFMUL              */
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFMUL_ITCFMUL_CLK_100KHZ 0x2u
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFMUL_ITCFMUL_CLK_10KHZ 0x1u
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFMUL_ITCFMUL_CLK_10MHZ 0x4u
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFMUL_ITCFMUL_CLK_1KHZ 0x0u
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFMUL_ITCFMUL_CLK_1MHZ 0x3u

/* Enumeration: emmc::crypto_vendor2::CQCFG::CR_GENERAL_EN::CR_GENERAL_EN  */
#define EMMC_CRYPTO_VENDOR2_CQCFG_CR_GENERAL_EN_CR_GENERAL_EN_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CR_GENERAL_EN_CR_GENERAL_EN_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor2::CRNQIE::GCE_IE::GCE_IE               */
#define EMMC_CRYPTO_VENDOR2_CRNQIE_GCE_IE_GCE_IE_INT_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_GCE_IE_GCE_IE_INT_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor2::CRNQIE::ICCE_IE::ICCE_IE             */
#define EMMC_CRYPTO_VENDOR2_CRNQIE_ICCE_IE_ICCE_IE_INT_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_ICCE_IE_ICCE_IE_INT_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor2::CRNQIS::GCE::GCE                     */
#define EMMC_CRYPTO_VENDOR2_CRNQIS_GCE_GCE_SET 0x1u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_GCE_GCE_UNSET 0x0u

/* Enumeration: emmc::crypto_vendor2::CRNQIS::ICCE::ICCE                   */
#define EMMC_CRYPTO_VENDOR2_CRNQIS_ICCE_ICCE_SET 0x1u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_ICCE_ICCE_UNSET 0x0u

/* Enumeration: emmc::crypto_vendor2::CRNQP::CE::CE                        */
#define EMMC_CRYPTO_VENDOR2_CRNQP_CE_CE_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CRNQP_CE_CE_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor2::CRYPTOCFG_0_16::CFGE_0::CFGE_0       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CFGE_0_CFGE_0_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CFGE_0_CFGE_0_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor2::CRYPTOCFG_10_16::CFGE_10::CFGE_10    */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CFGE_10_CFGE_10_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CFGE_10_CFGE_10_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor2::CRYPTOCFG_11_16::CFGE_11::CFGE_11    */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CFGE_11_CFGE_11_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CFGE_11_CFGE_11_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor2::CRYPTOCFG_12_16::CFGE_12::CFGE_12    */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CFGE_12_CFGE_12_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CFGE_12_CFGE_12_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor2::CRYPTOCFG_13_16::CFGE_13::CFGE_13    */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CFGE_13_CFGE_13_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CFGE_13_CFGE_13_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor2::CRYPTOCFG_14_16::CFGE_14::CFGE_14    */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CFGE_14_CFGE_14_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CFGE_14_CFGE_14_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor2::CRYPTOCFG_15_16::CFGE_15::CFGE_15    */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CFGE_15_CFGE_15_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CFGE_15_CFGE_15_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor2::CRYPTOCFG_1_16::CFGE_1::CFGE_1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CFGE_1_CFGE_1_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CFGE_1_CFGE_1_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor2::CRYPTOCFG_2_16::CFGE_2::CFGE_2       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CFGE_2_CFGE_2_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CFGE_2_CFGE_2_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor2::CRYPTOCFG_3_16::CFGE_3::CFGE_3       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CFGE_3_CFGE_3_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CFGE_3_CFGE_3_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor2::CRYPTOCFG_4_16::CFGE_4::CFGE_4       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CFGE_4_CFGE_4_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CFGE_4_CFGE_4_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor2::CRYPTOCFG_5_16::CFGE_5::CFGE_5       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CFGE_5_CFGE_5_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CFGE_5_CFGE_5_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor2::CRYPTOCFG_6_16::CFGE_6::CFGE_6       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CFGE_6_CFGE_6_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CFGE_6_CFGE_6_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor2::CRYPTOCFG_7_16::CFGE_7::CFGE_7       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CFGE_7_CFGE_7_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CFGE_7_CFGE_7_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor2::CRYPTOCFG_8_16::CFGE_8::CFGE_8       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CFGE_8_CFGE_8_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CFGE_8_CFGE_8_ENABLE 0x1u

/* Enumeration: emmc::crypto_vendor2::CRYPTOCFG_9_16::CFGE_9::CFGE_9       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CFGE_9_CFGE_9_DISABLE 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CFGE_9_CFGE_9_ENABLE 0x1u


/* ####################################################################### */
/*        ADDRESS MACROS                                                   */
/* ####################################################################### */

/* Address Space for Addressmap: emmc                                      */
/* Group: emmc.crypto                                                      */
#define EMMC_CRYPTO_ADDRESS 0x0u
#define EMMC_CRYPTO_BYTE_ADDRESS 0x0u
/* Register: emmc.crypto.SDMASA_R                                          */
#define EMMC_CRYPTO_SDMASA_R_ADDRESS 0x0u
#define EMMC_CRYPTO_SDMASA_R_BYTE_ADDRESS 0x0u
/* Register: emmc.crypto.BLOCKSIZE_R                                       */
#define EMMC_CRYPTO_BLOCKSIZE_R_ADDRESS 0x4u
#define EMMC_CRYPTO_BLOCKSIZE_R_BYTE_ADDRESS 0x4u
/* Register: emmc.crypto.BLOCKCOUNT_R                                      */
#define EMMC_CRYPTO_BLOCKCOUNT_R_ADDRESS 0x6u
#define EMMC_CRYPTO_BLOCKCOUNT_R_BYTE_ADDRESS 0x6u
/* Register: emmc.crypto.ARGUMENT_R                                        */
#define EMMC_CRYPTO_ARGUMENT_R_ADDRESS 0x8u
#define EMMC_CRYPTO_ARGUMENT_R_BYTE_ADDRESS 0x8u
/* Register: emmc.crypto.XFER_MODE_R                                       */
#define EMMC_CRYPTO_XFER_MODE_R_ADDRESS 0xcu
#define EMMC_CRYPTO_XFER_MODE_R_BYTE_ADDRESS 0xcu
/* Register: emmc.crypto.CMD_R                                             */
#define EMMC_CRYPTO_CMD_R_ADDRESS 0xeu
#define EMMC_CRYPTO_CMD_R_BYTE_ADDRESS 0xeu
/* Register: emmc.crypto.RESP01_R                                          */
#define EMMC_CRYPTO_RESP01_R_ADDRESS 0x10u
#define EMMC_CRYPTO_RESP01_R_BYTE_ADDRESS 0x10u
/* Register: emmc.crypto.RESP23_R                                          */
#define EMMC_CRYPTO_RESP23_R_ADDRESS 0x14u
#define EMMC_CRYPTO_RESP23_R_BYTE_ADDRESS 0x14u
/* Register: emmc.crypto.RESP45_R                                          */
#define EMMC_CRYPTO_RESP45_R_ADDRESS 0x18u
#define EMMC_CRYPTO_RESP45_R_BYTE_ADDRESS 0x18u
/* Register: emmc.crypto.RESP67_R                                          */
#define EMMC_CRYPTO_RESP67_R_ADDRESS 0x1cu
#define EMMC_CRYPTO_RESP67_R_BYTE_ADDRESS 0x1cu
/* Register: emmc.crypto.BUF_DATA_R                                        */
#define EMMC_CRYPTO_BUF_DATA_R_ADDRESS 0x20u
#define EMMC_CRYPTO_BUF_DATA_R_BYTE_ADDRESS 0x20u
/* Register: emmc.crypto.PSTATE_REG                                        */
#define EMMC_CRYPTO_PSTATE_REG_ADDRESS 0x24u
#define EMMC_CRYPTO_PSTATE_REG_BYTE_ADDRESS 0x24u
/* Register: emmc.crypto.HOST_CTRL1_R                                      */
#define EMMC_CRYPTO_HOST_CTRL1_R_ADDRESS 0x28u
#define EMMC_CRYPTO_HOST_CTRL1_R_BYTE_ADDRESS 0x28u
/* Register: emmc.crypto.PWR_CTRL_R                                        */
#define EMMC_CRYPTO_PWR_CTRL_R_ADDRESS 0x29u
#define EMMC_CRYPTO_PWR_CTRL_R_BYTE_ADDRESS 0x29u
/* Register: emmc.crypto.BGAP_CTRL_R                                       */
#define EMMC_CRYPTO_BGAP_CTRL_R_ADDRESS 0x2au
#define EMMC_CRYPTO_BGAP_CTRL_R_BYTE_ADDRESS 0x2au
/* Register: emmc.crypto.WUP_CTRL_R                                        */
#define EMMC_CRYPTO_WUP_CTRL_R_ADDRESS 0x2bu
#define EMMC_CRYPTO_WUP_CTRL_R_BYTE_ADDRESS 0x2bu
/* Register: emmc.crypto.CLK_CTRL_R                                        */
#define EMMC_CRYPTO_CLK_CTRL_R_ADDRESS 0x2cu
#define EMMC_CRYPTO_CLK_CTRL_R_BYTE_ADDRESS 0x2cu
/* Register: emmc.crypto.TOUT_CTRL_R                                       */
#define EMMC_CRYPTO_TOUT_CTRL_R_ADDRESS 0x2eu
#define EMMC_CRYPTO_TOUT_CTRL_R_BYTE_ADDRESS 0x2eu
/* Register: emmc.crypto.SW_RST_R                                          */
#define EMMC_CRYPTO_SW_RST_R_ADDRESS 0x2fu
#define EMMC_CRYPTO_SW_RST_R_BYTE_ADDRESS 0x2fu
/* Register: emmc.crypto.NORMAL_INT_STAT_R                                 */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_ADDRESS 0x30u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BYTE_ADDRESS 0x30u
/* Register: emmc.crypto.ERROR_INT_STAT_R                                  */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_ADDRESS 0x32u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_BYTE_ADDRESS 0x32u
/* Register: emmc.crypto.NORMAL_INT_STAT_EN_R                              */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_ADDRESS 0x34u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BYTE_ADDRESS 0x34u
/* Register: emmc.crypto.ERROR_INT_STAT_EN_R                               */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_ADDRESS 0x36u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_BYTE_ADDRESS 0x36u
/* Register: emmc.crypto.NORMAL_INT_SIGNAL_EN_R                            */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_ADDRESS 0x38u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BYTE_ADDRESS 0x38u
/* Register: emmc.crypto.ERROR_INT_SIGNAL_EN_R                             */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_ADDRESS 0x3au
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_BYTE_ADDRESS 0x3au
/* Register: emmc.crypto.AUTO_CMD_STAT_R                                   */
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_ADDRESS 0x3cu
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_BYTE_ADDRESS 0x3cu
/* Register: emmc.crypto.HOST_CTRL2_R                                      */
#define EMMC_CRYPTO_HOST_CTRL2_R_ADDRESS 0x3eu
#define EMMC_CRYPTO_HOST_CTRL2_R_BYTE_ADDRESS 0x3eu
/* Register: emmc.crypto.CAPABILITIES1_R                                   */
#define EMMC_CRYPTO_CAPABILITIES1_R_ADDRESS 0x40u
#define EMMC_CRYPTO_CAPABILITIES1_R_BYTE_ADDRESS 0x40u
/* Register: emmc.crypto.CAPABILITIES2_R                                   */
#define EMMC_CRYPTO_CAPABILITIES2_R_ADDRESS 0x44u
#define EMMC_CRYPTO_CAPABILITIES2_R_BYTE_ADDRESS 0x44u
/* Register: emmc.crypto.CURR_CAPABILITIES1_R                              */
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_ADDRESS 0x48u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_BYTE_ADDRESS 0x48u
/* Register: emmc.crypto.CURR_CAPABILITIES2_R                              */
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_ADDRESS 0x4cu
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_BYTE_ADDRESS 0x4cu
/* Register: emmc.crypto.FORCE_AUTO_CMD_STAT_R                             */
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_ADDRESS 0x50u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_BYTE_ADDRESS 0x50u
/* Register: emmc.crypto.FORCE_ERROR_INT_STAT_R                            */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_ADDRESS 0x52u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_BYTE_ADDRESS 0x52u
/* Register: emmc.crypto.ADMA_ERR_STAT_R                                   */
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADDRESS 0x54u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_BYTE_ADDRESS 0x54u
/* Register: emmc.crypto.ADMA_SA_LOW_R                                     */
#define EMMC_CRYPTO_ADMA_SA_LOW_R_ADDRESS 0x58u
#define EMMC_CRYPTO_ADMA_SA_LOW_R_BYTE_ADDRESS 0x58u
/* Register: emmc.crypto.ADMA_SA_HIGH_R                                    */
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_ADDRESS 0x5cu
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_BYTE_ADDRESS 0x5cu
/* Register: emmc.crypto.PRESET_INIT_R                                     */
#define EMMC_CRYPTO_PRESET_INIT_R_ADDRESS 0x60u
#define EMMC_CRYPTO_PRESET_INIT_R_BYTE_ADDRESS 0x60u
/* Register: emmc.crypto.PRESET_DS_R                                       */
#define EMMC_CRYPTO_PRESET_DS_R_ADDRESS 0x62u
#define EMMC_CRYPTO_PRESET_DS_R_BYTE_ADDRESS 0x62u
/* Register: emmc.crypto.PRESET_HS_R                                       */
#define EMMC_CRYPTO_PRESET_HS_R_ADDRESS 0x64u
#define EMMC_CRYPTO_PRESET_HS_R_BYTE_ADDRESS 0x64u
/* Register: emmc.crypto.PRESET_SDR12_R                                    */
#define EMMC_CRYPTO_PRESET_SDR12_R_ADDRESS 0x66u
#define EMMC_CRYPTO_PRESET_SDR12_R_BYTE_ADDRESS 0x66u
/* Register: emmc.crypto.PRESET_SDR25_R                                    */
#define EMMC_CRYPTO_PRESET_SDR25_R_ADDRESS 0x68u
#define EMMC_CRYPTO_PRESET_SDR25_R_BYTE_ADDRESS 0x68u
/* Register: emmc.crypto.PRESET_SDR50_R                                    */
#define EMMC_CRYPTO_PRESET_SDR50_R_ADDRESS 0x6au
#define EMMC_CRYPTO_PRESET_SDR50_R_BYTE_ADDRESS 0x6au
/* Register: emmc.crypto.PRESET_SDR104_R                                   */
#define EMMC_CRYPTO_PRESET_SDR104_R_ADDRESS 0x6cu
#define EMMC_CRYPTO_PRESET_SDR104_R_BYTE_ADDRESS 0x6cu
/* Register: emmc.crypto.PRESET_DDR50_R                                    */
#define EMMC_CRYPTO_PRESET_DDR50_R_ADDRESS 0x6eu
#define EMMC_CRYPTO_PRESET_DDR50_R_BYTE_ADDRESS 0x6eu
/* Register: emmc.crypto.PRESET_UHS2_R                                     */
#define EMMC_CRYPTO_PRESET_UHS2_R_ADDRESS 0x74u
#define EMMC_CRYPTO_PRESET_UHS2_R_BYTE_ADDRESS 0x74u
/* Register: emmc.crypto.P_EMBEDDED_CNTRL                                  */
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_ADDRESS 0xe6u
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_BYTE_ADDRESS 0xe6u
/* Register: emmc.crypto.P_VENDOR_SPECIFIC_AREA                            */
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_ADDRESS 0xe8u
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_BYTE_ADDRESS 0xe8u
/* Register: emmc.crypto.P_VENDOR2_SPECIFIC_AREA                           */
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_ADDRESS 0xeau
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_BYTE_ADDRESS 0xeau
/* Register: emmc.crypto.SLOT_INTR_STATUS_R                                */
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_ADDRESS 0xfcu
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_BYTE_ADDRESS 0xfcu
/* Register: emmc.crypto.HOST_CNTRL_VERS_R                                 */
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_ADDRESS 0xfeu
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_BYTE_ADDRESS 0xfeu
/* Group: emmc.crypto_phy                                                  */
#define EMMC_CRYPTO_PHY_ADDRESS 0x300u
#define EMMC_CRYPTO_PHY_BYTE_ADDRESS 0x300u
/* Register: emmc.crypto_phy.PHY_CNFG                                      */
#define EMMC_CRYPTO_PHY_PHY_CNFG_ADDRESS 0x300u
#define EMMC_CRYPTO_PHY_PHY_CNFG_BYTE_ADDRESS 0x300u
/* Register: emmc.crypto_phy.CMDPAD_CNFG                                   */
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_ADDRESS 0x304u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_BYTE_ADDRESS 0x304u
/* Register: emmc.crypto_phy.DATPAD_CNFG                                   */
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_ADDRESS 0x306u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_BYTE_ADDRESS 0x306u
/* Register: emmc.crypto_phy.CLKPAD_CNFG                                   */
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_ADDRESS 0x308u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_BYTE_ADDRESS 0x308u
/* Register: emmc.crypto_phy.STBPAD_CNFG                                   */
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_ADDRESS 0x30au
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_BYTE_ADDRESS 0x30au
/* Register: emmc.crypto_phy.RSTNPAD_CNFG                                  */
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_ADDRESS 0x30cu
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_BYTE_ADDRESS 0x30cu
/* Register: emmc.crypto_phy.PADTEST_CNFG                                  */
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_ADDRESS 0x30eu
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_BYTE_ADDRESS 0x30eu
/* Register: emmc.crypto_phy.PADTEST_OUT                                   */
#define EMMC_CRYPTO_PHY_PADTEST_OUT_ADDRESS 0x310u
#define EMMC_CRYPTO_PHY_PADTEST_OUT_BYTE_ADDRESS 0x310u
/* Register: emmc.crypto_phy.PADTEST_IN                                    */
#define EMMC_CRYPTO_PHY_PADTEST_IN_ADDRESS 0x312u
#define EMMC_CRYPTO_PHY_PADTEST_IN_BYTE_ADDRESS 0x312u
/* Register: emmc.crypto_phy.PRBS_CNFG                                     */
#define EMMC_CRYPTO_PHY_PRBS_CNFG_ADDRESS 0x318u
#define EMMC_CRYPTO_PHY_PRBS_CNFG_BYTE_ADDRESS 0x318u
/* Register: emmc.crypto_phy.PHYLPBK_CNFG                                  */
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_ADDRESS 0x31au
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_BYTE_ADDRESS 0x31au
/* Register: emmc.crypto_phy.COMMDL_CNFG                                   */
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_ADDRESS 0x31cu
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_BYTE_ADDRESS 0x31cu
/* Register: emmc.crypto_phy.SDCLKDL_CNFG                                  */
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_ADDRESS 0x31du
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_BYTE_ADDRESS 0x31du
/* Register: emmc.crypto_phy.SDCLKDL_DC                                    */
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_ADDRESS 0x31eu
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_BYTE_ADDRESS 0x31eu
/* Register: emmc.crypto_phy.SMPLDL_CNFG                                   */
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_ADDRESS 0x320u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_BYTE_ADDRESS 0x320u
/* Register: emmc.crypto_phy.ATDL_CNFG                                     */
#define EMMC_CRYPTO_PHY_ATDL_CNFG_ADDRESS 0x321u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_BYTE_ADDRESS 0x321u
/* Register: emmc.crypto_phy.DLL_CTRL                                      */
#define EMMC_CRYPTO_PHY_DLL_CTRL_ADDRESS 0x324u
#define EMMC_CRYPTO_PHY_DLL_CTRL_BYTE_ADDRESS 0x324u
/* Register: emmc.crypto_phy.DLL_CNFG1                                     */
#define EMMC_CRYPTO_PHY_DLL_CNFG1_ADDRESS 0x325u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_BYTE_ADDRESS 0x325u
/* Register: emmc.crypto_phy.DLL_CNFG2                                     */
#define EMMC_CRYPTO_PHY_DLL_CNFG2_ADDRESS 0x326u
#define EMMC_CRYPTO_PHY_DLL_CNFG2_BYTE_ADDRESS 0x326u
/* Register: emmc.crypto_phy.DLLDL_CNFG                                    */
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_ADDRESS 0x328u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_BYTE_ADDRESS 0x328u
/* Register: emmc.crypto_phy.DLL_OFFST                                     */
#define EMMC_CRYPTO_PHY_DLL_OFFST_ADDRESS 0x329u
#define EMMC_CRYPTO_PHY_DLL_OFFST_BYTE_ADDRESS 0x329u
/* Register: emmc.crypto_phy.DLLMST_TSTDC                                  */
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_ADDRESS 0x32au
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_BYTE_ADDRESS 0x32au
/* Register: emmc.crypto_phy.DLLLBT_CNFG                                   */
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_ADDRESS 0x32cu
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_BYTE_ADDRESS 0x32cu
/* Register: emmc.crypto_phy.DLL_STATUS                                    */
#define EMMC_CRYPTO_PHY_DLL_STATUS_ADDRESS 0x32eu
#define EMMC_CRYPTO_PHY_DLL_STATUS_BYTE_ADDRESS 0x32eu
/* Register: emmc.crypto_phy.DLLDBG_MLKDC                                  */
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_ADDRESS 0x330u
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_BYTE_ADDRESS 0x330u
/* Register: emmc.crypto_phy.DLLDBG_SLKDC                                  */
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_ADDRESS 0x332u
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_BYTE_ADDRESS 0x332u
/* Group: emmc.crypto_vendor1                                              */
#define EMMC_CRYPTO_VENDOR1_ADDRESS 0x500u
#define EMMC_CRYPTO_VENDOR1_BYTE_ADDRESS 0x500u
/* Register: emmc.crypto_vendor1.MSHC_VER_ID_R                             */
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_ADDRESS 0x500u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_BYTE_ADDRESS 0x500u
/* Register: emmc.crypto_vendor1.MSHC_VER_TYPE_R                           */
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_ADDRESS 0x504u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_BYTE_ADDRESS 0x504u
/* Register: emmc.crypto_vendor1.MSHC_CTRL_R                               */
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_ADDRESS 0x508u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_BYTE_ADDRESS 0x508u
/* Register: emmc.crypto_vendor1.MBIU_CTRL_R                               */
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_ADDRESS 0x510u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BYTE_ADDRESS 0x510u
/* Register: emmc.crypto_vendor1.EMMC_CTRL_R                               */
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_ADDRESS 0x52cu
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_BYTE_ADDRESS 0x52cu
/* Register: emmc.crypto_vendor1.BOOT_CTRL_R                               */
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_ADDRESS 0x52eu
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BYTE_ADDRESS 0x52eu
/* Register: emmc.crypto_vendor1.GP_IN_R                                   */
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_ADDRESS 0x530u
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_BYTE_ADDRESS 0x530u
/* Register: emmc.crypto_vendor1.GP_OUT_R                                  */
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_ADDRESS 0x534u
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_BYTE_ADDRESS 0x534u
/* Register: emmc.crypto_vendor1.AT_CTRL_R                                 */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_ADDRESS 0x540u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_BYTE_ADDRESS 0x540u
/* Register: emmc.crypto_vendor1.AT_STAT_R                                 */
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_ADDRESS 0x544u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_BYTE_ADDRESS 0x544u
/* Group: emmc.crypto_embedded_control                                     */
#define EMMC_CRYPTO_EMBEDDED_CONTROL_ADDRESS 0xf6cu
#define EMMC_CRYPTO_EMBEDDED_CONTROL_BYTE_ADDRESS 0xf6cu
/* Register: emmc.crypto_embedded_control.EMBEDDED_CTRL_R                  */
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_ADDRESS 0xf6cu
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BYTE_ADDRESS 0xf6cu
/* Group: emmc.crypto_vendor2                                              */
#define EMMC_CRYPTO_VENDOR2_ADDRESS 0x1000u
#define EMMC_CRYPTO_VENDOR2_BYTE_ADDRESS 0x1000u
/* Register: emmc.crypto_vendor2.CQCAP                                     */
#define EMMC_CRYPTO_VENDOR2_CQCAP_ADDRESS 0x1004u
#define EMMC_CRYPTO_VENDOR2_CQCAP_BYTE_ADDRESS 0x1004u
/* Register: emmc.crypto_vendor2.CQCFG                                     */
#define EMMC_CRYPTO_VENDOR2_CQCFG_ADDRESS 0x1008u
#define EMMC_CRYPTO_VENDOR2_CQCFG_BYTE_ADDRESS 0x1008u
/* Register: emmc.crypto_vendor2.CRNQP                                     */
#define EMMC_CRYPTO_VENDOR2_CRNQP_ADDRESS 0x1070u
#define EMMC_CRYPTO_VENDOR2_CRNQP_BYTE_ADDRESS 0x1070u
/* Register: emmc.crypto_vendor2.CRNQDUN                                   */
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_ADDRESS 0x1074u
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_BYTE_ADDRESS 0x1074u
/* Register: emmc.crypto_vendor2.CRNQIS                                    */
#define EMMC_CRYPTO_VENDOR2_CRNQIS_ADDRESS 0x1078u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_BYTE_ADDRESS 0x1078u
/* Register: emmc.crypto_vendor2.CRNQIE                                    */
#define EMMC_CRYPTO_VENDOR2_CRNQIE_ADDRESS 0x107cu
#define EMMC_CRYPTO_VENDOR2_CRNQIE_BYTE_ADDRESS 0x107cu
/* Register: emmc.crypto_vendor2.CRCAP                                     */
#define EMMC_CRYPTO_VENDOR2_CRCAP_ADDRESS 0x1100u
#define EMMC_CRYPTO_VENDOR2_CRCAP_BYTE_ADDRESS 0x1100u
/* Register: emmc.crypto_vendor2.CRYPTOCAP_0                               */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_ADDRESS 0x1104u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_BYTE_ADDRESS 0x1104u
/* Register: emmc.crypto_vendor2.CRYPTOCAP_1                               */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_ADDRESS 0x1108u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_BYTE_ADDRESS 0x1108u
/* Register: emmc.crypto_vendor2.CRYPTOCAP_2                               */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_ADDRESS 0x110cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_BYTE_ADDRESS 0x110cu
/* Register: emmc.crypto_vendor2.CRYPTOCAP_3                               */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_ADDRESS 0x1110u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_BYTE_ADDRESS 0x1110u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_0                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_ADDRESS 0x1800u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_BYTE_ADDRESS 0x1800u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_1                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_ADDRESS 0x1804u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_BYTE_ADDRESS 0x1804u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_2                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_ADDRESS 0x1808u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_BYTE_ADDRESS 0x1808u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_3                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_ADDRESS 0x180cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_BYTE_ADDRESS 0x180cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_4                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_ADDRESS 0x1810u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_BYTE_ADDRESS 0x1810u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_5                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_ADDRESS 0x1814u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_BYTE_ADDRESS 0x1814u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_6                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_ADDRESS 0x1818u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_BYTE_ADDRESS 0x1818u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_7                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_ADDRESS 0x181cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_BYTE_ADDRESS 0x181cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_8                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_ADDRESS 0x1820u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_BYTE_ADDRESS 0x1820u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_9                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_ADDRESS 0x1824u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_BYTE_ADDRESS 0x1824u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_10                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_ADDRESS 0x1828u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_BYTE_ADDRESS 0x1828u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_11                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_ADDRESS 0x182cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_BYTE_ADDRESS 0x182cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_12                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_ADDRESS 0x1830u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_BYTE_ADDRESS 0x1830u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_13                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_ADDRESS 0x1834u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_BYTE_ADDRESS 0x1834u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_14                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_ADDRESS 0x1838u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_BYTE_ADDRESS 0x1838u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_15                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_ADDRESS 0x183cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_BYTE_ADDRESS 0x183cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_16                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_ADDRESS 0x1840u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_BYTE_ADDRESS 0x1840u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_17                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_ADDRESS 0x1844u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_BYTE_ADDRESS 0x1844u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_18                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_ADDRESS 0x1848u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_BYTE_ADDRESS 0x1848u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_19                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_ADDRESS 0x184cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_BYTE_ADDRESS 0x184cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_20                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_ADDRESS 0x1850u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_BYTE_ADDRESS 0x1850u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_21                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_ADDRESS 0x1854u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_BYTE_ADDRESS 0x1854u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_22                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_ADDRESS 0x1858u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_BYTE_ADDRESS 0x1858u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_23                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_ADDRESS 0x185cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_BYTE_ADDRESS 0x185cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_24                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_ADDRESS 0x1860u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_BYTE_ADDRESS 0x1860u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_25                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_ADDRESS 0x1864u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_BYTE_ADDRESS 0x1864u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_26                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_ADDRESS 0x1868u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_BYTE_ADDRESS 0x1868u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_27                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_ADDRESS 0x186cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_BYTE_ADDRESS 0x186cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_28                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_ADDRESS 0x1870u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_BYTE_ADDRESS 0x1870u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_29                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_ADDRESS 0x1874u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_BYTE_ADDRESS 0x1874u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_30                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_ADDRESS 0x1878u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_BYTE_ADDRESS 0x1878u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_0_31                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_ADDRESS 0x187cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_BYTE_ADDRESS 0x187cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_0                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_ADDRESS 0x1880u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_BYTE_ADDRESS 0x1880u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_1                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_ADDRESS 0x1884u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_BYTE_ADDRESS 0x1884u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_2                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_ADDRESS 0x1888u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_BYTE_ADDRESS 0x1888u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_3                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_ADDRESS 0x188cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_BYTE_ADDRESS 0x188cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_4                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_ADDRESS 0x1890u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_BYTE_ADDRESS 0x1890u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_5                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_ADDRESS 0x1894u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_BYTE_ADDRESS 0x1894u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_6                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_ADDRESS 0x1898u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_BYTE_ADDRESS 0x1898u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_7                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_ADDRESS 0x189cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_BYTE_ADDRESS 0x189cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_8                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_ADDRESS 0x18a0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_BYTE_ADDRESS 0x18a0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_9                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_ADDRESS 0x18a4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_BYTE_ADDRESS 0x18a4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_10                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_ADDRESS 0x18a8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_BYTE_ADDRESS 0x18a8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_11                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_ADDRESS 0x18acu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_BYTE_ADDRESS 0x18acu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_12                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_ADDRESS 0x18b0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_BYTE_ADDRESS 0x18b0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_13                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_ADDRESS 0x18b4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_BYTE_ADDRESS 0x18b4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_14                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_ADDRESS 0x18b8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_BYTE_ADDRESS 0x18b8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_15                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_ADDRESS 0x18bcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_BYTE_ADDRESS 0x18bcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_16                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_ADDRESS 0x18c0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_BYTE_ADDRESS 0x18c0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_17                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_ADDRESS 0x18c4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_BYTE_ADDRESS 0x18c4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_18                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_ADDRESS 0x18c8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_BYTE_ADDRESS 0x18c8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_19                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_ADDRESS 0x18ccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_BYTE_ADDRESS 0x18ccu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_20                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_ADDRESS 0x18d0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_BYTE_ADDRESS 0x18d0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_21                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_ADDRESS 0x18d4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_BYTE_ADDRESS 0x18d4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_22                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_ADDRESS 0x18d8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_BYTE_ADDRESS 0x18d8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_23                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_ADDRESS 0x18dcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_BYTE_ADDRESS 0x18dcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_24                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_ADDRESS 0x18e0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_BYTE_ADDRESS 0x18e0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_25                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_ADDRESS 0x18e4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_BYTE_ADDRESS 0x18e4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_26                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_ADDRESS 0x18e8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_BYTE_ADDRESS 0x18e8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_27                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_ADDRESS 0x18ecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_BYTE_ADDRESS 0x18ecu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_28                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_ADDRESS 0x18f0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_BYTE_ADDRESS 0x18f0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_29                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_ADDRESS 0x18f4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_BYTE_ADDRESS 0x18f4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_30                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_ADDRESS 0x18f8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_BYTE_ADDRESS 0x18f8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_1_31                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_ADDRESS 0x18fcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_BYTE_ADDRESS 0x18fcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_0                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_ADDRESS 0x1900u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_BYTE_ADDRESS 0x1900u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_1                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_ADDRESS 0x1904u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_BYTE_ADDRESS 0x1904u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_2                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_ADDRESS 0x1908u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_BYTE_ADDRESS 0x1908u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_3                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_ADDRESS 0x190cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_BYTE_ADDRESS 0x190cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_4                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_ADDRESS 0x1910u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_BYTE_ADDRESS 0x1910u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_5                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_ADDRESS 0x1914u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_BYTE_ADDRESS 0x1914u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_6                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_ADDRESS 0x1918u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_BYTE_ADDRESS 0x1918u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_7                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_ADDRESS 0x191cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_BYTE_ADDRESS 0x191cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_8                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_ADDRESS 0x1920u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_BYTE_ADDRESS 0x1920u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_9                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_ADDRESS 0x1924u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_BYTE_ADDRESS 0x1924u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_10                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_ADDRESS 0x1928u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_BYTE_ADDRESS 0x1928u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_11                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_ADDRESS 0x192cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_BYTE_ADDRESS 0x192cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_12                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_ADDRESS 0x1930u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_BYTE_ADDRESS 0x1930u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_13                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_ADDRESS 0x1934u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_BYTE_ADDRESS 0x1934u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_14                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_ADDRESS 0x1938u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_BYTE_ADDRESS 0x1938u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_15                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_ADDRESS 0x193cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_BYTE_ADDRESS 0x193cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_16                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_ADDRESS 0x1940u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_BYTE_ADDRESS 0x1940u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_17                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_ADDRESS 0x1944u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_BYTE_ADDRESS 0x1944u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_18                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_ADDRESS 0x1948u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_BYTE_ADDRESS 0x1948u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_19                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_ADDRESS 0x194cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_BYTE_ADDRESS 0x194cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_20                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_ADDRESS 0x1950u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_BYTE_ADDRESS 0x1950u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_21                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_ADDRESS 0x1954u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_BYTE_ADDRESS 0x1954u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_22                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_ADDRESS 0x1958u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_BYTE_ADDRESS 0x1958u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_23                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_ADDRESS 0x195cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_BYTE_ADDRESS 0x195cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_24                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_ADDRESS 0x1960u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_BYTE_ADDRESS 0x1960u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_25                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_ADDRESS 0x1964u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_BYTE_ADDRESS 0x1964u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_26                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_ADDRESS 0x1968u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_BYTE_ADDRESS 0x1968u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_27                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_ADDRESS 0x196cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_BYTE_ADDRESS 0x196cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_28                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_ADDRESS 0x1970u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_BYTE_ADDRESS 0x1970u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_29                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_ADDRESS 0x1974u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_BYTE_ADDRESS 0x1974u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_30                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_ADDRESS 0x1978u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_BYTE_ADDRESS 0x1978u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_2_31                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_ADDRESS 0x197cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_BYTE_ADDRESS 0x197cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_0                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_ADDRESS 0x1980u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_BYTE_ADDRESS 0x1980u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_1                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_ADDRESS 0x1984u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_BYTE_ADDRESS 0x1984u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_2                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_ADDRESS 0x1988u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_BYTE_ADDRESS 0x1988u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_3                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_ADDRESS 0x198cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_BYTE_ADDRESS 0x198cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_4                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_ADDRESS 0x1990u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_BYTE_ADDRESS 0x1990u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_5                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_ADDRESS 0x1994u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_BYTE_ADDRESS 0x1994u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_6                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_ADDRESS 0x1998u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_BYTE_ADDRESS 0x1998u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_7                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_ADDRESS 0x199cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_BYTE_ADDRESS 0x199cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_8                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_ADDRESS 0x19a0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_BYTE_ADDRESS 0x19a0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_9                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_ADDRESS 0x19a4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_BYTE_ADDRESS 0x19a4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_10                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_ADDRESS 0x19a8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_BYTE_ADDRESS 0x19a8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_11                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_ADDRESS 0x19acu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_BYTE_ADDRESS 0x19acu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_12                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_ADDRESS 0x19b0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_BYTE_ADDRESS 0x19b0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_13                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_ADDRESS 0x19b4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_BYTE_ADDRESS 0x19b4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_14                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_ADDRESS 0x19b8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_BYTE_ADDRESS 0x19b8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_15                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_ADDRESS 0x19bcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_BYTE_ADDRESS 0x19bcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_16                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_ADDRESS 0x19c0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_BYTE_ADDRESS 0x19c0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_17                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_ADDRESS 0x19c4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_BYTE_ADDRESS 0x19c4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_18                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_ADDRESS 0x19c8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_BYTE_ADDRESS 0x19c8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_19                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_ADDRESS 0x19ccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_BYTE_ADDRESS 0x19ccu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_20                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_ADDRESS 0x19d0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_BYTE_ADDRESS 0x19d0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_21                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_ADDRESS 0x19d4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_BYTE_ADDRESS 0x19d4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_22                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_ADDRESS 0x19d8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_BYTE_ADDRESS 0x19d8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_23                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_ADDRESS 0x19dcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_BYTE_ADDRESS 0x19dcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_24                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_ADDRESS 0x19e0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_BYTE_ADDRESS 0x19e0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_25                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_ADDRESS 0x19e4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_BYTE_ADDRESS 0x19e4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_26                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_ADDRESS 0x19e8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_BYTE_ADDRESS 0x19e8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_27                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_ADDRESS 0x19ecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_BYTE_ADDRESS 0x19ecu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_28                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_ADDRESS 0x19f0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_BYTE_ADDRESS 0x19f0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_29                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_ADDRESS 0x19f4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_BYTE_ADDRESS 0x19f4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_30                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_ADDRESS 0x19f8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_BYTE_ADDRESS 0x19f8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_3_31                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_ADDRESS 0x19fcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_BYTE_ADDRESS 0x19fcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_0                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_ADDRESS 0x1a00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_BYTE_ADDRESS 0x1a00u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_1                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_ADDRESS 0x1a04u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_BYTE_ADDRESS 0x1a04u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_2                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_ADDRESS 0x1a08u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_BYTE_ADDRESS 0x1a08u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_3                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_ADDRESS 0x1a0cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_BYTE_ADDRESS 0x1a0cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_4                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_ADDRESS 0x1a10u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_BYTE_ADDRESS 0x1a10u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_5                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_ADDRESS 0x1a14u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_BYTE_ADDRESS 0x1a14u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_6                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_ADDRESS 0x1a18u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_BYTE_ADDRESS 0x1a18u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_7                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_ADDRESS 0x1a1cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_BYTE_ADDRESS 0x1a1cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_8                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_ADDRESS 0x1a20u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_BYTE_ADDRESS 0x1a20u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_9                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_ADDRESS 0x1a24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_BYTE_ADDRESS 0x1a24u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_10                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_ADDRESS 0x1a28u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_BYTE_ADDRESS 0x1a28u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_11                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_ADDRESS 0x1a2cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_BYTE_ADDRESS 0x1a2cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_12                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_ADDRESS 0x1a30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_BYTE_ADDRESS 0x1a30u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_13                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_ADDRESS 0x1a34u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_BYTE_ADDRESS 0x1a34u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_14                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_ADDRESS 0x1a38u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_BYTE_ADDRESS 0x1a38u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_15                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_ADDRESS 0x1a3cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_BYTE_ADDRESS 0x1a3cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_16                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_ADDRESS 0x1a40u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_BYTE_ADDRESS 0x1a40u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_17                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_ADDRESS 0x1a44u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_BYTE_ADDRESS 0x1a44u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_18                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_ADDRESS 0x1a48u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_BYTE_ADDRESS 0x1a48u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_19                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_ADDRESS 0x1a4cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_BYTE_ADDRESS 0x1a4cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_20                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_ADDRESS 0x1a50u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_BYTE_ADDRESS 0x1a50u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_21                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_ADDRESS 0x1a54u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_BYTE_ADDRESS 0x1a54u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_22                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_ADDRESS 0x1a58u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_BYTE_ADDRESS 0x1a58u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_23                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_ADDRESS 0x1a5cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_BYTE_ADDRESS 0x1a5cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_24                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_ADDRESS 0x1a60u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_BYTE_ADDRESS 0x1a60u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_25                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_ADDRESS 0x1a64u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_BYTE_ADDRESS 0x1a64u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_26                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_ADDRESS 0x1a68u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_BYTE_ADDRESS 0x1a68u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_27                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_ADDRESS 0x1a6cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_BYTE_ADDRESS 0x1a6cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_28                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_ADDRESS 0x1a70u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_BYTE_ADDRESS 0x1a70u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_29                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_ADDRESS 0x1a74u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_BYTE_ADDRESS 0x1a74u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_30                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_ADDRESS 0x1a78u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_BYTE_ADDRESS 0x1a78u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_4_31                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_ADDRESS 0x1a7cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_BYTE_ADDRESS 0x1a7cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_0                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_ADDRESS 0x1a80u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_BYTE_ADDRESS 0x1a80u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_1                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_ADDRESS 0x1a84u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_BYTE_ADDRESS 0x1a84u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_2                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_ADDRESS 0x1a88u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_BYTE_ADDRESS 0x1a88u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_3                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_ADDRESS 0x1a8cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_BYTE_ADDRESS 0x1a8cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_4                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_ADDRESS 0x1a90u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_BYTE_ADDRESS 0x1a90u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_5                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_ADDRESS 0x1a94u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_BYTE_ADDRESS 0x1a94u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_6                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_ADDRESS 0x1a98u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_BYTE_ADDRESS 0x1a98u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_7                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_ADDRESS 0x1a9cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_BYTE_ADDRESS 0x1a9cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_8                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_ADDRESS 0x1aa0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_BYTE_ADDRESS 0x1aa0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_9                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_ADDRESS 0x1aa4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_BYTE_ADDRESS 0x1aa4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_10                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_ADDRESS 0x1aa8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_BYTE_ADDRESS 0x1aa8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_11                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_ADDRESS 0x1aacu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_BYTE_ADDRESS 0x1aacu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_12                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_ADDRESS 0x1ab0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_BYTE_ADDRESS 0x1ab0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_13                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_ADDRESS 0x1ab4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_BYTE_ADDRESS 0x1ab4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_14                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_ADDRESS 0x1ab8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_BYTE_ADDRESS 0x1ab8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_15                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_ADDRESS 0x1abcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_BYTE_ADDRESS 0x1abcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_16                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_ADDRESS 0x1ac0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_BYTE_ADDRESS 0x1ac0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_17                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_ADDRESS 0x1ac4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_BYTE_ADDRESS 0x1ac4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_18                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_ADDRESS 0x1ac8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_BYTE_ADDRESS 0x1ac8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_19                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_ADDRESS 0x1accu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_BYTE_ADDRESS 0x1accu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_20                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_ADDRESS 0x1ad0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_BYTE_ADDRESS 0x1ad0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_21                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_ADDRESS 0x1ad4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_BYTE_ADDRESS 0x1ad4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_22                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_ADDRESS 0x1ad8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_BYTE_ADDRESS 0x1ad8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_23                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_ADDRESS 0x1adcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_BYTE_ADDRESS 0x1adcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_24                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_ADDRESS 0x1ae0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_BYTE_ADDRESS 0x1ae0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_25                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_ADDRESS 0x1ae4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_BYTE_ADDRESS 0x1ae4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_26                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_ADDRESS 0x1ae8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_BYTE_ADDRESS 0x1ae8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_27                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_ADDRESS 0x1aecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_BYTE_ADDRESS 0x1aecu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_28                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_ADDRESS 0x1af0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_BYTE_ADDRESS 0x1af0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_29                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_ADDRESS 0x1af4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_BYTE_ADDRESS 0x1af4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_30                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_ADDRESS 0x1af8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_BYTE_ADDRESS 0x1af8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_5_31                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_ADDRESS 0x1afcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_BYTE_ADDRESS 0x1afcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_0                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_ADDRESS 0x1b00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_BYTE_ADDRESS 0x1b00u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_1                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_ADDRESS 0x1b04u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_BYTE_ADDRESS 0x1b04u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_2                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_ADDRESS 0x1b08u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_BYTE_ADDRESS 0x1b08u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_3                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_ADDRESS 0x1b0cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_BYTE_ADDRESS 0x1b0cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_4                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_ADDRESS 0x1b10u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_BYTE_ADDRESS 0x1b10u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_5                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_ADDRESS 0x1b14u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_BYTE_ADDRESS 0x1b14u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_6                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_ADDRESS 0x1b18u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_BYTE_ADDRESS 0x1b18u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_7                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_ADDRESS 0x1b1cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_BYTE_ADDRESS 0x1b1cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_8                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_ADDRESS 0x1b20u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_BYTE_ADDRESS 0x1b20u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_9                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_ADDRESS 0x1b24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_BYTE_ADDRESS 0x1b24u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_10                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_ADDRESS 0x1b28u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_BYTE_ADDRESS 0x1b28u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_11                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_ADDRESS 0x1b2cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_BYTE_ADDRESS 0x1b2cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_12                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_ADDRESS 0x1b30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_BYTE_ADDRESS 0x1b30u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_13                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_ADDRESS 0x1b34u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_BYTE_ADDRESS 0x1b34u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_14                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_ADDRESS 0x1b38u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_BYTE_ADDRESS 0x1b38u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_15                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_ADDRESS 0x1b3cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_BYTE_ADDRESS 0x1b3cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_16                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_ADDRESS 0x1b40u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_BYTE_ADDRESS 0x1b40u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_17                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_ADDRESS 0x1b44u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_BYTE_ADDRESS 0x1b44u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_18                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_ADDRESS 0x1b48u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_BYTE_ADDRESS 0x1b48u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_19                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_ADDRESS 0x1b4cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_BYTE_ADDRESS 0x1b4cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_20                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_ADDRESS 0x1b50u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_BYTE_ADDRESS 0x1b50u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_21                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_ADDRESS 0x1b54u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_BYTE_ADDRESS 0x1b54u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_22                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_ADDRESS 0x1b58u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_BYTE_ADDRESS 0x1b58u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_23                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_ADDRESS 0x1b5cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_BYTE_ADDRESS 0x1b5cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_24                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_ADDRESS 0x1b60u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_BYTE_ADDRESS 0x1b60u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_25                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_ADDRESS 0x1b64u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_BYTE_ADDRESS 0x1b64u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_26                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_ADDRESS 0x1b68u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_BYTE_ADDRESS 0x1b68u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_27                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_ADDRESS 0x1b6cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_BYTE_ADDRESS 0x1b6cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_28                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_ADDRESS 0x1b70u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_BYTE_ADDRESS 0x1b70u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_29                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_ADDRESS 0x1b74u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_BYTE_ADDRESS 0x1b74u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_30                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_ADDRESS 0x1b78u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_BYTE_ADDRESS 0x1b78u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_6_31                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_ADDRESS 0x1b7cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_BYTE_ADDRESS 0x1b7cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_0                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_ADDRESS 0x1b80u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_BYTE_ADDRESS 0x1b80u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_1                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_ADDRESS 0x1b84u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_BYTE_ADDRESS 0x1b84u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_2                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_ADDRESS 0x1b88u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_BYTE_ADDRESS 0x1b88u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_3                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_ADDRESS 0x1b8cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_BYTE_ADDRESS 0x1b8cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_4                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_ADDRESS 0x1b90u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_BYTE_ADDRESS 0x1b90u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_5                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_ADDRESS 0x1b94u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_BYTE_ADDRESS 0x1b94u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_6                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_ADDRESS 0x1b98u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_BYTE_ADDRESS 0x1b98u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_7                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_ADDRESS 0x1b9cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_BYTE_ADDRESS 0x1b9cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_8                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_ADDRESS 0x1ba0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_BYTE_ADDRESS 0x1ba0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_9                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_ADDRESS 0x1ba4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_BYTE_ADDRESS 0x1ba4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_10                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_ADDRESS 0x1ba8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_BYTE_ADDRESS 0x1ba8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_11                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_ADDRESS 0x1bacu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_BYTE_ADDRESS 0x1bacu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_12                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_ADDRESS 0x1bb0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_BYTE_ADDRESS 0x1bb0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_13                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_ADDRESS 0x1bb4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_BYTE_ADDRESS 0x1bb4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_14                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_ADDRESS 0x1bb8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_BYTE_ADDRESS 0x1bb8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_15                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_ADDRESS 0x1bbcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_BYTE_ADDRESS 0x1bbcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_16                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_ADDRESS 0x1bc0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_BYTE_ADDRESS 0x1bc0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_17                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_ADDRESS 0x1bc4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_BYTE_ADDRESS 0x1bc4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_18                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_ADDRESS 0x1bc8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_BYTE_ADDRESS 0x1bc8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_19                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_ADDRESS 0x1bccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_BYTE_ADDRESS 0x1bccu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_20                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_ADDRESS 0x1bd0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_BYTE_ADDRESS 0x1bd0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_21                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_ADDRESS 0x1bd4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_BYTE_ADDRESS 0x1bd4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_22                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_ADDRESS 0x1bd8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_BYTE_ADDRESS 0x1bd8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_23                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_ADDRESS 0x1bdcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_BYTE_ADDRESS 0x1bdcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_24                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_ADDRESS 0x1be0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_BYTE_ADDRESS 0x1be0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_25                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_ADDRESS 0x1be4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_BYTE_ADDRESS 0x1be4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_26                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_ADDRESS 0x1be8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_BYTE_ADDRESS 0x1be8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_27                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_ADDRESS 0x1becu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_BYTE_ADDRESS 0x1becu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_28                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_ADDRESS 0x1bf0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_BYTE_ADDRESS 0x1bf0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_29                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_ADDRESS 0x1bf4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_BYTE_ADDRESS 0x1bf4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_30                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_ADDRESS 0x1bf8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_BYTE_ADDRESS 0x1bf8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_7_31                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_ADDRESS 0x1bfcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_BYTE_ADDRESS 0x1bfcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_0                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_ADDRESS 0x1c00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_BYTE_ADDRESS 0x1c00u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_1                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_ADDRESS 0x1c04u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_BYTE_ADDRESS 0x1c04u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_2                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_ADDRESS 0x1c08u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_BYTE_ADDRESS 0x1c08u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_3                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_ADDRESS 0x1c0cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_BYTE_ADDRESS 0x1c0cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_4                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_ADDRESS 0x1c10u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_BYTE_ADDRESS 0x1c10u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_5                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_ADDRESS 0x1c14u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_BYTE_ADDRESS 0x1c14u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_6                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_ADDRESS 0x1c18u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_BYTE_ADDRESS 0x1c18u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_7                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_ADDRESS 0x1c1cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_BYTE_ADDRESS 0x1c1cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_8                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_ADDRESS 0x1c20u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_BYTE_ADDRESS 0x1c20u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_9                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_ADDRESS 0x1c24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_BYTE_ADDRESS 0x1c24u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_10                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_ADDRESS 0x1c28u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_BYTE_ADDRESS 0x1c28u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_11                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_ADDRESS 0x1c2cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_BYTE_ADDRESS 0x1c2cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_12                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_ADDRESS 0x1c30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_BYTE_ADDRESS 0x1c30u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_13                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_ADDRESS 0x1c34u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_BYTE_ADDRESS 0x1c34u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_14                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_ADDRESS 0x1c38u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_BYTE_ADDRESS 0x1c38u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_15                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_ADDRESS 0x1c3cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_BYTE_ADDRESS 0x1c3cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_16                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_ADDRESS 0x1c40u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_BYTE_ADDRESS 0x1c40u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_17                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_ADDRESS 0x1c44u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_BYTE_ADDRESS 0x1c44u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_18                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_ADDRESS 0x1c48u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_BYTE_ADDRESS 0x1c48u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_19                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_ADDRESS 0x1c4cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_BYTE_ADDRESS 0x1c4cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_20                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_ADDRESS 0x1c50u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_BYTE_ADDRESS 0x1c50u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_21                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_ADDRESS 0x1c54u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_BYTE_ADDRESS 0x1c54u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_22                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_ADDRESS 0x1c58u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_BYTE_ADDRESS 0x1c58u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_23                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_ADDRESS 0x1c5cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_BYTE_ADDRESS 0x1c5cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_24                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_ADDRESS 0x1c60u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_BYTE_ADDRESS 0x1c60u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_25                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_ADDRESS 0x1c64u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_BYTE_ADDRESS 0x1c64u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_26                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_ADDRESS 0x1c68u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_BYTE_ADDRESS 0x1c68u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_27                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_ADDRESS 0x1c6cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_BYTE_ADDRESS 0x1c6cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_28                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_ADDRESS 0x1c70u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_BYTE_ADDRESS 0x1c70u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_29                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_ADDRESS 0x1c74u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_BYTE_ADDRESS 0x1c74u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_30                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_ADDRESS 0x1c78u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_BYTE_ADDRESS 0x1c78u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_8_31                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_ADDRESS 0x1c7cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_BYTE_ADDRESS 0x1c7cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_0                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_ADDRESS 0x1c80u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_BYTE_ADDRESS 0x1c80u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_1                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_ADDRESS 0x1c84u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_BYTE_ADDRESS 0x1c84u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_2                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_ADDRESS 0x1c88u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_BYTE_ADDRESS 0x1c88u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_3                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_ADDRESS 0x1c8cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_BYTE_ADDRESS 0x1c8cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_4                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_ADDRESS 0x1c90u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_BYTE_ADDRESS 0x1c90u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_5                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_ADDRESS 0x1c94u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_BYTE_ADDRESS 0x1c94u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_6                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_ADDRESS 0x1c98u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_BYTE_ADDRESS 0x1c98u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_7                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_ADDRESS 0x1c9cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_BYTE_ADDRESS 0x1c9cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_8                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_ADDRESS 0x1ca0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_BYTE_ADDRESS 0x1ca0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_9                             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_ADDRESS 0x1ca4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_BYTE_ADDRESS 0x1ca4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_10                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_ADDRESS 0x1ca8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_BYTE_ADDRESS 0x1ca8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_11                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_ADDRESS 0x1cacu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_BYTE_ADDRESS 0x1cacu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_12                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_ADDRESS 0x1cb0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_BYTE_ADDRESS 0x1cb0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_13                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_ADDRESS 0x1cb4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_BYTE_ADDRESS 0x1cb4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_14                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_ADDRESS 0x1cb8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_BYTE_ADDRESS 0x1cb8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_15                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_ADDRESS 0x1cbcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_BYTE_ADDRESS 0x1cbcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_16                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_ADDRESS 0x1cc0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_BYTE_ADDRESS 0x1cc0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_17                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_ADDRESS 0x1cc4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_BYTE_ADDRESS 0x1cc4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_18                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_ADDRESS 0x1cc8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_BYTE_ADDRESS 0x1cc8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_19                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_ADDRESS 0x1cccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_BYTE_ADDRESS 0x1cccu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_20                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_ADDRESS 0x1cd0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_BYTE_ADDRESS 0x1cd0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_21                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_ADDRESS 0x1cd4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_BYTE_ADDRESS 0x1cd4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_22                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_ADDRESS 0x1cd8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_BYTE_ADDRESS 0x1cd8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_23                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_ADDRESS 0x1cdcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_BYTE_ADDRESS 0x1cdcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_24                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_ADDRESS 0x1ce0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_BYTE_ADDRESS 0x1ce0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_25                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_ADDRESS 0x1ce4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_BYTE_ADDRESS 0x1ce4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_26                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_ADDRESS 0x1ce8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_BYTE_ADDRESS 0x1ce8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_27                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_ADDRESS 0x1cecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_BYTE_ADDRESS 0x1cecu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_28                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_ADDRESS 0x1cf0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_BYTE_ADDRESS 0x1cf0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_29                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_ADDRESS 0x1cf4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_BYTE_ADDRESS 0x1cf4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_30                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_ADDRESS 0x1cf8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_BYTE_ADDRESS 0x1cf8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_9_31                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_ADDRESS 0x1cfcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_BYTE_ADDRESS 0x1cfcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_0                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_ADDRESS 0x1d00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_BYTE_ADDRESS 0x1d00u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_1                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_ADDRESS 0x1d04u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_BYTE_ADDRESS 0x1d04u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_2                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_ADDRESS 0x1d08u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_BYTE_ADDRESS 0x1d08u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_3                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_ADDRESS 0x1d0cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_BYTE_ADDRESS 0x1d0cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_4                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_ADDRESS 0x1d10u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_BYTE_ADDRESS 0x1d10u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_5                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_ADDRESS 0x1d14u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_BYTE_ADDRESS 0x1d14u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_6                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_ADDRESS 0x1d18u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_BYTE_ADDRESS 0x1d18u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_7                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_ADDRESS 0x1d1cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_BYTE_ADDRESS 0x1d1cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_8                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_ADDRESS 0x1d20u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_BYTE_ADDRESS 0x1d20u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_9                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_ADDRESS 0x1d24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_BYTE_ADDRESS 0x1d24u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_10                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_ADDRESS 0x1d28u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_BYTE_ADDRESS 0x1d28u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_11                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_ADDRESS 0x1d2cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_BYTE_ADDRESS 0x1d2cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_12                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_ADDRESS 0x1d30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_BYTE_ADDRESS 0x1d30u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_13                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_ADDRESS 0x1d34u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_BYTE_ADDRESS 0x1d34u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_14                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_ADDRESS 0x1d38u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_BYTE_ADDRESS 0x1d38u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_15                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_ADDRESS 0x1d3cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_BYTE_ADDRESS 0x1d3cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_16                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_ADDRESS 0x1d40u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_BYTE_ADDRESS 0x1d40u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_17                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_ADDRESS 0x1d44u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_BYTE_ADDRESS 0x1d44u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_18                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_ADDRESS 0x1d48u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_BYTE_ADDRESS 0x1d48u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_19                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_ADDRESS 0x1d4cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_BYTE_ADDRESS 0x1d4cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_20                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_ADDRESS 0x1d50u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_BYTE_ADDRESS 0x1d50u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_21                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_ADDRESS 0x1d54u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_BYTE_ADDRESS 0x1d54u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_22                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_ADDRESS 0x1d58u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_BYTE_ADDRESS 0x1d58u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_23                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_ADDRESS 0x1d5cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_BYTE_ADDRESS 0x1d5cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_24                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_ADDRESS 0x1d60u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_BYTE_ADDRESS 0x1d60u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_25                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_ADDRESS 0x1d64u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_BYTE_ADDRESS 0x1d64u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_26                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_ADDRESS 0x1d68u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_BYTE_ADDRESS 0x1d68u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_27                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_ADDRESS 0x1d6cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_BYTE_ADDRESS 0x1d6cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_28                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_ADDRESS 0x1d70u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_BYTE_ADDRESS 0x1d70u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_29                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_ADDRESS 0x1d74u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_BYTE_ADDRESS 0x1d74u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_30                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_ADDRESS 0x1d78u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_BYTE_ADDRESS 0x1d78u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_10_31                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_ADDRESS 0x1d7cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_BYTE_ADDRESS 0x1d7cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_0                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_ADDRESS 0x1d80u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_BYTE_ADDRESS 0x1d80u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_1                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_ADDRESS 0x1d84u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_BYTE_ADDRESS 0x1d84u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_2                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_ADDRESS 0x1d88u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_BYTE_ADDRESS 0x1d88u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_3                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_ADDRESS 0x1d8cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_BYTE_ADDRESS 0x1d8cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_4                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_ADDRESS 0x1d90u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_BYTE_ADDRESS 0x1d90u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_5                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_ADDRESS 0x1d94u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_BYTE_ADDRESS 0x1d94u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_6                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_ADDRESS 0x1d98u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_BYTE_ADDRESS 0x1d98u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_7                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_ADDRESS 0x1d9cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_BYTE_ADDRESS 0x1d9cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_8                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_ADDRESS 0x1da0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_BYTE_ADDRESS 0x1da0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_9                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_ADDRESS 0x1da4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_BYTE_ADDRESS 0x1da4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_10                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_ADDRESS 0x1da8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_BYTE_ADDRESS 0x1da8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_11                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_ADDRESS 0x1dacu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_BYTE_ADDRESS 0x1dacu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_12                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_ADDRESS 0x1db0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_BYTE_ADDRESS 0x1db0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_13                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_ADDRESS 0x1db4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_BYTE_ADDRESS 0x1db4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_14                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_ADDRESS 0x1db8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_BYTE_ADDRESS 0x1db8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_15                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_ADDRESS 0x1dbcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_BYTE_ADDRESS 0x1dbcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_16                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_ADDRESS 0x1dc0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_BYTE_ADDRESS 0x1dc0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_17                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_ADDRESS 0x1dc4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_BYTE_ADDRESS 0x1dc4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_18                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_ADDRESS 0x1dc8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_BYTE_ADDRESS 0x1dc8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_19                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_ADDRESS 0x1dccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_BYTE_ADDRESS 0x1dccu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_20                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_ADDRESS 0x1dd0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_BYTE_ADDRESS 0x1dd0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_21                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_ADDRESS 0x1dd4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_BYTE_ADDRESS 0x1dd4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_22                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_ADDRESS 0x1dd8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_BYTE_ADDRESS 0x1dd8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_23                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_ADDRESS 0x1ddcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_BYTE_ADDRESS 0x1ddcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_24                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_ADDRESS 0x1de0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_BYTE_ADDRESS 0x1de0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_25                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_ADDRESS 0x1de4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_BYTE_ADDRESS 0x1de4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_26                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_ADDRESS 0x1de8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_BYTE_ADDRESS 0x1de8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_27                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_ADDRESS 0x1decu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_BYTE_ADDRESS 0x1decu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_28                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_ADDRESS 0x1df0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_BYTE_ADDRESS 0x1df0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_29                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_ADDRESS 0x1df4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_BYTE_ADDRESS 0x1df4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_30                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_ADDRESS 0x1df8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_BYTE_ADDRESS 0x1df8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_11_31                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_ADDRESS 0x1dfcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_BYTE_ADDRESS 0x1dfcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_0                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_ADDRESS 0x1e00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_BYTE_ADDRESS 0x1e00u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_1                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_ADDRESS 0x1e04u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_BYTE_ADDRESS 0x1e04u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_2                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_ADDRESS 0x1e08u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_BYTE_ADDRESS 0x1e08u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_3                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_ADDRESS 0x1e0cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_BYTE_ADDRESS 0x1e0cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_4                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_ADDRESS 0x1e10u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_BYTE_ADDRESS 0x1e10u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_5                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_ADDRESS 0x1e14u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_BYTE_ADDRESS 0x1e14u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_6                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_ADDRESS 0x1e18u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_BYTE_ADDRESS 0x1e18u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_7                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_ADDRESS 0x1e1cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_BYTE_ADDRESS 0x1e1cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_8                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_ADDRESS 0x1e20u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_BYTE_ADDRESS 0x1e20u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_9                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_ADDRESS 0x1e24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_BYTE_ADDRESS 0x1e24u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_10                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_ADDRESS 0x1e28u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_BYTE_ADDRESS 0x1e28u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_11                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_ADDRESS 0x1e2cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_BYTE_ADDRESS 0x1e2cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_12                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_ADDRESS 0x1e30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_BYTE_ADDRESS 0x1e30u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_13                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_ADDRESS 0x1e34u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_BYTE_ADDRESS 0x1e34u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_14                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_ADDRESS 0x1e38u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_BYTE_ADDRESS 0x1e38u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_15                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_ADDRESS 0x1e3cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_BYTE_ADDRESS 0x1e3cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_16                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_ADDRESS 0x1e40u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_BYTE_ADDRESS 0x1e40u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_17                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_ADDRESS 0x1e44u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_BYTE_ADDRESS 0x1e44u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_18                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_ADDRESS 0x1e48u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_BYTE_ADDRESS 0x1e48u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_19                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_ADDRESS 0x1e4cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_BYTE_ADDRESS 0x1e4cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_20                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_ADDRESS 0x1e50u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_BYTE_ADDRESS 0x1e50u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_21                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_ADDRESS 0x1e54u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_BYTE_ADDRESS 0x1e54u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_22                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_ADDRESS 0x1e58u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_BYTE_ADDRESS 0x1e58u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_23                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_ADDRESS 0x1e5cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_BYTE_ADDRESS 0x1e5cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_24                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_ADDRESS 0x1e60u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_BYTE_ADDRESS 0x1e60u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_25                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_ADDRESS 0x1e64u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_BYTE_ADDRESS 0x1e64u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_26                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_ADDRESS 0x1e68u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_BYTE_ADDRESS 0x1e68u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_27                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_ADDRESS 0x1e6cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_BYTE_ADDRESS 0x1e6cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_28                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_ADDRESS 0x1e70u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_BYTE_ADDRESS 0x1e70u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_29                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_ADDRESS 0x1e74u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_BYTE_ADDRESS 0x1e74u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_30                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_ADDRESS 0x1e78u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_BYTE_ADDRESS 0x1e78u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_12_31                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_ADDRESS 0x1e7cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_BYTE_ADDRESS 0x1e7cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_0                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_ADDRESS 0x1e80u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_BYTE_ADDRESS 0x1e80u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_1                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_ADDRESS 0x1e84u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_BYTE_ADDRESS 0x1e84u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_2                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_ADDRESS 0x1e88u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_BYTE_ADDRESS 0x1e88u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_3                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_ADDRESS 0x1e8cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_BYTE_ADDRESS 0x1e8cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_4                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_ADDRESS 0x1e90u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_BYTE_ADDRESS 0x1e90u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_5                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_ADDRESS 0x1e94u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_BYTE_ADDRESS 0x1e94u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_6                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_ADDRESS 0x1e98u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_BYTE_ADDRESS 0x1e98u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_7                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_ADDRESS 0x1e9cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_BYTE_ADDRESS 0x1e9cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_8                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_ADDRESS 0x1ea0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_BYTE_ADDRESS 0x1ea0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_9                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_ADDRESS 0x1ea4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_BYTE_ADDRESS 0x1ea4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_10                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_ADDRESS 0x1ea8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_BYTE_ADDRESS 0x1ea8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_11                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_ADDRESS 0x1eacu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_BYTE_ADDRESS 0x1eacu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_12                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_ADDRESS 0x1eb0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_BYTE_ADDRESS 0x1eb0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_13                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_ADDRESS 0x1eb4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_BYTE_ADDRESS 0x1eb4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_14                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_ADDRESS 0x1eb8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_BYTE_ADDRESS 0x1eb8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_15                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_ADDRESS 0x1ebcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_BYTE_ADDRESS 0x1ebcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_16                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_ADDRESS 0x1ec0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_BYTE_ADDRESS 0x1ec0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_17                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_ADDRESS 0x1ec4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_BYTE_ADDRESS 0x1ec4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_18                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_ADDRESS 0x1ec8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_BYTE_ADDRESS 0x1ec8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_19                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_ADDRESS 0x1eccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_BYTE_ADDRESS 0x1eccu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_20                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_ADDRESS 0x1ed0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_BYTE_ADDRESS 0x1ed0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_21                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_ADDRESS 0x1ed4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_BYTE_ADDRESS 0x1ed4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_22                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_ADDRESS 0x1ed8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_BYTE_ADDRESS 0x1ed8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_23                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_ADDRESS 0x1edcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_BYTE_ADDRESS 0x1edcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_24                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_ADDRESS 0x1ee0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_BYTE_ADDRESS 0x1ee0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_25                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_ADDRESS 0x1ee4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_BYTE_ADDRESS 0x1ee4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_26                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_ADDRESS 0x1ee8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_BYTE_ADDRESS 0x1ee8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_27                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_ADDRESS 0x1eecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_BYTE_ADDRESS 0x1eecu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_28                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_ADDRESS 0x1ef0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_BYTE_ADDRESS 0x1ef0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_29                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_ADDRESS 0x1ef4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_BYTE_ADDRESS 0x1ef4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_30                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_ADDRESS 0x1ef8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_BYTE_ADDRESS 0x1ef8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_13_31                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_ADDRESS 0x1efcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_BYTE_ADDRESS 0x1efcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_0                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_ADDRESS 0x1f00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_BYTE_ADDRESS 0x1f00u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_1                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_ADDRESS 0x1f04u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_BYTE_ADDRESS 0x1f04u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_2                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_ADDRESS 0x1f08u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_BYTE_ADDRESS 0x1f08u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_3                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_ADDRESS 0x1f0cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_BYTE_ADDRESS 0x1f0cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_4                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_ADDRESS 0x1f10u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_BYTE_ADDRESS 0x1f10u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_5                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_ADDRESS 0x1f14u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_BYTE_ADDRESS 0x1f14u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_6                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_ADDRESS 0x1f18u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_BYTE_ADDRESS 0x1f18u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_7                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_ADDRESS 0x1f1cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_BYTE_ADDRESS 0x1f1cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_8                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_ADDRESS 0x1f20u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_BYTE_ADDRESS 0x1f20u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_9                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_ADDRESS 0x1f24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_BYTE_ADDRESS 0x1f24u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_10                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_ADDRESS 0x1f28u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_BYTE_ADDRESS 0x1f28u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_11                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_ADDRESS 0x1f2cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_BYTE_ADDRESS 0x1f2cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_12                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_ADDRESS 0x1f30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_BYTE_ADDRESS 0x1f30u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_13                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_ADDRESS 0x1f34u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_BYTE_ADDRESS 0x1f34u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_14                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_ADDRESS 0x1f38u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_BYTE_ADDRESS 0x1f38u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_15                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_ADDRESS 0x1f3cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_BYTE_ADDRESS 0x1f3cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_16                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_ADDRESS 0x1f40u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_BYTE_ADDRESS 0x1f40u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_17                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_ADDRESS 0x1f44u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_BYTE_ADDRESS 0x1f44u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_18                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_ADDRESS 0x1f48u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_BYTE_ADDRESS 0x1f48u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_19                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_ADDRESS 0x1f4cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_BYTE_ADDRESS 0x1f4cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_20                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_ADDRESS 0x1f50u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_BYTE_ADDRESS 0x1f50u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_21                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_ADDRESS 0x1f54u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_BYTE_ADDRESS 0x1f54u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_22                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_ADDRESS 0x1f58u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_BYTE_ADDRESS 0x1f58u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_23                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_ADDRESS 0x1f5cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_BYTE_ADDRESS 0x1f5cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_24                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_ADDRESS 0x1f60u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_BYTE_ADDRESS 0x1f60u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_25                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_ADDRESS 0x1f64u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_BYTE_ADDRESS 0x1f64u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_26                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_ADDRESS 0x1f68u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_BYTE_ADDRESS 0x1f68u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_27                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_ADDRESS 0x1f6cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_BYTE_ADDRESS 0x1f6cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_28                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_ADDRESS 0x1f70u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_BYTE_ADDRESS 0x1f70u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_29                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_ADDRESS 0x1f74u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_BYTE_ADDRESS 0x1f74u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_30                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_ADDRESS 0x1f78u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_BYTE_ADDRESS 0x1f78u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_14_31                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_ADDRESS 0x1f7cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_BYTE_ADDRESS 0x1f7cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_0                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_ADDRESS 0x1f80u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_BYTE_ADDRESS 0x1f80u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_1                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_ADDRESS 0x1f84u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_BYTE_ADDRESS 0x1f84u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_2                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_ADDRESS 0x1f88u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_BYTE_ADDRESS 0x1f88u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_3                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_ADDRESS 0x1f8cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_BYTE_ADDRESS 0x1f8cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_4                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_ADDRESS 0x1f90u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_BYTE_ADDRESS 0x1f90u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_5                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_ADDRESS 0x1f94u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_BYTE_ADDRESS 0x1f94u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_6                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_ADDRESS 0x1f98u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_BYTE_ADDRESS 0x1f98u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_7                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_ADDRESS 0x1f9cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_BYTE_ADDRESS 0x1f9cu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_8                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_ADDRESS 0x1fa0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_BYTE_ADDRESS 0x1fa0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_9                            */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_ADDRESS 0x1fa4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_BYTE_ADDRESS 0x1fa4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_10                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_ADDRESS 0x1fa8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_BYTE_ADDRESS 0x1fa8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_11                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_ADDRESS 0x1facu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_BYTE_ADDRESS 0x1facu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_12                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_ADDRESS 0x1fb0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_BYTE_ADDRESS 0x1fb0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_13                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_ADDRESS 0x1fb4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_BYTE_ADDRESS 0x1fb4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_14                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_ADDRESS 0x1fb8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_BYTE_ADDRESS 0x1fb8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_15                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_ADDRESS 0x1fbcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_BYTE_ADDRESS 0x1fbcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_16                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_ADDRESS 0x1fc0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_BYTE_ADDRESS 0x1fc0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_17                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_ADDRESS 0x1fc4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_BYTE_ADDRESS 0x1fc4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_18                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_ADDRESS 0x1fc8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_BYTE_ADDRESS 0x1fc8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_19                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_ADDRESS 0x1fccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_BYTE_ADDRESS 0x1fccu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_20                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_ADDRESS 0x1fd0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_BYTE_ADDRESS 0x1fd0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_21                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_ADDRESS 0x1fd4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_BYTE_ADDRESS 0x1fd4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_22                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_ADDRESS 0x1fd8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_BYTE_ADDRESS 0x1fd8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_23                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_ADDRESS 0x1fdcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_BYTE_ADDRESS 0x1fdcu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_24                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_ADDRESS 0x1fe0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_BYTE_ADDRESS 0x1fe0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_25                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_ADDRESS 0x1fe4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_BYTE_ADDRESS 0x1fe4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_26                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_ADDRESS 0x1fe8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_BYTE_ADDRESS 0x1fe8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_27                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_ADDRESS 0x1fecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_BYTE_ADDRESS 0x1fecu
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_28                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_ADDRESS 0x1ff0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_BYTE_ADDRESS 0x1ff0u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_29                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_ADDRESS 0x1ff4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_BYTE_ADDRESS 0x1ff4u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_30                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_ADDRESS 0x1ff8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_BYTE_ADDRESS 0x1ff8u
/* Register: emmc.crypto_vendor2.CRYPTOCFG_15_31                           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_ADDRESS 0x1ffcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_BYTE_ADDRESS 0x1ffcu


/* ####################################################################### */
/*        TEMPLATE MACROS                                                  */
/* ####################################################################### */

/* Addressmap type: emmc                                                   */
/* Addressmap template: emmc                                               */
#define EMMC_SIZE 0x2000u
#define EMMC_BYTE_SIZE 0x2000u
/* Group member: emmc.crypto                                               */
/* Group type referenced: emmc::crypto                                     */
/* Group template referenced: emmc::crypto                                 */
#define EMMC_CRYPTO_OFFSET 0x0u
#define EMMC_CRYPTO_BYTE_OFFSET 0x0u
#define EMMC_CRYPTO_READ_ACCESS 1u
#define EMMC_CRYPTO_WRITE_ACCESS 1u
/* Group member: emmc.crypto_phy                                           */
/* Group type referenced: emmc::crypto_phy                                 */
/* Group template referenced: emmc::crypto_phy                             */
#define EMMC_CRYPTO_PHY_OFFSET 0x300u
#define EMMC_CRYPTO_PHY_BYTE_OFFSET 0x300u
#define EMMC_CRYPTO_PHY_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_WRITE_ACCESS 1u
/* Group member: emmc.crypto_vendor1                                       */
/* Group type referenced: emmc::crypto_vendor1                             */
/* Group template referenced: emmc::crypto_vendor1                         */
#define EMMC_CRYPTO_VENDOR1_OFFSET 0x500u
#define EMMC_CRYPTO_VENDOR1_BYTE_OFFSET 0x500u
#define EMMC_CRYPTO_VENDOR1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_WRITE_ACCESS 1u
/* Group member: emmc.crypto_embedded_control                              */
/* Group type referenced: emmc::crypto_embedded_control                    */
/* Group template referenced: emmc::crypto_embedded_control                */
#define EMMC_CRYPTO_EMBEDDED_CONTROL_OFFSET 0xf6cu
#define EMMC_CRYPTO_EMBEDDED_CONTROL_BYTE_OFFSET 0xf6cu
#define EMMC_CRYPTO_EMBEDDED_CONTROL_READ_ACCESS 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_WRITE_ACCESS 1u
/* Group member: emmc.crypto_vendor2                                       */
/* Group type referenced: emmc::crypto_vendor2                             */
/* Group template referenced: emmc::crypto_vendor2                         */
#define EMMC_CRYPTO_VENDOR2_OFFSET 0x1000u
#define EMMC_CRYPTO_VENDOR2_BYTE_OFFSET 0x1000u
#define EMMC_CRYPTO_VENDOR2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_WRITE_ACCESS 1u

/* Group type: emmc::crypto                                                */
/* Group template: emmc::crypto                                            */
#define EMMC_CRYPTO_SIZE 0x100u
#define EMMC_CRYPTO_BYTE_SIZE 0x100u
/* Register member: emmc::crypto.SDMASA_R                                  */
/* Register type referenced: emmc::crypto::SDMASA_R                        */
/* Register template referenced: emmc::crypto::SDMASA_R                    */
#define EMMC_CRYPTO_SDMASA_R_OFFSET 0x0u
#define EMMC_CRYPTO_SDMASA_R_BYTE_OFFSET 0x0u
#define EMMC_CRYPTO_SDMASA_R_READ_ACCESS 1u
#define EMMC_CRYPTO_SDMASA_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_SDMASA_R_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_SDMASA_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_SDMASA_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_SDMASA_R_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto.BLOCKSIZE_R                               */
/* Register type referenced: emmc::crypto::BLOCKSIZE_R                     */
/* Register template referenced: emmc::crypto::BLOCKSIZE_R                 */
#define EMMC_CRYPTO_BLOCKSIZE_R_OFFSET 0x4u
#define EMMC_CRYPTO_BLOCKSIZE_R_BYTE_OFFSET 0x4u
#define EMMC_CRYPTO_BLOCKSIZE_R_READ_ACCESS 1u
#define EMMC_CRYPTO_BLOCKSIZE_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_BLOCKSIZE_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_BLOCKSIZE_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_BLOCKSIZE_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_BLOCKSIZE_R_WRITE_MASK 0x7fffu
/* Register member: emmc::crypto.BLOCKCOUNT_R                              */
/* Register type referenced: emmc::crypto::BLOCKCOUNT_R                    */
/* Register template referenced: emmc::crypto::BLOCKCOUNT_R                */
#define EMMC_CRYPTO_BLOCKCOUNT_R_OFFSET 0x6u
#define EMMC_CRYPTO_BLOCKCOUNT_R_BYTE_OFFSET 0x6u
#define EMMC_CRYPTO_BLOCKCOUNT_R_READ_ACCESS 1u
#define EMMC_CRYPTO_BLOCKCOUNT_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_BLOCKCOUNT_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_BLOCKCOUNT_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_BLOCKCOUNT_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_BLOCKCOUNT_R_WRITE_MASK 0xffffu
/* Register member: emmc::crypto.ARGUMENT_R                                */
/* Register type referenced: emmc::crypto::ARGUMENT_R                      */
/* Register template referenced: emmc::crypto::ARGUMENT_R                  */
#define EMMC_CRYPTO_ARGUMENT_R_OFFSET 0x8u
#define EMMC_CRYPTO_ARGUMENT_R_BYTE_OFFSET 0x8u
#define EMMC_CRYPTO_ARGUMENT_R_READ_ACCESS 1u
#define EMMC_CRYPTO_ARGUMENT_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ARGUMENT_R_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_ARGUMENT_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_ARGUMENT_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_ARGUMENT_R_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto.XFER_MODE_R                               */
/* Register type referenced: emmc::crypto::XFER_MODE_R                     */
/* Register template referenced: emmc::crypto::XFER_MODE_R                 */
#define EMMC_CRYPTO_XFER_MODE_R_OFFSET 0xcu
#define EMMC_CRYPTO_XFER_MODE_R_BYTE_OFFSET 0xcu
#define EMMC_CRYPTO_XFER_MODE_R_READ_ACCESS 1u
#define EMMC_CRYPTO_XFER_MODE_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_XFER_MODE_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_XFER_MODE_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_XFER_MODE_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_XFER_MODE_R_WRITE_MASK 0x01ffu
/* Register member: emmc::crypto.CMD_R                                     */
/* Register type referenced: emmc::crypto::CMD_R                           */
/* Register template referenced: emmc::crypto::CMD_R                       */
#define EMMC_CRYPTO_CMD_R_OFFSET 0xeu
#define EMMC_CRYPTO_CMD_R_BYTE_OFFSET 0xeu
#define EMMC_CRYPTO_CMD_R_READ_ACCESS 1u
#define EMMC_CRYPTO_CMD_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_CMD_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_CMD_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_CMD_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_CMD_R_WRITE_MASK 0x3fffu
/* Register member: emmc::crypto.RESP01_R                                  */
/* Register type referenced: emmc::crypto::RESP01_R                        */
/* Register template referenced: emmc::crypto::RESP01_R                    */
#define EMMC_CRYPTO_RESP01_R_OFFSET 0x10u
#define EMMC_CRYPTO_RESP01_R_BYTE_OFFSET 0x10u
#define EMMC_CRYPTO_RESP01_R_READ_ACCESS 1u
#define EMMC_CRYPTO_RESP01_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_RESP01_R_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_RESP01_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_RESP01_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_RESP01_R_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto.RESP23_R                                  */
/* Register type referenced: emmc::crypto::RESP23_R                        */
/* Register template referenced: emmc::crypto::RESP23_R                    */
#define EMMC_CRYPTO_RESP23_R_OFFSET 0x14u
#define EMMC_CRYPTO_RESP23_R_BYTE_OFFSET 0x14u
#define EMMC_CRYPTO_RESP23_R_READ_ACCESS 1u
#define EMMC_CRYPTO_RESP23_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_RESP23_R_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_RESP23_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_RESP23_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_RESP23_R_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto.RESP45_R                                  */
/* Register type referenced: emmc::crypto::RESP45_R                        */
/* Register template referenced: emmc::crypto::RESP45_R                    */
#define EMMC_CRYPTO_RESP45_R_OFFSET 0x18u
#define EMMC_CRYPTO_RESP45_R_BYTE_OFFSET 0x18u
#define EMMC_CRYPTO_RESP45_R_READ_ACCESS 1u
#define EMMC_CRYPTO_RESP45_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_RESP45_R_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_RESP45_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_RESP45_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_RESP45_R_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto.RESP67_R                                  */
/* Register type referenced: emmc::crypto::RESP67_R                        */
/* Register template referenced: emmc::crypto::RESP67_R                    */
#define EMMC_CRYPTO_RESP67_R_OFFSET 0x1cu
#define EMMC_CRYPTO_RESP67_R_BYTE_OFFSET 0x1cu
#define EMMC_CRYPTO_RESP67_R_READ_ACCESS 1u
#define EMMC_CRYPTO_RESP67_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_RESP67_R_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_RESP67_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_RESP67_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_RESP67_R_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto.BUF_DATA_R                                */
/* Register type referenced: emmc::crypto::BUF_DATA_R                      */
/* Register template referenced: emmc::crypto::BUF_DATA_R                  */
#define EMMC_CRYPTO_BUF_DATA_R_OFFSET 0x20u
#define EMMC_CRYPTO_BUF_DATA_R_BYTE_OFFSET 0x20u
#define EMMC_CRYPTO_BUF_DATA_R_READ_ACCESS 1u
#define EMMC_CRYPTO_BUF_DATA_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_BUF_DATA_R_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_BUF_DATA_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_BUF_DATA_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_BUF_DATA_R_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto.PSTATE_REG                                */
/* Register type referenced: emmc::crypto::PSTATE_REG                      */
/* Register template referenced: emmc::crypto::PSTATE_REG                  */
#define EMMC_CRYPTO_PSTATE_REG_OFFSET 0x24u
#define EMMC_CRYPTO_PSTATE_REG_BYTE_OFFSET 0x24u
#define EMMC_CRYPTO_PSTATE_REG_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_PSTATE_REG_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_PSTATE_REG_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_PSTATE_REG_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto.HOST_CTRL1_R                              */
/* Register type referenced: emmc::crypto::HOST_CTRL1_R                    */
/* Register template referenced: emmc::crypto::HOST_CTRL1_R                */
#define EMMC_CRYPTO_HOST_CTRL1_R_OFFSET 0x28u
#define EMMC_CRYPTO_HOST_CTRL1_R_BYTE_OFFSET 0x28u
#define EMMC_CRYPTO_HOST_CTRL1_R_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_RESET_VALUE 0x00u
#define EMMC_CRYPTO_HOST_CTRL1_R_RESET_MASK 0xffu
#define EMMC_CRYPTO_HOST_CTRL1_R_READ_MASK 0xffu
#define EMMC_CRYPTO_HOST_CTRL1_R_WRITE_MASK 0xffu
/* Register member: emmc::crypto.PWR_CTRL_R                                */
/* Register type referenced: emmc::crypto::PWR_CTRL_R                      */
/* Register template referenced: emmc::crypto::PWR_CTRL_R                  */
#define EMMC_CRYPTO_PWR_CTRL_R_OFFSET 0x29u
#define EMMC_CRYPTO_PWR_CTRL_R_BYTE_OFFSET 0x29u
#define EMMC_CRYPTO_PWR_CTRL_R_READ_ACCESS 1u
#define EMMC_CRYPTO_PWR_CTRL_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PWR_CTRL_R_RESET_VALUE 0x00u
#define EMMC_CRYPTO_PWR_CTRL_R_RESET_MASK 0xffu
#define EMMC_CRYPTO_PWR_CTRL_R_READ_MASK 0xffu
#define EMMC_CRYPTO_PWR_CTRL_R_WRITE_MASK 0xffu
/* Register member: emmc::crypto.BGAP_CTRL_R                               */
/* Register type referenced: emmc::crypto::BGAP_CTRL_R                     */
/* Register template referenced: emmc::crypto::BGAP_CTRL_R                 */
#define EMMC_CRYPTO_BGAP_CTRL_R_OFFSET 0x2au
#define EMMC_CRYPTO_BGAP_CTRL_R_BYTE_OFFSET 0x2au
#define EMMC_CRYPTO_BGAP_CTRL_R_READ_ACCESS 1u
#define EMMC_CRYPTO_BGAP_CTRL_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_BGAP_CTRL_R_RESET_VALUE 0x00u
#define EMMC_CRYPTO_BGAP_CTRL_R_RESET_MASK 0xffu
#define EMMC_CRYPTO_BGAP_CTRL_R_READ_MASK 0xffu
#define EMMC_CRYPTO_BGAP_CTRL_R_WRITE_MASK 0x0fu
/* Register member: emmc::crypto.WUP_CTRL_R                                */
/* Register type referenced: emmc::crypto::WUP_CTRL_R                      */
/* Register template referenced: emmc::crypto::WUP_CTRL_R                  */
#define EMMC_CRYPTO_WUP_CTRL_R_OFFSET 0x2bu
#define EMMC_CRYPTO_WUP_CTRL_R_BYTE_OFFSET 0x2bu
#define EMMC_CRYPTO_WUP_CTRL_R_READ_ACCESS 1u
#define EMMC_CRYPTO_WUP_CTRL_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_WUP_CTRL_R_RESET_VALUE 0x00u
#define EMMC_CRYPTO_WUP_CTRL_R_RESET_MASK 0xffu
#define EMMC_CRYPTO_WUP_CTRL_R_READ_MASK 0xffu
#define EMMC_CRYPTO_WUP_CTRL_R_WRITE_MASK 0x07u
/* Register member: emmc::crypto.CLK_CTRL_R                                */
/* Register type referenced: emmc::crypto::CLK_CTRL_R                      */
/* Register template referenced: emmc::crypto::CLK_CTRL_R                  */
#define EMMC_CRYPTO_CLK_CTRL_R_OFFSET 0x2cu
#define EMMC_CRYPTO_CLK_CTRL_R_BYTE_OFFSET 0x2cu
#define EMMC_CRYPTO_CLK_CTRL_R_READ_ACCESS 1u
#define EMMC_CRYPTO_CLK_CTRL_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_CLK_CTRL_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_CLK_CTRL_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_CLK_CTRL_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_CLK_CTRL_R_WRITE_MASK 0xffedu
/* Register member: emmc::crypto.TOUT_CTRL_R                               */
/* Register type referenced: emmc::crypto::TOUT_CTRL_R                     */
/* Register template referenced: emmc::crypto::TOUT_CTRL_R                 */
#define EMMC_CRYPTO_TOUT_CTRL_R_OFFSET 0x2eu
#define EMMC_CRYPTO_TOUT_CTRL_R_BYTE_OFFSET 0x2eu
#define EMMC_CRYPTO_TOUT_CTRL_R_READ_ACCESS 1u
#define EMMC_CRYPTO_TOUT_CTRL_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_TOUT_CTRL_R_RESET_VALUE 0x00u
#define EMMC_CRYPTO_TOUT_CTRL_R_RESET_MASK 0xffu
#define EMMC_CRYPTO_TOUT_CTRL_R_READ_MASK 0xffu
#define EMMC_CRYPTO_TOUT_CTRL_R_WRITE_MASK 0x0fu
/* Register member: emmc::crypto.SW_RST_R                                  */
/* Register type referenced: emmc::crypto::SW_RST_R                        */
/* Register template referenced: emmc::crypto::SW_RST_R                    */
#define EMMC_CRYPTO_SW_RST_R_OFFSET 0x2fu
#define EMMC_CRYPTO_SW_RST_R_BYTE_OFFSET 0x2fu
#define EMMC_CRYPTO_SW_RST_R_READ_ACCESS 1u
#define EMMC_CRYPTO_SW_RST_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_SW_RST_R_RESET_VALUE 0x00u
#define EMMC_CRYPTO_SW_RST_R_RESET_MASK 0xffu
#define EMMC_CRYPTO_SW_RST_R_READ_MASK 0xffu
#define EMMC_CRYPTO_SW_RST_R_WRITE_MASK 0x07u
/* Register member: emmc::crypto.NORMAL_INT_STAT_R                         */
/* Register type referenced: emmc::crypto::NORMAL_INT_STAT_R               */
/* Register template referenced: emmc::crypto::NORMAL_INT_STAT_R           */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_OFFSET 0x30u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BYTE_OFFSET 0x30u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_WRITE_MASK 0x40ffu
/* Register member: emmc::crypto.ERROR_INT_STAT_R                          */
/* Register type referenced: emmc::crypto::ERROR_INT_STAT_R                */
/* Register template referenced: emmc::crypto::ERROR_INT_STAT_R            */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_OFFSET 0x32u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_BYTE_OFFSET 0x32u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_ERROR_INT_STAT_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_ERROR_INT_STAT_R_WRITE_MASK 0xffffu
/* Register member: emmc::crypto.NORMAL_INT_STAT_EN_R                      */
/* Register type referenced: emmc::crypto::NORMAL_INT_STAT_EN_R            */
/* Register template referenced: emmc::crypto::NORMAL_INT_STAT_EN_R        */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_OFFSET 0x34u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BYTE_OFFSET 0x34u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_WRITE_MASK 0x7fffu
/* Register member: emmc::crypto.ERROR_INT_STAT_EN_R                       */
/* Register type referenced: emmc::crypto::ERROR_INT_STAT_EN_R             */
/* Register template referenced: emmc::crypto::ERROR_INT_STAT_EN_R         */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_OFFSET 0x36u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_BYTE_OFFSET 0x36u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_WRITE_MASK 0xffffu
/* Register member: emmc::crypto.NORMAL_INT_SIGNAL_EN_R                    */
/* Register type referenced: emmc::crypto::NORMAL_INT_SIGNAL_EN_R          */
/* Register template referenced: emmc::crypto::NORMAL_INT_SIGNAL_EN_R      */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_OFFSET 0x38u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BYTE_OFFSET 0x38u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_WRITE_MASK 0x7fffu
/* Register member: emmc::crypto.ERROR_INT_SIGNAL_EN_R                     */
/* Register type referenced: emmc::crypto::ERROR_INT_SIGNAL_EN_R           */
/* Register template referenced: emmc::crypto::ERROR_INT_SIGNAL_EN_R       */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_OFFSET 0x3au
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_BYTE_OFFSET 0x3au
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_WRITE_MASK 0xffffu
/* Register member: emmc::crypto.AUTO_CMD_STAT_R                           */
/* Register type referenced: emmc::crypto::AUTO_CMD_STAT_R                 */
/* Register template referenced: emmc::crypto::AUTO_CMD_STAT_R             */
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_OFFSET 0x3cu
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_BYTE_OFFSET 0x3cu
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_READ_ACCESS 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_WRITE_MASK 0x0000u
/* Register member: emmc::crypto.HOST_CTRL2_R                              */
/* Register type referenced: emmc::crypto::HOST_CTRL2_R                    */
/* Register template referenced: emmc::crypto::HOST_CTRL2_R                */
#define EMMC_CRYPTO_HOST_CTRL2_R_OFFSET 0x3eu
#define EMMC_CRYPTO_HOST_CTRL2_R_BYTE_OFFSET 0x3eu
#define EMMC_CRYPTO_HOST_CTRL2_R_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_HOST_CTRL2_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_HOST_CTRL2_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_HOST_CTRL2_R_WRITE_MASK 0xfdffu
/* Register member: emmc::crypto.CAPABILITIES1_R                           */
/* Register type referenced: emmc::crypto::CAPABILITIES1_R                 */
/* Register template referenced: emmc::crypto::CAPABILITIES1_R             */
#define EMMC_CRYPTO_CAPABILITIES1_R_OFFSET 0x40u
#define EMMC_CRYPTO_CAPABILITIES1_R_BYTE_OFFSET 0x40u
#define EMMC_CRYPTO_CAPABILITIES1_R_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_RESET_VALUE 0x3e6e0181ul
#define EMMC_CRYPTO_CAPABILITIES1_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_CAPABILITIES1_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_CAPABILITIES1_R_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto.CAPABILITIES2_R                           */
/* Register type referenced: emmc::crypto::CAPABILITIES2_R                 */
/* Register template referenced: emmc::crypto::CAPABILITIES2_R             */
#define EMMC_CRYPTO_CAPABILITIES2_R_OFFSET 0x44u
#define EMMC_CRYPTO_CAPABILITIES2_R_BYTE_OFFSET 0x44u
#define EMMC_CRYPTO_CAPABILITIES2_R_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_RESET_VALUE 0x00008077ul
#define EMMC_CRYPTO_CAPABILITIES2_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_CAPABILITIES2_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_CAPABILITIES2_R_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto.CURR_CAPABILITIES1_R                      */
/* Register type referenced: emmc::crypto::CURR_CAPABILITIES1_R            */
/* Register template referenced: emmc::crypto::CURR_CAPABILITIES1_R        */
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_OFFSET 0x48u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_BYTE_OFFSET 0x48u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_READ_ACCESS 1u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto.CURR_CAPABILITIES2_R                      */
/* Register type referenced: emmc::crypto::CURR_CAPABILITIES2_R            */
/* Register template referenced: emmc::crypto::CURR_CAPABILITIES2_R        */
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_OFFSET 0x4cu
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_BYTE_OFFSET 0x4cu
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_READ_ACCESS 1u
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto.FORCE_AUTO_CMD_STAT_R                     */
/* Register type referenced: emmc::crypto::FORCE_AUTO_CMD_STAT_R           */
/* Register template referenced: emmc::crypto::FORCE_AUTO_CMD_STAT_R       */
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_OFFSET 0x50u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_BYTE_OFFSET 0x50u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_READ_ACCESS 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_READ_MASK 0xff40u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_WRITE_MASK 0x00bfu
/* Register member: emmc::crypto.FORCE_ERROR_INT_STAT_R                    */
/* Register type referenced: emmc::crypto::FORCE_ERROR_INT_STAT_R          */
/* Register template referenced: emmc::crypto::FORCE_ERROR_INT_STAT_R      */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_OFFSET 0x52u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_BYTE_OFFSET 0x52u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_READ_MASK 0x0000u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_WRITE_MASK 0xffffu
/* Register member: emmc::crypto.ADMA_ERR_STAT_R                           */
/* Register type referenced: emmc::crypto::ADMA_ERR_STAT_R                 */
/* Register template referenced: emmc::crypto::ADMA_ERR_STAT_R             */
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_OFFSET 0x54u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_BYTE_OFFSET 0x54u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_READ_ACCESS 1u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_RESET_VALUE 0x00u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_RESET_MASK 0xffu
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_READ_MASK 0xffu
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_WRITE_MASK 0x00u
/* Register member: emmc::crypto.ADMA_SA_LOW_R                             */
/* Register type referenced: emmc::crypto::ADMA_SA_LOW_R                   */
/* Register template referenced: emmc::crypto::ADMA_SA_LOW_R               */
#define EMMC_CRYPTO_ADMA_SA_LOW_R_OFFSET 0x58u
#define EMMC_CRYPTO_ADMA_SA_LOW_R_BYTE_OFFSET 0x58u
#define EMMC_CRYPTO_ADMA_SA_LOW_R_READ_ACCESS 1u
#define EMMC_CRYPTO_ADMA_SA_LOW_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ADMA_SA_LOW_R_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_ADMA_SA_LOW_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_ADMA_SA_LOW_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_ADMA_SA_LOW_R_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto.ADMA_SA_HIGH_R                            */
/* Register type referenced: emmc::crypto::ADMA_SA_HIGH_R                  */
/* Register template referenced: emmc::crypto::ADMA_SA_HIGH_R              */
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_OFFSET 0x5cu
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_BYTE_OFFSET 0x5cu
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_READ_ACCESS 1u
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto.PRESET_INIT_R                             */
/* Register type referenced: emmc::crypto::PRESET_INIT_R                   */
/* Register template referenced: emmc::crypto::PRESET_INIT_R               */
#define EMMC_CRYPTO_PRESET_INIT_R_OFFSET 0x60u
#define EMMC_CRYPTO_PRESET_INIT_R_BYTE_OFFSET 0x60u
#define EMMC_CRYPTO_PRESET_INIT_R_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_INIT_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_INIT_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_PRESET_INIT_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_PRESET_INIT_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_PRESET_INIT_R_WRITE_MASK 0x0000u
/* Register member: emmc::crypto.PRESET_DS_R                               */
/* Register type referenced: emmc::crypto::PRESET_DS_R                     */
/* Register template referenced: emmc::crypto::PRESET_DS_R                 */
#define EMMC_CRYPTO_PRESET_DS_R_OFFSET 0x62u
#define EMMC_CRYPTO_PRESET_DS_R_BYTE_OFFSET 0x62u
#define EMMC_CRYPTO_PRESET_DS_R_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_DS_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_DS_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_PRESET_DS_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_PRESET_DS_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_PRESET_DS_R_WRITE_MASK 0x0000u
/* Register member: emmc::crypto.PRESET_HS_R                               */
/* Register type referenced: emmc::crypto::PRESET_HS_R                     */
/* Register template referenced: emmc::crypto::PRESET_HS_R                 */
#define EMMC_CRYPTO_PRESET_HS_R_OFFSET 0x64u
#define EMMC_CRYPTO_PRESET_HS_R_BYTE_OFFSET 0x64u
#define EMMC_CRYPTO_PRESET_HS_R_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_HS_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_HS_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_PRESET_HS_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_PRESET_HS_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_PRESET_HS_R_WRITE_MASK 0x0000u
/* Register member: emmc::crypto.PRESET_SDR12_R                            */
/* Register type referenced: emmc::crypto::PRESET_SDR12_R                  */
/* Register template referenced: emmc::crypto::PRESET_SDR12_R              */
#define EMMC_CRYPTO_PRESET_SDR12_R_OFFSET 0x66u
#define EMMC_CRYPTO_PRESET_SDR12_R_BYTE_OFFSET 0x66u
#define EMMC_CRYPTO_PRESET_SDR12_R_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR12_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR12_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_PRESET_SDR12_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_PRESET_SDR12_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_PRESET_SDR12_R_WRITE_MASK 0x0000u
/* Register member: emmc::crypto.PRESET_SDR25_R                            */
/* Register type referenced: emmc::crypto::PRESET_SDR25_R                  */
/* Register template referenced: emmc::crypto::PRESET_SDR25_R              */
#define EMMC_CRYPTO_PRESET_SDR25_R_OFFSET 0x68u
#define EMMC_CRYPTO_PRESET_SDR25_R_BYTE_OFFSET 0x68u
#define EMMC_CRYPTO_PRESET_SDR25_R_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR25_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR25_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_PRESET_SDR25_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_PRESET_SDR25_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_PRESET_SDR25_R_WRITE_MASK 0x0000u
/* Register member: emmc::crypto.PRESET_SDR50_R                            */
/* Register type referenced: emmc::crypto::PRESET_SDR50_R                  */
/* Register template referenced: emmc::crypto::PRESET_SDR50_R              */
#define EMMC_CRYPTO_PRESET_SDR50_R_OFFSET 0x6au
#define EMMC_CRYPTO_PRESET_SDR50_R_BYTE_OFFSET 0x6au
#define EMMC_CRYPTO_PRESET_SDR50_R_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR50_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR50_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_PRESET_SDR50_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_PRESET_SDR50_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_PRESET_SDR50_R_WRITE_MASK 0x0000u
/* Register member: emmc::crypto.PRESET_SDR104_R                           */
/* Register type referenced: emmc::crypto::PRESET_SDR104_R                 */
/* Register template referenced: emmc::crypto::PRESET_SDR104_R             */
#define EMMC_CRYPTO_PRESET_SDR104_R_OFFSET 0x6cu
#define EMMC_CRYPTO_PRESET_SDR104_R_BYTE_OFFSET 0x6cu
#define EMMC_CRYPTO_PRESET_SDR104_R_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR104_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR104_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_PRESET_SDR104_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_PRESET_SDR104_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_PRESET_SDR104_R_WRITE_MASK 0x0000u
/* Register member: emmc::crypto.PRESET_DDR50_R                            */
/* Register type referenced: emmc::crypto::PRESET_DDR50_R                  */
/* Register template referenced: emmc::crypto::PRESET_DDR50_R              */
#define EMMC_CRYPTO_PRESET_DDR50_R_OFFSET 0x6eu
#define EMMC_CRYPTO_PRESET_DDR50_R_BYTE_OFFSET 0x6eu
#define EMMC_CRYPTO_PRESET_DDR50_R_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_DDR50_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_DDR50_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_PRESET_DDR50_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_PRESET_DDR50_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_PRESET_DDR50_R_WRITE_MASK 0x0000u
/* Register member: emmc::crypto.PRESET_UHS2_R                             */
/* Register type referenced: emmc::crypto::PRESET_UHS2_R                   */
/* Register template referenced: emmc::crypto::PRESET_UHS2_R               */
#define EMMC_CRYPTO_PRESET_UHS2_R_OFFSET 0x74u
#define EMMC_CRYPTO_PRESET_UHS2_R_BYTE_OFFSET 0x74u
#define EMMC_CRYPTO_PRESET_UHS2_R_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_UHS2_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_UHS2_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_PRESET_UHS2_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_PRESET_UHS2_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_PRESET_UHS2_R_WRITE_MASK 0x0000u
/* Register member: emmc::crypto.P_EMBEDDED_CNTRL                          */
/* Register type referenced: emmc::crypto::P_EMBEDDED_CNTRL                */
/* Register template referenced: emmc::crypto::P_EMBEDDED_CNTRL            */
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_OFFSET 0xe6u
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_BYTE_OFFSET 0xe6u
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_READ_ACCESS 1u
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_RESET_VALUE 0x0f6cu
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_RESET_MASK 0xffffu
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_READ_MASK 0xffffu
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_WRITE_MASK 0x0000u
/* Register member: emmc::crypto.P_VENDOR_SPECIFIC_AREA                    */
/* Register type referenced: emmc::crypto::P_VENDOR_SPECIFIC_AREA          */
/* Register template referenced: emmc::crypto::P_VENDOR_SPECIFIC_AREA      */
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_OFFSET 0xe8u
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_BYTE_OFFSET 0xe8u
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_READ_ACCESS 1u
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_WRITE_ACCESS 0u
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_RESET_VALUE 0x0500u
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_RESET_MASK 0xffffu
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_READ_MASK 0xffffu
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_WRITE_MASK 0x0000u
/* Register member: emmc::crypto.P_VENDOR2_SPECIFIC_AREA                   */
/* Register type referenced: emmc::crypto::P_VENDOR2_SPECIFIC_AREA         */
/* Register template referenced: emmc::crypto::P_VENDOR2_SPECIFIC_AREA     */
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_OFFSET 0xeau
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_BYTE_OFFSET 0xeau
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_READ_ACCESS 1u
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_WRITE_ACCESS 0u
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_RESET_VALUE 0x1000u
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_RESET_MASK 0xffffu
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_READ_MASK 0xffffu
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_WRITE_MASK 0x0000u
/* Register member: emmc::crypto.SLOT_INTR_STATUS_R                        */
/* Register type referenced: emmc::crypto::SLOT_INTR_STATUS_R              */
/* Register template referenced: emmc::crypto::SLOT_INTR_STATUS_R          */
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_OFFSET 0xfcu
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_BYTE_OFFSET 0xfcu
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_READ_ACCESS 1u
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_WRITE_MASK 0x0000u
/* Register member: emmc::crypto.HOST_CNTRL_VERS_R                         */
/* Register type referenced: emmc::crypto::HOST_CNTRL_VERS_R               */
/* Register template referenced: emmc::crypto::HOST_CNTRL_VERS_R           */
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_OFFSET 0xfeu
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_BYTE_OFFSET 0xfeu
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_RESET_VALUE 0x0105u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_WRITE_MASK 0x0000u

/* Register type: emmc::crypto::SDMASA_R                                   */
/* Register template: emmc::crypto::SDMASA_R                               */
/* Field member: emmc::crypto::SDMASA_R.BLOCKCNT_SDMASA                    */
#define EMMC_CRYPTO_SDMASA_R_BLOCKCNT_SDMASA_MSB 31u
#define EMMC_CRYPTO_SDMASA_R_BLOCKCNT_SDMASA_LSB 0u
#define EMMC_CRYPTO_SDMASA_R_BLOCKCNT_SDMASA_WIDTH 32u
#define EMMC_CRYPTO_SDMASA_R_BLOCKCNT_SDMASA_READ_ACCESS 1u
#define EMMC_CRYPTO_SDMASA_R_BLOCKCNT_SDMASA_WRITE_ACCESS 1u
#define EMMC_CRYPTO_SDMASA_R_BLOCKCNT_SDMASA_RESET 0x00000000ul
#define EMMC_CRYPTO_SDMASA_R_BLOCKCNT_SDMASA_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_SDMASA_R_BLOCKCNT_SDMASA_GET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_SDMASA_R_BLOCKCNT_SDMASA_SET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_SDMASA_R_BLOCKCNT_SDMASA_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto::BLOCKSIZE_R                                */
/* Register template: emmc::crypto::BLOCKSIZE_R                            */
/* Field member: emmc::crypto::BLOCKSIZE_R.RSVD_BLOCKSIZE15                */
#define EMMC_CRYPTO_BLOCKSIZE_R_RSVD_BLOCKSIZE15_MSB 15u
#define EMMC_CRYPTO_BLOCKSIZE_R_RSVD_BLOCKSIZE15_LSB 15u
#define EMMC_CRYPTO_BLOCKSIZE_R_RSVD_BLOCKSIZE15_WIDTH 1u
#define EMMC_CRYPTO_BLOCKSIZE_R_RSVD_BLOCKSIZE15_READ_ACCESS 1u
#define EMMC_CRYPTO_BLOCKSIZE_R_RSVD_BLOCKSIZE15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_BLOCKSIZE_R_RSVD_BLOCKSIZE15_RESET 0x0u
#define EMMC_CRYPTO_BLOCKSIZE_R_RSVD_BLOCKSIZE15_FIELD_MASK 0x8000u
#define EMMC_CRYPTO_BLOCKSIZE_R_RSVD_BLOCKSIZE15_GET(x) \
   (((x) & 0x8000u) >> 15)
#define EMMC_CRYPTO_BLOCKSIZE_R_RSVD_BLOCKSIZE15_SET(x) \
   (((x) << 15) & 0x8000u)
#define EMMC_CRYPTO_BLOCKSIZE_R_RSVD_BLOCKSIZE15_MODIFY(r, x) \
   ((((x) << 15) & 0x8000u) | ((r) & 0x7fffu))
/* Field member: emmc::crypto::BLOCKSIZE_R.SDMA_BUF_BDARY                  */
#define EMMC_CRYPTO_BLOCKSIZE_R_SDMA_BUF_BDARY_MSB 14u
#define EMMC_CRYPTO_BLOCKSIZE_R_SDMA_BUF_BDARY_LSB 12u
#define EMMC_CRYPTO_BLOCKSIZE_R_SDMA_BUF_BDARY_WIDTH 3u
#define EMMC_CRYPTO_BLOCKSIZE_R_SDMA_BUF_BDARY_READ_ACCESS 1u
#define EMMC_CRYPTO_BLOCKSIZE_R_SDMA_BUF_BDARY_WRITE_ACCESS 1u
#define EMMC_CRYPTO_BLOCKSIZE_R_SDMA_BUF_BDARY_RESET 0x0u
#define EMMC_CRYPTO_BLOCKSIZE_R_SDMA_BUF_BDARY_FIELD_MASK 0x7000u
#define EMMC_CRYPTO_BLOCKSIZE_R_SDMA_BUF_BDARY_GET(x) (((x) & 0x7000u) >> 12)
#define EMMC_CRYPTO_BLOCKSIZE_R_SDMA_BUF_BDARY_SET(x) \
   (((x) << 12) & 0x7000u)
#define EMMC_CRYPTO_BLOCKSIZE_R_SDMA_BUF_BDARY_MODIFY(r, x) \
   ((((x) << 12) & 0x7000u) | ((r) & 0x8fffu))
/* Field member: emmc::crypto::BLOCKSIZE_R.XFER_BLOCK_SIZE                 */
#define EMMC_CRYPTO_BLOCKSIZE_R_XFER_BLOCK_SIZE_MSB 11u
#define EMMC_CRYPTO_BLOCKSIZE_R_XFER_BLOCK_SIZE_LSB 0u
#define EMMC_CRYPTO_BLOCKSIZE_R_XFER_BLOCK_SIZE_WIDTH 12u
#define EMMC_CRYPTO_BLOCKSIZE_R_XFER_BLOCK_SIZE_READ_ACCESS 1u
#define EMMC_CRYPTO_BLOCKSIZE_R_XFER_BLOCK_SIZE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_BLOCKSIZE_R_XFER_BLOCK_SIZE_RESET 0x000u
#define EMMC_CRYPTO_BLOCKSIZE_R_XFER_BLOCK_SIZE_FIELD_MASK 0x0fffu
#define EMMC_CRYPTO_BLOCKSIZE_R_XFER_BLOCK_SIZE_GET(x) ((x) & 0x0fffu)
#define EMMC_CRYPTO_BLOCKSIZE_R_XFER_BLOCK_SIZE_SET(x) ((x) & 0x0fffu)
#define EMMC_CRYPTO_BLOCKSIZE_R_XFER_BLOCK_SIZE_MODIFY(r, x) \
   (((x) & 0x0fffu) | ((r) & 0xf000u))

/* Register type: emmc::crypto::BLOCKCOUNT_R                               */
/* Register template: emmc::crypto::BLOCKCOUNT_R                           */
/* Field member: emmc::crypto::BLOCKCOUNT_R.BLOCK_CNT                      */
#define EMMC_CRYPTO_BLOCKCOUNT_R_BLOCK_CNT_MSB 15u
#define EMMC_CRYPTO_BLOCKCOUNT_R_BLOCK_CNT_LSB 0u
#define EMMC_CRYPTO_BLOCKCOUNT_R_BLOCK_CNT_WIDTH 16u
#define EMMC_CRYPTO_BLOCKCOUNT_R_BLOCK_CNT_READ_ACCESS 1u
#define EMMC_CRYPTO_BLOCKCOUNT_R_BLOCK_CNT_WRITE_ACCESS 1u
#define EMMC_CRYPTO_BLOCKCOUNT_R_BLOCK_CNT_RESET 0x0000u
#define EMMC_CRYPTO_BLOCKCOUNT_R_BLOCK_CNT_FIELD_MASK 0xffffu
#define EMMC_CRYPTO_BLOCKCOUNT_R_BLOCK_CNT_GET(x) ((x) & 0xffffu)
#define EMMC_CRYPTO_BLOCKCOUNT_R_BLOCK_CNT_SET(x) ((x) & 0xffffu)
#define EMMC_CRYPTO_BLOCKCOUNT_R_BLOCK_CNT_MODIFY(r, x) ((x) & 0xffffu)

/* Register type: emmc::crypto::ARGUMENT_R                                 */
/* Register template: emmc::crypto::ARGUMENT_R                             */
/* Field member: emmc::crypto::ARGUMENT_R.ARGUMENT                         */
#define EMMC_CRYPTO_ARGUMENT_R_ARGUMENT_MSB 31u
#define EMMC_CRYPTO_ARGUMENT_R_ARGUMENT_LSB 0u
#define EMMC_CRYPTO_ARGUMENT_R_ARGUMENT_WIDTH 32u
#define EMMC_CRYPTO_ARGUMENT_R_ARGUMENT_READ_ACCESS 1u
#define EMMC_CRYPTO_ARGUMENT_R_ARGUMENT_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ARGUMENT_R_ARGUMENT_RESET 0x00000000ul
#define EMMC_CRYPTO_ARGUMENT_R_ARGUMENT_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_ARGUMENT_R_ARGUMENT_GET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_ARGUMENT_R_ARGUMENT_SET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_ARGUMENT_R_ARGUMENT_MODIFY(r, x) ((x) & 0xfffffffful)

/* Register type: emmc::crypto::XFER_MODE_R                                */
/* Register template: emmc::crypto::XFER_MODE_R                            */
/* Field member: emmc::crypto::XFER_MODE_R.RSVD                            */
#define EMMC_CRYPTO_XFER_MODE_R_RSVD_MSB 15u
#define EMMC_CRYPTO_XFER_MODE_R_RSVD_LSB 9u
#define EMMC_CRYPTO_XFER_MODE_R_RSVD_WIDTH 7u
#define EMMC_CRYPTO_XFER_MODE_R_RSVD_READ_ACCESS 1u
#define EMMC_CRYPTO_XFER_MODE_R_RSVD_WRITE_ACCESS 0u
#define EMMC_CRYPTO_XFER_MODE_R_RSVD_RESET 0x00u
#define EMMC_CRYPTO_XFER_MODE_R_RSVD_FIELD_MASK 0xfe00u
#define EMMC_CRYPTO_XFER_MODE_R_RSVD_GET(x) (((x) & 0xfe00u) >> 9)
#define EMMC_CRYPTO_XFER_MODE_R_RSVD_SET(x) (((x) << 9) & 0xfe00u)
#define EMMC_CRYPTO_XFER_MODE_R_RSVD_MODIFY(r, x) \
   ((((x) << 9) & 0xfe00u) | ((r) & 0x01ffu))
/* Field member: emmc::crypto::XFER_MODE_R.RESP_INT_DISABLE                */
#define EMMC_CRYPTO_XFER_MODE_R_RESP_INT_DISABLE_MSB 8u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_INT_DISABLE_LSB 8u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_INT_DISABLE_WIDTH 1u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_INT_DISABLE_READ_ACCESS 1u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_INT_DISABLE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_INT_DISABLE_RESET 0x0u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_INT_DISABLE_FIELD_MASK 0x0100u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_INT_DISABLE_GET(x) \
   (((x) & 0x0100u) >> 8)
#define EMMC_CRYPTO_XFER_MODE_R_RESP_INT_DISABLE_SET(x) \
   (((x) << 8) & 0x0100u)
#define EMMC_CRYPTO_XFER_MODE_R_RESP_INT_DISABLE_MODIFY(r, x) \
   ((((x) << 8) & 0x0100u) | ((r) & 0xfeffu))
/* Field member: emmc::crypto::XFER_MODE_R.RESP_ERR_CHK_ENABLE             */
#define EMMC_CRYPTO_XFER_MODE_R_RESP_ERR_CHK_ENABLE_MSB 7u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_ERR_CHK_ENABLE_LSB 7u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_ERR_CHK_ENABLE_WIDTH 1u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_ERR_CHK_ENABLE_READ_ACCESS 1u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_ERR_CHK_ENABLE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_ERR_CHK_ENABLE_RESET 0x0u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_ERR_CHK_ENABLE_FIELD_MASK 0x0080u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_ERR_CHK_ENABLE_GET(x) \
   (((x) & 0x0080u) >> 7)
#define EMMC_CRYPTO_XFER_MODE_R_RESP_ERR_CHK_ENABLE_SET(x) \
   (((x) << 7) & 0x0080u)
#define EMMC_CRYPTO_XFER_MODE_R_RESP_ERR_CHK_ENABLE_MODIFY(r, x) \
   ((((x) << 7) & 0x0080u) | ((r) & 0xff7fu))
/* Field member: emmc::crypto::XFER_MODE_R.RESP_TYPE                       */
#define EMMC_CRYPTO_XFER_MODE_R_RESP_TYPE_MSB 6u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_TYPE_LSB 6u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_TYPE_WIDTH 1u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_TYPE_READ_ACCESS 1u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_TYPE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_TYPE_RESET 0x0u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_TYPE_FIELD_MASK 0x0040u
#define EMMC_CRYPTO_XFER_MODE_R_RESP_TYPE_GET(x) (((x) & 0x0040u) >> 6)
#define EMMC_CRYPTO_XFER_MODE_R_RESP_TYPE_SET(x) (((x) << 6) & 0x0040u)
#define EMMC_CRYPTO_XFER_MODE_R_RESP_TYPE_MODIFY(r, x) \
   ((((x) << 6) & 0x0040u) | ((r) & 0xffbfu))
/* Field member: emmc::crypto::XFER_MODE_R.MULTI_BLK_SEL                   */
#define EMMC_CRYPTO_XFER_MODE_R_MULTI_BLK_SEL_MSB 5u
#define EMMC_CRYPTO_XFER_MODE_R_MULTI_BLK_SEL_LSB 5u
#define EMMC_CRYPTO_XFER_MODE_R_MULTI_BLK_SEL_WIDTH 1u
#define EMMC_CRYPTO_XFER_MODE_R_MULTI_BLK_SEL_READ_ACCESS 1u
#define EMMC_CRYPTO_XFER_MODE_R_MULTI_BLK_SEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_XFER_MODE_R_MULTI_BLK_SEL_RESET 0x0u
#define EMMC_CRYPTO_XFER_MODE_R_MULTI_BLK_SEL_FIELD_MASK 0x0020u
#define EMMC_CRYPTO_XFER_MODE_R_MULTI_BLK_SEL_GET(x) (((x) & 0x0020u) >> 5)
#define EMMC_CRYPTO_XFER_MODE_R_MULTI_BLK_SEL_SET(x) (((x) << 5) & 0x0020u)
#define EMMC_CRYPTO_XFER_MODE_R_MULTI_BLK_SEL_MODIFY(r, x) \
   ((((x) << 5) & 0x0020u) | ((r) & 0xffdfu))
/* Field member: emmc::crypto::XFER_MODE_R.DATA_XFER_DIR                   */
#define EMMC_CRYPTO_XFER_MODE_R_DATA_XFER_DIR_MSB 4u
#define EMMC_CRYPTO_XFER_MODE_R_DATA_XFER_DIR_LSB 4u
#define EMMC_CRYPTO_XFER_MODE_R_DATA_XFER_DIR_WIDTH 1u
#define EMMC_CRYPTO_XFER_MODE_R_DATA_XFER_DIR_READ_ACCESS 1u
#define EMMC_CRYPTO_XFER_MODE_R_DATA_XFER_DIR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_XFER_MODE_R_DATA_XFER_DIR_RESET 0x0u
#define EMMC_CRYPTO_XFER_MODE_R_DATA_XFER_DIR_FIELD_MASK 0x0010u
#define EMMC_CRYPTO_XFER_MODE_R_DATA_XFER_DIR_GET(x) (((x) & 0x0010u) >> 4)
#define EMMC_CRYPTO_XFER_MODE_R_DATA_XFER_DIR_SET(x) (((x) << 4) & 0x0010u)
#define EMMC_CRYPTO_XFER_MODE_R_DATA_XFER_DIR_MODIFY(r, x) \
   ((((x) << 4) & 0x0010u) | ((r) & 0xffefu))
/* Field member: emmc::crypto::XFER_MODE_R.AUTO_CMD_ENABLE                 */
#define EMMC_CRYPTO_XFER_MODE_R_AUTO_CMD_ENABLE_MSB 3u
#define EMMC_CRYPTO_XFER_MODE_R_AUTO_CMD_ENABLE_LSB 2u
#define EMMC_CRYPTO_XFER_MODE_R_AUTO_CMD_ENABLE_WIDTH 2u
#define EMMC_CRYPTO_XFER_MODE_R_AUTO_CMD_ENABLE_READ_ACCESS 1u
#define EMMC_CRYPTO_XFER_MODE_R_AUTO_CMD_ENABLE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_XFER_MODE_R_AUTO_CMD_ENABLE_RESET 0x0u
#define EMMC_CRYPTO_XFER_MODE_R_AUTO_CMD_ENABLE_FIELD_MASK 0x000cu
#define EMMC_CRYPTO_XFER_MODE_R_AUTO_CMD_ENABLE_GET(x) (((x) & 0x000cu) >> 2)
#define EMMC_CRYPTO_XFER_MODE_R_AUTO_CMD_ENABLE_SET(x) \
   (((x) << 2) & 0x000cu)
#define EMMC_CRYPTO_XFER_MODE_R_AUTO_CMD_ENABLE_MODIFY(r, x) \
   ((((x) << 2) & 0x000cu) | ((r) & 0xfff3u))
/* Field member: emmc::crypto::XFER_MODE_R.BLOCK_COUNT_ENABLE              */
#define EMMC_CRYPTO_XFER_MODE_R_BLOCK_COUNT_ENABLE_MSB 1u
#define EMMC_CRYPTO_XFER_MODE_R_BLOCK_COUNT_ENABLE_LSB 1u
#define EMMC_CRYPTO_XFER_MODE_R_BLOCK_COUNT_ENABLE_WIDTH 1u
#define EMMC_CRYPTO_XFER_MODE_R_BLOCK_COUNT_ENABLE_READ_ACCESS 1u
#define EMMC_CRYPTO_XFER_MODE_R_BLOCK_COUNT_ENABLE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_XFER_MODE_R_BLOCK_COUNT_ENABLE_RESET 0x0u
#define EMMC_CRYPTO_XFER_MODE_R_BLOCK_COUNT_ENABLE_FIELD_MASK 0x0002u
#define EMMC_CRYPTO_XFER_MODE_R_BLOCK_COUNT_ENABLE_GET(x) \
   (((x) & 0x0002u) >> 1)
#define EMMC_CRYPTO_XFER_MODE_R_BLOCK_COUNT_ENABLE_SET(x) \
   (((x) << 1) & 0x0002u)
#define EMMC_CRYPTO_XFER_MODE_R_BLOCK_COUNT_ENABLE_MODIFY(r, x) \
   ((((x) << 1) & 0x0002u) | ((r) & 0xfffdu))
/* Field member: emmc::crypto::XFER_MODE_R.DMA_ENABLE                      */
#define EMMC_CRYPTO_XFER_MODE_R_DMA_ENABLE_MSB 0u
#define EMMC_CRYPTO_XFER_MODE_R_DMA_ENABLE_LSB 0u
#define EMMC_CRYPTO_XFER_MODE_R_DMA_ENABLE_WIDTH 1u
#define EMMC_CRYPTO_XFER_MODE_R_DMA_ENABLE_READ_ACCESS 1u
#define EMMC_CRYPTO_XFER_MODE_R_DMA_ENABLE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_XFER_MODE_R_DMA_ENABLE_RESET 0x0u
#define EMMC_CRYPTO_XFER_MODE_R_DMA_ENABLE_FIELD_MASK 0x0001u
#define EMMC_CRYPTO_XFER_MODE_R_DMA_ENABLE_GET(x) ((x) & 0x0001u)
#define EMMC_CRYPTO_XFER_MODE_R_DMA_ENABLE_SET(x) ((x) & 0x0001u)
#define EMMC_CRYPTO_XFER_MODE_R_DMA_ENABLE_MODIFY(r, x) \
   (((x) & 0x0001u) | ((r) & 0xfffeu))

/* Register type: emmc::crypto::CMD_R                                      */
/* Register template: emmc::crypto::CMD_R                                  */
/* Field member: emmc::crypto::CMD_R.RSVD                                  */
#define EMMC_CRYPTO_CMD_R_RSVD_MSB 15u
#define EMMC_CRYPTO_CMD_R_RSVD_LSB 14u
#define EMMC_CRYPTO_CMD_R_RSVD_WIDTH 2u
#define EMMC_CRYPTO_CMD_R_RSVD_READ_ACCESS 1u
#define EMMC_CRYPTO_CMD_R_RSVD_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CMD_R_RSVD_RESET 0x0u
#define EMMC_CRYPTO_CMD_R_RSVD_FIELD_MASK 0xc000u
#define EMMC_CRYPTO_CMD_R_RSVD_GET(x) (((x) & 0xc000u) >> 14)
#define EMMC_CRYPTO_CMD_R_RSVD_SET(x) (((x) << 14) & 0xc000u)
#define EMMC_CRYPTO_CMD_R_RSVD_MODIFY(r, x) \
   ((((x) << 14) & 0xc000u) | ((r) & 0x3fffu))
/* Field member: emmc::crypto::CMD_R.CMD_INDEX                             */
#define EMMC_CRYPTO_CMD_R_CMD_INDEX_MSB 13u
#define EMMC_CRYPTO_CMD_R_CMD_INDEX_LSB 8u
#define EMMC_CRYPTO_CMD_R_CMD_INDEX_WIDTH 6u
#define EMMC_CRYPTO_CMD_R_CMD_INDEX_READ_ACCESS 1u
#define EMMC_CRYPTO_CMD_R_CMD_INDEX_WRITE_ACCESS 1u
#define EMMC_CRYPTO_CMD_R_CMD_INDEX_RESET 0x00u
#define EMMC_CRYPTO_CMD_R_CMD_INDEX_FIELD_MASK 0x3f00u
#define EMMC_CRYPTO_CMD_R_CMD_INDEX_GET(x) (((x) & 0x3f00u) >> 8)
#define EMMC_CRYPTO_CMD_R_CMD_INDEX_SET(x) (((x) << 8) & 0x3f00u)
#define EMMC_CRYPTO_CMD_R_CMD_INDEX_MODIFY(r, x) \
   ((((x) << 8) & 0x3f00u) | ((r) & 0xc0ffu))
/* Field member: emmc::crypto::CMD_R.CMD_TYPE                              */
#define EMMC_CRYPTO_CMD_R_CMD_TYPE_MSB 7u
#define EMMC_CRYPTO_CMD_R_CMD_TYPE_LSB 6u
#define EMMC_CRYPTO_CMD_R_CMD_TYPE_WIDTH 2u
#define EMMC_CRYPTO_CMD_R_CMD_TYPE_READ_ACCESS 1u
#define EMMC_CRYPTO_CMD_R_CMD_TYPE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_CMD_R_CMD_TYPE_RESET 0x0u
#define EMMC_CRYPTO_CMD_R_CMD_TYPE_FIELD_MASK 0x00c0u
#define EMMC_CRYPTO_CMD_R_CMD_TYPE_GET(x) (((x) & 0x00c0u) >> 6)
#define EMMC_CRYPTO_CMD_R_CMD_TYPE_SET(x) (((x) << 6) & 0x00c0u)
#define EMMC_CRYPTO_CMD_R_CMD_TYPE_MODIFY(r, x) \
   ((((x) << 6) & 0x00c0u) | ((r) & 0xff3fu))
/* Field member: emmc::crypto::CMD_R.DATA_PRESENT_SEL                      */
#define EMMC_CRYPTO_CMD_R_DATA_PRESENT_SEL_MSB 5u
#define EMMC_CRYPTO_CMD_R_DATA_PRESENT_SEL_LSB 5u
#define EMMC_CRYPTO_CMD_R_DATA_PRESENT_SEL_WIDTH 1u
#define EMMC_CRYPTO_CMD_R_DATA_PRESENT_SEL_READ_ACCESS 1u
#define EMMC_CRYPTO_CMD_R_DATA_PRESENT_SEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_CMD_R_DATA_PRESENT_SEL_RESET 0x0u
#define EMMC_CRYPTO_CMD_R_DATA_PRESENT_SEL_FIELD_MASK 0x0020u
#define EMMC_CRYPTO_CMD_R_DATA_PRESENT_SEL_GET(x) (((x) & 0x0020u) >> 5)
#define EMMC_CRYPTO_CMD_R_DATA_PRESENT_SEL_SET(x) (((x) << 5) & 0x0020u)
#define EMMC_CRYPTO_CMD_R_DATA_PRESENT_SEL_MODIFY(r, x) \
   ((((x) << 5) & 0x0020u) | ((r) & 0xffdfu))
/* Field member: emmc::crypto::CMD_R.CMD_IDX_CHK_ENABLE                    */
#define EMMC_CRYPTO_CMD_R_CMD_IDX_CHK_ENABLE_MSB 4u
#define EMMC_CRYPTO_CMD_R_CMD_IDX_CHK_ENABLE_LSB 4u
#define EMMC_CRYPTO_CMD_R_CMD_IDX_CHK_ENABLE_WIDTH 1u
#define EMMC_CRYPTO_CMD_R_CMD_IDX_CHK_ENABLE_READ_ACCESS 1u
#define EMMC_CRYPTO_CMD_R_CMD_IDX_CHK_ENABLE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_CMD_R_CMD_IDX_CHK_ENABLE_RESET 0x0u
#define EMMC_CRYPTO_CMD_R_CMD_IDX_CHK_ENABLE_FIELD_MASK 0x0010u
#define EMMC_CRYPTO_CMD_R_CMD_IDX_CHK_ENABLE_GET(x) (((x) & 0x0010u) >> 4)
#define EMMC_CRYPTO_CMD_R_CMD_IDX_CHK_ENABLE_SET(x) (((x) << 4) & 0x0010u)
#define EMMC_CRYPTO_CMD_R_CMD_IDX_CHK_ENABLE_MODIFY(r, x) \
   ((((x) << 4) & 0x0010u) | ((r) & 0xffefu))
/* Field member: emmc::crypto::CMD_R.CMD_CRC_CHK_ENABLE                    */
#define EMMC_CRYPTO_CMD_R_CMD_CRC_CHK_ENABLE_MSB 3u
#define EMMC_CRYPTO_CMD_R_CMD_CRC_CHK_ENABLE_LSB 3u
#define EMMC_CRYPTO_CMD_R_CMD_CRC_CHK_ENABLE_WIDTH 1u
#define EMMC_CRYPTO_CMD_R_CMD_CRC_CHK_ENABLE_READ_ACCESS 1u
#define EMMC_CRYPTO_CMD_R_CMD_CRC_CHK_ENABLE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_CMD_R_CMD_CRC_CHK_ENABLE_RESET 0x0u
#define EMMC_CRYPTO_CMD_R_CMD_CRC_CHK_ENABLE_FIELD_MASK 0x0008u
#define EMMC_CRYPTO_CMD_R_CMD_CRC_CHK_ENABLE_GET(x) (((x) & 0x0008u) >> 3)
#define EMMC_CRYPTO_CMD_R_CMD_CRC_CHK_ENABLE_SET(x) (((x) << 3) & 0x0008u)
#define EMMC_CRYPTO_CMD_R_CMD_CRC_CHK_ENABLE_MODIFY(r, x) \
   ((((x) << 3) & 0x0008u) | ((r) & 0xfff7u))
/* Field member: emmc::crypto::CMD_R.SUB_CMD_FLAG                          */
#define EMMC_CRYPTO_CMD_R_SUB_CMD_FLAG_MSB 2u
#define EMMC_CRYPTO_CMD_R_SUB_CMD_FLAG_LSB 2u
#define EMMC_CRYPTO_CMD_R_SUB_CMD_FLAG_WIDTH 1u
#define EMMC_CRYPTO_CMD_R_SUB_CMD_FLAG_READ_ACCESS 1u
#define EMMC_CRYPTO_CMD_R_SUB_CMD_FLAG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_CMD_R_SUB_CMD_FLAG_RESET 0x0u
#define EMMC_CRYPTO_CMD_R_SUB_CMD_FLAG_FIELD_MASK 0x0004u
#define EMMC_CRYPTO_CMD_R_SUB_CMD_FLAG_GET(x) (((x) & 0x0004u) >> 2)
#define EMMC_CRYPTO_CMD_R_SUB_CMD_FLAG_SET(x) (((x) << 2) & 0x0004u)
#define EMMC_CRYPTO_CMD_R_SUB_CMD_FLAG_MODIFY(r, x) \
   ((((x) << 2) & 0x0004u) | ((r) & 0xfffbu))
/* Field member: emmc::crypto::CMD_R.RESP_TYPE_SELECT                      */
#define EMMC_CRYPTO_CMD_R_RESP_TYPE_SELECT_MSB 1u
#define EMMC_CRYPTO_CMD_R_RESP_TYPE_SELECT_LSB 0u
#define EMMC_CRYPTO_CMD_R_RESP_TYPE_SELECT_WIDTH 2u
#define EMMC_CRYPTO_CMD_R_RESP_TYPE_SELECT_READ_ACCESS 1u
#define EMMC_CRYPTO_CMD_R_RESP_TYPE_SELECT_WRITE_ACCESS 1u
#define EMMC_CRYPTO_CMD_R_RESP_TYPE_SELECT_RESET 0x0u
#define EMMC_CRYPTO_CMD_R_RESP_TYPE_SELECT_FIELD_MASK 0x0003u
#define EMMC_CRYPTO_CMD_R_RESP_TYPE_SELECT_GET(x) ((x) & 0x0003u)
#define EMMC_CRYPTO_CMD_R_RESP_TYPE_SELECT_SET(x) ((x) & 0x0003u)
#define EMMC_CRYPTO_CMD_R_RESP_TYPE_SELECT_MODIFY(r, x) \
   (((x) & 0x0003u) | ((r) & 0xfffcu))

/* Register type: emmc::crypto::RESP01_R                                   */
/* Register template: emmc::crypto::RESP01_R                               */
/* Field member: emmc::crypto::RESP01_R.RESP01                             */
#define EMMC_CRYPTO_RESP01_R_RESP01_MSB 31u
#define EMMC_CRYPTO_RESP01_R_RESP01_LSB 0u
#define EMMC_CRYPTO_RESP01_R_RESP01_WIDTH 32u
#define EMMC_CRYPTO_RESP01_R_RESP01_READ_ACCESS 1u
#define EMMC_CRYPTO_RESP01_R_RESP01_WRITE_ACCESS 0u
#define EMMC_CRYPTO_RESP01_R_RESP01_RESET 0x00000000ul
#define EMMC_CRYPTO_RESP01_R_RESP01_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_RESP01_R_RESP01_GET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_RESP01_R_RESP01_SET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_RESP01_R_RESP01_MODIFY(r, x) ((x) & 0xfffffffful)

/* Register type: emmc::crypto::RESP23_R                                   */
/* Register template: emmc::crypto::RESP23_R                               */
/* Field member: emmc::crypto::RESP23_R.RESP23                             */
#define EMMC_CRYPTO_RESP23_R_RESP23_MSB 31u
#define EMMC_CRYPTO_RESP23_R_RESP23_LSB 0u
#define EMMC_CRYPTO_RESP23_R_RESP23_WIDTH 32u
#define EMMC_CRYPTO_RESP23_R_RESP23_READ_ACCESS 1u
#define EMMC_CRYPTO_RESP23_R_RESP23_WRITE_ACCESS 0u
#define EMMC_CRYPTO_RESP23_R_RESP23_RESET 0x00000000ul
#define EMMC_CRYPTO_RESP23_R_RESP23_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_RESP23_R_RESP23_GET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_RESP23_R_RESP23_SET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_RESP23_R_RESP23_MODIFY(r, x) ((x) & 0xfffffffful)

/* Register type: emmc::crypto::RESP45_R                                   */
/* Register template: emmc::crypto::RESP45_R                               */
/* Field member: emmc::crypto::RESP45_R.RESP45                             */
#define EMMC_CRYPTO_RESP45_R_RESP45_MSB 31u
#define EMMC_CRYPTO_RESP45_R_RESP45_LSB 0u
#define EMMC_CRYPTO_RESP45_R_RESP45_WIDTH 32u
#define EMMC_CRYPTO_RESP45_R_RESP45_READ_ACCESS 1u
#define EMMC_CRYPTO_RESP45_R_RESP45_WRITE_ACCESS 0u
#define EMMC_CRYPTO_RESP45_R_RESP45_RESET 0x00000000ul
#define EMMC_CRYPTO_RESP45_R_RESP45_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_RESP45_R_RESP45_GET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_RESP45_R_RESP45_SET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_RESP45_R_RESP45_MODIFY(r, x) ((x) & 0xfffffffful)

/* Register type: emmc::crypto::RESP67_R                                   */
/* Register template: emmc::crypto::RESP67_R                               */
/* Field member: emmc::crypto::RESP67_R.RESP67                             */
#define EMMC_CRYPTO_RESP67_R_RESP67_MSB 31u
#define EMMC_CRYPTO_RESP67_R_RESP67_LSB 0u
#define EMMC_CRYPTO_RESP67_R_RESP67_WIDTH 32u
#define EMMC_CRYPTO_RESP67_R_RESP67_READ_ACCESS 1u
#define EMMC_CRYPTO_RESP67_R_RESP67_WRITE_ACCESS 0u
#define EMMC_CRYPTO_RESP67_R_RESP67_RESET 0x00000000ul
#define EMMC_CRYPTO_RESP67_R_RESP67_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_RESP67_R_RESP67_GET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_RESP67_R_RESP67_SET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_RESP67_R_RESP67_MODIFY(r, x) ((x) & 0xfffffffful)

/* Register type: emmc::crypto::BUF_DATA_R                                 */
/* Register template: emmc::crypto::BUF_DATA_R                             */
/* Field member: emmc::crypto::BUF_DATA_R.BUF_DATA                         */
#define EMMC_CRYPTO_BUF_DATA_R_BUF_DATA_MSB 31u
#define EMMC_CRYPTO_BUF_DATA_R_BUF_DATA_LSB 0u
#define EMMC_CRYPTO_BUF_DATA_R_BUF_DATA_WIDTH 32u
#define EMMC_CRYPTO_BUF_DATA_R_BUF_DATA_READ_ACCESS 1u
#define EMMC_CRYPTO_BUF_DATA_R_BUF_DATA_WRITE_ACCESS 1u
#define EMMC_CRYPTO_BUF_DATA_R_BUF_DATA_RESET 0x00000000ul
#define EMMC_CRYPTO_BUF_DATA_R_BUF_DATA_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_BUF_DATA_R_BUF_DATA_GET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_BUF_DATA_R_BUF_DATA_SET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_BUF_DATA_R_BUF_DATA_MODIFY(r, x) ((x) & 0xfffffffful)

/* Register type: emmc::crypto::PSTATE_REG                                 */
/* Register template: emmc::crypto::PSTATE_REG                             */
/* Field member: emmc::crypto::PSTATE_REG.UHS2_IF_DETECT                   */
#define EMMC_CRYPTO_PSTATE_REG_UHS2_IF_DETECT_MSB 31u
#define EMMC_CRYPTO_PSTATE_REG_UHS2_IF_DETECT_LSB 31u
#define EMMC_CRYPTO_PSTATE_REG_UHS2_IF_DETECT_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_UHS2_IF_DETECT_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_UHS2_IF_DETECT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_UHS2_IF_DETECT_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_UHS2_IF_DETECT_FIELD_MASK 0x80000000ul
#define EMMC_CRYPTO_PSTATE_REG_UHS2_IF_DETECT_GET(x) \
   (((x) & 0x80000000ul) >> 31)
#define EMMC_CRYPTO_PSTATE_REG_UHS2_IF_DETECT_SET(x) \
   (((x) << 31) & 0x80000000ul)
#define EMMC_CRYPTO_PSTATE_REG_UHS2_IF_DETECT_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: emmc::crypto::PSTATE_REG.LANE_SYNC                        */
#define EMMC_CRYPTO_PSTATE_REG_LANE_SYNC_MSB 30u
#define EMMC_CRYPTO_PSTATE_REG_LANE_SYNC_LSB 30u
#define EMMC_CRYPTO_PSTATE_REG_LANE_SYNC_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_LANE_SYNC_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_LANE_SYNC_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_LANE_SYNC_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_LANE_SYNC_FIELD_MASK 0x40000000ul
#define EMMC_CRYPTO_PSTATE_REG_LANE_SYNC_GET(x) (((x) & 0x40000000ul) >> 30)
#define EMMC_CRYPTO_PSTATE_REG_LANE_SYNC_SET(x) \
   (((x) << 30) & 0x40000000ul)
#define EMMC_CRYPTO_PSTATE_REG_LANE_SYNC_MODIFY(r, x) \
   ((((x) << 30) & 0x40000000ul) | ((r) & 0xbffffffful))
/* Field member: emmc::crypto::PSTATE_REG.IN_DORMANT_ST                    */
#define EMMC_CRYPTO_PSTATE_REG_IN_DORMANT_ST_MSB 29u
#define EMMC_CRYPTO_PSTATE_REG_IN_DORMANT_ST_LSB 29u
#define EMMC_CRYPTO_PSTATE_REG_IN_DORMANT_ST_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_IN_DORMANT_ST_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_IN_DORMANT_ST_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_IN_DORMANT_ST_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_IN_DORMANT_ST_FIELD_MASK 0x20000000ul
#define EMMC_CRYPTO_PSTATE_REG_IN_DORMANT_ST_GET(x) \
   (((x) & 0x20000000ul) >> 29)
#define EMMC_CRYPTO_PSTATE_REG_IN_DORMANT_ST_SET(x) \
   (((x) << 29) & 0x20000000ul)
#define EMMC_CRYPTO_PSTATE_REG_IN_DORMANT_ST_MODIFY(r, x) \
   ((((x) << 29) & 0x20000000ul) | ((r) & 0xdffffffful))
/* Field member: emmc::crypto::PSTATE_REG.SUB_CMD_STAT                     */
#define EMMC_CRYPTO_PSTATE_REG_SUB_CMD_STAT_MSB 28u
#define EMMC_CRYPTO_PSTATE_REG_SUB_CMD_STAT_LSB 28u
#define EMMC_CRYPTO_PSTATE_REG_SUB_CMD_STAT_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_SUB_CMD_STAT_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_SUB_CMD_STAT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_SUB_CMD_STAT_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_SUB_CMD_STAT_FIELD_MASK 0x10000000ul
#define EMMC_CRYPTO_PSTATE_REG_SUB_CMD_STAT_GET(x) \
   (((x) & 0x10000000ul) >> 28)
#define EMMC_CRYPTO_PSTATE_REG_SUB_CMD_STAT_SET(x) \
   (((x) << 28) & 0x10000000ul)
#define EMMC_CRYPTO_PSTATE_REG_SUB_CMD_STAT_MODIFY(r, x) \
   ((((x) << 28) & 0x10000000ul) | ((r) & 0xeffffffful))
/* Field member: emmc::crypto::PSTATE_REG.CMD_ISSUE_ERR                    */
#define EMMC_CRYPTO_PSTATE_REG_CMD_ISSUE_ERR_MSB 27u
#define EMMC_CRYPTO_PSTATE_REG_CMD_ISSUE_ERR_LSB 27u
#define EMMC_CRYPTO_PSTATE_REG_CMD_ISSUE_ERR_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_CMD_ISSUE_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_CMD_ISSUE_ERR_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_CMD_ISSUE_ERR_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_CMD_ISSUE_ERR_FIELD_MASK 0x08000000ul
#define EMMC_CRYPTO_PSTATE_REG_CMD_ISSUE_ERR_GET(x) \
   (((x) & 0x08000000ul) >> 27)
#define EMMC_CRYPTO_PSTATE_REG_CMD_ISSUE_ERR_SET(x) \
   (((x) << 27) & 0x08000000ul)
#define EMMC_CRYPTO_PSTATE_REG_CMD_ISSUE_ERR_MODIFY(r, x) \
   ((((x) << 27) & 0x08000000ul) | ((r) & 0xf7fffffful))
/* Field member: emmc::crypto::PSTATE_REG.RSVD_26                          */
#define EMMC_CRYPTO_PSTATE_REG_RSVD_26_MSB 26u
#define EMMC_CRYPTO_PSTATE_REG_RSVD_26_LSB 26u
#define EMMC_CRYPTO_PSTATE_REG_RSVD_26_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_RSVD_26_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_RSVD_26_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_RSVD_26_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_RSVD_26_FIELD_MASK 0x04000000ul
#define EMMC_CRYPTO_PSTATE_REG_RSVD_26_GET(x) (((x) & 0x04000000ul) >> 26)
#define EMMC_CRYPTO_PSTATE_REG_RSVD_26_SET(x) (((x) << 26) & 0x04000000ul)
#define EMMC_CRYPTO_PSTATE_REG_RSVD_26_MODIFY(r, x) \
   ((((x) << 26) & 0x04000000ul) | ((r) & 0xfbfffffful))
/* Field member: emmc::crypto::PSTATE_REG.HOST_REG_VOL                     */
#define EMMC_CRYPTO_PSTATE_REG_HOST_REG_VOL_MSB 25u
#define EMMC_CRYPTO_PSTATE_REG_HOST_REG_VOL_LSB 25u
#define EMMC_CRYPTO_PSTATE_REG_HOST_REG_VOL_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_HOST_REG_VOL_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_HOST_REG_VOL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_HOST_REG_VOL_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_HOST_REG_VOL_FIELD_MASK 0x02000000ul
#define EMMC_CRYPTO_PSTATE_REG_HOST_REG_VOL_GET(x) \
   (((x) & 0x02000000ul) >> 25)
#define EMMC_CRYPTO_PSTATE_REG_HOST_REG_VOL_SET(x) \
   (((x) << 25) & 0x02000000ul)
#define EMMC_CRYPTO_PSTATE_REG_HOST_REG_VOL_MODIFY(r, x) \
   ((((x) << 25) & 0x02000000ul) | ((r) & 0xfdfffffful))
/* Field member: emmc::crypto::PSTATE_REG.CMD_LINE_LVL                     */
#define EMMC_CRYPTO_PSTATE_REG_CMD_LINE_LVL_MSB 24u
#define EMMC_CRYPTO_PSTATE_REG_CMD_LINE_LVL_LSB 24u
#define EMMC_CRYPTO_PSTATE_REG_CMD_LINE_LVL_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_CMD_LINE_LVL_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_CMD_LINE_LVL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_CMD_LINE_LVL_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_CMD_LINE_LVL_FIELD_MASK 0x01000000ul
#define EMMC_CRYPTO_PSTATE_REG_CMD_LINE_LVL_GET(x) \
   (((x) & 0x01000000ul) >> 24)
#define EMMC_CRYPTO_PSTATE_REG_CMD_LINE_LVL_SET(x) \
   (((x) << 24) & 0x01000000ul)
#define EMMC_CRYPTO_PSTATE_REG_CMD_LINE_LVL_MODIFY(r, x) \
   ((((x) << 24) & 0x01000000ul) | ((r) & 0xfefffffful))
/* Field member: emmc::crypto::PSTATE_REG.DAT_3_0                          */
#define EMMC_CRYPTO_PSTATE_REG_DAT_3_0_MSB 23u
#define EMMC_CRYPTO_PSTATE_REG_DAT_3_0_LSB 20u
#define EMMC_CRYPTO_PSTATE_REG_DAT_3_0_WIDTH 4u
#define EMMC_CRYPTO_PSTATE_REG_DAT_3_0_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_DAT_3_0_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_DAT_3_0_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_DAT_3_0_FIELD_MASK 0x00f00000ul
#define EMMC_CRYPTO_PSTATE_REG_DAT_3_0_GET(x) (((x) & 0x00f00000ul) >> 20)
#define EMMC_CRYPTO_PSTATE_REG_DAT_3_0_SET(x) (((x) << 20) & 0x00f00000ul)
#define EMMC_CRYPTO_PSTATE_REG_DAT_3_0_MODIFY(r, x) \
   ((((x) << 20) & 0x00f00000ul) | ((r) & 0xff0ffffful))
/* Field member: emmc::crypto::PSTATE_REG.WR_PROTECT_SW_LVL                */
#define EMMC_CRYPTO_PSTATE_REG_WR_PROTECT_SW_LVL_MSB 19u
#define EMMC_CRYPTO_PSTATE_REG_WR_PROTECT_SW_LVL_LSB 19u
#define EMMC_CRYPTO_PSTATE_REG_WR_PROTECT_SW_LVL_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_WR_PROTECT_SW_LVL_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_WR_PROTECT_SW_LVL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_WR_PROTECT_SW_LVL_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_WR_PROTECT_SW_LVL_FIELD_MASK 0x00080000ul
#define EMMC_CRYPTO_PSTATE_REG_WR_PROTECT_SW_LVL_GET(x) \
   (((x) & 0x00080000ul) >> 19)
#define EMMC_CRYPTO_PSTATE_REG_WR_PROTECT_SW_LVL_SET(x) \
   (((x) << 19) & 0x00080000ul)
#define EMMC_CRYPTO_PSTATE_REG_WR_PROTECT_SW_LVL_MODIFY(r, x) \
   ((((x) << 19) & 0x00080000ul) | ((r) & 0xfff7fffful))
/* Field member: emmc::crypto::PSTATE_REG.CARD_DETECT_PIN_LEVEL            */
#define EMMC_CRYPTO_PSTATE_REG_CARD_DETECT_PIN_LEVEL_MSB 18u
#define EMMC_CRYPTO_PSTATE_REG_CARD_DETECT_PIN_LEVEL_LSB 18u
#define EMMC_CRYPTO_PSTATE_REG_CARD_DETECT_PIN_LEVEL_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_CARD_DETECT_PIN_LEVEL_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_CARD_DETECT_PIN_LEVEL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_CARD_DETECT_PIN_LEVEL_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_CARD_DETECT_PIN_LEVEL_FIELD_MASK 0x00040000ul
#define EMMC_CRYPTO_PSTATE_REG_CARD_DETECT_PIN_LEVEL_GET(x) \
   (((x) & 0x00040000ul) >> 18)
#define EMMC_CRYPTO_PSTATE_REG_CARD_DETECT_PIN_LEVEL_SET(x) \
   (((x) << 18) & 0x00040000ul)
#define EMMC_CRYPTO_PSTATE_REG_CARD_DETECT_PIN_LEVEL_MODIFY(r, x) \
   ((((x) << 18) & 0x00040000ul) | ((r) & 0xfffbfffful))
/* Field member: emmc::crypto::PSTATE_REG.CARD_STABLE                      */
#define EMMC_CRYPTO_PSTATE_REG_CARD_STABLE_MSB 17u
#define EMMC_CRYPTO_PSTATE_REG_CARD_STABLE_LSB 17u
#define EMMC_CRYPTO_PSTATE_REG_CARD_STABLE_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_CARD_STABLE_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_CARD_STABLE_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_CARD_STABLE_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_CARD_STABLE_FIELD_MASK 0x00020000ul
#define EMMC_CRYPTO_PSTATE_REG_CARD_STABLE_GET(x) \
   (((x) & 0x00020000ul) >> 17)
#define EMMC_CRYPTO_PSTATE_REG_CARD_STABLE_SET(x) \
   (((x) << 17) & 0x00020000ul)
#define EMMC_CRYPTO_PSTATE_REG_CARD_STABLE_MODIFY(r, x) \
   ((((x) << 17) & 0x00020000ul) | ((r) & 0xfffdfffful))
/* Field member: emmc::crypto::PSTATE_REG.CARD_INSERTED                    */
#define EMMC_CRYPTO_PSTATE_REG_CARD_INSERTED_MSB 16u
#define EMMC_CRYPTO_PSTATE_REG_CARD_INSERTED_LSB 16u
#define EMMC_CRYPTO_PSTATE_REG_CARD_INSERTED_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_CARD_INSERTED_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_CARD_INSERTED_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_CARD_INSERTED_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_CARD_INSERTED_FIELD_MASK 0x00010000ul
#define EMMC_CRYPTO_PSTATE_REG_CARD_INSERTED_GET(x) \
   (((x) & 0x00010000ul) >> 16)
#define EMMC_CRYPTO_PSTATE_REG_CARD_INSERTED_SET(x) \
   (((x) << 16) & 0x00010000ul)
#define EMMC_CRYPTO_PSTATE_REG_CARD_INSERTED_MODIFY(r, x) \
   ((((x) << 16) & 0x00010000ul) | ((r) & 0xfffefffful))
/* Field member: emmc::crypto::PSTATE_REG.RSVD_15_12                       */
#define EMMC_CRYPTO_PSTATE_REG_RSVD_15_12_MSB 15u
#define EMMC_CRYPTO_PSTATE_REG_RSVD_15_12_LSB 12u
#define EMMC_CRYPTO_PSTATE_REG_RSVD_15_12_WIDTH 4u
#define EMMC_CRYPTO_PSTATE_REG_RSVD_15_12_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_RSVD_15_12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_RSVD_15_12_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_RSVD_15_12_FIELD_MASK 0x0000f000ul
#define EMMC_CRYPTO_PSTATE_REG_RSVD_15_12_GET(x) (((x) & 0x0000f000ul) >> 12)
#define EMMC_CRYPTO_PSTATE_REG_RSVD_15_12_SET(x) \
   (((x) << 12) & 0x0000f000ul)
#define EMMC_CRYPTO_PSTATE_REG_RSVD_15_12_MODIFY(r, x) \
   ((((x) << 12) & 0x0000f000ul) | ((r) & 0xffff0ffful))
/* Field member: emmc::crypto::PSTATE_REG.BUF_RD_ENABLE                    */
#define EMMC_CRYPTO_PSTATE_REG_BUF_RD_ENABLE_MSB 11u
#define EMMC_CRYPTO_PSTATE_REG_BUF_RD_ENABLE_LSB 11u
#define EMMC_CRYPTO_PSTATE_REG_BUF_RD_ENABLE_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_BUF_RD_ENABLE_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_BUF_RD_ENABLE_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_BUF_RD_ENABLE_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_BUF_RD_ENABLE_FIELD_MASK 0x00000800ul
#define EMMC_CRYPTO_PSTATE_REG_BUF_RD_ENABLE_GET(x) \
   (((x) & 0x00000800ul) >> 11)
#define EMMC_CRYPTO_PSTATE_REG_BUF_RD_ENABLE_SET(x) \
   (((x) << 11) & 0x00000800ul)
#define EMMC_CRYPTO_PSTATE_REG_BUF_RD_ENABLE_MODIFY(r, x) \
   ((((x) << 11) & 0x00000800ul) | ((r) & 0xfffff7fful))
/* Field member: emmc::crypto::PSTATE_REG.BUF_WR_ENABLE                    */
#define EMMC_CRYPTO_PSTATE_REG_BUF_WR_ENABLE_MSB 10u
#define EMMC_CRYPTO_PSTATE_REG_BUF_WR_ENABLE_LSB 10u
#define EMMC_CRYPTO_PSTATE_REG_BUF_WR_ENABLE_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_BUF_WR_ENABLE_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_BUF_WR_ENABLE_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_BUF_WR_ENABLE_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_BUF_WR_ENABLE_FIELD_MASK 0x00000400ul
#define EMMC_CRYPTO_PSTATE_REG_BUF_WR_ENABLE_GET(x) \
   (((x) & 0x00000400ul) >> 10)
#define EMMC_CRYPTO_PSTATE_REG_BUF_WR_ENABLE_SET(x) \
   (((x) << 10) & 0x00000400ul)
#define EMMC_CRYPTO_PSTATE_REG_BUF_WR_ENABLE_MODIFY(r, x) \
   ((((x) << 10) & 0x00000400ul) | ((r) & 0xfffffbfful))
/* Field member: emmc::crypto::PSTATE_REG.RD_XFER_ACTIVE                   */
#define EMMC_CRYPTO_PSTATE_REG_RD_XFER_ACTIVE_MSB 9u
#define EMMC_CRYPTO_PSTATE_REG_RD_XFER_ACTIVE_LSB 9u
#define EMMC_CRYPTO_PSTATE_REG_RD_XFER_ACTIVE_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_RD_XFER_ACTIVE_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_RD_XFER_ACTIVE_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_RD_XFER_ACTIVE_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_RD_XFER_ACTIVE_FIELD_MASK 0x00000200ul
#define EMMC_CRYPTO_PSTATE_REG_RD_XFER_ACTIVE_GET(x) \
   (((x) & 0x00000200ul) >> 9)
#define EMMC_CRYPTO_PSTATE_REG_RD_XFER_ACTIVE_SET(x) \
   (((x) << 9) & 0x00000200ul)
#define EMMC_CRYPTO_PSTATE_REG_RD_XFER_ACTIVE_MODIFY(r, x) \
   ((((x) << 9) & 0x00000200ul) | ((r) & 0xfffffdfful))
/* Field member: emmc::crypto::PSTATE_REG.WR_XFER_ACTIVE                   */
#define EMMC_CRYPTO_PSTATE_REG_WR_XFER_ACTIVE_MSB 8u
#define EMMC_CRYPTO_PSTATE_REG_WR_XFER_ACTIVE_LSB 8u
#define EMMC_CRYPTO_PSTATE_REG_WR_XFER_ACTIVE_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_WR_XFER_ACTIVE_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_WR_XFER_ACTIVE_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_WR_XFER_ACTIVE_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_WR_XFER_ACTIVE_FIELD_MASK 0x00000100ul
#define EMMC_CRYPTO_PSTATE_REG_WR_XFER_ACTIVE_GET(x) \
   (((x) & 0x00000100ul) >> 8)
#define EMMC_CRYPTO_PSTATE_REG_WR_XFER_ACTIVE_SET(x) \
   (((x) << 8) & 0x00000100ul)
#define EMMC_CRYPTO_PSTATE_REG_WR_XFER_ACTIVE_MODIFY(r, x) \
   ((((x) << 8) & 0x00000100ul) | ((r) & 0xfffffefful))
/* Field member: emmc::crypto::PSTATE_REG.DAT_7_4                          */
#define EMMC_CRYPTO_PSTATE_REG_DAT_7_4_MSB 7u
#define EMMC_CRYPTO_PSTATE_REG_DAT_7_4_LSB 4u
#define EMMC_CRYPTO_PSTATE_REG_DAT_7_4_WIDTH 4u
#define EMMC_CRYPTO_PSTATE_REG_DAT_7_4_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_DAT_7_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_DAT_7_4_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_DAT_7_4_FIELD_MASK 0x000000f0ul
#define EMMC_CRYPTO_PSTATE_REG_DAT_7_4_GET(x) (((x) & 0x000000f0ul) >> 4)
#define EMMC_CRYPTO_PSTATE_REG_DAT_7_4_SET(x) (((x) << 4) & 0x000000f0ul)
#define EMMC_CRYPTO_PSTATE_REG_DAT_7_4_MODIFY(r, x) \
   ((((x) << 4) & 0x000000f0ul) | ((r) & 0xffffff0ful))
/* Field member: emmc::crypto::PSTATE_REG.RE_TUNE_REQ                      */
#define EMMC_CRYPTO_PSTATE_REG_RE_TUNE_REQ_MSB 3u
#define EMMC_CRYPTO_PSTATE_REG_RE_TUNE_REQ_LSB 3u
#define EMMC_CRYPTO_PSTATE_REG_RE_TUNE_REQ_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_RE_TUNE_REQ_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_RE_TUNE_REQ_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_RE_TUNE_REQ_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_RE_TUNE_REQ_FIELD_MASK 0x00000008ul
#define EMMC_CRYPTO_PSTATE_REG_RE_TUNE_REQ_GET(x) (((x) & 0x00000008ul) >> 3)
#define EMMC_CRYPTO_PSTATE_REG_RE_TUNE_REQ_SET(x) \
   (((x) << 3) & 0x00000008ul)
#define EMMC_CRYPTO_PSTATE_REG_RE_TUNE_REQ_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: emmc::crypto::PSTATE_REG.DAT_LINE_ACTIVE                  */
#define EMMC_CRYPTO_PSTATE_REG_DAT_LINE_ACTIVE_MSB 2u
#define EMMC_CRYPTO_PSTATE_REG_DAT_LINE_ACTIVE_LSB 2u
#define EMMC_CRYPTO_PSTATE_REG_DAT_LINE_ACTIVE_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_DAT_LINE_ACTIVE_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_DAT_LINE_ACTIVE_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_DAT_LINE_ACTIVE_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_DAT_LINE_ACTIVE_FIELD_MASK 0x00000004ul
#define EMMC_CRYPTO_PSTATE_REG_DAT_LINE_ACTIVE_GET(x) \
   (((x) & 0x00000004ul) >> 2)
#define EMMC_CRYPTO_PSTATE_REG_DAT_LINE_ACTIVE_SET(x) \
   (((x) << 2) & 0x00000004ul)
#define EMMC_CRYPTO_PSTATE_REG_DAT_LINE_ACTIVE_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004ul) | ((r) & 0xfffffffbul))
/* Field member: emmc::crypto::PSTATE_REG.CMD_INHIBIT_DAT                  */
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_DAT_MSB 1u
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_DAT_LSB 1u
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_DAT_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_DAT_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_DAT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_DAT_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_DAT_FIELD_MASK 0x00000002ul
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_DAT_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_DAT_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_DAT_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: emmc::crypto::PSTATE_REG.CMD_INHIBIT                      */
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_MSB 0u
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_LSB 0u
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_WIDTH 1u
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_READ_ACCESS 1u
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_RESET 0x0u
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_FIELD_MASK 0x00000001ul
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_GET(x) ((x) & 0x00000001ul)
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_SET(x) ((x) & 0x00000001ul)
#define EMMC_CRYPTO_PSTATE_REG_CMD_INHIBIT_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: emmc::crypto::HOST_CTRL1_R                               */
/* Register template: emmc::crypto::HOST_CTRL1_R                           */
/* Field member: emmc::crypto::HOST_CTRL1_R.CARD_DETECT_SIG_SEL            */
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_SIG_SEL_MSB 7u
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_SIG_SEL_LSB 7u
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_SIG_SEL_WIDTH 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_SIG_SEL_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_SIG_SEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_SIG_SEL_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_SIG_SEL_FIELD_MASK 0x80u
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_SIG_SEL_GET(x) \
   (((x) & 0x80u) >> 7)
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_SIG_SEL_SET(x) \
   (((x) << 7) & 0x80u)
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_SIG_SEL_MODIFY(r, x) \
   ((((x) << 7) & 0x80u) | ((r) & 0x7fu))
/* Field member: emmc::crypto::HOST_CTRL1_R.CARD_DETECT_TEST_LVL           */
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_TEST_LVL_MSB 6u
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_TEST_LVL_LSB 6u
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_TEST_LVL_WIDTH 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_TEST_LVL_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_TEST_LVL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_TEST_LVL_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_TEST_LVL_FIELD_MASK 0x40u
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_TEST_LVL_GET(x) \
   (((x) & 0x40u) >> 6)
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_TEST_LVL_SET(x) \
   (((x) << 6) & 0x40u)
#define EMMC_CRYPTO_HOST_CTRL1_R_CARD_DETECT_TEST_LVL_MODIFY(r, x) \
   ((((x) << 6) & 0x40u) | ((r) & 0xbfu))
/* Field member: emmc::crypto::HOST_CTRL1_R.EXT_DAT_XFER                   */
#define EMMC_CRYPTO_HOST_CTRL1_R_EXT_DAT_XFER_MSB 5u
#define EMMC_CRYPTO_HOST_CTRL1_R_EXT_DAT_XFER_LSB 5u
#define EMMC_CRYPTO_HOST_CTRL1_R_EXT_DAT_XFER_WIDTH 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_EXT_DAT_XFER_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_EXT_DAT_XFER_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_EXT_DAT_XFER_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL1_R_EXT_DAT_XFER_FIELD_MASK 0x20u
#define EMMC_CRYPTO_HOST_CTRL1_R_EXT_DAT_XFER_GET(x) (((x) & 0x20u) >> 5)
#define EMMC_CRYPTO_HOST_CTRL1_R_EXT_DAT_XFER_SET(x) (((x) << 5) & 0x20u)
#define EMMC_CRYPTO_HOST_CTRL1_R_EXT_DAT_XFER_MODIFY(r, x) \
   ((((x) << 5) & 0x20u) | ((r) & 0xdfu))
/* Field member: emmc::crypto::HOST_CTRL1_R.DMA_SEL                        */
#define EMMC_CRYPTO_HOST_CTRL1_R_DMA_SEL_MSB 4u
#define EMMC_CRYPTO_HOST_CTRL1_R_DMA_SEL_LSB 3u
#define EMMC_CRYPTO_HOST_CTRL1_R_DMA_SEL_WIDTH 2u
#define EMMC_CRYPTO_HOST_CTRL1_R_DMA_SEL_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_DMA_SEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_DMA_SEL_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL1_R_DMA_SEL_FIELD_MASK 0x18u
#define EMMC_CRYPTO_HOST_CTRL1_R_DMA_SEL_GET(x) (((x) & 0x18u) >> 3)
#define EMMC_CRYPTO_HOST_CTRL1_R_DMA_SEL_SET(x) (((x) << 3) & 0x18u)
#define EMMC_CRYPTO_HOST_CTRL1_R_DMA_SEL_MODIFY(r, x) \
   ((((x) << 3) & 0x18u) | ((r) & 0xe7u))
/* Field member: emmc::crypto::HOST_CTRL1_R.HIGH_SPEED_EN                  */
#define EMMC_CRYPTO_HOST_CTRL1_R_HIGH_SPEED_EN_MSB 2u
#define EMMC_CRYPTO_HOST_CTRL1_R_HIGH_SPEED_EN_LSB 2u
#define EMMC_CRYPTO_HOST_CTRL1_R_HIGH_SPEED_EN_WIDTH 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_HIGH_SPEED_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_HIGH_SPEED_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_HIGH_SPEED_EN_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL1_R_HIGH_SPEED_EN_FIELD_MASK 0x04u
#define EMMC_CRYPTO_HOST_CTRL1_R_HIGH_SPEED_EN_GET(x) (((x) & 0x04u) >> 2)
#define EMMC_CRYPTO_HOST_CTRL1_R_HIGH_SPEED_EN_SET(x) (((x) << 2) & 0x04u)
#define EMMC_CRYPTO_HOST_CTRL1_R_HIGH_SPEED_EN_MODIFY(r, x) \
   ((((x) << 2) & 0x04u) | ((r) & 0xfbu))
/* Field member: emmc::crypto::HOST_CTRL1_R.DAT_XFER_WIDTH                 */
#define EMMC_CRYPTO_HOST_CTRL1_R_DAT_XFER_WIDTH_MSB 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_DAT_XFER_WIDTH_LSB 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_DAT_XFER_WIDTH_WIDTH 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_DAT_XFER_WIDTH_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_DAT_XFER_WIDTH_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_DAT_XFER_WIDTH_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL1_R_DAT_XFER_WIDTH_FIELD_MASK 0x02u
#define EMMC_CRYPTO_HOST_CTRL1_R_DAT_XFER_WIDTH_GET(x) (((x) & 0x02u) >> 1)
#define EMMC_CRYPTO_HOST_CTRL1_R_DAT_XFER_WIDTH_SET(x) (((x) << 1) & 0x02u)
#define EMMC_CRYPTO_HOST_CTRL1_R_DAT_XFER_WIDTH_MODIFY(r, x) \
   ((((x) << 1) & 0x02u) | ((r) & 0xfdu))
/* Field member: emmc::crypto::HOST_CTRL1_R.LED_CTRL                       */
#define EMMC_CRYPTO_HOST_CTRL1_R_LED_CTRL_MSB 0u
#define EMMC_CRYPTO_HOST_CTRL1_R_LED_CTRL_LSB 0u
#define EMMC_CRYPTO_HOST_CTRL1_R_LED_CTRL_WIDTH 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_LED_CTRL_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_LED_CTRL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL1_R_LED_CTRL_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL1_R_LED_CTRL_FIELD_MASK 0x01u
#define EMMC_CRYPTO_HOST_CTRL1_R_LED_CTRL_GET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_HOST_CTRL1_R_LED_CTRL_SET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_HOST_CTRL1_R_LED_CTRL_MODIFY(r, x) \
   (((x) & 0x01u) | ((r) & 0xfeu))

/* Register type: emmc::crypto::PWR_CTRL_R                                 */
/* Register template: emmc::crypto::PWR_CTRL_R                             */
/* Field member: emmc::crypto::PWR_CTRL_R.SD_BUS_VOL_VDD2                  */
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD2_MSB 7u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD2_LSB 5u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD2_WIDTH 3u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD2_READ_ACCESS 1u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD2_RESET 0x0u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD2_FIELD_MASK 0xe0u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD2_GET(x) (((x) & 0xe0u) >> 5)
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD2_SET(x) (((x) << 5) & 0xe0u)
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD2_MODIFY(r, x) \
   ((((x) << 5) & 0xe0u) | ((r) & 0x1fu))
/* Field member: emmc::crypto::PWR_CTRL_R.SD_BUS_PWR_VDD2                  */
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD2_MSB 4u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD2_LSB 4u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD2_WIDTH 1u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD2_READ_ACCESS 1u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD2_RESET 0x0u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD2_FIELD_MASK 0x10u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD2_GET(x) (((x) & 0x10u) >> 4)
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD2_SET(x) (((x) << 4) & 0x10u)
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD2_MODIFY(r, x) \
   ((((x) << 4) & 0x10u) | ((r) & 0xefu))
/* Field member: emmc::crypto::PWR_CTRL_R.SD_BUS_VOL_VDD1                  */
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD1_MSB 3u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD1_LSB 1u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD1_WIDTH 3u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD1_READ_ACCESS 1u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD1_RESET 0x0u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD1_FIELD_MASK 0x0eu
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD1_GET(x) (((x) & 0x0eu) >> 1)
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD1_SET(x) (((x) << 1) & 0x0eu)
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_VOL_VDD1_MODIFY(r, x) \
   ((((x) << 1) & 0x0eu) | ((r) & 0xf1u))
/* Field member: emmc::crypto::PWR_CTRL_R.SD_BUS_PWR_VDD1                  */
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD1_MSB 0u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD1_LSB 0u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD1_WIDTH 1u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD1_READ_ACCESS 1u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD1_RESET 0x0u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD1_FIELD_MASK 0x01u
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD1_GET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD1_SET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_PWR_CTRL_R_SD_BUS_PWR_VDD1_MODIFY(r, x) \
   (((x) & 0x01u) | ((r) & 0xfeu))

/* Register type: emmc::crypto::BGAP_CTRL_R                                */
/* Register template: emmc::crypto::BGAP_CTRL_R                            */
/* Field member: emmc::crypto::BGAP_CTRL_R.RSVD_7_4                        */
#define EMMC_CRYPTO_BGAP_CTRL_R_RSVD_7_4_MSB 7u
#define EMMC_CRYPTO_BGAP_CTRL_R_RSVD_7_4_LSB 4u
#define EMMC_CRYPTO_BGAP_CTRL_R_RSVD_7_4_WIDTH 4u
#define EMMC_CRYPTO_BGAP_CTRL_R_RSVD_7_4_READ_ACCESS 1u
#define EMMC_CRYPTO_BGAP_CTRL_R_RSVD_7_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_BGAP_CTRL_R_RSVD_7_4_RESET 0x0u
#define EMMC_CRYPTO_BGAP_CTRL_R_RSVD_7_4_FIELD_MASK 0xf0u
#define EMMC_CRYPTO_BGAP_CTRL_R_RSVD_7_4_GET(x) (((x) & 0xf0u) >> 4)
#define EMMC_CRYPTO_BGAP_CTRL_R_RSVD_7_4_SET(x) (((x) << 4) & 0xf0u)
#define EMMC_CRYPTO_BGAP_CTRL_R_RSVD_7_4_MODIFY(r, x) \
   ((((x) << 4) & 0xf0u) | ((r) & 0x0fu))
/* Field member: emmc::crypto::BGAP_CTRL_R.INT_AT_BGAP                     */
#define EMMC_CRYPTO_BGAP_CTRL_R_INT_AT_BGAP_MSB 3u
#define EMMC_CRYPTO_BGAP_CTRL_R_INT_AT_BGAP_LSB 3u
#define EMMC_CRYPTO_BGAP_CTRL_R_INT_AT_BGAP_WIDTH 1u
#define EMMC_CRYPTO_BGAP_CTRL_R_INT_AT_BGAP_READ_ACCESS 1u
#define EMMC_CRYPTO_BGAP_CTRL_R_INT_AT_BGAP_WRITE_ACCESS 1u
#define EMMC_CRYPTO_BGAP_CTRL_R_INT_AT_BGAP_RESET 0x0u
#define EMMC_CRYPTO_BGAP_CTRL_R_INT_AT_BGAP_FIELD_MASK 0x08u
#define EMMC_CRYPTO_BGAP_CTRL_R_INT_AT_BGAP_GET(x) (((x) & 0x08u) >> 3)
#define EMMC_CRYPTO_BGAP_CTRL_R_INT_AT_BGAP_SET(x) (((x) << 3) & 0x08u)
#define EMMC_CRYPTO_BGAP_CTRL_R_INT_AT_BGAP_MODIFY(r, x) \
   ((((x) << 3) & 0x08u) | ((r) & 0xf7u))
/* Field member: emmc::crypto::BGAP_CTRL_R.RD_WAIT_CTRL                    */
#define EMMC_CRYPTO_BGAP_CTRL_R_RD_WAIT_CTRL_MSB 2u
#define EMMC_CRYPTO_BGAP_CTRL_R_RD_WAIT_CTRL_LSB 2u
#define EMMC_CRYPTO_BGAP_CTRL_R_RD_WAIT_CTRL_WIDTH 1u
#define EMMC_CRYPTO_BGAP_CTRL_R_RD_WAIT_CTRL_READ_ACCESS 1u
#define EMMC_CRYPTO_BGAP_CTRL_R_RD_WAIT_CTRL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_BGAP_CTRL_R_RD_WAIT_CTRL_RESET 0x0u
#define EMMC_CRYPTO_BGAP_CTRL_R_RD_WAIT_CTRL_FIELD_MASK 0x04u
#define EMMC_CRYPTO_BGAP_CTRL_R_RD_WAIT_CTRL_GET(x) (((x) & 0x04u) >> 2)
#define EMMC_CRYPTO_BGAP_CTRL_R_RD_WAIT_CTRL_SET(x) (((x) << 2) & 0x04u)
#define EMMC_CRYPTO_BGAP_CTRL_R_RD_WAIT_CTRL_MODIFY(r, x) \
   ((((x) << 2) & 0x04u) | ((r) & 0xfbu))
/* Field member: emmc::crypto::BGAP_CTRL_R.CONTINUE_REQ                    */
#define EMMC_CRYPTO_BGAP_CTRL_R_CONTINUE_REQ_MSB 1u
#define EMMC_CRYPTO_BGAP_CTRL_R_CONTINUE_REQ_LSB 1u
#define EMMC_CRYPTO_BGAP_CTRL_R_CONTINUE_REQ_WIDTH 1u
#define EMMC_CRYPTO_BGAP_CTRL_R_CONTINUE_REQ_READ_ACCESS 1u
#define EMMC_CRYPTO_BGAP_CTRL_R_CONTINUE_REQ_WRITE_ACCESS 1u
#define EMMC_CRYPTO_BGAP_CTRL_R_CONTINUE_REQ_RESET 0x0u
#define EMMC_CRYPTO_BGAP_CTRL_R_CONTINUE_REQ_FIELD_MASK 0x02u
#define EMMC_CRYPTO_BGAP_CTRL_R_CONTINUE_REQ_GET(x) (((x) & 0x02u) >> 1)
#define EMMC_CRYPTO_BGAP_CTRL_R_CONTINUE_REQ_SET(x) (((x) << 1) & 0x02u)
#define EMMC_CRYPTO_BGAP_CTRL_R_CONTINUE_REQ_MODIFY(r, x) \
   ((((x) << 1) & 0x02u) | ((r) & 0xfdu))
/* Field member: emmc::crypto::BGAP_CTRL_R.STOP_BG_REQ                     */
#define EMMC_CRYPTO_BGAP_CTRL_R_STOP_BG_REQ_MSB 0u
#define EMMC_CRYPTO_BGAP_CTRL_R_STOP_BG_REQ_LSB 0u
#define EMMC_CRYPTO_BGAP_CTRL_R_STOP_BG_REQ_WIDTH 1u
#define EMMC_CRYPTO_BGAP_CTRL_R_STOP_BG_REQ_READ_ACCESS 1u
#define EMMC_CRYPTO_BGAP_CTRL_R_STOP_BG_REQ_WRITE_ACCESS 1u
#define EMMC_CRYPTO_BGAP_CTRL_R_STOP_BG_REQ_RESET 0x0u
#define EMMC_CRYPTO_BGAP_CTRL_R_STOP_BG_REQ_FIELD_MASK 0x01u
#define EMMC_CRYPTO_BGAP_CTRL_R_STOP_BG_REQ_GET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_BGAP_CTRL_R_STOP_BG_REQ_SET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_BGAP_CTRL_R_STOP_BG_REQ_MODIFY(r, x) \
   (((x) & 0x01u) | ((r) & 0xfeu))

/* Register type: emmc::crypto::WUP_CTRL_R                                 */
/* Register template: emmc::crypto::WUP_CTRL_R                             */
/* Field member: emmc::crypto::WUP_CTRL_R.RSVD_7_3                         */
#define EMMC_CRYPTO_WUP_CTRL_R_RSVD_7_3_MSB 7u
#define EMMC_CRYPTO_WUP_CTRL_R_RSVD_7_3_LSB 3u
#define EMMC_CRYPTO_WUP_CTRL_R_RSVD_7_3_WIDTH 5u
#define EMMC_CRYPTO_WUP_CTRL_R_RSVD_7_3_READ_ACCESS 1u
#define EMMC_CRYPTO_WUP_CTRL_R_RSVD_7_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_WUP_CTRL_R_RSVD_7_3_RESET 0x00u
#define EMMC_CRYPTO_WUP_CTRL_R_RSVD_7_3_FIELD_MASK 0xf8u
#define EMMC_CRYPTO_WUP_CTRL_R_RSVD_7_3_GET(x) (((x) & 0xf8u) >> 3)
#define EMMC_CRYPTO_WUP_CTRL_R_RSVD_7_3_SET(x) (((x) << 3) & 0xf8u)
#define EMMC_CRYPTO_WUP_CTRL_R_RSVD_7_3_MODIFY(r, x) \
   ((((x) << 3) & 0xf8u) | ((r) & 0x07u))
/* Field member: emmc::crypto::WUP_CTRL_R.CARD_REMOVAL                     */
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_REMOVAL_MSB 2u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_REMOVAL_LSB 2u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_REMOVAL_WIDTH 1u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_REMOVAL_READ_ACCESS 1u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_REMOVAL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_REMOVAL_RESET 0x0u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_REMOVAL_FIELD_MASK 0x04u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_REMOVAL_GET(x) (((x) & 0x04u) >> 2)
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_REMOVAL_SET(x) (((x) << 2) & 0x04u)
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_REMOVAL_MODIFY(r, x) \
   ((((x) << 2) & 0x04u) | ((r) & 0xfbu))
/* Field member: emmc::crypto::WUP_CTRL_R.CARD_INSERT                      */
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INSERT_MSB 1u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INSERT_LSB 1u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INSERT_WIDTH 1u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INSERT_READ_ACCESS 1u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INSERT_WRITE_ACCESS 1u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INSERT_RESET 0x0u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INSERT_FIELD_MASK 0x02u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INSERT_GET(x) (((x) & 0x02u) >> 1)
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INSERT_SET(x) (((x) << 1) & 0x02u)
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INSERT_MODIFY(r, x) \
   ((((x) << 1) & 0x02u) | ((r) & 0xfdu))
/* Field member: emmc::crypto::WUP_CTRL_R.CARD_INT                         */
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INT_MSB 0u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INT_LSB 0u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INT_WIDTH 1u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INT_READ_ACCESS 1u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INT_WRITE_ACCESS 1u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INT_RESET 0x0u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INT_FIELD_MASK 0x01u
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INT_GET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INT_SET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_WUP_CTRL_R_CARD_INT_MODIFY(r, x) \
   (((x) & 0x01u) | ((r) & 0xfeu))

/* Register type: emmc::crypto::CLK_CTRL_R                                 */
/* Register template: emmc::crypto::CLK_CTRL_R                             */
/* Field member: emmc::crypto::CLK_CTRL_R.FREQ_SEL                         */
#define EMMC_CRYPTO_CLK_CTRL_R_FREQ_SEL_MSB 15u
#define EMMC_CRYPTO_CLK_CTRL_R_FREQ_SEL_LSB 8u
#define EMMC_CRYPTO_CLK_CTRL_R_FREQ_SEL_WIDTH 8u
#define EMMC_CRYPTO_CLK_CTRL_R_FREQ_SEL_READ_ACCESS 1u
#define EMMC_CRYPTO_CLK_CTRL_R_FREQ_SEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_CLK_CTRL_R_FREQ_SEL_RESET 0x00u
#define EMMC_CRYPTO_CLK_CTRL_R_FREQ_SEL_FIELD_MASK 0xff00u
#define EMMC_CRYPTO_CLK_CTRL_R_FREQ_SEL_GET(x) (((x) & 0xff00u) >> 8)
#define EMMC_CRYPTO_CLK_CTRL_R_FREQ_SEL_SET(x) (((x) << 8) & 0xff00u)
#define EMMC_CRYPTO_CLK_CTRL_R_FREQ_SEL_MODIFY(r, x) \
   ((((x) << 8) & 0xff00u) | ((r) & 0x00ffu))
/* Field member: emmc::crypto::CLK_CTRL_R.UPPER_FREQ_SEL                   */
#define EMMC_CRYPTO_CLK_CTRL_R_UPPER_FREQ_SEL_MSB 7u
#define EMMC_CRYPTO_CLK_CTRL_R_UPPER_FREQ_SEL_LSB 6u
#define EMMC_CRYPTO_CLK_CTRL_R_UPPER_FREQ_SEL_WIDTH 2u
#define EMMC_CRYPTO_CLK_CTRL_R_UPPER_FREQ_SEL_READ_ACCESS 1u
#define EMMC_CRYPTO_CLK_CTRL_R_UPPER_FREQ_SEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_CLK_CTRL_R_UPPER_FREQ_SEL_RESET 0x0u
#define EMMC_CRYPTO_CLK_CTRL_R_UPPER_FREQ_SEL_FIELD_MASK 0x00c0u
#define EMMC_CRYPTO_CLK_CTRL_R_UPPER_FREQ_SEL_GET(x) (((x) & 0x00c0u) >> 6)
#define EMMC_CRYPTO_CLK_CTRL_R_UPPER_FREQ_SEL_SET(x) (((x) << 6) & 0x00c0u)
#define EMMC_CRYPTO_CLK_CTRL_R_UPPER_FREQ_SEL_MODIFY(r, x) \
   ((((x) << 6) & 0x00c0u) | ((r) & 0xff3fu))
/* Field member: emmc::crypto::CLK_CTRL_R.CLK_GEN_SELECT                   */
#define EMMC_CRYPTO_CLK_CTRL_R_CLK_GEN_SELECT_MSB 5u
#define EMMC_CRYPTO_CLK_CTRL_R_CLK_GEN_SELECT_LSB 5u
#define EMMC_CRYPTO_CLK_CTRL_R_CLK_GEN_SELECT_WIDTH 1u
#define EMMC_CRYPTO_CLK_CTRL_R_CLK_GEN_SELECT_READ_ACCESS 1u
#define EMMC_CRYPTO_CLK_CTRL_R_CLK_GEN_SELECT_WRITE_ACCESS 1u
#define EMMC_CRYPTO_CLK_CTRL_R_CLK_GEN_SELECT_RESET 0x0u
#define EMMC_CRYPTO_CLK_CTRL_R_CLK_GEN_SELECT_FIELD_MASK 0x0020u
#define EMMC_CRYPTO_CLK_CTRL_R_CLK_GEN_SELECT_GET(x) (((x) & 0x0020u) >> 5)
#define EMMC_CRYPTO_CLK_CTRL_R_CLK_GEN_SELECT_SET(x) (((x) << 5) & 0x0020u)
#define EMMC_CRYPTO_CLK_CTRL_R_CLK_GEN_SELECT_MODIFY(r, x) \
   ((((x) << 5) & 0x0020u) | ((r) & 0xffdfu))
/* Field member: emmc::crypto::CLK_CTRL_R.RSVD_4                           */
#define EMMC_CRYPTO_CLK_CTRL_R_RSVD_4_MSB 4u
#define EMMC_CRYPTO_CLK_CTRL_R_RSVD_4_LSB 4u
#define EMMC_CRYPTO_CLK_CTRL_R_RSVD_4_WIDTH 1u
#define EMMC_CRYPTO_CLK_CTRL_R_RSVD_4_READ_ACCESS 1u
#define EMMC_CRYPTO_CLK_CTRL_R_RSVD_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CLK_CTRL_R_RSVD_4_RESET 0x0u
#define EMMC_CRYPTO_CLK_CTRL_R_RSVD_4_FIELD_MASK 0x0010u
#define EMMC_CRYPTO_CLK_CTRL_R_RSVD_4_GET(x) (((x) & 0x0010u) >> 4)
#define EMMC_CRYPTO_CLK_CTRL_R_RSVD_4_SET(x) (((x) << 4) & 0x0010u)
#define EMMC_CRYPTO_CLK_CTRL_R_RSVD_4_MODIFY(r, x) \
   ((((x) << 4) & 0x0010u) | ((r) & 0xffefu))
/* Field member: emmc::crypto::CLK_CTRL_R.PLL_ENABLE                       */
#define EMMC_CRYPTO_CLK_CTRL_R_PLL_ENABLE_MSB 3u
#define EMMC_CRYPTO_CLK_CTRL_R_PLL_ENABLE_LSB 3u
#define EMMC_CRYPTO_CLK_CTRL_R_PLL_ENABLE_WIDTH 1u
#define EMMC_CRYPTO_CLK_CTRL_R_PLL_ENABLE_READ_ACCESS 1u
#define EMMC_CRYPTO_CLK_CTRL_R_PLL_ENABLE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_CLK_CTRL_R_PLL_ENABLE_RESET 0x0u
#define EMMC_CRYPTO_CLK_CTRL_R_PLL_ENABLE_FIELD_MASK 0x0008u
#define EMMC_CRYPTO_CLK_CTRL_R_PLL_ENABLE_GET(x) (((x) & 0x0008u) >> 3)
#define EMMC_CRYPTO_CLK_CTRL_R_PLL_ENABLE_SET(x) (((x) << 3) & 0x0008u)
#define EMMC_CRYPTO_CLK_CTRL_R_PLL_ENABLE_MODIFY(r, x) \
   ((((x) << 3) & 0x0008u) | ((r) & 0xfff7u))
/* Field member: emmc::crypto::CLK_CTRL_R.SD_CLK_EN                        */
#define EMMC_CRYPTO_CLK_CTRL_R_SD_CLK_EN_MSB 2u
#define EMMC_CRYPTO_CLK_CTRL_R_SD_CLK_EN_LSB 2u
#define EMMC_CRYPTO_CLK_CTRL_R_SD_CLK_EN_WIDTH 1u
#define EMMC_CRYPTO_CLK_CTRL_R_SD_CLK_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_CLK_CTRL_R_SD_CLK_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_CLK_CTRL_R_SD_CLK_EN_RESET 0x0u
#define EMMC_CRYPTO_CLK_CTRL_R_SD_CLK_EN_FIELD_MASK 0x0004u
#define EMMC_CRYPTO_CLK_CTRL_R_SD_CLK_EN_GET(x) (((x) & 0x0004u) >> 2)
#define EMMC_CRYPTO_CLK_CTRL_R_SD_CLK_EN_SET(x) (((x) << 2) & 0x0004u)
#define EMMC_CRYPTO_CLK_CTRL_R_SD_CLK_EN_MODIFY(r, x) \
   ((((x) << 2) & 0x0004u) | ((r) & 0xfffbu))
/* Field member: emmc::crypto::CLK_CTRL_R.INTERNAL_CLK_STABLE              */
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_STABLE_MSB 1u
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_STABLE_LSB 1u
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_STABLE_WIDTH 1u
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_STABLE_READ_ACCESS 1u
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_STABLE_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_STABLE_RESET 0x0u
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_STABLE_FIELD_MASK 0x0002u
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_STABLE_GET(x) \
   (((x) & 0x0002u) >> 1)
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_STABLE_SET(x) \
   (((x) << 1) & 0x0002u)
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_STABLE_MODIFY(r, x) \
   ((((x) << 1) & 0x0002u) | ((r) & 0xfffdu))
/* Field member: emmc::crypto::CLK_CTRL_R.INTERNAL_CLK_EN                  */
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_EN_MSB 0u
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_EN_LSB 0u
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_EN_WIDTH 1u
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_EN_RESET 0x0u
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_EN_FIELD_MASK 0x0001u
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_EN_GET(x) ((x) & 0x0001u)
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_EN_SET(x) ((x) & 0x0001u)
#define EMMC_CRYPTO_CLK_CTRL_R_INTERNAL_CLK_EN_MODIFY(r, x) \
   (((x) & 0x0001u) | ((r) & 0xfffeu))

/* Register type: emmc::crypto::TOUT_CTRL_R                                */
/* Register template: emmc::crypto::TOUT_CTRL_R                            */
/* Field member: emmc::crypto::TOUT_CTRL_R.RSVD_7_4                        */
#define EMMC_CRYPTO_TOUT_CTRL_R_RSVD_7_4_MSB 7u
#define EMMC_CRYPTO_TOUT_CTRL_R_RSVD_7_4_LSB 4u
#define EMMC_CRYPTO_TOUT_CTRL_R_RSVD_7_4_WIDTH 4u
#define EMMC_CRYPTO_TOUT_CTRL_R_RSVD_7_4_READ_ACCESS 1u
#define EMMC_CRYPTO_TOUT_CTRL_R_RSVD_7_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_TOUT_CTRL_R_RSVD_7_4_RESET 0x0u
#define EMMC_CRYPTO_TOUT_CTRL_R_RSVD_7_4_FIELD_MASK 0xf0u
#define EMMC_CRYPTO_TOUT_CTRL_R_RSVD_7_4_GET(x) (((x) & 0xf0u) >> 4)
#define EMMC_CRYPTO_TOUT_CTRL_R_RSVD_7_4_SET(x) (((x) << 4) & 0xf0u)
#define EMMC_CRYPTO_TOUT_CTRL_R_RSVD_7_4_MODIFY(r, x) \
   ((((x) << 4) & 0xf0u) | ((r) & 0x0fu))
/* Field member: emmc::crypto::TOUT_CTRL_R.TOUT_CNT                        */
#define EMMC_CRYPTO_TOUT_CTRL_R_TOUT_CNT_MSB 3u
#define EMMC_CRYPTO_TOUT_CTRL_R_TOUT_CNT_LSB 0u
#define EMMC_CRYPTO_TOUT_CTRL_R_TOUT_CNT_WIDTH 4u
#define EMMC_CRYPTO_TOUT_CTRL_R_TOUT_CNT_READ_ACCESS 1u
#define EMMC_CRYPTO_TOUT_CTRL_R_TOUT_CNT_WRITE_ACCESS 1u
#define EMMC_CRYPTO_TOUT_CTRL_R_TOUT_CNT_RESET 0x0u
#define EMMC_CRYPTO_TOUT_CTRL_R_TOUT_CNT_FIELD_MASK 0x0fu
#define EMMC_CRYPTO_TOUT_CTRL_R_TOUT_CNT_GET(x) ((x) & 0x0fu)
#define EMMC_CRYPTO_TOUT_CTRL_R_TOUT_CNT_SET(x) ((x) & 0x0fu)
#define EMMC_CRYPTO_TOUT_CTRL_R_TOUT_CNT_MODIFY(r, x) \
   (((x) & 0x0fu) | ((r) & 0xf0u))

/* Register type: emmc::crypto::SW_RST_R                                   */
/* Register template: emmc::crypto::SW_RST_R                               */
/* Field member: emmc::crypto::SW_RST_R.RSVD_7_3                           */
#define EMMC_CRYPTO_SW_RST_R_RSVD_7_3_MSB 7u
#define EMMC_CRYPTO_SW_RST_R_RSVD_7_3_LSB 3u
#define EMMC_CRYPTO_SW_RST_R_RSVD_7_3_WIDTH 5u
#define EMMC_CRYPTO_SW_RST_R_RSVD_7_3_READ_ACCESS 1u
#define EMMC_CRYPTO_SW_RST_R_RSVD_7_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_SW_RST_R_RSVD_7_3_RESET 0x00u
#define EMMC_CRYPTO_SW_RST_R_RSVD_7_3_FIELD_MASK 0xf8u
#define EMMC_CRYPTO_SW_RST_R_RSVD_7_3_GET(x) (((x) & 0xf8u) >> 3)
#define EMMC_CRYPTO_SW_RST_R_RSVD_7_3_SET(x) (((x) << 3) & 0xf8u)
#define EMMC_CRYPTO_SW_RST_R_RSVD_7_3_MODIFY(r, x) \
   ((((x) << 3) & 0xf8u) | ((r) & 0x07u))
/* Field member: emmc::crypto::SW_RST_R.SW_RST_DAT                         */
#define EMMC_CRYPTO_SW_RST_R_SW_RST_DAT_MSB 2u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_DAT_LSB 2u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_DAT_WIDTH 1u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_DAT_READ_ACCESS 1u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_DAT_WRITE_ACCESS 1u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_DAT_RESET 0x0u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_DAT_FIELD_MASK 0x04u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_DAT_GET(x) (((x) & 0x04u) >> 2)
#define EMMC_CRYPTO_SW_RST_R_SW_RST_DAT_SET(x) (((x) << 2) & 0x04u)
#define EMMC_CRYPTO_SW_RST_R_SW_RST_DAT_MODIFY(r, x) \
   ((((x) << 2) & 0x04u) | ((r) & 0xfbu))
/* Field member: emmc::crypto::SW_RST_R.SW_RST_CMD                         */
#define EMMC_CRYPTO_SW_RST_R_SW_RST_CMD_MSB 1u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_CMD_LSB 1u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_CMD_WIDTH 1u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_CMD_READ_ACCESS 1u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_CMD_WRITE_ACCESS 1u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_CMD_RESET 0x0u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_CMD_FIELD_MASK 0x02u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_CMD_GET(x) (((x) & 0x02u) >> 1)
#define EMMC_CRYPTO_SW_RST_R_SW_RST_CMD_SET(x) (((x) << 1) & 0x02u)
#define EMMC_CRYPTO_SW_RST_R_SW_RST_CMD_MODIFY(r, x) \
   ((((x) << 1) & 0x02u) | ((r) & 0xfdu))
/* Field member: emmc::crypto::SW_RST_R.SW_RST_ALL                         */
#define EMMC_CRYPTO_SW_RST_R_SW_RST_ALL_MSB 0u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_ALL_LSB 0u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_ALL_WIDTH 1u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_ALL_READ_ACCESS 1u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_ALL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_ALL_RESET 0x0u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_ALL_FIELD_MASK 0x01u
#define EMMC_CRYPTO_SW_RST_R_SW_RST_ALL_GET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_SW_RST_R_SW_RST_ALL_SET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_SW_RST_R_SW_RST_ALL_MODIFY(r, x) \
   (((x) & 0x01u) | ((r) & 0xfeu))

/* Register type: emmc::crypto::NORMAL_INT_STAT_R                          */
/* Register template: emmc::crypto::NORMAL_INT_STAT_R                      */
/* Field member: emmc::crypto::NORMAL_INT_STAT_R.ERR_INTERRUPT             */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_ERR_INTERRUPT_MSB 15u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_ERR_INTERRUPT_LSB 15u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_ERR_INTERRUPT_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_ERR_INTERRUPT_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_ERR_INTERRUPT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_ERR_INTERRUPT_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_ERR_INTERRUPT_FIELD_MASK 0x8000u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_ERR_INTERRUPT_GET(x) \
   (((x) & 0x8000u) >> 15)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_ERR_INTERRUPT_SET(x) \
   (((x) << 15) & 0x8000u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_ERR_INTERRUPT_MODIFY(r, x) \
   ((((x) << 15) & 0x8000u) | ((r) & 0x7fffu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_R.CQE_EVENT                 */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CQE_EVENT_MSB 14u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CQE_EVENT_LSB 14u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CQE_EVENT_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CQE_EVENT_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CQE_EVENT_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CQE_EVENT_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CQE_EVENT_FIELD_MASK 0x4000u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CQE_EVENT_GET(x) \
   (((x) & 0x4000u) >> 14)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CQE_EVENT_SET(x) \
   (((x) << 14) & 0x4000u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CQE_EVENT_MODIFY(r, x) \
   ((((x) << 14) & 0x4000u) | ((r) & 0xbfffu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_R.FX_EVENT                  */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_FX_EVENT_MSB 13u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_FX_EVENT_LSB 13u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_FX_EVENT_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_FX_EVENT_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_FX_EVENT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_FX_EVENT_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_FX_EVENT_FIELD_MASK 0x2000u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_FX_EVENT_GET(x) (((x) & 0x2000u) >> 13)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_FX_EVENT_SET(x) \
   (((x) << 13) & 0x2000u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_FX_EVENT_MODIFY(r, x) \
   ((((x) << 13) & 0x2000u) | ((r) & 0xdfffu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_R.RE_TUNE_EVENT             */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_RE_TUNE_EVENT_MSB 12u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_RE_TUNE_EVENT_LSB 12u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_RE_TUNE_EVENT_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_RE_TUNE_EVENT_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_RE_TUNE_EVENT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_RE_TUNE_EVENT_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_RE_TUNE_EVENT_FIELD_MASK 0x1000u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_RE_TUNE_EVENT_GET(x) \
   (((x) & 0x1000u) >> 12)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_RE_TUNE_EVENT_SET(x) \
   (((x) << 12) & 0x1000u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_RE_TUNE_EVENT_MODIFY(r, x) \
   ((((x) << 12) & 0x1000u) | ((r) & 0xefffu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_R.INT_C                     */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_C_MSB 11u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_C_LSB 11u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_C_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_C_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_C_WRITE_ACCESS 0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_C_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_C_FIELD_MASK 0x0800u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_C_GET(x) (((x) & 0x0800u) >> 11)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_C_SET(x) (((x) << 11) & 0x0800u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_C_MODIFY(r, x) \
   ((((x) << 11) & 0x0800u) | ((r) & 0xf7ffu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_R.INT_B                     */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_B_MSB 10u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_B_LSB 10u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_B_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_B_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_B_WRITE_ACCESS 0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_B_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_B_FIELD_MASK 0x0400u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_B_GET(x) (((x) & 0x0400u) >> 10)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_B_SET(x) (((x) << 10) & 0x0400u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_B_MODIFY(r, x) \
   ((((x) << 10) & 0x0400u) | ((r) & 0xfbffu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_R.INT_A                     */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_A_MSB 9u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_A_LSB 9u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_A_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_A_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_A_WRITE_ACCESS 0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_A_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_A_FIELD_MASK 0x0200u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_A_GET(x) (((x) & 0x0200u) >> 9)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_A_SET(x) (((x) << 9) & 0x0200u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_INT_A_MODIFY(r, x) \
   ((((x) << 9) & 0x0200u) | ((r) & 0xfdffu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_R.CARD_INTERRUPT            */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INTERRUPT_MSB 8u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INTERRUPT_LSB 8u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INTERRUPT_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INTERRUPT_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INTERRUPT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INTERRUPT_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INTERRUPT_FIELD_MASK 0x0100u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INTERRUPT_GET(x) \
   (((x) & 0x0100u) >> 8)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INTERRUPT_SET(x) \
   (((x) << 8) & 0x0100u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INTERRUPT_MODIFY(r, x) \
   ((((x) << 8) & 0x0100u) | ((r) & 0xfeffu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_R.CARD_REMOVAL              */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_REMOVAL_MSB 7u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_REMOVAL_LSB 7u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_REMOVAL_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_REMOVAL_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_REMOVAL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_REMOVAL_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_REMOVAL_FIELD_MASK 0x0080u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_REMOVAL_GET(x) \
   (((x) & 0x0080u) >> 7)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_REMOVAL_SET(x) \
   (((x) << 7) & 0x0080u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_REMOVAL_MODIFY(r, x) \
   ((((x) << 7) & 0x0080u) | ((r) & 0xff7fu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_R.CARD_INSERTION            */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INSERTION_MSB 6u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INSERTION_LSB 6u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INSERTION_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INSERTION_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INSERTION_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INSERTION_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INSERTION_FIELD_MASK 0x0040u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INSERTION_GET(x) \
   (((x) & 0x0040u) >> 6)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INSERTION_SET(x) \
   (((x) << 6) & 0x0040u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CARD_INSERTION_MODIFY(r, x) \
   ((((x) << 6) & 0x0040u) | ((r) & 0xffbfu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_R.BUF_RD_READY              */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_RD_READY_MSB 5u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_RD_READY_LSB 5u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_RD_READY_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_RD_READY_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_RD_READY_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_RD_READY_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_RD_READY_FIELD_MASK 0x0020u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_RD_READY_GET(x) \
   (((x) & 0x0020u) >> 5)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_RD_READY_SET(x) \
   (((x) << 5) & 0x0020u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_RD_READY_MODIFY(r, x) \
   ((((x) << 5) & 0x0020u) | ((r) & 0xffdfu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_R.BUF_WR_READY              */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_WR_READY_MSB 4u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_WR_READY_LSB 4u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_WR_READY_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_WR_READY_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_WR_READY_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_WR_READY_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_WR_READY_FIELD_MASK 0x0010u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_WR_READY_GET(x) \
   (((x) & 0x0010u) >> 4)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_WR_READY_SET(x) \
   (((x) << 4) & 0x0010u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BUF_WR_READY_MODIFY(r, x) \
   ((((x) << 4) & 0x0010u) | ((r) & 0xffefu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_R.DMA_INTERRUPT             */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_DMA_INTERRUPT_MSB 3u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_DMA_INTERRUPT_LSB 3u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_DMA_INTERRUPT_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_DMA_INTERRUPT_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_DMA_INTERRUPT_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_DMA_INTERRUPT_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_DMA_INTERRUPT_FIELD_MASK 0x0008u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_DMA_INTERRUPT_GET(x) \
   (((x) & 0x0008u) >> 3)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_DMA_INTERRUPT_SET(x) \
   (((x) << 3) & 0x0008u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_DMA_INTERRUPT_MODIFY(r, x) \
   ((((x) << 3) & 0x0008u) | ((r) & 0xfff7u))
/* Field member: emmc::crypto::NORMAL_INT_STAT_R.BGAP_EVENT                */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BGAP_EVENT_MSB 2u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BGAP_EVENT_LSB 2u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BGAP_EVENT_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BGAP_EVENT_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BGAP_EVENT_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BGAP_EVENT_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BGAP_EVENT_FIELD_MASK 0x0004u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BGAP_EVENT_GET(x) \
   (((x) & 0x0004u) >> 2)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BGAP_EVENT_SET(x) \
   (((x) << 2) & 0x0004u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_BGAP_EVENT_MODIFY(r, x) \
   ((((x) << 2) & 0x0004u) | ((r) & 0xfffbu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_R.XFER_COMPLETE             */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_XFER_COMPLETE_MSB 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_XFER_COMPLETE_LSB 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_XFER_COMPLETE_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_XFER_COMPLETE_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_XFER_COMPLETE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_XFER_COMPLETE_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_XFER_COMPLETE_FIELD_MASK 0x0002u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_XFER_COMPLETE_GET(x) \
   (((x) & 0x0002u) >> 1)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_XFER_COMPLETE_SET(x) \
   (((x) << 1) & 0x0002u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_XFER_COMPLETE_MODIFY(r, x) \
   ((((x) << 1) & 0x0002u) | ((r) & 0xfffdu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_R.CMD_COMPLETE              */
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CMD_COMPLETE_MSB 0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CMD_COMPLETE_LSB 0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CMD_COMPLETE_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CMD_COMPLETE_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CMD_COMPLETE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CMD_COMPLETE_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CMD_COMPLETE_FIELD_MASK 0x0001u
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CMD_COMPLETE_GET(x) ((x) & 0x0001u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CMD_COMPLETE_SET(x) ((x) & 0x0001u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_R_CMD_COMPLETE_MODIFY(r, x) \
   (((x) & 0x0001u) | ((r) & 0xfffeu))

/* Register type: emmc::crypto::ERROR_INT_STAT_R                           */
/* Register template: emmc::crypto::ERROR_INT_STAT_R                       */
/* Field member: emmc::crypto::ERROR_INT_STAT_R.VENDOR_ERR3                */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR3_MSB 15u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR3_LSB 15u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR3_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR3_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR3_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR3_FIELD_MASK 0x8000u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR3_GET(x) \
   (((x) & 0x8000u) >> 15)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR3_SET(x) \
   (((x) << 15) & 0x8000u)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR3_MODIFY(r, x) \
   ((((x) << 15) & 0x8000u) | ((r) & 0x7fffu))
/* Field member: emmc::crypto::ERROR_INT_STAT_R.VENDOR_ERR2                */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR2_MSB 14u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR2_LSB 14u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR2_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR2_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR2_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR2_FIELD_MASK 0x4000u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR2_GET(x) \
   (((x) & 0x4000u) >> 14)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR2_SET(x) \
   (((x) << 14) & 0x4000u)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR2_MODIFY(r, x) \
   ((((x) << 14) & 0x4000u) | ((r) & 0xbfffu))
/* Field member: emmc::crypto::ERROR_INT_STAT_R.VENDOR_ERR1                */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR1_MSB 13u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR1_LSB 13u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR1_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR1_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR1_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR1_FIELD_MASK 0x2000u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR1_GET(x) \
   (((x) & 0x2000u) >> 13)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR1_SET(x) \
   (((x) << 13) & 0x2000u)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_VENDOR_ERR1_MODIFY(r, x) \
   ((((x) << 13) & 0x2000u) | ((r) & 0xdfffu))
/* Field member: emmc::crypto::ERROR_INT_STAT_R.BOOT_ACK_ERR               */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_BOOT_ACK_ERR_MSB 12u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_BOOT_ACK_ERR_LSB 12u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_BOOT_ACK_ERR_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_BOOT_ACK_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_BOOT_ACK_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_BOOT_ACK_ERR_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_BOOT_ACK_ERR_FIELD_MASK 0x1000u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_BOOT_ACK_ERR_GET(x) \
   (((x) & 0x1000u) >> 12)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_BOOT_ACK_ERR_SET(x) \
   (((x) << 12) & 0x1000u)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_BOOT_ACK_ERR_MODIFY(r, x) \
   ((((x) << 12) & 0x1000u) | ((r) & 0xefffu))
/* Field member: emmc::crypto::ERROR_INT_STAT_R.RESP_ERR                   */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_RESP_ERR_MSB 11u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_RESP_ERR_LSB 11u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_RESP_ERR_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_RESP_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_RESP_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_RESP_ERR_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_RESP_ERR_FIELD_MASK 0x0800u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_RESP_ERR_GET(x) (((x) & 0x0800u) >> 11)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_RESP_ERR_SET(x) \
   (((x) << 11) & 0x0800u)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_RESP_ERR_MODIFY(r, x) \
   ((((x) << 11) & 0x0800u) | ((r) & 0xf7ffu))
/* Field member: emmc::crypto::ERROR_INT_STAT_R.TUNING_ERR                 */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_TUNING_ERR_MSB 10u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_TUNING_ERR_LSB 10u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_TUNING_ERR_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_TUNING_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_TUNING_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_TUNING_ERR_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_TUNING_ERR_FIELD_MASK 0x0400u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_TUNING_ERR_GET(x) \
   (((x) & 0x0400u) >> 10)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_TUNING_ERR_SET(x) \
   (((x) << 10) & 0x0400u)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_TUNING_ERR_MODIFY(r, x) \
   ((((x) << 10) & 0x0400u) | ((r) & 0xfbffu))
/* Field member: emmc::crypto::ERROR_INT_STAT_R.ADMA_ERR                   */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_ADMA_ERR_MSB 9u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_ADMA_ERR_LSB 9u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_ADMA_ERR_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_ADMA_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_ADMA_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_ADMA_ERR_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_ADMA_ERR_FIELD_MASK 0x0200u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_ADMA_ERR_GET(x) (((x) & 0x0200u) >> 9)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_ADMA_ERR_SET(x) (((x) << 9) & 0x0200u)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_ADMA_ERR_MODIFY(r, x) \
   ((((x) << 9) & 0x0200u) | ((r) & 0xfdffu))
/* Field member: emmc::crypto::ERROR_INT_STAT_R.AUTO_CMD_ERR               */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_AUTO_CMD_ERR_MSB 8u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_AUTO_CMD_ERR_LSB 8u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_AUTO_CMD_ERR_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_AUTO_CMD_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_AUTO_CMD_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_AUTO_CMD_ERR_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_AUTO_CMD_ERR_FIELD_MASK 0x0100u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_AUTO_CMD_ERR_GET(x) \
   (((x) & 0x0100u) >> 8)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_AUTO_CMD_ERR_SET(x) \
   (((x) << 8) & 0x0100u)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_AUTO_CMD_ERR_MODIFY(r, x) \
   ((((x) << 8) & 0x0100u) | ((r) & 0xfeffu))
/* Field member: emmc::crypto::ERROR_INT_STAT_R.CUR_LMT_ERR                */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CUR_LMT_ERR_MSB 7u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CUR_LMT_ERR_LSB 7u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CUR_LMT_ERR_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CUR_LMT_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CUR_LMT_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CUR_LMT_ERR_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CUR_LMT_ERR_FIELD_MASK 0x0080u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CUR_LMT_ERR_GET(x) \
   (((x) & 0x0080u) >> 7)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CUR_LMT_ERR_SET(x) \
   (((x) << 7) & 0x0080u)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CUR_LMT_ERR_MODIFY(r, x) \
   ((((x) << 7) & 0x0080u) | ((r) & 0xff7fu))
/* Field member: emmc::crypto::ERROR_INT_STAT_R.DATA_END_BIT_ERR           */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_END_BIT_ERR_MSB 6u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_END_BIT_ERR_LSB 6u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_END_BIT_ERR_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_END_BIT_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_END_BIT_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_END_BIT_ERR_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_END_BIT_ERR_FIELD_MASK 0x0040u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_END_BIT_ERR_GET(x) \
   (((x) & 0x0040u) >> 6)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_END_BIT_ERR_SET(x) \
   (((x) << 6) & 0x0040u)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_END_BIT_ERR_MODIFY(r, x) \
   ((((x) << 6) & 0x0040u) | ((r) & 0xffbfu))
/* Field member: emmc::crypto::ERROR_INT_STAT_R.DATA_CRC_ERR               */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_CRC_ERR_MSB 5u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_CRC_ERR_LSB 5u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_CRC_ERR_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_CRC_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_CRC_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_CRC_ERR_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_CRC_ERR_FIELD_MASK 0x0020u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_CRC_ERR_GET(x) \
   (((x) & 0x0020u) >> 5)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_CRC_ERR_SET(x) \
   (((x) << 5) & 0x0020u)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_CRC_ERR_MODIFY(r, x) \
   ((((x) << 5) & 0x0020u) | ((r) & 0xffdfu))
/* Field member: emmc::crypto::ERROR_INT_STAT_R.DATA_TOUT_ERR              */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_TOUT_ERR_MSB 4u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_TOUT_ERR_LSB 4u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_TOUT_ERR_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_TOUT_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_TOUT_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_TOUT_ERR_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_TOUT_ERR_FIELD_MASK 0x0010u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_TOUT_ERR_GET(x) \
   (((x) & 0x0010u) >> 4)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_TOUT_ERR_SET(x) \
   (((x) << 4) & 0x0010u)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_DATA_TOUT_ERR_MODIFY(r, x) \
   ((((x) << 4) & 0x0010u) | ((r) & 0xffefu))
/* Field member: emmc::crypto::ERROR_INT_STAT_R.CMD_IDX_ERR                */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_IDX_ERR_MSB 3u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_IDX_ERR_LSB 3u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_IDX_ERR_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_IDX_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_IDX_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_IDX_ERR_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_IDX_ERR_FIELD_MASK 0x0008u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_IDX_ERR_GET(x) \
   (((x) & 0x0008u) >> 3)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_IDX_ERR_SET(x) \
   (((x) << 3) & 0x0008u)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_IDX_ERR_MODIFY(r, x) \
   ((((x) << 3) & 0x0008u) | ((r) & 0xfff7u))
/* Field member: emmc::crypto::ERROR_INT_STAT_R.CMD_END_BIT_ERR            */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_END_BIT_ERR_MSB 2u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_END_BIT_ERR_LSB 2u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_END_BIT_ERR_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_END_BIT_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_END_BIT_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_END_BIT_ERR_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_END_BIT_ERR_FIELD_MASK 0x0004u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_END_BIT_ERR_GET(x) \
   (((x) & 0x0004u) >> 2)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_END_BIT_ERR_SET(x) \
   (((x) << 2) & 0x0004u)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_END_BIT_ERR_MODIFY(r, x) \
   ((((x) << 2) & 0x0004u) | ((r) & 0xfffbu))
/* Field member: emmc::crypto::ERROR_INT_STAT_R.CMD_CRC_ERR                */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_CRC_ERR_MSB 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_CRC_ERR_LSB 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_CRC_ERR_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_CRC_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_CRC_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_CRC_ERR_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_CRC_ERR_FIELD_MASK 0x0002u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_CRC_ERR_GET(x) \
   (((x) & 0x0002u) >> 1)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_CRC_ERR_SET(x) \
   (((x) << 1) & 0x0002u)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_CRC_ERR_MODIFY(r, x) \
   ((((x) << 1) & 0x0002u) | ((r) & 0xfffdu))
/* Field member: emmc::crypto::ERROR_INT_STAT_R.CMD_TOUT_ERR               */
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_TOUT_ERR_MSB 0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_TOUT_ERR_LSB 0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_TOUT_ERR_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_TOUT_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_TOUT_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_TOUT_ERR_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_TOUT_ERR_FIELD_MASK 0x0001u
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_TOUT_ERR_GET(x) ((x) & 0x0001u)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_TOUT_ERR_SET(x) ((x) & 0x0001u)
#define EMMC_CRYPTO_ERROR_INT_STAT_R_CMD_TOUT_ERR_MODIFY(r, x) \
   (((x) & 0x0001u) | ((r) & 0xfffeu))

/* Register type: emmc::crypto::NORMAL_INT_STAT_EN_R                       */
/* Register template: emmc::crypto::NORMAL_INT_STAT_EN_R                   */
/* Field member: emmc::crypto::NORMAL_INT_STAT_EN_R.RSVD_15                */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RSVD_15_MSB 15u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RSVD_15_LSB 15u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RSVD_15_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RSVD_15_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RSVD_15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RSVD_15_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RSVD_15_FIELD_MASK 0x8000u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RSVD_15_GET(x) \
   (((x) & 0x8000u) >> 15)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RSVD_15_SET(x) \
   (((x) << 15) & 0x8000u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RSVD_15_MODIFY(r, x) \
   ((((x) << 15) & 0x8000u) | ((r) & 0x7fffu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_EN_R.CQE_EVENT_STAT_EN      */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CQE_EVENT_STAT_EN_MSB 14u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CQE_EVENT_STAT_EN_LSB 14u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CQE_EVENT_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CQE_EVENT_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CQE_EVENT_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CQE_EVENT_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CQE_EVENT_STAT_EN_FIELD_MASK 0x4000u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CQE_EVENT_STAT_EN_GET(x) \
   (((x) & 0x4000u) >> 14)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CQE_EVENT_STAT_EN_SET(x) \
   (((x) << 14) & 0x4000u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CQE_EVENT_STAT_EN_MODIFY(r, x) \
   ((((x) << 14) & 0x4000u) | ((r) & 0xbfffu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_EN_R.FX_EVENT_STAT_EN       */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_FX_EVENT_STAT_EN_MSB 13u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_FX_EVENT_STAT_EN_LSB 13u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_FX_EVENT_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_FX_EVENT_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_FX_EVENT_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_FX_EVENT_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_FX_EVENT_STAT_EN_FIELD_MASK 0x2000u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_FX_EVENT_STAT_EN_GET(x) \
   (((x) & 0x2000u) >> 13)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_FX_EVENT_STAT_EN_SET(x) \
   (((x) << 13) & 0x2000u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_FX_EVENT_STAT_EN_MODIFY(r, x) \
   ((((x) << 13) & 0x2000u) | ((r) & 0xdfffu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_EN_R.RE_TUNE_EVENT_STAT_EN  */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RE_TUNE_EVENT_STAT_EN_MSB 12u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RE_TUNE_EVENT_STAT_EN_LSB 12u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RE_TUNE_EVENT_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RE_TUNE_EVENT_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RE_TUNE_EVENT_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RE_TUNE_EVENT_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RE_TUNE_EVENT_STAT_EN_FIELD_MASK 0x1000u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RE_TUNE_EVENT_STAT_EN_GET(x) \
   (((x) & 0x1000u) >> 12)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RE_TUNE_EVENT_STAT_EN_SET(x) \
   (((x) << 12) & 0x1000u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_RE_TUNE_EVENT_STAT_EN_MODIFY(r, x) \
   ((((x) << 12) & 0x1000u) | ((r) & 0xefffu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_EN_R.INT_C_STAT_EN          */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_C_STAT_EN_MSB 11u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_C_STAT_EN_LSB 11u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_C_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_C_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_C_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_C_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_C_STAT_EN_FIELD_MASK 0x0800u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_C_STAT_EN_GET(x) \
   (((x) & 0x0800u) >> 11)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_C_STAT_EN_SET(x) \
   (((x) << 11) & 0x0800u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_C_STAT_EN_MODIFY(r, x) \
   ((((x) << 11) & 0x0800u) | ((r) & 0xf7ffu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_EN_R.INT_B_STAT_EN          */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_B_STAT_EN_MSB 10u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_B_STAT_EN_LSB 10u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_B_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_B_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_B_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_B_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_B_STAT_EN_FIELD_MASK 0x0400u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_B_STAT_EN_GET(x) \
   (((x) & 0x0400u) >> 10)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_B_STAT_EN_SET(x) \
   (((x) << 10) & 0x0400u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_B_STAT_EN_MODIFY(r, x) \
   ((((x) << 10) & 0x0400u) | ((r) & 0xfbffu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_EN_R.INT_A_STAT_EN          */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_A_STAT_EN_MSB 9u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_A_STAT_EN_LSB 9u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_A_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_A_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_A_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_A_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_A_STAT_EN_FIELD_MASK 0x0200u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_A_STAT_EN_GET(x) \
   (((x) & 0x0200u) >> 9)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_A_STAT_EN_SET(x) \
   (((x) << 9) & 0x0200u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_INT_A_STAT_EN_MODIFY(r, x) \
   ((((x) << 9) & 0x0200u) | ((r) & 0xfdffu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_EN_R.CARD_INTERRUPT_STAT_EN */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INTERRUPT_STAT_EN_MSB 8u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INTERRUPT_STAT_EN_LSB 8u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INTERRUPT_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INTERRUPT_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INTERRUPT_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INTERRUPT_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INTERRUPT_STAT_EN_FIELD_MASK 0x0100u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INTERRUPT_STAT_EN_GET(x) \
   (((x) & 0x0100u) >> 8)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INTERRUPT_STAT_EN_SET(x) \
   (((x) << 8) & 0x0100u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INTERRUPT_STAT_EN_MODIFY(r, x) \
   ((((x) << 8) & 0x0100u) | ((r) & 0xfeffu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_EN_R.CARD_REMOVAL_STAT_EN   */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_REMOVAL_STAT_EN_MSB 7u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_REMOVAL_STAT_EN_LSB 7u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_REMOVAL_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_REMOVAL_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_REMOVAL_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_REMOVAL_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_REMOVAL_STAT_EN_FIELD_MASK 0x0080u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_REMOVAL_STAT_EN_GET(x) \
   (((x) & 0x0080u) >> 7)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_REMOVAL_STAT_EN_SET(x) \
   (((x) << 7) & 0x0080u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_REMOVAL_STAT_EN_MODIFY(r, x) \
   ((((x) << 7) & 0x0080u) | ((r) & 0xff7fu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_EN_R.CARD_INSERTION_STAT_EN */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INSERTION_STAT_EN_MSB 6u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INSERTION_STAT_EN_LSB 6u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INSERTION_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INSERTION_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INSERTION_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INSERTION_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INSERTION_STAT_EN_FIELD_MASK 0x0040u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INSERTION_STAT_EN_GET(x) \
   (((x) & 0x0040u) >> 6)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INSERTION_STAT_EN_SET(x) \
   (((x) << 6) & 0x0040u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CARD_INSERTION_STAT_EN_MODIFY(r, x) \
   ((((x) << 6) & 0x0040u) | ((r) & 0xffbfu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_EN_R.BUF_RD_READY_STAT_EN   */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_RD_READY_STAT_EN_MSB 5u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_RD_READY_STAT_EN_LSB 5u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_RD_READY_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_RD_READY_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_RD_READY_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_RD_READY_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_RD_READY_STAT_EN_FIELD_MASK 0x0020u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_RD_READY_STAT_EN_GET(x) \
   (((x) & 0x0020u) >> 5)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_RD_READY_STAT_EN_SET(x) \
   (((x) << 5) & 0x0020u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_RD_READY_STAT_EN_MODIFY(r, x) \
   ((((x) << 5) & 0x0020u) | ((r) & 0xffdfu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_EN_R.BUF_WR_READY_STAT_EN   */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_WR_READY_STAT_EN_MSB 4u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_WR_READY_STAT_EN_LSB 4u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_WR_READY_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_WR_READY_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_WR_READY_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_WR_READY_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_WR_READY_STAT_EN_FIELD_MASK 0x0010u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_WR_READY_STAT_EN_GET(x) \
   (((x) & 0x0010u) >> 4)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_WR_READY_STAT_EN_SET(x) \
   (((x) << 4) & 0x0010u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BUF_WR_READY_STAT_EN_MODIFY(r, x) \
   ((((x) << 4) & 0x0010u) | ((r) & 0xffefu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_EN_R.DMA_INTERRUPT_STAT_EN  */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_DMA_INTERRUPT_STAT_EN_MSB 3u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_DMA_INTERRUPT_STAT_EN_LSB 3u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_DMA_INTERRUPT_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_DMA_INTERRUPT_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_DMA_INTERRUPT_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_DMA_INTERRUPT_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_DMA_INTERRUPT_STAT_EN_FIELD_MASK 0x0008u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_DMA_INTERRUPT_STAT_EN_GET(x) \
   (((x) & 0x0008u) >> 3)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_DMA_INTERRUPT_STAT_EN_SET(x) \
   (((x) << 3) & 0x0008u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_DMA_INTERRUPT_STAT_EN_MODIFY(r, x) \
   ((((x) << 3) & 0x0008u) | ((r) & 0xfff7u))
/* Field member: emmc::crypto::NORMAL_INT_STAT_EN_R.BGAP_EVENT_STAT_EN     */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BGAP_EVENT_STAT_EN_MSB 2u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BGAP_EVENT_STAT_EN_LSB 2u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BGAP_EVENT_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BGAP_EVENT_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BGAP_EVENT_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BGAP_EVENT_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BGAP_EVENT_STAT_EN_FIELD_MASK 0x0004u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BGAP_EVENT_STAT_EN_GET(x) \
   (((x) & 0x0004u) >> 2)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BGAP_EVENT_STAT_EN_SET(x) \
   (((x) << 2) & 0x0004u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_BGAP_EVENT_STAT_EN_MODIFY(r, x) \
   ((((x) << 2) & 0x0004u) | ((r) & 0xfffbu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_EN_R.XFER_COMPLETE_STAT_EN  */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_XFER_COMPLETE_STAT_EN_MSB 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_XFER_COMPLETE_STAT_EN_LSB 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_XFER_COMPLETE_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_XFER_COMPLETE_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_XFER_COMPLETE_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_XFER_COMPLETE_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_XFER_COMPLETE_STAT_EN_FIELD_MASK 0x0002u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_XFER_COMPLETE_STAT_EN_GET(x) \
   (((x) & 0x0002u) >> 1)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_XFER_COMPLETE_STAT_EN_SET(x) \
   (((x) << 1) & 0x0002u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_XFER_COMPLETE_STAT_EN_MODIFY(r, x) \
   ((((x) << 1) & 0x0002u) | ((r) & 0xfffdu))
/* Field member: emmc::crypto::NORMAL_INT_STAT_EN_R.CMD_COMPLETE_STAT_EN   */
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CMD_COMPLETE_STAT_EN_MSB 0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CMD_COMPLETE_STAT_EN_LSB 0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CMD_COMPLETE_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CMD_COMPLETE_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CMD_COMPLETE_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CMD_COMPLETE_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CMD_COMPLETE_STAT_EN_FIELD_MASK 0x0001u
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CMD_COMPLETE_STAT_EN_GET(x) \
   ((x) & 0x0001u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CMD_COMPLETE_STAT_EN_SET(x) \
   ((x) & 0x0001u)
#define EMMC_CRYPTO_NORMAL_INT_STAT_EN_R_CMD_COMPLETE_STAT_EN_MODIFY(r, x) \
   (((x) & 0x0001u) | ((r) & 0xfffeu))

/* Register type: emmc::crypto::ERROR_INT_STAT_EN_R                        */
/* Register template: emmc::crypto::ERROR_INT_STAT_EN_R                    */
/* Field member: emmc::crypto::ERROR_INT_STAT_EN_R.VENDOR_ERR_STAT_EN3     */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN3_MSB 15u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN3_LSB 15u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN3_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN3_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN3_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN3_FIELD_MASK 0x8000u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN3_GET(x) \
   (((x) & 0x8000u) >> 15)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN3_SET(x) \
   (((x) << 15) & 0x8000u)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN3_MODIFY(r, x) \
   ((((x) << 15) & 0x8000u) | ((r) & 0x7fffu))
/* Field member: emmc::crypto::ERROR_INT_STAT_EN_R.VENDOR_ERR_STAT_EN2     */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN2_MSB 14u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN2_LSB 14u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN2_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN2_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN2_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN2_FIELD_MASK 0x4000u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN2_GET(x) \
   (((x) & 0x4000u) >> 14)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN2_SET(x) \
   (((x) << 14) & 0x4000u)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN2_MODIFY(r, x) \
   ((((x) << 14) & 0x4000u) | ((r) & 0xbfffu))
/* Field member: emmc::crypto::ERROR_INT_STAT_EN_R.VENDOR_ERR_STAT_EN1     */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN1_MSB 13u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN1_LSB 13u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN1_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN1_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN1_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN1_FIELD_MASK 0x2000u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN1_GET(x) \
   (((x) & 0x2000u) >> 13)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN1_SET(x) \
   (((x) << 13) & 0x2000u)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_VENDOR_ERR_STAT_EN1_MODIFY(r, x) \
   ((((x) << 13) & 0x2000u) | ((r) & 0xdfffu))
/* Field member: emmc::crypto::ERROR_INT_STAT_EN_R.BOOT_ACK_ERR_STAT_EN    */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_BOOT_ACK_ERR_STAT_EN_MSB 12u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_BOOT_ACK_ERR_STAT_EN_LSB 12u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_BOOT_ACK_ERR_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_BOOT_ACK_ERR_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_BOOT_ACK_ERR_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_BOOT_ACK_ERR_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_BOOT_ACK_ERR_STAT_EN_FIELD_MASK 0x1000u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_BOOT_ACK_ERR_STAT_EN_GET(x) \
   (((x) & 0x1000u) >> 12)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_BOOT_ACK_ERR_STAT_EN_SET(x) \
   (((x) << 12) & 0x1000u)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_BOOT_ACK_ERR_STAT_EN_MODIFY(r, x) \
   ((((x) << 12) & 0x1000u) | ((r) & 0xefffu))
/* Field member: emmc::crypto::ERROR_INT_STAT_EN_R.RESP_ERR_STAT_EN        */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_RESP_ERR_STAT_EN_MSB 11u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_RESP_ERR_STAT_EN_LSB 11u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_RESP_ERR_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_RESP_ERR_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_RESP_ERR_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_RESP_ERR_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_RESP_ERR_STAT_EN_FIELD_MASK 0x0800u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_RESP_ERR_STAT_EN_GET(x) \
   (((x) & 0x0800u) >> 11)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_RESP_ERR_STAT_EN_SET(x) \
   (((x) << 11) & 0x0800u)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_RESP_ERR_STAT_EN_MODIFY(r, x) \
   ((((x) << 11) & 0x0800u) | ((r) & 0xf7ffu))
/* Field member: emmc::crypto::ERROR_INT_STAT_EN_R.TUNING_ERR_STAT_EN      */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_TUNING_ERR_STAT_EN_MSB 10u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_TUNING_ERR_STAT_EN_LSB 10u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_TUNING_ERR_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_TUNING_ERR_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_TUNING_ERR_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_TUNING_ERR_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_TUNING_ERR_STAT_EN_FIELD_MASK 0x0400u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_TUNING_ERR_STAT_EN_GET(x) \
   (((x) & 0x0400u) >> 10)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_TUNING_ERR_STAT_EN_SET(x) \
   (((x) << 10) & 0x0400u)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_TUNING_ERR_STAT_EN_MODIFY(r, x) \
   ((((x) << 10) & 0x0400u) | ((r) & 0xfbffu))
/* Field member: emmc::crypto::ERROR_INT_STAT_EN_R.ADMA_ERR_STAT_EN        */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_ADMA_ERR_STAT_EN_MSB 9u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_ADMA_ERR_STAT_EN_LSB 9u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_ADMA_ERR_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_ADMA_ERR_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_ADMA_ERR_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_ADMA_ERR_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_ADMA_ERR_STAT_EN_FIELD_MASK 0x0200u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_ADMA_ERR_STAT_EN_GET(x) \
   (((x) & 0x0200u) >> 9)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_ADMA_ERR_STAT_EN_SET(x) \
   (((x) << 9) & 0x0200u)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_ADMA_ERR_STAT_EN_MODIFY(r, x) \
   ((((x) << 9) & 0x0200u) | ((r) & 0xfdffu))
/* Field member: emmc::crypto::ERROR_INT_STAT_EN_R.AUTO_CMD_ERR_STAT_EN    */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_AUTO_CMD_ERR_STAT_EN_MSB 8u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_AUTO_CMD_ERR_STAT_EN_LSB 8u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_AUTO_CMD_ERR_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_AUTO_CMD_ERR_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_AUTO_CMD_ERR_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_AUTO_CMD_ERR_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_AUTO_CMD_ERR_STAT_EN_FIELD_MASK 0x0100u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_AUTO_CMD_ERR_STAT_EN_GET(x) \
   (((x) & 0x0100u) >> 8)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_AUTO_CMD_ERR_STAT_EN_SET(x) \
   (((x) << 8) & 0x0100u)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_AUTO_CMD_ERR_STAT_EN_MODIFY(r, x) \
   ((((x) << 8) & 0x0100u) | ((r) & 0xfeffu))
/* Field member: emmc::crypto::ERROR_INT_STAT_EN_R.CUR_LMT_ERR_STAT_EN     */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CUR_LMT_ERR_STAT_EN_MSB 7u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CUR_LMT_ERR_STAT_EN_LSB 7u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CUR_LMT_ERR_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CUR_LMT_ERR_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CUR_LMT_ERR_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CUR_LMT_ERR_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CUR_LMT_ERR_STAT_EN_FIELD_MASK 0x0080u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CUR_LMT_ERR_STAT_EN_GET(x) \
   (((x) & 0x0080u) >> 7)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CUR_LMT_ERR_STAT_EN_SET(x) \
   (((x) << 7) & 0x0080u)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CUR_LMT_ERR_STAT_EN_MODIFY(r, x) \
   ((((x) << 7) & 0x0080u) | ((r) & 0xff7fu))
/* Field member: emmc::crypto::ERROR_INT_STAT_EN_R.DATA_END_BIT_ERR_STAT_EN */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_END_BIT_ERR_STAT_EN_MSB 6u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_END_BIT_ERR_STAT_EN_LSB 6u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_END_BIT_ERR_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_END_BIT_ERR_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_END_BIT_ERR_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_END_BIT_ERR_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_END_BIT_ERR_STAT_EN_FIELD_MASK 0x0040u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_END_BIT_ERR_STAT_EN_GET(x) \
   (((x) & 0x0040u) >> 6)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_END_BIT_ERR_STAT_EN_SET(x) \
   (((x) << 6) & 0x0040u)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_END_BIT_ERR_STAT_EN_MODIFY(r, x) \
   ((((x) << 6) & 0x0040u) | ((r) & 0xffbfu))
/* Field member: emmc::crypto::ERROR_INT_STAT_EN_R.DATA_CRC_ERR_STAT_EN    */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_CRC_ERR_STAT_EN_MSB 5u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_CRC_ERR_STAT_EN_LSB 5u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_CRC_ERR_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_CRC_ERR_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_CRC_ERR_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_CRC_ERR_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_CRC_ERR_STAT_EN_FIELD_MASK 0x0020u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_CRC_ERR_STAT_EN_GET(x) \
   (((x) & 0x0020u) >> 5)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_CRC_ERR_STAT_EN_SET(x) \
   (((x) << 5) & 0x0020u)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_CRC_ERR_STAT_EN_MODIFY(r, x) \
   ((((x) << 5) & 0x0020u) | ((r) & 0xffdfu))
/* Field member: emmc::crypto::ERROR_INT_STAT_EN_R.DATA_TOUT_ERR_STAT_EN   */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_TOUT_ERR_STAT_EN_MSB 4u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_TOUT_ERR_STAT_EN_LSB 4u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_TOUT_ERR_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_TOUT_ERR_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_TOUT_ERR_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_TOUT_ERR_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_TOUT_ERR_STAT_EN_FIELD_MASK 0x0010u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_TOUT_ERR_STAT_EN_GET(x) \
   (((x) & 0x0010u) >> 4)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_TOUT_ERR_STAT_EN_SET(x) \
   (((x) << 4) & 0x0010u)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_DATA_TOUT_ERR_STAT_EN_MODIFY(r, x) \
   ((((x) << 4) & 0x0010u) | ((r) & 0xffefu))
/* Field member: emmc::crypto::ERROR_INT_STAT_EN_R.CMD_IDX_ERR_STAT_EN     */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_IDX_ERR_STAT_EN_MSB 3u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_IDX_ERR_STAT_EN_LSB 3u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_IDX_ERR_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_IDX_ERR_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_IDX_ERR_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_IDX_ERR_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_IDX_ERR_STAT_EN_FIELD_MASK 0x0008u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_IDX_ERR_STAT_EN_GET(x) \
   (((x) & 0x0008u) >> 3)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_IDX_ERR_STAT_EN_SET(x) \
   (((x) << 3) & 0x0008u)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_IDX_ERR_STAT_EN_MODIFY(r, x) \
   ((((x) << 3) & 0x0008u) | ((r) & 0xfff7u))
/* Field member: emmc::crypto::ERROR_INT_STAT_EN_R.CMD_END_BIT_ERR_STAT_EN */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_END_BIT_ERR_STAT_EN_MSB 2u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_END_BIT_ERR_STAT_EN_LSB 2u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_END_BIT_ERR_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_END_BIT_ERR_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_END_BIT_ERR_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_END_BIT_ERR_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_END_BIT_ERR_STAT_EN_FIELD_MASK 0x0004u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_END_BIT_ERR_STAT_EN_GET(x) \
   (((x) & 0x0004u) >> 2)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_END_BIT_ERR_STAT_EN_SET(x) \
   (((x) << 2) & 0x0004u)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_END_BIT_ERR_STAT_EN_MODIFY(r, x) \
   ((((x) << 2) & 0x0004u) | ((r) & 0xfffbu))
/* Field member: emmc::crypto::ERROR_INT_STAT_EN_R.CMD_CRC_ERR_STAT_EN     */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_CRC_ERR_STAT_EN_MSB 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_CRC_ERR_STAT_EN_LSB 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_CRC_ERR_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_CRC_ERR_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_CRC_ERR_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_CRC_ERR_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_CRC_ERR_STAT_EN_FIELD_MASK 0x0002u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_CRC_ERR_STAT_EN_GET(x) \
   (((x) & 0x0002u) >> 1)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_CRC_ERR_STAT_EN_SET(x) \
   (((x) << 1) & 0x0002u)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_CRC_ERR_STAT_EN_MODIFY(r, x) \
   ((((x) << 1) & 0x0002u) | ((r) & 0xfffdu))
/* Field member: emmc::crypto::ERROR_INT_STAT_EN_R.CMD_TOUT_ERR_STAT_EN    */
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_TOUT_ERR_STAT_EN_MSB 0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_TOUT_ERR_STAT_EN_LSB 0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_TOUT_ERR_STAT_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_TOUT_ERR_STAT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_TOUT_ERR_STAT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_TOUT_ERR_STAT_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_TOUT_ERR_STAT_EN_FIELD_MASK 0x0001u
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_TOUT_ERR_STAT_EN_GET(x) \
   ((x) & 0x0001u)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_TOUT_ERR_STAT_EN_SET(x) \
   ((x) & 0x0001u)
#define EMMC_CRYPTO_ERROR_INT_STAT_EN_R_CMD_TOUT_ERR_STAT_EN_MODIFY(r, x) \
   (((x) & 0x0001u) | ((r) & 0xfffeu))

/* Register type: emmc::crypto::NORMAL_INT_SIGNAL_EN_R                     */
/* Register template: emmc::crypto::NORMAL_INT_SIGNAL_EN_R                 */
/* Field member: emmc::crypto::NORMAL_INT_SIGNAL_EN_R.RSVD_15              */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RSVD_15_MSB 15u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RSVD_15_LSB 15u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RSVD_15_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RSVD_15_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RSVD_15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RSVD_15_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RSVD_15_FIELD_MASK 0x8000u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RSVD_15_GET(x) \
   (((x) & 0x8000u) >> 15)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RSVD_15_SET(x) \
   (((x) << 15) & 0x8000u)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RSVD_15_MODIFY(r, x) \
   ((((x) << 15) & 0x8000u) | ((r) & 0x7fffu))
/* Field member: emmc::crypto::NORMAL_INT_SIGNAL_EN_R.CQE_EVENT_SIGNAL_EN  */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CQE_EVENT_SIGNAL_EN_MSB 14u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CQE_EVENT_SIGNAL_EN_LSB 14u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CQE_EVENT_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CQE_EVENT_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CQE_EVENT_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CQE_EVENT_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CQE_EVENT_SIGNAL_EN_FIELD_MASK 0x4000u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CQE_EVENT_SIGNAL_EN_GET(x) \
   (((x) & 0x4000u) >> 14)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CQE_EVENT_SIGNAL_EN_SET(x) \
   (((x) << 14) & 0x4000u)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CQE_EVENT_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 14) & 0x4000u) | ((r) & 0xbfffu))
/* Field member: emmc::crypto::NORMAL_INT_SIGNAL_EN_R.FX_EVENT_SIGNAL_EN   */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_FX_EVENT_SIGNAL_EN_MSB 13u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_FX_EVENT_SIGNAL_EN_LSB 13u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_FX_EVENT_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_FX_EVENT_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_FX_EVENT_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_FX_EVENT_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_FX_EVENT_SIGNAL_EN_FIELD_MASK 0x2000u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_FX_EVENT_SIGNAL_EN_GET(x) \
   (((x) & 0x2000u) >> 13)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_FX_EVENT_SIGNAL_EN_SET(x) \
   (((x) << 13) & 0x2000u)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_FX_EVENT_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 13) & 0x2000u) | ((r) & 0xdfffu))
/* Field member: emmc::crypto::NORMAL_INT_SIGNAL_EN_R.RE_TUNE_EVENT_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RE_TUNE_EVENT_SIGNAL_EN_MSB 12u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RE_TUNE_EVENT_SIGNAL_EN_LSB 12u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RE_TUNE_EVENT_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RE_TUNE_EVENT_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RE_TUNE_EVENT_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RE_TUNE_EVENT_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RE_TUNE_EVENT_SIGNAL_EN_FIELD_MASK 0x1000u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RE_TUNE_EVENT_SIGNAL_EN_GET(x) \
   (((x) & 0x1000u) >> 12)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RE_TUNE_EVENT_SIGNAL_EN_SET(x) \
   (((x) << 12) & 0x1000u)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_RE_TUNE_EVENT_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 12) & 0x1000u) | ((r) & 0xefffu))
/* Field member: emmc::crypto::NORMAL_INT_SIGNAL_EN_R.INT_C_SIGNAL_EN      */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_C_SIGNAL_EN_MSB 11u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_C_SIGNAL_EN_LSB 11u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_C_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_C_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_C_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_C_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_C_SIGNAL_EN_FIELD_MASK 0x0800u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_C_SIGNAL_EN_GET(x) \
   (((x) & 0x0800u) >> 11)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_C_SIGNAL_EN_SET(x) \
   (((x) << 11) & 0x0800u)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_C_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 11) & 0x0800u) | ((r) & 0xf7ffu))
/* Field member: emmc::crypto::NORMAL_INT_SIGNAL_EN_R.INT_B_SIGNAL_EN      */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_B_SIGNAL_EN_MSB 10u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_B_SIGNAL_EN_LSB 10u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_B_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_B_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_B_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_B_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_B_SIGNAL_EN_FIELD_MASK 0x0400u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_B_SIGNAL_EN_GET(x) \
   (((x) & 0x0400u) >> 10)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_B_SIGNAL_EN_SET(x) \
   (((x) << 10) & 0x0400u)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_B_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 10) & 0x0400u) | ((r) & 0xfbffu))
/* Field member: emmc::crypto::NORMAL_INT_SIGNAL_EN_R.INT_A_SIGNAL_EN      */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_A_SIGNAL_EN_MSB 9u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_A_SIGNAL_EN_LSB 9u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_A_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_A_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_A_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_A_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_A_SIGNAL_EN_FIELD_MASK 0x0200u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_A_SIGNAL_EN_GET(x) \
   (((x) & 0x0200u) >> 9)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_A_SIGNAL_EN_SET(x) \
   (((x) << 9) & 0x0200u)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_INT_A_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 9) & 0x0200u) | ((r) & 0xfdffu))
/* Field member: emmc::crypto::NORMAL_INT_SIGNAL_EN_R.CARD_INTERRUPT_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INTERRUPT_SIGNAL_EN_MSB 8u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INTERRUPT_SIGNAL_EN_LSB 8u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INTERRUPT_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INTERRUPT_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INTERRUPT_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INTERRUPT_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INTERRUPT_SIGNAL_EN_FIELD_MASK 0x0100u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INTERRUPT_SIGNAL_EN_GET(x) \
   (((x) & 0x0100u) >> 8)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INTERRUPT_SIGNAL_EN_SET(x) \
   (((x) << 8) & 0x0100u)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INTERRUPT_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 8) & 0x0100u) | ((r) & 0xfeffu))
/* Field member: emmc::crypto::NORMAL_INT_SIGNAL_EN_R.CARD_REMOVAL_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_REMOVAL_SIGNAL_EN_MSB 7u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_REMOVAL_SIGNAL_EN_LSB 7u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_REMOVAL_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_REMOVAL_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_REMOVAL_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_REMOVAL_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_REMOVAL_SIGNAL_EN_FIELD_MASK 0x0080u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_REMOVAL_SIGNAL_EN_GET(x) \
   (((x) & 0x0080u) >> 7)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_REMOVAL_SIGNAL_EN_SET(x) \
   (((x) << 7) & 0x0080u)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_REMOVAL_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 7) & 0x0080u) | ((r) & 0xff7fu))
/* Field member: emmc::crypto::NORMAL_INT_SIGNAL_EN_R.CARD_INSERTION_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INSERTION_SIGNAL_EN_MSB 6u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INSERTION_SIGNAL_EN_LSB 6u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INSERTION_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INSERTION_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INSERTION_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INSERTION_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INSERTION_SIGNAL_EN_FIELD_MASK 0x0040u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INSERTION_SIGNAL_EN_GET(x) \
   (((x) & 0x0040u) >> 6)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INSERTION_SIGNAL_EN_SET(x) \
   (((x) << 6) & 0x0040u)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CARD_INSERTION_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 6) & 0x0040u) | ((r) & 0xffbfu))
/* Field member: emmc::crypto::NORMAL_INT_SIGNAL_EN_R.BUF_RD_READY_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_RD_READY_SIGNAL_EN_MSB 5u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_RD_READY_SIGNAL_EN_LSB 5u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_RD_READY_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_RD_READY_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_RD_READY_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_RD_READY_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_RD_READY_SIGNAL_EN_FIELD_MASK 0x0020u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_RD_READY_SIGNAL_EN_GET(x) \
   (((x) & 0x0020u) >> 5)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_RD_READY_SIGNAL_EN_SET(x) \
   (((x) << 5) & 0x0020u)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_RD_READY_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 5) & 0x0020u) | ((r) & 0xffdfu))
/* Field member: emmc::crypto::NORMAL_INT_SIGNAL_EN_R.BUF_WR_READY_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_WR_READY_SIGNAL_EN_MSB 4u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_WR_READY_SIGNAL_EN_LSB 4u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_WR_READY_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_WR_READY_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_WR_READY_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_WR_READY_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_WR_READY_SIGNAL_EN_FIELD_MASK 0x0010u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_WR_READY_SIGNAL_EN_GET(x) \
   (((x) & 0x0010u) >> 4)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_WR_READY_SIGNAL_EN_SET(x) \
   (((x) << 4) & 0x0010u)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BUF_WR_READY_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 4) & 0x0010u) | ((r) & 0xffefu))
/* Field member: emmc::crypto::NORMAL_INT_SIGNAL_EN_R.DMA_INTERRUPT_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_DMA_INTERRUPT_SIGNAL_EN_MSB 3u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_DMA_INTERRUPT_SIGNAL_EN_LSB 3u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_DMA_INTERRUPT_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_DMA_INTERRUPT_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_DMA_INTERRUPT_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_DMA_INTERRUPT_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_DMA_INTERRUPT_SIGNAL_EN_FIELD_MASK 0x0008u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_DMA_INTERRUPT_SIGNAL_EN_GET(x) \
   (((x) & 0x0008u) >> 3)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_DMA_INTERRUPT_SIGNAL_EN_SET(x) \
   (((x) << 3) & 0x0008u)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_DMA_INTERRUPT_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 3) & 0x0008u) | ((r) & 0xfff7u))
/* Field member: emmc::crypto::NORMAL_INT_SIGNAL_EN_R.BGAP_EVENT_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BGAP_EVENT_SIGNAL_EN_MSB 2u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BGAP_EVENT_SIGNAL_EN_LSB 2u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BGAP_EVENT_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BGAP_EVENT_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BGAP_EVENT_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BGAP_EVENT_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BGAP_EVENT_SIGNAL_EN_FIELD_MASK 0x0004u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BGAP_EVENT_SIGNAL_EN_GET(x) \
   (((x) & 0x0004u) >> 2)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BGAP_EVENT_SIGNAL_EN_SET(x) \
   (((x) << 2) & 0x0004u)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_BGAP_EVENT_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 2) & 0x0004u) | ((r) & 0xfffbu))
/* Field member: emmc::crypto::NORMAL_INT_SIGNAL_EN_R.XFER_COMPLETE_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_XFER_COMPLETE_SIGNAL_EN_MSB 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_XFER_COMPLETE_SIGNAL_EN_LSB 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_XFER_COMPLETE_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_XFER_COMPLETE_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_XFER_COMPLETE_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_XFER_COMPLETE_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_XFER_COMPLETE_SIGNAL_EN_FIELD_MASK 0x0002u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_XFER_COMPLETE_SIGNAL_EN_GET(x) \
   (((x) & 0x0002u) >> 1)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_XFER_COMPLETE_SIGNAL_EN_SET(x) \
   (((x) << 1) & 0x0002u)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_XFER_COMPLETE_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 1) & 0x0002u) | ((r) & 0xfffdu))
/* Field member: emmc::crypto::NORMAL_INT_SIGNAL_EN_R.CMD_COMPLETE_SIGNAL_EN */
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CMD_COMPLETE_SIGNAL_EN_MSB 0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CMD_COMPLETE_SIGNAL_EN_LSB 0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CMD_COMPLETE_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CMD_COMPLETE_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CMD_COMPLETE_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CMD_COMPLETE_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CMD_COMPLETE_SIGNAL_EN_FIELD_MASK 0x0001u
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CMD_COMPLETE_SIGNAL_EN_GET(x) \
   ((x) & 0x0001u)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CMD_COMPLETE_SIGNAL_EN_SET(x) \
   ((x) & 0x0001u)
#define EMMC_CRYPTO_NORMAL_INT_SIGNAL_EN_R_CMD_COMPLETE_SIGNAL_EN_MODIFY(r, x) \
   (((x) & 0x0001u) | ((r) & 0xfffeu))

/* Register type: emmc::crypto::ERROR_INT_SIGNAL_EN_R                      */
/* Register template: emmc::crypto::ERROR_INT_SIGNAL_EN_R                  */
/* Field member: emmc::crypto::ERROR_INT_SIGNAL_EN_R.VENDOR_ERR_SIGNAL_EN3 */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN3_MSB 15u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN3_LSB 15u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN3_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN3_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN3_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN3_FIELD_MASK 0x8000u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN3_GET(x) \
   (((x) & 0x8000u) >> 15)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN3_SET(x) \
   (((x) << 15) & 0x8000u)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN3_MODIFY(r, x) \
   ((((x) << 15) & 0x8000u) | ((r) & 0x7fffu))
/* Field member: emmc::crypto::ERROR_INT_SIGNAL_EN_R.VENDOR_ERR_SIGNAL_EN2 */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN2_MSB 14u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN2_LSB 14u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN2_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN2_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN2_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN2_FIELD_MASK 0x4000u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN2_GET(x) \
   (((x) & 0x4000u) >> 14)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN2_SET(x) \
   (((x) << 14) & 0x4000u)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN2_MODIFY(r, x) \
   ((((x) << 14) & 0x4000u) | ((r) & 0xbfffu))
/* Field member: emmc::crypto::ERROR_INT_SIGNAL_EN_R.VENDOR_ERR_SIGNAL_EN1 */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN1_MSB 13u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN1_LSB 13u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN1_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN1_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN1_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN1_FIELD_MASK 0x2000u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN1_GET(x) \
   (((x) & 0x2000u) >> 13)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN1_SET(x) \
   (((x) << 13) & 0x2000u)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_VENDOR_ERR_SIGNAL_EN1_MODIFY(r, x) \
   ((((x) << 13) & 0x2000u) | ((r) & 0xdfffu))
/* Field member: emmc::crypto::ERROR_INT_SIGNAL_EN_R.BOOT_ACK_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_BOOT_ACK_ERR_SIGNAL_EN_MSB 12u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_BOOT_ACK_ERR_SIGNAL_EN_LSB 12u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_BOOT_ACK_ERR_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_BOOT_ACK_ERR_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_BOOT_ACK_ERR_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_BOOT_ACK_ERR_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_BOOT_ACK_ERR_SIGNAL_EN_FIELD_MASK 0x1000u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_BOOT_ACK_ERR_SIGNAL_EN_GET(x) \
   (((x) & 0x1000u) >> 12)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_BOOT_ACK_ERR_SIGNAL_EN_SET(x) \
   (((x) << 12) & 0x1000u)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_BOOT_ACK_ERR_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 12) & 0x1000u) | ((r) & 0xefffu))
/* Field member: emmc::crypto::ERROR_INT_SIGNAL_EN_R.RESP_ERR_SIGNAL_EN    */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_RESP_ERR_SIGNAL_EN_MSB 11u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_RESP_ERR_SIGNAL_EN_LSB 11u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_RESP_ERR_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_RESP_ERR_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_RESP_ERR_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_RESP_ERR_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_RESP_ERR_SIGNAL_EN_FIELD_MASK 0x0800u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_RESP_ERR_SIGNAL_EN_GET(x) \
   (((x) & 0x0800u) >> 11)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_RESP_ERR_SIGNAL_EN_SET(x) \
   (((x) << 11) & 0x0800u)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_RESP_ERR_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 11) & 0x0800u) | ((r) & 0xf7ffu))
/* Field member: emmc::crypto::ERROR_INT_SIGNAL_EN_R.TUNING_ERR_SIGNAL_EN  */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_TUNING_ERR_SIGNAL_EN_MSB 10u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_TUNING_ERR_SIGNAL_EN_LSB 10u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_TUNING_ERR_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_TUNING_ERR_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_TUNING_ERR_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_TUNING_ERR_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_TUNING_ERR_SIGNAL_EN_FIELD_MASK 0x0400u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_TUNING_ERR_SIGNAL_EN_GET(x) \
   (((x) & 0x0400u) >> 10)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_TUNING_ERR_SIGNAL_EN_SET(x) \
   (((x) << 10) & 0x0400u)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_TUNING_ERR_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 10) & 0x0400u) | ((r) & 0xfbffu))
/* Field member: emmc::crypto::ERROR_INT_SIGNAL_EN_R.ADMA_ERR_SIGNAL_EN    */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_ADMA_ERR_SIGNAL_EN_MSB 9u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_ADMA_ERR_SIGNAL_EN_LSB 9u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_ADMA_ERR_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_ADMA_ERR_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_ADMA_ERR_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_ADMA_ERR_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_ADMA_ERR_SIGNAL_EN_FIELD_MASK 0x0200u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_ADMA_ERR_SIGNAL_EN_GET(x) \
   (((x) & 0x0200u) >> 9)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_ADMA_ERR_SIGNAL_EN_SET(x) \
   (((x) << 9) & 0x0200u)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_ADMA_ERR_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 9) & 0x0200u) | ((r) & 0xfdffu))
/* Field member: emmc::crypto::ERROR_INT_SIGNAL_EN_R.AUTO_CMD_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_AUTO_CMD_ERR_SIGNAL_EN_MSB 8u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_AUTO_CMD_ERR_SIGNAL_EN_LSB 8u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_AUTO_CMD_ERR_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_AUTO_CMD_ERR_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_AUTO_CMD_ERR_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_AUTO_CMD_ERR_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_AUTO_CMD_ERR_SIGNAL_EN_FIELD_MASK 0x0100u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_AUTO_CMD_ERR_SIGNAL_EN_GET(x) \
   (((x) & 0x0100u) >> 8)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_AUTO_CMD_ERR_SIGNAL_EN_SET(x) \
   (((x) << 8) & 0x0100u)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_AUTO_CMD_ERR_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 8) & 0x0100u) | ((r) & 0xfeffu))
/* Field member: emmc::crypto::ERROR_INT_SIGNAL_EN_R.CUR_LMT_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CUR_LMT_ERR_SIGNAL_EN_MSB 7u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CUR_LMT_ERR_SIGNAL_EN_LSB 7u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CUR_LMT_ERR_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CUR_LMT_ERR_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CUR_LMT_ERR_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CUR_LMT_ERR_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CUR_LMT_ERR_SIGNAL_EN_FIELD_MASK 0x0080u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CUR_LMT_ERR_SIGNAL_EN_GET(x) \
   (((x) & 0x0080u) >> 7)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CUR_LMT_ERR_SIGNAL_EN_SET(x) \
   (((x) << 7) & 0x0080u)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CUR_LMT_ERR_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 7) & 0x0080u) | ((r) & 0xff7fu))
/* Field member: emmc::crypto::ERROR_INT_SIGNAL_EN_R.DATA_END_BIT_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_END_BIT_ERR_SIGNAL_EN_MSB 6u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_END_BIT_ERR_SIGNAL_EN_LSB 6u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_END_BIT_ERR_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_END_BIT_ERR_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_END_BIT_ERR_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_END_BIT_ERR_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_END_BIT_ERR_SIGNAL_EN_FIELD_MASK 0x0040u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_END_BIT_ERR_SIGNAL_EN_GET(x) \
   (((x) & 0x0040u) >> 6)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_END_BIT_ERR_SIGNAL_EN_SET(x) \
   (((x) << 6) & 0x0040u)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_END_BIT_ERR_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 6) & 0x0040u) | ((r) & 0xffbfu))
/* Field member: emmc::crypto::ERROR_INT_SIGNAL_EN_R.DATA_CRC_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_CRC_ERR_SIGNAL_EN_MSB 5u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_CRC_ERR_SIGNAL_EN_LSB 5u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_CRC_ERR_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_CRC_ERR_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_CRC_ERR_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_CRC_ERR_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_CRC_ERR_SIGNAL_EN_FIELD_MASK 0x0020u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_CRC_ERR_SIGNAL_EN_GET(x) \
   (((x) & 0x0020u) >> 5)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_CRC_ERR_SIGNAL_EN_SET(x) \
   (((x) << 5) & 0x0020u)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_CRC_ERR_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 5) & 0x0020u) | ((r) & 0xffdfu))
/* Field member: emmc::crypto::ERROR_INT_SIGNAL_EN_R.DATA_TOUT_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_TOUT_ERR_SIGNAL_EN_MSB 4u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_TOUT_ERR_SIGNAL_EN_LSB 4u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_TOUT_ERR_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_TOUT_ERR_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_TOUT_ERR_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_TOUT_ERR_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_TOUT_ERR_SIGNAL_EN_FIELD_MASK 0x0010u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_TOUT_ERR_SIGNAL_EN_GET(x) \
   (((x) & 0x0010u) >> 4)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_TOUT_ERR_SIGNAL_EN_SET(x) \
   (((x) << 4) & 0x0010u)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_DATA_TOUT_ERR_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 4) & 0x0010u) | ((r) & 0xffefu))
/* Field member: emmc::crypto::ERROR_INT_SIGNAL_EN_R.CMD_IDX_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_IDX_ERR_SIGNAL_EN_MSB 3u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_IDX_ERR_SIGNAL_EN_LSB 3u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_IDX_ERR_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_IDX_ERR_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_IDX_ERR_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_IDX_ERR_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_IDX_ERR_SIGNAL_EN_FIELD_MASK 0x0008u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_IDX_ERR_SIGNAL_EN_GET(x) \
   (((x) & 0x0008u) >> 3)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_IDX_ERR_SIGNAL_EN_SET(x) \
   (((x) << 3) & 0x0008u)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_IDX_ERR_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 3) & 0x0008u) | ((r) & 0xfff7u))
/* Field member: emmc::crypto::ERROR_INT_SIGNAL_EN_R.CMD_END_BIT_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_END_BIT_ERR_SIGNAL_EN_MSB 2u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_END_BIT_ERR_SIGNAL_EN_LSB 2u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_END_BIT_ERR_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_END_BIT_ERR_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_END_BIT_ERR_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_END_BIT_ERR_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_END_BIT_ERR_SIGNAL_EN_FIELD_MASK 0x0004u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_END_BIT_ERR_SIGNAL_EN_GET(x) \
   (((x) & 0x0004u) >> 2)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_END_BIT_ERR_SIGNAL_EN_SET(x) \
   (((x) << 2) & 0x0004u)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_END_BIT_ERR_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 2) & 0x0004u) | ((r) & 0xfffbu))
/* Field member: emmc::crypto::ERROR_INT_SIGNAL_EN_R.CMD_CRC_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_CRC_ERR_SIGNAL_EN_MSB 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_CRC_ERR_SIGNAL_EN_LSB 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_CRC_ERR_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_CRC_ERR_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_CRC_ERR_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_CRC_ERR_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_CRC_ERR_SIGNAL_EN_FIELD_MASK 0x0002u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_CRC_ERR_SIGNAL_EN_GET(x) \
   (((x) & 0x0002u) >> 1)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_CRC_ERR_SIGNAL_EN_SET(x) \
   (((x) << 1) & 0x0002u)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_CRC_ERR_SIGNAL_EN_MODIFY(r, x) \
   ((((x) << 1) & 0x0002u) | ((r) & 0xfffdu))
/* Field member: emmc::crypto::ERROR_INT_SIGNAL_EN_R.CMD_TOUT_ERR_SIGNAL_EN */
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_TOUT_ERR_SIGNAL_EN_MSB 0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_TOUT_ERR_SIGNAL_EN_LSB 0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_TOUT_ERR_SIGNAL_EN_WIDTH 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_TOUT_ERR_SIGNAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_TOUT_ERR_SIGNAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_TOUT_ERR_SIGNAL_EN_RESET 0x0u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_TOUT_ERR_SIGNAL_EN_FIELD_MASK 0x0001u
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_TOUT_ERR_SIGNAL_EN_GET(x) \
   ((x) & 0x0001u)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_TOUT_ERR_SIGNAL_EN_SET(x) \
   ((x) & 0x0001u)
#define EMMC_CRYPTO_ERROR_INT_SIGNAL_EN_R_CMD_TOUT_ERR_SIGNAL_EN_MODIFY(r, x) \
   (((x) & 0x0001u) | ((r) & 0xfffeu))

/* Register type: emmc::crypto::AUTO_CMD_STAT_R                            */
/* Register template: emmc::crypto::AUTO_CMD_STAT_R                        */
/* Field member: emmc::crypto::AUTO_CMD_STAT_R.RSVD_15_8                   */
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_15_8_MSB 15u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_15_8_LSB 8u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_15_8_WIDTH 8u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_15_8_READ_ACCESS 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_15_8_WRITE_ACCESS 0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_15_8_RESET 0x00u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_15_8_FIELD_MASK 0xff00u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_15_8_GET(x) (((x) & 0xff00u) >> 8)
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_15_8_SET(x) (((x) << 8) & 0xff00u)
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_15_8_MODIFY(r, x) \
   ((((x) << 8) & 0xff00u) | ((r) & 0x00ffu))
/* Field member: emmc::crypto::AUTO_CMD_STAT_R.CMD_NOT_ISSUED_AUTO_CMD12   */
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_CMD_NOT_ISSUED_AUTO_CMD12_MSB 7u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_CMD_NOT_ISSUED_AUTO_CMD12_LSB 7u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_CMD_NOT_ISSUED_AUTO_CMD12_WIDTH 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_CMD_NOT_ISSUED_AUTO_CMD12_READ_ACCESS 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_CMD_NOT_ISSUED_AUTO_CMD12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_CMD_NOT_ISSUED_AUTO_CMD12_RESET 0x0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_CMD_NOT_ISSUED_AUTO_CMD12_FIELD_MASK 0x0080u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_CMD_NOT_ISSUED_AUTO_CMD12_GET(x) \
   (((x) & 0x0080u) >> 7)
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_CMD_NOT_ISSUED_AUTO_CMD12_SET(x) \
   (((x) << 7) & 0x0080u)
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_CMD_NOT_ISSUED_AUTO_CMD12_MODIFY(r, x) \
   ((((x) << 7) & 0x0080u) | ((r) & 0xff7fu))
/* Field member: emmc::crypto::AUTO_CMD_STAT_R.RSVD_6                      */
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_6_MSB 6u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_6_LSB 6u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_6_WIDTH 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_6_READ_ACCESS 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_6_RESET 0x0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_6_FIELD_MASK 0x0040u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_6_GET(x) (((x) & 0x0040u) >> 6)
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_6_SET(x) (((x) << 6) & 0x0040u)
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_RSVD_6_MODIFY(r, x) \
   ((((x) << 6) & 0x0040u) | ((r) & 0xffbfu))
/* Field member: emmc::crypto::AUTO_CMD_STAT_R.AUTO_CMD_RESP_ERR           */
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_RESP_ERR_MSB 5u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_RESP_ERR_LSB 5u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_RESP_ERR_WIDTH 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_RESP_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_RESP_ERR_WRITE_ACCESS 0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_RESP_ERR_RESET 0x0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_RESP_ERR_FIELD_MASK 0x0020u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_RESP_ERR_GET(x) \
   (((x) & 0x0020u) >> 5)
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_RESP_ERR_SET(x) \
   (((x) << 5) & 0x0020u)
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_RESP_ERR_MODIFY(r, x) \
   ((((x) << 5) & 0x0020u) | ((r) & 0xffdfu))
/* Field member: emmc::crypto::AUTO_CMD_STAT_R.AUTO_CMD_IDX_ERR            */
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_IDX_ERR_MSB 4u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_IDX_ERR_LSB 4u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_IDX_ERR_WIDTH 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_IDX_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_IDX_ERR_WRITE_ACCESS 0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_IDX_ERR_RESET 0x0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_IDX_ERR_FIELD_MASK 0x0010u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_IDX_ERR_GET(x) \
   (((x) & 0x0010u) >> 4)
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_IDX_ERR_SET(x) \
   (((x) << 4) & 0x0010u)
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_IDX_ERR_MODIFY(r, x) \
   ((((x) << 4) & 0x0010u) | ((r) & 0xffefu))
/* Field member: emmc::crypto::AUTO_CMD_STAT_R.AUTO_CMD_EBIT_ERR           */
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_EBIT_ERR_MSB 3u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_EBIT_ERR_LSB 3u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_EBIT_ERR_WIDTH 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_EBIT_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_EBIT_ERR_WRITE_ACCESS 0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_EBIT_ERR_RESET 0x0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_EBIT_ERR_FIELD_MASK 0x0008u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_EBIT_ERR_GET(x) \
   (((x) & 0x0008u) >> 3)
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_EBIT_ERR_SET(x) \
   (((x) << 3) & 0x0008u)
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_EBIT_ERR_MODIFY(r, x) \
   ((((x) << 3) & 0x0008u) | ((r) & 0xfff7u))
/* Field member: emmc::crypto::AUTO_CMD_STAT_R.AUTO_CMD_CRC_ERR            */
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_CRC_ERR_MSB 2u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_CRC_ERR_LSB 2u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_CRC_ERR_WIDTH 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_CRC_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_CRC_ERR_WRITE_ACCESS 0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_CRC_ERR_RESET 0x0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_CRC_ERR_FIELD_MASK 0x0004u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_CRC_ERR_GET(x) \
   (((x) & 0x0004u) >> 2)
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_CRC_ERR_SET(x) \
   (((x) << 2) & 0x0004u)
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_CRC_ERR_MODIFY(r, x) \
   ((((x) << 2) & 0x0004u) | ((r) & 0xfffbu))
/* Field member: emmc::crypto::AUTO_CMD_STAT_R.AUTO_CMD_TOUT_ERR           */
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_TOUT_ERR_MSB 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_TOUT_ERR_LSB 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_TOUT_ERR_WIDTH 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_TOUT_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_TOUT_ERR_WRITE_ACCESS 0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_TOUT_ERR_RESET 0x0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_TOUT_ERR_FIELD_MASK 0x0002u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_TOUT_ERR_GET(x) \
   (((x) & 0x0002u) >> 1)
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_TOUT_ERR_SET(x) \
   (((x) << 1) & 0x0002u)
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD_TOUT_ERR_MODIFY(r, x) \
   ((((x) << 1) & 0x0002u) | ((r) & 0xfffdu))
/* Field member: emmc::crypto::AUTO_CMD_STAT_R.AUTO_CMD12_NOT_EXEC         */
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD12_NOT_EXEC_MSB 0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD12_NOT_EXEC_LSB 0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD12_NOT_EXEC_WIDTH 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD12_NOT_EXEC_READ_ACCESS 1u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD12_NOT_EXEC_WRITE_ACCESS 0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD12_NOT_EXEC_RESET 0x0u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD12_NOT_EXEC_FIELD_MASK 0x0001u
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD12_NOT_EXEC_GET(x) \
   ((x) & 0x0001u)
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD12_NOT_EXEC_SET(x) \
   ((x) & 0x0001u)
#define EMMC_CRYPTO_AUTO_CMD_STAT_R_AUTO_CMD12_NOT_EXEC_MODIFY(r, x) \
   (((x) & 0x0001u) | ((r) & 0xfffeu))

/* Register type: emmc::crypto::HOST_CTRL2_R                               */
/* Register template: emmc::crypto::HOST_CTRL2_R                           */
/* Field member: emmc::crypto::HOST_CTRL2_R.PRESET_VAL_ENABLE              */
#define EMMC_CRYPTO_HOST_CTRL2_R_PRESET_VAL_ENABLE_MSB 15u
#define EMMC_CRYPTO_HOST_CTRL2_R_PRESET_VAL_ENABLE_LSB 15u
#define EMMC_CRYPTO_HOST_CTRL2_R_PRESET_VAL_ENABLE_WIDTH 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_PRESET_VAL_ENABLE_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_PRESET_VAL_ENABLE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_PRESET_VAL_ENABLE_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_PRESET_VAL_ENABLE_FIELD_MASK 0x8000u
#define EMMC_CRYPTO_HOST_CTRL2_R_PRESET_VAL_ENABLE_GET(x) \
   (((x) & 0x8000u) >> 15)
#define EMMC_CRYPTO_HOST_CTRL2_R_PRESET_VAL_ENABLE_SET(x) \
   (((x) << 15) & 0x8000u)
#define EMMC_CRYPTO_HOST_CTRL2_R_PRESET_VAL_ENABLE_MODIFY(r, x) \
   ((((x) << 15) & 0x8000u) | ((r) & 0x7fffu))
/* Field member: emmc::crypto::HOST_CTRL2_R.ASYNC_INT_ENABLE               */
#define EMMC_CRYPTO_HOST_CTRL2_R_ASYNC_INT_ENABLE_MSB 14u
#define EMMC_CRYPTO_HOST_CTRL2_R_ASYNC_INT_ENABLE_LSB 14u
#define EMMC_CRYPTO_HOST_CTRL2_R_ASYNC_INT_ENABLE_WIDTH 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_ASYNC_INT_ENABLE_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_ASYNC_INT_ENABLE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_ASYNC_INT_ENABLE_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_ASYNC_INT_ENABLE_FIELD_MASK 0x4000u
#define EMMC_CRYPTO_HOST_CTRL2_R_ASYNC_INT_ENABLE_GET(x) \
   (((x) & 0x4000u) >> 14)
#define EMMC_CRYPTO_HOST_CTRL2_R_ASYNC_INT_ENABLE_SET(x) \
   (((x) << 14) & 0x4000u)
#define EMMC_CRYPTO_HOST_CTRL2_R_ASYNC_INT_ENABLE_MODIFY(r, x) \
   ((((x) << 14) & 0x4000u) | ((r) & 0xbfffu))
/* Field member: emmc::crypto::HOST_CTRL2_R.ADDRESSING                     */
#define EMMC_CRYPTO_HOST_CTRL2_R_ADDRESSING_MSB 13u
#define EMMC_CRYPTO_HOST_CTRL2_R_ADDRESSING_LSB 13u
#define EMMC_CRYPTO_HOST_CTRL2_R_ADDRESSING_WIDTH 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_ADDRESSING_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_ADDRESSING_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_ADDRESSING_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_ADDRESSING_FIELD_MASK 0x2000u
#define EMMC_CRYPTO_HOST_CTRL2_R_ADDRESSING_GET(x) (((x) & 0x2000u) >> 13)
#define EMMC_CRYPTO_HOST_CTRL2_R_ADDRESSING_SET(x) (((x) << 13) & 0x2000u)
#define EMMC_CRYPTO_HOST_CTRL2_R_ADDRESSING_MODIFY(r, x) \
   ((((x) << 13) & 0x2000u) | ((r) & 0xdfffu))
/* Field member: emmc::crypto::HOST_CTRL2_R.HOST_VER4_ENABLE               */
#define EMMC_CRYPTO_HOST_CTRL2_R_HOST_VER4_ENABLE_MSB 12u
#define EMMC_CRYPTO_HOST_CTRL2_R_HOST_VER4_ENABLE_LSB 12u
#define EMMC_CRYPTO_HOST_CTRL2_R_HOST_VER4_ENABLE_WIDTH 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_HOST_VER4_ENABLE_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_HOST_VER4_ENABLE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_HOST_VER4_ENABLE_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_HOST_VER4_ENABLE_FIELD_MASK 0x1000u
#define EMMC_CRYPTO_HOST_CTRL2_R_HOST_VER4_ENABLE_GET(x) \
   (((x) & 0x1000u) >> 12)
#define EMMC_CRYPTO_HOST_CTRL2_R_HOST_VER4_ENABLE_SET(x) \
   (((x) << 12) & 0x1000u)
#define EMMC_CRYPTO_HOST_CTRL2_R_HOST_VER4_ENABLE_MODIFY(r, x) \
   ((((x) << 12) & 0x1000u) | ((r) & 0xefffu))
/* Field member: emmc::crypto::HOST_CTRL2_R.CMD23_ENABLE                   */
#define EMMC_CRYPTO_HOST_CTRL2_R_CMD23_ENABLE_MSB 11u
#define EMMC_CRYPTO_HOST_CTRL2_R_CMD23_ENABLE_LSB 11u
#define EMMC_CRYPTO_HOST_CTRL2_R_CMD23_ENABLE_WIDTH 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_CMD23_ENABLE_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_CMD23_ENABLE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_CMD23_ENABLE_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_CMD23_ENABLE_FIELD_MASK 0x0800u
#define EMMC_CRYPTO_HOST_CTRL2_R_CMD23_ENABLE_GET(x) (((x) & 0x0800u) >> 11)
#define EMMC_CRYPTO_HOST_CTRL2_R_CMD23_ENABLE_SET(x) \
   (((x) << 11) & 0x0800u)
#define EMMC_CRYPTO_HOST_CTRL2_R_CMD23_ENABLE_MODIFY(r, x) \
   ((((x) << 11) & 0x0800u) | ((r) & 0xf7ffu))
/* Field member: emmc::crypto::HOST_CTRL2_R.ADMA2_LEN_MODE                 */
#define EMMC_CRYPTO_HOST_CTRL2_R_ADMA2_LEN_MODE_MSB 10u
#define EMMC_CRYPTO_HOST_CTRL2_R_ADMA2_LEN_MODE_LSB 10u
#define EMMC_CRYPTO_HOST_CTRL2_R_ADMA2_LEN_MODE_WIDTH 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_ADMA2_LEN_MODE_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_ADMA2_LEN_MODE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_ADMA2_LEN_MODE_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_ADMA2_LEN_MODE_FIELD_MASK 0x0400u
#define EMMC_CRYPTO_HOST_CTRL2_R_ADMA2_LEN_MODE_GET(x) \
   (((x) & 0x0400u) >> 10)
#define EMMC_CRYPTO_HOST_CTRL2_R_ADMA2_LEN_MODE_SET(x) \
   (((x) << 10) & 0x0400u)
#define EMMC_CRYPTO_HOST_CTRL2_R_ADMA2_LEN_MODE_MODIFY(r, x) \
   ((((x) << 10) & 0x0400u) | ((r) & 0xfbffu))
/* Field member: emmc::crypto::HOST_CTRL2_R.RSVD_9                         */
#define EMMC_CRYPTO_HOST_CTRL2_R_RSVD_9_MSB 9u
#define EMMC_CRYPTO_HOST_CTRL2_R_RSVD_9_LSB 9u
#define EMMC_CRYPTO_HOST_CTRL2_R_RSVD_9_WIDTH 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_RSVD_9_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_RSVD_9_WRITE_ACCESS 0u
#define EMMC_CRYPTO_HOST_CTRL2_R_RSVD_9_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_RSVD_9_FIELD_MASK 0x0200u
#define EMMC_CRYPTO_HOST_CTRL2_R_RSVD_9_GET(x) (((x) & 0x0200u) >> 9)
#define EMMC_CRYPTO_HOST_CTRL2_R_RSVD_9_SET(x) (((x) << 9) & 0x0200u)
#define EMMC_CRYPTO_HOST_CTRL2_R_RSVD_9_MODIFY(r, x) \
   ((((x) << 9) & 0x0200u) | ((r) & 0xfdffu))
/* Field member: emmc::crypto::HOST_CTRL2_R.UHS2_IF_ENABLE                 */
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS2_IF_ENABLE_MSB 8u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS2_IF_ENABLE_LSB 8u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS2_IF_ENABLE_WIDTH 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS2_IF_ENABLE_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS2_IF_ENABLE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS2_IF_ENABLE_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS2_IF_ENABLE_FIELD_MASK 0x0100u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS2_IF_ENABLE_GET(x) (((x) & 0x0100u) >> 8)
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS2_IF_ENABLE_SET(x) \
   (((x) << 8) & 0x0100u)
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS2_IF_ENABLE_MODIFY(r, x) \
   ((((x) << 8) & 0x0100u) | ((r) & 0xfeffu))
/* Field member: emmc::crypto::HOST_CTRL2_R.SAMPLE_CLK_SEL                 */
#define EMMC_CRYPTO_HOST_CTRL2_R_SAMPLE_CLK_SEL_MSB 7u
#define EMMC_CRYPTO_HOST_CTRL2_R_SAMPLE_CLK_SEL_LSB 7u
#define EMMC_CRYPTO_HOST_CTRL2_R_SAMPLE_CLK_SEL_WIDTH 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_SAMPLE_CLK_SEL_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_SAMPLE_CLK_SEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_SAMPLE_CLK_SEL_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_SAMPLE_CLK_SEL_FIELD_MASK 0x0080u
#define EMMC_CRYPTO_HOST_CTRL2_R_SAMPLE_CLK_SEL_GET(x) (((x) & 0x0080u) >> 7)
#define EMMC_CRYPTO_HOST_CTRL2_R_SAMPLE_CLK_SEL_SET(x) \
   (((x) << 7) & 0x0080u)
#define EMMC_CRYPTO_HOST_CTRL2_R_SAMPLE_CLK_SEL_MODIFY(r, x) \
   ((((x) << 7) & 0x0080u) | ((r) & 0xff7fu))
/* Field member: emmc::crypto::HOST_CTRL2_R.EXEC_TUNING                    */
#define EMMC_CRYPTO_HOST_CTRL2_R_EXEC_TUNING_MSB 6u
#define EMMC_CRYPTO_HOST_CTRL2_R_EXEC_TUNING_LSB 6u
#define EMMC_CRYPTO_HOST_CTRL2_R_EXEC_TUNING_WIDTH 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_EXEC_TUNING_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_EXEC_TUNING_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_EXEC_TUNING_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_EXEC_TUNING_FIELD_MASK 0x0040u
#define EMMC_CRYPTO_HOST_CTRL2_R_EXEC_TUNING_GET(x) (((x) & 0x0040u) >> 6)
#define EMMC_CRYPTO_HOST_CTRL2_R_EXEC_TUNING_SET(x) (((x) << 6) & 0x0040u)
#define EMMC_CRYPTO_HOST_CTRL2_R_EXEC_TUNING_MODIFY(r, x) \
   ((((x) << 6) & 0x0040u) | ((r) & 0xffbfu))
/* Field member: emmc::crypto::HOST_CTRL2_R.DRV_STRENGTH_SEL               */
#define EMMC_CRYPTO_HOST_CTRL2_R_DRV_STRENGTH_SEL_MSB 5u
#define EMMC_CRYPTO_HOST_CTRL2_R_DRV_STRENGTH_SEL_LSB 4u
#define EMMC_CRYPTO_HOST_CTRL2_R_DRV_STRENGTH_SEL_WIDTH 2u
#define EMMC_CRYPTO_HOST_CTRL2_R_DRV_STRENGTH_SEL_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_DRV_STRENGTH_SEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_DRV_STRENGTH_SEL_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_DRV_STRENGTH_SEL_FIELD_MASK 0x0030u
#define EMMC_CRYPTO_HOST_CTRL2_R_DRV_STRENGTH_SEL_GET(x) \
   (((x) & 0x0030u) >> 4)
#define EMMC_CRYPTO_HOST_CTRL2_R_DRV_STRENGTH_SEL_SET(x) \
   (((x) << 4) & 0x0030u)
#define EMMC_CRYPTO_HOST_CTRL2_R_DRV_STRENGTH_SEL_MODIFY(r, x) \
   ((((x) << 4) & 0x0030u) | ((r) & 0xffcfu))
/* Field member: emmc::crypto::HOST_CTRL2_R.SIGNALING_EN                   */
#define EMMC_CRYPTO_HOST_CTRL2_R_SIGNALING_EN_MSB 3u
#define EMMC_CRYPTO_HOST_CTRL2_R_SIGNALING_EN_LSB 3u
#define EMMC_CRYPTO_HOST_CTRL2_R_SIGNALING_EN_WIDTH 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_SIGNALING_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_SIGNALING_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_SIGNALING_EN_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_SIGNALING_EN_FIELD_MASK 0x0008u
#define EMMC_CRYPTO_HOST_CTRL2_R_SIGNALING_EN_GET(x) (((x) & 0x0008u) >> 3)
#define EMMC_CRYPTO_HOST_CTRL2_R_SIGNALING_EN_SET(x) (((x) << 3) & 0x0008u)
#define EMMC_CRYPTO_HOST_CTRL2_R_SIGNALING_EN_MODIFY(r, x) \
   ((((x) << 3) & 0x0008u) | ((r) & 0xfff7u))
/* Field member: emmc::crypto::HOST_CTRL2_R.UHS_MODE_SEL                   */
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS_MODE_SEL_MSB 2u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS_MODE_SEL_LSB 0u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS_MODE_SEL_WIDTH 3u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS_MODE_SEL_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS_MODE_SEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS_MODE_SEL_RESET 0x0u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS_MODE_SEL_FIELD_MASK 0x0007u
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS_MODE_SEL_GET(x) ((x) & 0x0007u)
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS_MODE_SEL_SET(x) ((x) & 0x0007u)
#define EMMC_CRYPTO_HOST_CTRL2_R_UHS_MODE_SEL_MODIFY(r, x) \
   (((x) & 0x0007u) | ((r) & 0xfff8u))

/* Register type: emmc::crypto::CAPABILITIES1_R                            */
/* Register template: emmc::crypto::CAPABILITIES1_R                        */
/* Field member: emmc::crypto::CAPABILITIES1_R.SLOT_TYPE_R                 */
#define EMMC_CRYPTO_CAPABILITIES1_R_SLOT_TYPE_R_MSB 31u
#define EMMC_CRYPTO_CAPABILITIES1_R_SLOT_TYPE_R_LSB 30u
#define EMMC_CRYPTO_CAPABILITIES1_R_SLOT_TYPE_R_WIDTH 2u
#define EMMC_CRYPTO_CAPABILITIES1_R_SLOT_TYPE_R_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_SLOT_TYPE_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_SLOT_TYPE_R_RESET 0x0u
#define EMMC_CRYPTO_CAPABILITIES1_R_SLOT_TYPE_R_FIELD_MASK 0xc0000000ul
#define EMMC_CRYPTO_CAPABILITIES1_R_SLOT_TYPE_R_GET(x) \
   (((x) & 0xc0000000ul) >> 30)
#define EMMC_CRYPTO_CAPABILITIES1_R_SLOT_TYPE_R_SET(x) \
   (((x) << 30) & 0xc0000000ul)
#define EMMC_CRYPTO_CAPABILITIES1_R_SLOT_TYPE_R_MODIFY(r, x) \
   ((((x) << 30) & 0xc0000000ul) | ((r) & 0x3ffffffful))
/* Field member: emmc::crypto::CAPABILITIES1_R.ASYNC_INT_SUPPORT           */
#define EMMC_CRYPTO_CAPABILITIES1_R_ASYNC_INT_SUPPORT_MSB 29u
#define EMMC_CRYPTO_CAPABILITIES1_R_ASYNC_INT_SUPPORT_LSB 29u
#define EMMC_CRYPTO_CAPABILITIES1_R_ASYNC_INT_SUPPORT_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_ASYNC_INT_SUPPORT_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_ASYNC_INT_SUPPORT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_ASYNC_INT_SUPPORT_RESET 0x1u
#define EMMC_CRYPTO_CAPABILITIES1_R_ASYNC_INT_SUPPORT_FIELD_MASK 0x20000000ul
#define EMMC_CRYPTO_CAPABILITIES1_R_ASYNC_INT_SUPPORT_GET(x) \
   (((x) & 0x20000000ul) >> 29)
#define EMMC_CRYPTO_CAPABILITIES1_R_ASYNC_INT_SUPPORT_SET(x) \
   (((x) << 29) & 0x20000000ul)
#define EMMC_CRYPTO_CAPABILITIES1_R_ASYNC_INT_SUPPORT_MODIFY(r, x) \
   ((((x) << 29) & 0x20000000ul) | ((r) & 0xdffffffful))
/* Field member: emmc::crypto::CAPABILITIES1_R.SYS_ADDR_64_V3              */
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V3_MSB 28u
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V3_LSB 28u
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V3_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V3_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V3_RESET 0x1u
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V3_FIELD_MASK 0x10000000ul
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V3_GET(x) \
   (((x) & 0x10000000ul) >> 28)
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V3_SET(x) \
   (((x) << 28) & 0x10000000ul)
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V3_MODIFY(r, x) \
   ((((x) << 28) & 0x10000000ul) | ((r) & 0xeffffffful))
/* Field member: emmc::crypto::CAPABILITIES1_R.SYS_ADDR_64_V4              */
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V4_MSB 27u
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V4_LSB 27u
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V4_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V4_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V4_RESET 0x1u
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V4_FIELD_MASK 0x08000000ul
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V4_GET(x) \
   (((x) & 0x08000000ul) >> 27)
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V4_SET(x) \
   (((x) << 27) & 0x08000000ul)
#define EMMC_CRYPTO_CAPABILITIES1_R_SYS_ADDR_64_V4_MODIFY(r, x) \
   ((((x) << 27) & 0x08000000ul) | ((r) & 0xf7fffffful))
/* Field member: emmc::crypto::CAPABILITIES1_R.VOLT_18                     */
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_18_MSB 26u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_18_LSB 26u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_18_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_18_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_18_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_18_RESET 0x1u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_18_FIELD_MASK 0x04000000ul
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_18_GET(x) \
   (((x) & 0x04000000ul) >> 26)
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_18_SET(x) \
   (((x) << 26) & 0x04000000ul)
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_18_MODIFY(r, x) \
   ((((x) << 26) & 0x04000000ul) | ((r) & 0xfbfffffful))
/* Field member: emmc::crypto::CAPABILITIES1_R.VOLT_30                     */
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_30_MSB 25u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_30_LSB 25u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_30_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_30_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_30_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_30_RESET 0x1u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_30_FIELD_MASK 0x02000000ul
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_30_GET(x) \
   (((x) & 0x02000000ul) >> 25)
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_30_SET(x) \
   (((x) << 25) & 0x02000000ul)
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_30_MODIFY(r, x) \
   ((((x) << 25) & 0x02000000ul) | ((r) & 0xfdfffffful))
/* Field member: emmc::crypto::CAPABILITIES1_R.VOLT_33                     */
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_33_MSB 24u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_33_LSB 24u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_33_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_33_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_33_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_33_RESET 0x0u
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_33_FIELD_MASK 0x01000000ul
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_33_GET(x) \
   (((x) & 0x01000000ul) >> 24)
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_33_SET(x) \
   (((x) << 24) & 0x01000000ul)
#define EMMC_CRYPTO_CAPABILITIES1_R_VOLT_33_MODIFY(r, x) \
   ((((x) << 24) & 0x01000000ul) | ((r) & 0xfefffffful))
/* Field member: emmc::crypto::CAPABILITIES1_R.SUS_RES_SUPPORT             */
#define EMMC_CRYPTO_CAPABILITIES1_R_SUS_RES_SUPPORT_MSB 23u
#define EMMC_CRYPTO_CAPABILITIES1_R_SUS_RES_SUPPORT_LSB 23u
#define EMMC_CRYPTO_CAPABILITIES1_R_SUS_RES_SUPPORT_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_SUS_RES_SUPPORT_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_SUS_RES_SUPPORT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_SUS_RES_SUPPORT_RESET 0x0u
#define EMMC_CRYPTO_CAPABILITIES1_R_SUS_RES_SUPPORT_FIELD_MASK 0x00800000ul
#define EMMC_CRYPTO_CAPABILITIES1_R_SUS_RES_SUPPORT_GET(x) \
   (((x) & 0x00800000ul) >> 23)
#define EMMC_CRYPTO_CAPABILITIES1_R_SUS_RES_SUPPORT_SET(x) \
   (((x) << 23) & 0x00800000ul)
#define EMMC_CRYPTO_CAPABILITIES1_R_SUS_RES_SUPPORT_MODIFY(r, x) \
   ((((x) << 23) & 0x00800000ul) | ((r) & 0xff7ffffful))
/* Field member: emmc::crypto::CAPABILITIES1_R.SDMA_SUPPORT                */
#define EMMC_CRYPTO_CAPABILITIES1_R_SDMA_SUPPORT_MSB 22u
#define EMMC_CRYPTO_CAPABILITIES1_R_SDMA_SUPPORT_LSB 22u
#define EMMC_CRYPTO_CAPABILITIES1_R_SDMA_SUPPORT_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_SDMA_SUPPORT_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_SDMA_SUPPORT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_SDMA_SUPPORT_RESET 0x1u
#define EMMC_CRYPTO_CAPABILITIES1_R_SDMA_SUPPORT_FIELD_MASK 0x00400000ul
#define EMMC_CRYPTO_CAPABILITIES1_R_SDMA_SUPPORT_GET(x) \
   (((x) & 0x00400000ul) >> 22)
#define EMMC_CRYPTO_CAPABILITIES1_R_SDMA_SUPPORT_SET(x) \
   (((x) << 22) & 0x00400000ul)
#define EMMC_CRYPTO_CAPABILITIES1_R_SDMA_SUPPORT_MODIFY(r, x) \
   ((((x) << 22) & 0x00400000ul) | ((r) & 0xffbffffful))
/* Field member: emmc::crypto::CAPABILITIES1_R.HIGH_SPEED_SUPPORT          */
#define EMMC_CRYPTO_CAPABILITIES1_R_HIGH_SPEED_SUPPORT_MSB 21u
#define EMMC_CRYPTO_CAPABILITIES1_R_HIGH_SPEED_SUPPORT_LSB 21u
#define EMMC_CRYPTO_CAPABILITIES1_R_HIGH_SPEED_SUPPORT_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_HIGH_SPEED_SUPPORT_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_HIGH_SPEED_SUPPORT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_HIGH_SPEED_SUPPORT_RESET 0x1u
#define EMMC_CRYPTO_CAPABILITIES1_R_HIGH_SPEED_SUPPORT_FIELD_MASK 0x00200000ul
#define EMMC_CRYPTO_CAPABILITIES1_R_HIGH_SPEED_SUPPORT_GET(x) \
   (((x) & 0x00200000ul) >> 21)
#define EMMC_CRYPTO_CAPABILITIES1_R_HIGH_SPEED_SUPPORT_SET(x) \
   (((x) << 21) & 0x00200000ul)
#define EMMC_CRYPTO_CAPABILITIES1_R_HIGH_SPEED_SUPPORT_MODIFY(r, x) \
   ((((x) << 21) & 0x00200000ul) | ((r) & 0xffdffffful))
/* Field member: emmc::crypto::CAPABILITIES1_R.RSVD_20                     */
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_20_MSB 20u
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_20_LSB 20u
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_20_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_20_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_20_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_20_RESET 0x0u
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_20_FIELD_MASK 0x00100000ul
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_20_GET(x) \
   (((x) & 0x00100000ul) >> 20)
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_20_SET(x) \
   (((x) << 20) & 0x00100000ul)
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_20_MODIFY(r, x) \
   ((((x) << 20) & 0x00100000ul) | ((r) & 0xffeffffful))
/* Field member: emmc::crypto::CAPABILITIES1_R.ADMA2_SUPPORT               */
#define EMMC_CRYPTO_CAPABILITIES1_R_ADMA2_SUPPORT_MSB 19u
#define EMMC_CRYPTO_CAPABILITIES1_R_ADMA2_SUPPORT_LSB 19u
#define EMMC_CRYPTO_CAPABILITIES1_R_ADMA2_SUPPORT_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_ADMA2_SUPPORT_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_ADMA2_SUPPORT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_ADMA2_SUPPORT_RESET 0x1u
#define EMMC_CRYPTO_CAPABILITIES1_R_ADMA2_SUPPORT_FIELD_MASK 0x00080000ul
#define EMMC_CRYPTO_CAPABILITIES1_R_ADMA2_SUPPORT_GET(x) \
   (((x) & 0x00080000ul) >> 19)
#define EMMC_CRYPTO_CAPABILITIES1_R_ADMA2_SUPPORT_SET(x) \
   (((x) << 19) & 0x00080000ul)
#define EMMC_CRYPTO_CAPABILITIES1_R_ADMA2_SUPPORT_MODIFY(r, x) \
   ((((x) << 19) & 0x00080000ul) | ((r) & 0xfff7fffful))
/* Field member: emmc::crypto::CAPABILITIES1_R.Embedded_8_BIT              */
#define EMMC_CRYPTO_CAPABILITIES1_R_EMBEDDED_8_BIT_MSB 18u
#define EMMC_CRYPTO_CAPABILITIES1_R_EMBEDDED_8_BIT_LSB 18u
#define EMMC_CRYPTO_CAPABILITIES1_R_EMBEDDED_8_BIT_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_EMBEDDED_8_BIT_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_EMBEDDED_8_BIT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_EMBEDDED_8_BIT_RESET 0x1u
#define EMMC_CRYPTO_CAPABILITIES1_R_EMBEDDED_8_BIT_FIELD_MASK 0x00040000ul
#define EMMC_CRYPTO_CAPABILITIES1_R_EMBEDDED_8_BIT_GET(x) \
   (((x) & 0x00040000ul) >> 18)
#define EMMC_CRYPTO_CAPABILITIES1_R_EMBEDDED_8_BIT_SET(x) \
   (((x) << 18) & 0x00040000ul)
#define EMMC_CRYPTO_CAPABILITIES1_R_EMBEDDED_8_BIT_MODIFY(r, x) \
   ((((x) << 18) & 0x00040000ul) | ((r) & 0xfffbfffful))
/* Field member: emmc::crypto::CAPABILITIES1_R.MAX_BLK_LEN                 */
#define EMMC_CRYPTO_CAPABILITIES1_R_MAX_BLK_LEN_MSB 17u
#define EMMC_CRYPTO_CAPABILITIES1_R_MAX_BLK_LEN_LSB 16u
#define EMMC_CRYPTO_CAPABILITIES1_R_MAX_BLK_LEN_WIDTH 2u
#define EMMC_CRYPTO_CAPABILITIES1_R_MAX_BLK_LEN_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_MAX_BLK_LEN_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_MAX_BLK_LEN_RESET 0x2u
#define EMMC_CRYPTO_CAPABILITIES1_R_MAX_BLK_LEN_FIELD_MASK 0x00030000ul
#define EMMC_CRYPTO_CAPABILITIES1_R_MAX_BLK_LEN_GET(x) \
   (((x) & 0x00030000ul) >> 16)
#define EMMC_CRYPTO_CAPABILITIES1_R_MAX_BLK_LEN_SET(x) \
   (((x) << 16) & 0x00030000ul)
#define EMMC_CRYPTO_CAPABILITIES1_R_MAX_BLK_LEN_MODIFY(r, x) \
   ((((x) << 16) & 0x00030000ul) | ((r) & 0xfffcfffful))
/* Field member: emmc::crypto::CAPABILITIES1_R.BASE_CLK_FREQ               */
#define EMMC_CRYPTO_CAPABILITIES1_R_BASE_CLK_FREQ_MSB 15u
#define EMMC_CRYPTO_CAPABILITIES1_R_BASE_CLK_FREQ_LSB 8u
#define EMMC_CRYPTO_CAPABILITIES1_R_BASE_CLK_FREQ_WIDTH 8u
#define EMMC_CRYPTO_CAPABILITIES1_R_BASE_CLK_FREQ_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_BASE_CLK_FREQ_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_BASE_CLK_FREQ_RESET 0x01u
#define EMMC_CRYPTO_CAPABILITIES1_R_BASE_CLK_FREQ_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_CAPABILITIES1_R_BASE_CLK_FREQ_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_CAPABILITIES1_R_BASE_CLK_FREQ_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_CAPABILITIES1_R_BASE_CLK_FREQ_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto::CAPABILITIES1_R.TOUT_CLK_UNIT               */
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_UNIT_MSB 7u
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_UNIT_LSB 7u
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_UNIT_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_UNIT_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_UNIT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_UNIT_RESET 0x1u
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_UNIT_FIELD_MASK 0x00000080ul
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_UNIT_GET(x) \
   (((x) & 0x00000080ul) >> 7)
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_UNIT_SET(x) \
   (((x) << 7) & 0x00000080ul)
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_UNIT_MODIFY(r, x) \
   ((((x) << 7) & 0x00000080ul) | ((r) & 0xffffff7ful))
/* Field member: emmc::crypto::CAPABILITIES1_R.RSVD_6                      */
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_6_MSB 6u
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_6_LSB 6u
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_6_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_6_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_6_RESET 0x0u
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_6_FIELD_MASK 0x00000040ul
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_6_GET(x) (((x) & 0x00000040ul) >> 6)
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_6_SET(x) \
   (((x) << 6) & 0x00000040ul)
#define EMMC_CRYPTO_CAPABILITIES1_R_RSVD_6_MODIFY(r, x) \
   ((((x) << 6) & 0x00000040ul) | ((r) & 0xffffffbful))
/* Field member: emmc::crypto::CAPABILITIES1_R.TOUT_CLK_FREQ               */
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_FREQ_MSB 5u
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_FREQ_LSB 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_FREQ_WIDTH 6u
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_FREQ_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_FREQ_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_FREQ_RESET 0x01u
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_FREQ_FIELD_MASK 0x0000003ful
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_FREQ_GET(x) ((x) & 0x0000003ful)
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_FREQ_SET(x) ((x) & 0x0000003ful)
#define EMMC_CRYPTO_CAPABILITIES1_R_TOUT_CLK_FREQ_MODIFY(r, x) \
   (((x) & 0x0000003ful) | ((r) & 0xffffffc0ul))

/* Register type: emmc::crypto::CAPABILITIES2_R                            */
/* Register template: emmc::crypto::CAPABILITIES2_R                        */
/* Field member: emmc::crypto::CAPABILITIES2_R.RSVD_62_63                  */
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_62_63_MSB 31u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_62_63_LSB 30u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_62_63_WIDTH 2u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_62_63_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_62_63_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_62_63_RESET 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_62_63_FIELD_MASK 0xc0000000ul
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_62_63_GET(x) \
   (((x) & 0xc0000000ul) >> 30)
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_62_63_SET(x) \
   (((x) << 30) & 0xc0000000ul)
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_62_63_MODIFY(r, x) \
   ((((x) << 30) & 0xc0000000ul) | ((r) & 0x3ffffffful))
/* Field member: emmc::crypto::CAPABILITIES2_R.RSVD_61                     */
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_61_MSB 29u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_61_LSB 29u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_61_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_61_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_61_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_61_RESET 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_61_FIELD_MASK 0x20000000ul
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_61_GET(x) \
   (((x) & 0x20000000ul) >> 29)
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_61_SET(x) \
   (((x) << 29) & 0x20000000ul)
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_61_MODIFY(r, x) \
   ((((x) << 29) & 0x20000000ul) | ((r) & 0xdffffffful))
/* Field member: emmc::crypto::CAPABILITIES2_R.VDD2_18V_SUPPORT            */
#define EMMC_CRYPTO_CAPABILITIES2_R_VDD2_18V_SUPPORT_MSB 28u
#define EMMC_CRYPTO_CAPABILITIES2_R_VDD2_18V_SUPPORT_LSB 28u
#define EMMC_CRYPTO_CAPABILITIES2_R_VDD2_18V_SUPPORT_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_VDD2_18V_SUPPORT_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_VDD2_18V_SUPPORT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_VDD2_18V_SUPPORT_RESET 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_VDD2_18V_SUPPORT_FIELD_MASK 0x10000000ul
#define EMMC_CRYPTO_CAPABILITIES2_R_VDD2_18V_SUPPORT_GET(x) \
   (((x) & 0x10000000ul) >> 28)
#define EMMC_CRYPTO_CAPABILITIES2_R_VDD2_18V_SUPPORT_SET(x) \
   (((x) << 28) & 0x10000000ul)
#define EMMC_CRYPTO_CAPABILITIES2_R_VDD2_18V_SUPPORT_MODIFY(r, x) \
   ((((x) << 28) & 0x10000000ul) | ((r) & 0xeffffffful))
/* Field member: emmc::crypto::CAPABILITIES2_R.ADMA3_SUPPORT               */
#define EMMC_CRYPTO_CAPABILITIES2_R_ADMA3_SUPPORT_MSB 27u
#define EMMC_CRYPTO_CAPABILITIES2_R_ADMA3_SUPPORT_LSB 27u
#define EMMC_CRYPTO_CAPABILITIES2_R_ADMA3_SUPPORT_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_ADMA3_SUPPORT_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_ADMA3_SUPPORT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_ADMA3_SUPPORT_RESET 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_ADMA3_SUPPORT_FIELD_MASK 0x08000000ul
#define EMMC_CRYPTO_CAPABILITIES2_R_ADMA3_SUPPORT_GET(x) \
   (((x) & 0x08000000ul) >> 27)
#define EMMC_CRYPTO_CAPABILITIES2_R_ADMA3_SUPPORT_SET(x) \
   (((x) << 27) & 0x08000000ul)
#define EMMC_CRYPTO_CAPABILITIES2_R_ADMA3_SUPPORT_MODIFY(r, x) \
   ((((x) << 27) & 0x08000000ul) | ((r) & 0xf7fffffful))
/* Field member: emmc::crypto::CAPABILITIES2_R.RSVD_56_58                  */
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_56_58_MSB 26u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_56_58_LSB 24u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_56_58_WIDTH 3u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_56_58_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_56_58_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_56_58_RESET 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_56_58_FIELD_MASK 0x07000000ul
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_56_58_GET(x) \
   (((x) & 0x07000000ul) >> 24)
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_56_58_SET(x) \
   (((x) << 24) & 0x07000000ul)
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_56_58_MODIFY(r, x) \
   ((((x) << 24) & 0x07000000ul) | ((r) & 0xf8fffffful))
/* Field member: emmc::crypto::CAPABILITIES2_R.CLK_MUL                     */
#define EMMC_CRYPTO_CAPABILITIES2_R_CLK_MUL_MSB 23u
#define EMMC_CRYPTO_CAPABILITIES2_R_CLK_MUL_LSB 16u
#define EMMC_CRYPTO_CAPABILITIES2_R_CLK_MUL_WIDTH 8u
#define EMMC_CRYPTO_CAPABILITIES2_R_CLK_MUL_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_CLK_MUL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_CLK_MUL_RESET 0x00u
#define EMMC_CRYPTO_CAPABILITIES2_R_CLK_MUL_FIELD_MASK 0x00ff0000ul
#define EMMC_CRYPTO_CAPABILITIES2_R_CLK_MUL_GET(x) \
   (((x) & 0x00ff0000ul) >> 16)
#define EMMC_CRYPTO_CAPABILITIES2_R_CLK_MUL_SET(x) \
   (((x) << 16) & 0x00ff0000ul)
#define EMMC_CRYPTO_CAPABILITIES2_R_CLK_MUL_MODIFY(r, x) \
   ((((x) << 16) & 0x00ff0000ul) | ((r) & 0xff00fffful))
/* Field member: emmc::crypto::CAPABILITIES2_R.RE_TUNING_MODES             */
#define EMMC_CRYPTO_CAPABILITIES2_R_RE_TUNING_MODES_MSB 15u
#define EMMC_CRYPTO_CAPABILITIES2_R_RE_TUNING_MODES_LSB 14u
#define EMMC_CRYPTO_CAPABILITIES2_R_RE_TUNING_MODES_WIDTH 2u
#define EMMC_CRYPTO_CAPABILITIES2_R_RE_TUNING_MODES_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_RE_TUNING_MODES_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_RE_TUNING_MODES_RESET 0x2u
#define EMMC_CRYPTO_CAPABILITIES2_R_RE_TUNING_MODES_FIELD_MASK 0x0000c000ul
#define EMMC_CRYPTO_CAPABILITIES2_R_RE_TUNING_MODES_GET(x) \
   (((x) & 0x0000c000ul) >> 14)
#define EMMC_CRYPTO_CAPABILITIES2_R_RE_TUNING_MODES_SET(x) \
   (((x) << 14) & 0x0000c000ul)
#define EMMC_CRYPTO_CAPABILITIES2_R_RE_TUNING_MODES_MODIFY(r, x) \
   ((((x) << 14) & 0x0000c000ul) | ((r) & 0xffff3ffful))
/* Field member: emmc::crypto::CAPABILITIES2_R.USE_TUNING_SDR50            */
#define EMMC_CRYPTO_CAPABILITIES2_R_USE_TUNING_SDR50_MSB 13u
#define EMMC_CRYPTO_CAPABILITIES2_R_USE_TUNING_SDR50_LSB 13u
#define EMMC_CRYPTO_CAPABILITIES2_R_USE_TUNING_SDR50_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_USE_TUNING_SDR50_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_USE_TUNING_SDR50_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_USE_TUNING_SDR50_RESET 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_USE_TUNING_SDR50_FIELD_MASK 0x00002000ul
#define EMMC_CRYPTO_CAPABILITIES2_R_USE_TUNING_SDR50_GET(x) \
   (((x) & 0x00002000ul) >> 13)
#define EMMC_CRYPTO_CAPABILITIES2_R_USE_TUNING_SDR50_SET(x) \
   (((x) << 13) & 0x00002000ul)
#define EMMC_CRYPTO_CAPABILITIES2_R_USE_TUNING_SDR50_MODIFY(r, x) \
   ((((x) << 13) & 0x00002000ul) | ((r) & 0xffffdffful))
/* Field member: emmc::crypto::CAPABILITIES2_R.RSVD_44                     */
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_44_MSB 12u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_44_LSB 12u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_44_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_44_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_44_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_44_RESET 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_44_FIELD_MASK 0x00001000ul
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_44_GET(x) \
   (((x) & 0x00001000ul) >> 12)
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_44_SET(x) \
   (((x) << 12) & 0x00001000ul)
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_44_MODIFY(r, x) \
   ((((x) << 12) & 0x00001000ul) | ((r) & 0xffffeffful))
/* Field member: emmc::crypto::CAPABILITIES2_R.RETUNE_CNT                  */
#define EMMC_CRYPTO_CAPABILITIES2_R_RETUNE_CNT_MSB 11u
#define EMMC_CRYPTO_CAPABILITIES2_R_RETUNE_CNT_LSB 8u
#define EMMC_CRYPTO_CAPABILITIES2_R_RETUNE_CNT_WIDTH 4u
#define EMMC_CRYPTO_CAPABILITIES2_R_RETUNE_CNT_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_RETUNE_CNT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_RETUNE_CNT_RESET 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_RETUNE_CNT_FIELD_MASK 0x00000f00ul
#define EMMC_CRYPTO_CAPABILITIES2_R_RETUNE_CNT_GET(x) \
   (((x) & 0x00000f00ul) >> 8)
#define EMMC_CRYPTO_CAPABILITIES2_R_RETUNE_CNT_SET(x) \
   (((x) << 8) & 0x00000f00ul)
#define EMMC_CRYPTO_CAPABILITIES2_R_RETUNE_CNT_MODIFY(r, x) \
   ((((x) << 8) & 0x00000f00ul) | ((r) & 0xfffff0fful))
/* Field member: emmc::crypto::CAPABILITIES2_R.RSVD_39                     */
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_39_MSB 7u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_39_LSB 7u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_39_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_39_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_39_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_39_RESET 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_39_FIELD_MASK 0x00000080ul
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_39_GET(x) \
   (((x) & 0x00000080ul) >> 7)
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_39_SET(x) \
   (((x) << 7) & 0x00000080ul)
#define EMMC_CRYPTO_CAPABILITIES2_R_RSVD_39_MODIFY(r, x) \
   ((((x) << 7) & 0x00000080ul) | ((r) & 0xffffff7ful))
/* Field member: emmc::crypto::CAPABILITIES2_R.DRV_TYPED                   */
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPED_MSB 6u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPED_LSB 6u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPED_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPED_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPED_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPED_RESET 0x1u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPED_FIELD_MASK 0x00000040ul
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPED_GET(x) \
   (((x) & 0x00000040ul) >> 6)
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPED_SET(x) \
   (((x) << 6) & 0x00000040ul)
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPED_MODIFY(r, x) \
   ((((x) << 6) & 0x00000040ul) | ((r) & 0xffffffbful))
/* Field member: emmc::crypto::CAPABILITIES2_R.DRV_TYPEC                   */
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEC_MSB 5u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEC_LSB 5u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEC_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEC_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEC_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEC_RESET 0x1u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEC_FIELD_MASK 0x00000020ul
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEC_GET(x) \
   (((x) & 0x00000020ul) >> 5)
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEC_SET(x) \
   (((x) << 5) & 0x00000020ul)
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEC_MODIFY(r, x) \
   ((((x) << 5) & 0x00000020ul) | ((r) & 0xffffffdful))
/* Field member: emmc::crypto::CAPABILITIES2_R.DRV_TYPEA                   */
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEA_MSB 4u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEA_LSB 4u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEA_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEA_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEA_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEA_RESET 0x1u
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEA_FIELD_MASK 0x00000010ul
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEA_GET(x) \
   (((x) & 0x00000010ul) >> 4)
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEA_SET(x) \
   (((x) << 4) & 0x00000010ul)
#define EMMC_CRYPTO_CAPABILITIES2_R_DRV_TYPEA_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010ul) | ((r) & 0xffffffeful))
/* Field member: emmc::crypto::CAPABILITIES2_R.UHS2_SUPPORT                */
#define EMMC_CRYPTO_CAPABILITIES2_R_UHS2_SUPPORT_MSB 3u
#define EMMC_CRYPTO_CAPABILITIES2_R_UHS2_SUPPORT_LSB 3u
#define EMMC_CRYPTO_CAPABILITIES2_R_UHS2_SUPPORT_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_UHS2_SUPPORT_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_UHS2_SUPPORT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_UHS2_SUPPORT_RESET 0x0u
#define EMMC_CRYPTO_CAPABILITIES2_R_UHS2_SUPPORT_FIELD_MASK 0x00000008ul
#define EMMC_CRYPTO_CAPABILITIES2_R_UHS2_SUPPORT_GET(x) \
   (((x) & 0x00000008ul) >> 3)
#define EMMC_CRYPTO_CAPABILITIES2_R_UHS2_SUPPORT_SET(x) \
   (((x) << 3) & 0x00000008ul)
#define EMMC_CRYPTO_CAPABILITIES2_R_UHS2_SUPPORT_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: emmc::crypto::CAPABILITIES2_R.DDR50_SUPPORT               */
#define EMMC_CRYPTO_CAPABILITIES2_R_DDR50_SUPPORT_MSB 2u
#define EMMC_CRYPTO_CAPABILITIES2_R_DDR50_SUPPORT_LSB 2u
#define EMMC_CRYPTO_CAPABILITIES2_R_DDR50_SUPPORT_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_DDR50_SUPPORT_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_DDR50_SUPPORT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_DDR50_SUPPORT_RESET 0x1u
#define EMMC_CRYPTO_CAPABILITIES2_R_DDR50_SUPPORT_FIELD_MASK 0x00000004ul
#define EMMC_CRYPTO_CAPABILITIES2_R_DDR50_SUPPORT_GET(x) \
   (((x) & 0x00000004ul) >> 2)
#define EMMC_CRYPTO_CAPABILITIES2_R_DDR50_SUPPORT_SET(x) \
   (((x) << 2) & 0x00000004ul)
#define EMMC_CRYPTO_CAPABILITIES2_R_DDR50_SUPPORT_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004ul) | ((r) & 0xfffffffbul))
/* Field member: emmc::crypto::CAPABILITIES2_R.SDR104_SUPPORT              */
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR104_SUPPORT_MSB 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR104_SUPPORT_LSB 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR104_SUPPORT_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR104_SUPPORT_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR104_SUPPORT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR104_SUPPORT_RESET 0x1u
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR104_SUPPORT_FIELD_MASK 0x00000002ul
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR104_SUPPORT_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR104_SUPPORT_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR104_SUPPORT_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: emmc::crypto::CAPABILITIES2_R.SDR50_SUPPORT               */
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR50_SUPPORT_MSB 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR50_SUPPORT_LSB 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR50_SUPPORT_WIDTH 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR50_SUPPORT_READ_ACCESS 1u
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR50_SUPPORT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR50_SUPPORT_RESET 0x1u
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR50_SUPPORT_FIELD_MASK 0x00000001ul
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR50_SUPPORT_GET(x) ((x) & 0x00000001ul)
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR50_SUPPORT_SET(x) ((x) & 0x00000001ul)
#define EMMC_CRYPTO_CAPABILITIES2_R_SDR50_SUPPORT_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: emmc::crypto::CURR_CAPABILITIES1_R                       */
/* Register template: emmc::crypto::CURR_CAPABILITIES1_R                   */
/* Field member: emmc::crypto::CURR_CAPABILITIES1_R.RSVD_31_24             */
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_RSVD_31_24_MSB 31u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_RSVD_31_24_LSB 24u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_RSVD_31_24_WIDTH 8u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_RSVD_31_24_READ_ACCESS 1u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_RSVD_31_24_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_RSVD_31_24_RESET 0x00u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_RSVD_31_24_FIELD_MASK 0xff000000ul
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_RSVD_31_24_GET(x) \
   (((x) & 0xff000000ul) >> 24)
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_RSVD_31_24_SET(x) \
   (((x) << 24) & 0xff000000ul)
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_RSVD_31_24_MODIFY(r, x) \
   ((((x) << 24) & 0xff000000ul) | ((r) & 0x00fffffful))
/* Field member: emmc::crypto::CURR_CAPABILITIES1_R.MAX_CUR_18V            */
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_18V_MSB 23u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_18V_LSB 16u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_18V_WIDTH 8u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_18V_READ_ACCESS 1u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_18V_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_18V_RESET 0x00u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_18V_FIELD_MASK 0x00ff0000ul
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_18V_GET(x) \
   (((x) & 0x00ff0000ul) >> 16)
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_18V_SET(x) \
   (((x) << 16) & 0x00ff0000ul)
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_18V_MODIFY(r, x) \
   ((((x) << 16) & 0x00ff0000ul) | ((r) & 0xff00fffful))
/* Field member: emmc::crypto::CURR_CAPABILITIES1_R.MAX_CUR_30V            */
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_30V_MSB 15u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_30V_LSB 8u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_30V_WIDTH 8u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_30V_READ_ACCESS 1u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_30V_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_30V_RESET 0x00u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_30V_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_30V_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_30V_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_30V_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto::CURR_CAPABILITIES1_R.MAX_CUR_33V            */
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_33V_MSB 7u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_33V_LSB 0u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_33V_WIDTH 8u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_33V_READ_ACCESS 1u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_33V_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_33V_RESET 0x00u
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_33V_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_33V_GET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_33V_SET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_CURR_CAPABILITIES1_R_MAX_CUR_33V_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto::CURR_CAPABILITIES2_R                       */
/* Register template: emmc::crypto::CURR_CAPABILITIES2_R                   */
/* Field member: emmc::crypto::CURR_CAPABILITIES2_R.RSVD_63_40             */
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_RSVD_63_40_MSB 31u
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_RSVD_63_40_LSB 8u
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_RSVD_63_40_WIDTH 24u
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_RSVD_63_40_READ_ACCESS 1u
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_RSVD_63_40_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_RSVD_63_40_RESET 0x000000ul
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_RSVD_63_40_FIELD_MASK 0xffffff00ul
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_RSVD_63_40_GET(x) \
   (((x) & 0xffffff00ul) >> 8)
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_RSVD_63_40_SET(x) \
   (((x) << 8) & 0xffffff00ul)
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_RSVD_63_40_MODIFY(r, x) \
   ((((x) << 8) & 0xffffff00ul) | ((r) & 0x000000fful))
/* Field member: emmc::crypto::CURR_CAPABILITIES2_R.MAX_CUR_VDD2_18V       */
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_MAX_CUR_VDD2_18V_MSB 7u
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_MAX_CUR_VDD2_18V_LSB 0u
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_MAX_CUR_VDD2_18V_WIDTH 8u
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_MAX_CUR_VDD2_18V_READ_ACCESS 1u
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_MAX_CUR_VDD2_18V_WRITE_ACCESS 0u
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_MAX_CUR_VDD2_18V_RESET 0x00u
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_MAX_CUR_VDD2_18V_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_MAX_CUR_VDD2_18V_GET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_MAX_CUR_VDD2_18V_SET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_CURR_CAPABILITIES2_R_MAX_CUR_VDD2_18V_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto::FORCE_AUTO_CMD_STAT_R                      */
/* Register template: emmc::crypto::FORCE_AUTO_CMD_STAT_R                  */
/* Field member: emmc::crypto::FORCE_AUTO_CMD_STAT_R.RSVD_15_8             */
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_15_8_MSB 15u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_15_8_LSB 8u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_15_8_WIDTH 8u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_15_8_READ_ACCESS 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_15_8_WRITE_ACCESS 0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_15_8_RESET 0x00u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_15_8_FIELD_MASK 0xff00u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_15_8_GET(x) \
   (((x) & 0xff00u) >> 8)
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_15_8_SET(x) \
   (((x) << 8) & 0xff00u)
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_15_8_MODIFY(r, x) \
   ((((x) << 8) & 0xff00u) | ((r) & 0x00ffu))
/* Field member: emmc::crypto::FORCE_AUTO_CMD_STAT_R.FORCE_CMD_NOT_ISSUED_AUTO_CMD12 */
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_CMD_NOT_ISSUED_AUTO_CMD12_MSB 7u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_CMD_NOT_ISSUED_AUTO_CMD12_LSB 7u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_CMD_NOT_ISSUED_AUTO_CMD12_WIDTH 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_CMD_NOT_ISSUED_AUTO_CMD12_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_CMD_NOT_ISSUED_AUTO_CMD12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_CMD_NOT_ISSUED_AUTO_CMD12_RESET 0x0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_CMD_NOT_ISSUED_AUTO_CMD12_FIELD_MASK 0x0080u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_CMD_NOT_ISSUED_AUTO_CMD12_GET(x) \
   (((x) & 0x0080u) >> 7)
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_CMD_NOT_ISSUED_AUTO_CMD12_SET(x) \
   (((x) << 7) & 0x0080u)
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_CMD_NOT_ISSUED_AUTO_CMD12_MODIFY(r, x) \
   ((((x) << 7) & 0x0080u) | ((r) & 0xff7fu))
/* Field member: emmc::crypto::FORCE_AUTO_CMD_STAT_R.RSVD_6                */
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_6_MSB 6u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_6_LSB 6u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_6_WIDTH 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_6_READ_ACCESS 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_6_RESET 0x0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_6_FIELD_MASK 0x0040u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_6_GET(x) \
   (((x) & 0x0040u) >> 6)
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_6_SET(x) \
   (((x) << 6) & 0x0040u)
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_RSVD_6_MODIFY(r, x) \
   ((((x) << 6) & 0x0040u) | ((r) & 0xffbfu))
/* Field member: emmc::crypto::FORCE_AUTO_CMD_STAT_R.FORCE_AUTO_CMD_RESP_ERR */
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_RESP_ERR_MSB 5u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_RESP_ERR_LSB 5u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_RESP_ERR_WIDTH 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_RESP_ERR_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_RESP_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_RESP_ERR_RESET 0x0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_RESP_ERR_FIELD_MASK 0x0020u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_RESP_ERR_GET(x) \
   (((x) & 0x0020u) >> 5)
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_RESP_ERR_SET(x) \
   (((x) << 5) & 0x0020u)
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_RESP_ERR_MODIFY(r, x) \
   ((((x) << 5) & 0x0020u) | ((r) & 0xffdfu))
/* Field member: emmc::crypto::FORCE_AUTO_CMD_STAT_R.FORCE_AUTO_CMD_IDX_ERR */
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_IDX_ERR_MSB 4u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_IDX_ERR_LSB 4u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_IDX_ERR_WIDTH 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_IDX_ERR_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_IDX_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_IDX_ERR_RESET 0x0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_IDX_ERR_FIELD_MASK 0x0010u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_IDX_ERR_GET(x) \
   (((x) & 0x0010u) >> 4)
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_IDX_ERR_SET(x) \
   (((x) << 4) & 0x0010u)
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_IDX_ERR_MODIFY(r, x) \
   ((((x) << 4) & 0x0010u) | ((r) & 0xffefu))
/* Field member: emmc::crypto::FORCE_AUTO_CMD_STAT_R.FORCE_AUTO_CMD_EBIT_ERR */
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_EBIT_ERR_MSB 3u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_EBIT_ERR_LSB 3u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_EBIT_ERR_WIDTH 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_EBIT_ERR_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_EBIT_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_EBIT_ERR_RESET 0x0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_EBIT_ERR_FIELD_MASK 0x0008u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_EBIT_ERR_GET(x) \
   (((x) & 0x0008u) >> 3)
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_EBIT_ERR_SET(x) \
   (((x) << 3) & 0x0008u)
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_EBIT_ERR_MODIFY(r, x) \
   ((((x) << 3) & 0x0008u) | ((r) & 0xfff7u))
/* Field member: emmc::crypto::FORCE_AUTO_CMD_STAT_R.FORCE_AUTO_CMD_CRC_ERR */
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_CRC_ERR_MSB 2u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_CRC_ERR_LSB 2u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_CRC_ERR_WIDTH 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_CRC_ERR_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_CRC_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_CRC_ERR_RESET 0x0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_CRC_ERR_FIELD_MASK 0x0004u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_CRC_ERR_GET(x) \
   (((x) & 0x0004u) >> 2)
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_CRC_ERR_SET(x) \
   (((x) << 2) & 0x0004u)
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_CRC_ERR_MODIFY(r, x) \
   ((((x) << 2) & 0x0004u) | ((r) & 0xfffbu))
/* Field member: emmc::crypto::FORCE_AUTO_CMD_STAT_R.FORCE_AUTO_CMD_TOUT_ERR */
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_TOUT_ERR_MSB 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_TOUT_ERR_LSB 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_TOUT_ERR_WIDTH 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_TOUT_ERR_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_TOUT_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_TOUT_ERR_RESET 0x0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_TOUT_ERR_FIELD_MASK 0x0002u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_TOUT_ERR_GET(x) \
   (((x) & 0x0002u) >> 1)
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_TOUT_ERR_SET(x) \
   (((x) << 1) & 0x0002u)
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD_TOUT_ERR_MODIFY(r, x) \
   ((((x) << 1) & 0x0002u) | ((r) & 0xfffdu))
/* Field member: emmc::crypto::FORCE_AUTO_CMD_STAT_R.FORCE_AUTO_CMD12_NOT_EXEC */
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD12_NOT_EXEC_MSB 0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD12_NOT_EXEC_LSB 0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD12_NOT_EXEC_WIDTH 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD12_NOT_EXEC_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD12_NOT_EXEC_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD12_NOT_EXEC_RESET 0x0u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD12_NOT_EXEC_FIELD_MASK 0x0001u
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD12_NOT_EXEC_GET(x) \
   ((x) & 0x0001u)
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD12_NOT_EXEC_SET(x) \
   ((x) & 0x0001u)
#define EMMC_CRYPTO_FORCE_AUTO_CMD_STAT_R_FORCE_AUTO_CMD12_NOT_EXEC_MODIFY(r, x) \
   (((x) & 0x0001u) | ((r) & 0xfffeu))

/* Register type: emmc::crypto::FORCE_ERROR_INT_STAT_R                     */
/* Register template: emmc::crypto::FORCE_ERROR_INT_STAT_R                 */
/* Field member: emmc::crypto::FORCE_ERROR_INT_STAT_R.FORCE_VENDOR_ERR3    */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR3_MSB 15u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR3_LSB 15u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR3_WIDTH 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR3_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR3_RESET 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR3_FIELD_MASK 0x8000u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR3_GET(x) \
   (((x) & 0x8000u) >> 15)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR3_SET(x) \
   (((x) << 15) & 0x8000u)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR3_MODIFY(r, x) \
   ((((x) << 15) & 0x8000u) | ((r) & 0x7fffu))
/* Field member: emmc::crypto::FORCE_ERROR_INT_STAT_R.FORCE_VENDOR_ERR2    */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR2_MSB 14u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR2_LSB 14u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR2_WIDTH 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR2_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR2_RESET 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR2_FIELD_MASK 0x4000u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR2_GET(x) \
   (((x) & 0x4000u) >> 14)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR2_SET(x) \
   (((x) << 14) & 0x4000u)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR2_MODIFY(r, x) \
   ((((x) << 14) & 0x4000u) | ((r) & 0xbfffu))
/* Field member: emmc::crypto::FORCE_ERROR_INT_STAT_R.FORCE_VENDOR_ERR1    */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR1_MSB 13u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR1_LSB 13u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR1_WIDTH 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR1_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR1_RESET 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR1_FIELD_MASK 0x2000u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR1_GET(x) \
   (((x) & 0x2000u) >> 13)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR1_SET(x) \
   (((x) << 13) & 0x2000u)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_VENDOR_ERR1_MODIFY(r, x) \
   ((((x) << 13) & 0x2000u) | ((r) & 0xdfffu))
/* Field member: emmc::crypto::FORCE_ERROR_INT_STAT_R.FORCE_BOOT_ACK_ERR   */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_BOOT_ACK_ERR_MSB 12u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_BOOT_ACK_ERR_LSB 12u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_BOOT_ACK_ERR_WIDTH 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_BOOT_ACK_ERR_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_BOOT_ACK_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_BOOT_ACK_ERR_RESET 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_BOOT_ACK_ERR_FIELD_MASK 0x1000u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_BOOT_ACK_ERR_GET(x) \
   (((x) & 0x1000u) >> 12)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_BOOT_ACK_ERR_SET(x) \
   (((x) << 12) & 0x1000u)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_BOOT_ACK_ERR_MODIFY(r, x) \
   ((((x) << 12) & 0x1000u) | ((r) & 0xefffu))
/* Field member: emmc::crypto::FORCE_ERROR_INT_STAT_R.FORCE_RESP_ERR       */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_RESP_ERR_MSB 11u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_RESP_ERR_LSB 11u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_RESP_ERR_WIDTH 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_RESP_ERR_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_RESP_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_RESP_ERR_RESET 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_RESP_ERR_FIELD_MASK 0x0800u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_RESP_ERR_GET(x) \
   (((x) & 0x0800u) >> 11)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_RESP_ERR_SET(x) \
   (((x) << 11) & 0x0800u)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_RESP_ERR_MODIFY(r, x) \
   ((((x) << 11) & 0x0800u) | ((r) & 0xf7ffu))
/* Field member: emmc::crypto::FORCE_ERROR_INT_STAT_R.FORCE_TUNING_ERR     */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_TUNING_ERR_MSB 10u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_TUNING_ERR_LSB 10u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_TUNING_ERR_WIDTH 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_TUNING_ERR_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_TUNING_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_TUNING_ERR_RESET 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_TUNING_ERR_FIELD_MASK 0x0400u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_TUNING_ERR_GET(x) \
   (((x) & 0x0400u) >> 10)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_TUNING_ERR_SET(x) \
   (((x) << 10) & 0x0400u)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_TUNING_ERR_MODIFY(r, x) \
   ((((x) << 10) & 0x0400u) | ((r) & 0xfbffu))
/* Field member: emmc::crypto::FORCE_ERROR_INT_STAT_R.FORCE_ADMA_ERR       */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_ADMA_ERR_MSB 9u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_ADMA_ERR_LSB 9u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_ADMA_ERR_WIDTH 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_ADMA_ERR_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_ADMA_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_ADMA_ERR_RESET 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_ADMA_ERR_FIELD_MASK 0x0200u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_ADMA_ERR_GET(x) \
   (((x) & 0x0200u) >> 9)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_ADMA_ERR_SET(x) \
   (((x) << 9) & 0x0200u)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_ADMA_ERR_MODIFY(r, x) \
   ((((x) << 9) & 0x0200u) | ((r) & 0xfdffu))
/* Field member: emmc::crypto::FORCE_ERROR_INT_STAT_R.FORCE_AUTO_CMD_ERR   */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_AUTO_CMD_ERR_MSB 8u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_AUTO_CMD_ERR_LSB 8u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_AUTO_CMD_ERR_WIDTH 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_AUTO_CMD_ERR_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_AUTO_CMD_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_AUTO_CMD_ERR_RESET 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_AUTO_CMD_ERR_FIELD_MASK 0x0100u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_AUTO_CMD_ERR_GET(x) \
   (((x) & 0x0100u) >> 8)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_AUTO_CMD_ERR_SET(x) \
   (((x) << 8) & 0x0100u)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_AUTO_CMD_ERR_MODIFY(r, x) \
   ((((x) << 8) & 0x0100u) | ((r) & 0xfeffu))
/* Field member: emmc::crypto::FORCE_ERROR_INT_STAT_R.FORCE_CUR_LMT_ERR    */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CUR_LMT_ERR_MSB 7u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CUR_LMT_ERR_LSB 7u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CUR_LMT_ERR_WIDTH 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CUR_LMT_ERR_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CUR_LMT_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CUR_LMT_ERR_RESET 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CUR_LMT_ERR_FIELD_MASK 0x0080u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CUR_LMT_ERR_GET(x) \
   (((x) & 0x0080u) >> 7)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CUR_LMT_ERR_SET(x) \
   (((x) << 7) & 0x0080u)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CUR_LMT_ERR_MODIFY(r, x) \
   ((((x) << 7) & 0x0080u) | ((r) & 0xff7fu))
/* Field member: emmc::crypto::FORCE_ERROR_INT_STAT_R.FORCE_DATA_END_BIT_ERR */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_END_BIT_ERR_MSB 6u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_END_BIT_ERR_LSB 6u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_END_BIT_ERR_WIDTH 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_END_BIT_ERR_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_END_BIT_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_END_BIT_ERR_RESET 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_END_BIT_ERR_FIELD_MASK 0x0040u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_END_BIT_ERR_GET(x) \
   (((x) & 0x0040u) >> 6)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_END_BIT_ERR_SET(x) \
   (((x) << 6) & 0x0040u)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_END_BIT_ERR_MODIFY(r, x) \
   ((((x) << 6) & 0x0040u) | ((r) & 0xffbfu))
/* Field member: emmc::crypto::FORCE_ERROR_INT_STAT_R.FORCE_DATA_CRC_ERR   */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_CRC_ERR_MSB 5u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_CRC_ERR_LSB 5u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_CRC_ERR_WIDTH 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_CRC_ERR_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_CRC_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_CRC_ERR_RESET 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_CRC_ERR_FIELD_MASK 0x0020u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_CRC_ERR_GET(x) \
   (((x) & 0x0020u) >> 5)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_CRC_ERR_SET(x) \
   (((x) << 5) & 0x0020u)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_CRC_ERR_MODIFY(r, x) \
   ((((x) << 5) & 0x0020u) | ((r) & 0xffdfu))
/* Field member: emmc::crypto::FORCE_ERROR_INT_STAT_R.FORCE_DATA_TOUT_ERR  */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_TOUT_ERR_MSB 4u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_TOUT_ERR_LSB 4u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_TOUT_ERR_WIDTH 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_TOUT_ERR_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_TOUT_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_TOUT_ERR_RESET 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_TOUT_ERR_FIELD_MASK 0x0010u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_TOUT_ERR_GET(x) \
   (((x) & 0x0010u) >> 4)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_TOUT_ERR_SET(x) \
   (((x) << 4) & 0x0010u)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_DATA_TOUT_ERR_MODIFY(r, x) \
   ((((x) << 4) & 0x0010u) | ((r) & 0xffefu))
/* Field member: emmc::crypto::FORCE_ERROR_INT_STAT_R.FORCE_CMD_IDX_ERR    */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_IDX_ERR_MSB 3u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_IDX_ERR_LSB 3u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_IDX_ERR_WIDTH 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_IDX_ERR_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_IDX_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_IDX_ERR_RESET 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_IDX_ERR_FIELD_MASK 0x0008u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_IDX_ERR_GET(x) \
   (((x) & 0x0008u) >> 3)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_IDX_ERR_SET(x) \
   (((x) << 3) & 0x0008u)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_IDX_ERR_MODIFY(r, x) \
   ((((x) << 3) & 0x0008u) | ((r) & 0xfff7u))
/* Field member: emmc::crypto::FORCE_ERROR_INT_STAT_R.FORCE_CMD_END_BIT_ERR */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_END_BIT_ERR_MSB 2u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_END_BIT_ERR_LSB 2u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_END_BIT_ERR_WIDTH 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_END_BIT_ERR_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_END_BIT_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_END_BIT_ERR_RESET 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_END_BIT_ERR_FIELD_MASK 0x0004u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_END_BIT_ERR_GET(x) \
   (((x) & 0x0004u) >> 2)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_END_BIT_ERR_SET(x) \
   (((x) << 2) & 0x0004u)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_END_BIT_ERR_MODIFY(r, x) \
   ((((x) << 2) & 0x0004u) | ((r) & 0xfffbu))
/* Field member: emmc::crypto::FORCE_ERROR_INT_STAT_R.FORCE_CMD_CRC_ERR    */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_CRC_ERR_MSB 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_CRC_ERR_LSB 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_CRC_ERR_WIDTH 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_CRC_ERR_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_CRC_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_CRC_ERR_RESET 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_CRC_ERR_FIELD_MASK 0x0002u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_CRC_ERR_GET(x) \
   (((x) & 0x0002u) >> 1)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_CRC_ERR_SET(x) \
   (((x) << 1) & 0x0002u)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_CRC_ERR_MODIFY(r, x) \
   ((((x) << 1) & 0x0002u) | ((r) & 0xfffdu))
/* Field member: emmc::crypto::FORCE_ERROR_INT_STAT_R.FORCE_CMD_TOUT_ERR   */
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_TOUT_ERR_MSB 0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_TOUT_ERR_LSB 0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_TOUT_ERR_WIDTH 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_TOUT_ERR_READ_ACCESS 0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_TOUT_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_TOUT_ERR_RESET 0x0u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_TOUT_ERR_FIELD_MASK 0x0001u
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_TOUT_ERR_GET(x) \
   ((x) & 0x0001u)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_TOUT_ERR_SET(x) \
   ((x) & 0x0001u)
#define EMMC_CRYPTO_FORCE_ERROR_INT_STAT_R_FORCE_CMD_TOUT_ERR_MODIFY(r, x) \
   (((x) & 0x0001u) | ((r) & 0xfffeu))

/* Register type: emmc::crypto::ADMA_ERR_STAT_R                            */
/* Register template: emmc::crypto::ADMA_ERR_STAT_R                        */
/* Field member: emmc::crypto::ADMA_ERR_STAT_R.RSVD_7_3                    */
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_RSVD_7_3_MSB 7u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_RSVD_7_3_LSB 3u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_RSVD_7_3_WIDTH 5u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_RSVD_7_3_READ_ACCESS 1u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_RSVD_7_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_RSVD_7_3_RESET 0x00u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_RSVD_7_3_FIELD_MASK 0xf8u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_RSVD_7_3_GET(x) (((x) & 0xf8u) >> 3)
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_RSVD_7_3_SET(x) (((x) << 3) & 0xf8u)
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_RSVD_7_3_MODIFY(r, x) \
   ((((x) << 3) & 0xf8u) | ((r) & 0x07u))
/* Field member: emmc::crypto::ADMA_ERR_STAT_R.ADMA_LEN_ERR                */
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_LEN_ERR_MSB 2u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_LEN_ERR_LSB 2u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_LEN_ERR_WIDTH 1u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_LEN_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_LEN_ERR_WRITE_ACCESS 0u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_LEN_ERR_RESET 0x0u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_LEN_ERR_FIELD_MASK 0x04u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_LEN_ERR_GET(x) (((x) & 0x04u) >> 2)
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_LEN_ERR_SET(x) (((x) << 2) & 0x04u)
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_LEN_ERR_MODIFY(r, x) \
   ((((x) << 2) & 0x04u) | ((r) & 0xfbu))
/* Field member: emmc::crypto::ADMA_ERR_STAT_R.ADMA_ERR_STATES             */
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_ERR_STATES_MSB 1u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_ERR_STATES_LSB 0u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_ERR_STATES_WIDTH 2u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_ERR_STATES_READ_ACCESS 1u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_ERR_STATES_WRITE_ACCESS 0u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_ERR_STATES_RESET 0x0u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_ERR_STATES_FIELD_MASK 0x03u
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_ERR_STATES_GET(x) ((x) & 0x03u)
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_ERR_STATES_SET(x) ((x) & 0x03u)
#define EMMC_CRYPTO_ADMA_ERR_STAT_R_ADMA_ERR_STATES_MODIFY(r, x) \
   (((x) & 0x03u) | ((r) & 0xfcu))

/* Register type: emmc::crypto::ADMA_SA_LOW_R                              */
/* Register template: emmc::crypto::ADMA_SA_LOW_R                          */
/* Field member: emmc::crypto::ADMA_SA_LOW_R.ADMA_SA_LOW                   */
#define EMMC_CRYPTO_ADMA_SA_LOW_R_ADMA_SA_LOW_MSB 31u
#define EMMC_CRYPTO_ADMA_SA_LOW_R_ADMA_SA_LOW_LSB 0u
#define EMMC_CRYPTO_ADMA_SA_LOW_R_ADMA_SA_LOW_WIDTH 32u
#define EMMC_CRYPTO_ADMA_SA_LOW_R_ADMA_SA_LOW_READ_ACCESS 1u
#define EMMC_CRYPTO_ADMA_SA_LOW_R_ADMA_SA_LOW_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ADMA_SA_LOW_R_ADMA_SA_LOW_RESET 0x00000000ul
#define EMMC_CRYPTO_ADMA_SA_LOW_R_ADMA_SA_LOW_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_ADMA_SA_LOW_R_ADMA_SA_LOW_GET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_ADMA_SA_LOW_R_ADMA_SA_LOW_SET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_ADMA_SA_LOW_R_ADMA_SA_LOW_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto::ADMA_SA_HIGH_R                             */
/* Register template: emmc::crypto::ADMA_SA_HIGH_R                         */
/* Field member: emmc::crypto::ADMA_SA_HIGH_R.ADMA_SA_HIGH                 */
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_ADMA_SA_HIGH_MSB 31u
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_ADMA_SA_HIGH_LSB 0u
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_ADMA_SA_HIGH_WIDTH 32u
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_ADMA_SA_HIGH_READ_ACCESS 1u
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_ADMA_SA_HIGH_WRITE_ACCESS 1u
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_ADMA_SA_HIGH_RESET 0x00000000ul
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_ADMA_SA_HIGH_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_ADMA_SA_HIGH_GET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_ADMA_SA_HIGH_SET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_ADMA_SA_HIGH_R_ADMA_SA_HIGH_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto::PRESET_INIT_R                              */
/* Register template: emmc::crypto::PRESET_INIT_R                          */
/* Field member: emmc::crypto::PRESET_INIT_R.DRV_SEL_VAL                   */
#define EMMC_CRYPTO_PRESET_INIT_R_DRV_SEL_VAL_MSB 15u
#define EMMC_CRYPTO_PRESET_INIT_R_DRV_SEL_VAL_LSB 14u
#define EMMC_CRYPTO_PRESET_INIT_R_DRV_SEL_VAL_WIDTH 2u
#define EMMC_CRYPTO_PRESET_INIT_R_DRV_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_INIT_R_DRV_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_INIT_R_DRV_SEL_VAL_RESET 0x0u
#define EMMC_CRYPTO_PRESET_INIT_R_DRV_SEL_VAL_FIELD_MASK 0xc000u
#define EMMC_CRYPTO_PRESET_INIT_R_DRV_SEL_VAL_GET(x) (((x) & 0xc000u) >> 14)
#define EMMC_CRYPTO_PRESET_INIT_R_DRV_SEL_VAL_SET(x) \
   (((x) << 14) & 0xc000u)
#define EMMC_CRYPTO_PRESET_INIT_R_DRV_SEL_VAL_MODIFY(r, x) \
   ((((x) << 14) & 0xc000u) | ((r) & 0x3fffu))
/* Field member: emmc::crypto::PRESET_INIT_R.RSVD_13_11                    */
#define EMMC_CRYPTO_PRESET_INIT_R_RSVD_13_11_MSB 13u
#define EMMC_CRYPTO_PRESET_INIT_R_RSVD_13_11_LSB 11u
#define EMMC_CRYPTO_PRESET_INIT_R_RSVD_13_11_WIDTH 3u
#define EMMC_CRYPTO_PRESET_INIT_R_RSVD_13_11_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_INIT_R_RSVD_13_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_INIT_R_RSVD_13_11_RESET 0x0u
#define EMMC_CRYPTO_PRESET_INIT_R_RSVD_13_11_FIELD_MASK 0x3800u
#define EMMC_CRYPTO_PRESET_INIT_R_RSVD_13_11_GET(x) (((x) & 0x3800u) >> 11)
#define EMMC_CRYPTO_PRESET_INIT_R_RSVD_13_11_SET(x) (((x) << 11) & 0x3800u)
#define EMMC_CRYPTO_PRESET_INIT_R_RSVD_13_11_MODIFY(r, x) \
   ((((x) << 11) & 0x3800u) | ((r) & 0xc7ffu))
/* Field member: emmc::crypto::PRESET_INIT_R.CLK_GEN_SEL_VAL               */
#define EMMC_CRYPTO_PRESET_INIT_R_CLK_GEN_SEL_VAL_MSB 10u
#define EMMC_CRYPTO_PRESET_INIT_R_CLK_GEN_SEL_VAL_LSB 10u
#define EMMC_CRYPTO_PRESET_INIT_R_CLK_GEN_SEL_VAL_WIDTH 1u
#define EMMC_CRYPTO_PRESET_INIT_R_CLK_GEN_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_INIT_R_CLK_GEN_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_INIT_R_CLK_GEN_SEL_VAL_RESET 0x0u
#define EMMC_CRYPTO_PRESET_INIT_R_CLK_GEN_SEL_VAL_FIELD_MASK 0x0400u
#define EMMC_CRYPTO_PRESET_INIT_R_CLK_GEN_SEL_VAL_GET(x) \
   (((x) & 0x0400u) >> 10)
#define EMMC_CRYPTO_PRESET_INIT_R_CLK_GEN_SEL_VAL_SET(x) \
   (((x) << 10) & 0x0400u)
#define EMMC_CRYPTO_PRESET_INIT_R_CLK_GEN_SEL_VAL_MODIFY(r, x) \
   ((((x) << 10) & 0x0400u) | ((r) & 0xfbffu))
/* Field member: emmc::crypto::PRESET_INIT_R.FREQ_SEL_VAL                  */
#define EMMC_CRYPTO_PRESET_INIT_R_FREQ_SEL_VAL_MSB 9u
#define EMMC_CRYPTO_PRESET_INIT_R_FREQ_SEL_VAL_LSB 0u
#define EMMC_CRYPTO_PRESET_INIT_R_FREQ_SEL_VAL_WIDTH 10u
#define EMMC_CRYPTO_PRESET_INIT_R_FREQ_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_INIT_R_FREQ_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_INIT_R_FREQ_SEL_VAL_RESET 0x000u
#define EMMC_CRYPTO_PRESET_INIT_R_FREQ_SEL_VAL_FIELD_MASK 0x03ffu
#define EMMC_CRYPTO_PRESET_INIT_R_FREQ_SEL_VAL_GET(x) ((x) & 0x03ffu)
#define EMMC_CRYPTO_PRESET_INIT_R_FREQ_SEL_VAL_SET(x) ((x) & 0x03ffu)
#define EMMC_CRYPTO_PRESET_INIT_R_FREQ_SEL_VAL_MODIFY(r, x) \
   (((x) & 0x03ffu) | ((r) & 0xfc00u))

/* Register type: emmc::crypto::PRESET_DS_R                                */
/* Register template: emmc::crypto::PRESET_DS_R                            */
/* Field member: emmc::crypto::PRESET_DS_R.DRV_SEL_VAL                     */
#define EMMC_CRYPTO_PRESET_DS_R_DRV_SEL_VAL_MSB 15u
#define EMMC_CRYPTO_PRESET_DS_R_DRV_SEL_VAL_LSB 14u
#define EMMC_CRYPTO_PRESET_DS_R_DRV_SEL_VAL_WIDTH 2u
#define EMMC_CRYPTO_PRESET_DS_R_DRV_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_DS_R_DRV_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_DS_R_DRV_SEL_VAL_RESET 0x0u
#define EMMC_CRYPTO_PRESET_DS_R_DRV_SEL_VAL_FIELD_MASK 0xc000u
#define EMMC_CRYPTO_PRESET_DS_R_DRV_SEL_VAL_GET(x) (((x) & 0xc000u) >> 14)
#define EMMC_CRYPTO_PRESET_DS_R_DRV_SEL_VAL_SET(x) (((x) << 14) & 0xc000u)
#define EMMC_CRYPTO_PRESET_DS_R_DRV_SEL_VAL_MODIFY(r, x) \
   ((((x) << 14) & 0xc000u) | ((r) & 0x3fffu))
/* Field member: emmc::crypto::PRESET_DS_R.RSVD_13_11                      */
#define EMMC_CRYPTO_PRESET_DS_R_RSVD_13_11_MSB 13u
#define EMMC_CRYPTO_PRESET_DS_R_RSVD_13_11_LSB 11u
#define EMMC_CRYPTO_PRESET_DS_R_RSVD_13_11_WIDTH 3u
#define EMMC_CRYPTO_PRESET_DS_R_RSVD_13_11_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_DS_R_RSVD_13_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_DS_R_RSVD_13_11_RESET 0x0u
#define EMMC_CRYPTO_PRESET_DS_R_RSVD_13_11_FIELD_MASK 0x3800u
#define EMMC_CRYPTO_PRESET_DS_R_RSVD_13_11_GET(x) (((x) & 0x3800u) >> 11)
#define EMMC_CRYPTO_PRESET_DS_R_RSVD_13_11_SET(x) (((x) << 11) & 0x3800u)
#define EMMC_CRYPTO_PRESET_DS_R_RSVD_13_11_MODIFY(r, x) \
   ((((x) << 11) & 0x3800u) | ((r) & 0xc7ffu))
/* Field member: emmc::crypto::PRESET_DS_R.CLK_GEN_SEL_VAL                 */
#define EMMC_CRYPTO_PRESET_DS_R_CLK_GEN_SEL_VAL_MSB 10u
#define EMMC_CRYPTO_PRESET_DS_R_CLK_GEN_SEL_VAL_LSB 10u
#define EMMC_CRYPTO_PRESET_DS_R_CLK_GEN_SEL_VAL_WIDTH 1u
#define EMMC_CRYPTO_PRESET_DS_R_CLK_GEN_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_DS_R_CLK_GEN_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_DS_R_CLK_GEN_SEL_VAL_RESET 0x0u
#define EMMC_CRYPTO_PRESET_DS_R_CLK_GEN_SEL_VAL_FIELD_MASK 0x0400u
#define EMMC_CRYPTO_PRESET_DS_R_CLK_GEN_SEL_VAL_GET(x) \
   (((x) & 0x0400u) >> 10)
#define EMMC_CRYPTO_PRESET_DS_R_CLK_GEN_SEL_VAL_SET(x) \
   (((x) << 10) & 0x0400u)
#define EMMC_CRYPTO_PRESET_DS_R_CLK_GEN_SEL_VAL_MODIFY(r, x) \
   ((((x) << 10) & 0x0400u) | ((r) & 0xfbffu))
/* Field member: emmc::crypto::PRESET_DS_R.FREQ_SEL_VAL                    */
#define EMMC_CRYPTO_PRESET_DS_R_FREQ_SEL_VAL_MSB 9u
#define EMMC_CRYPTO_PRESET_DS_R_FREQ_SEL_VAL_LSB 0u
#define EMMC_CRYPTO_PRESET_DS_R_FREQ_SEL_VAL_WIDTH 10u
#define EMMC_CRYPTO_PRESET_DS_R_FREQ_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_DS_R_FREQ_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_DS_R_FREQ_SEL_VAL_RESET 0x000u
#define EMMC_CRYPTO_PRESET_DS_R_FREQ_SEL_VAL_FIELD_MASK 0x03ffu
#define EMMC_CRYPTO_PRESET_DS_R_FREQ_SEL_VAL_GET(x) ((x) & 0x03ffu)
#define EMMC_CRYPTO_PRESET_DS_R_FREQ_SEL_VAL_SET(x) ((x) & 0x03ffu)
#define EMMC_CRYPTO_PRESET_DS_R_FREQ_SEL_VAL_MODIFY(r, x) \
   (((x) & 0x03ffu) | ((r) & 0xfc00u))

/* Register type: emmc::crypto::PRESET_HS_R                                */
/* Register template: emmc::crypto::PRESET_HS_R                            */
/* Field member: emmc::crypto::PRESET_HS_R.DRV_SEL_VAL                     */
#define EMMC_CRYPTO_PRESET_HS_R_DRV_SEL_VAL_MSB 15u
#define EMMC_CRYPTO_PRESET_HS_R_DRV_SEL_VAL_LSB 14u
#define EMMC_CRYPTO_PRESET_HS_R_DRV_SEL_VAL_WIDTH 2u
#define EMMC_CRYPTO_PRESET_HS_R_DRV_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_HS_R_DRV_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_HS_R_DRV_SEL_VAL_RESET 0x0u
#define EMMC_CRYPTO_PRESET_HS_R_DRV_SEL_VAL_FIELD_MASK 0xc000u
#define EMMC_CRYPTO_PRESET_HS_R_DRV_SEL_VAL_GET(x) (((x) & 0xc000u) >> 14)
#define EMMC_CRYPTO_PRESET_HS_R_DRV_SEL_VAL_SET(x) (((x) << 14) & 0xc000u)
#define EMMC_CRYPTO_PRESET_HS_R_DRV_SEL_VAL_MODIFY(r, x) \
   ((((x) << 14) & 0xc000u) | ((r) & 0x3fffu))
/* Field member: emmc::crypto::PRESET_HS_R.RSVD_13_11                      */
#define EMMC_CRYPTO_PRESET_HS_R_RSVD_13_11_MSB 13u
#define EMMC_CRYPTO_PRESET_HS_R_RSVD_13_11_LSB 11u
#define EMMC_CRYPTO_PRESET_HS_R_RSVD_13_11_WIDTH 3u
#define EMMC_CRYPTO_PRESET_HS_R_RSVD_13_11_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_HS_R_RSVD_13_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_HS_R_RSVD_13_11_RESET 0x0u
#define EMMC_CRYPTO_PRESET_HS_R_RSVD_13_11_FIELD_MASK 0x3800u
#define EMMC_CRYPTO_PRESET_HS_R_RSVD_13_11_GET(x) (((x) & 0x3800u) >> 11)
#define EMMC_CRYPTO_PRESET_HS_R_RSVD_13_11_SET(x) (((x) << 11) & 0x3800u)
#define EMMC_CRYPTO_PRESET_HS_R_RSVD_13_11_MODIFY(r, x) \
   ((((x) << 11) & 0x3800u) | ((r) & 0xc7ffu))
/* Field member: emmc::crypto::PRESET_HS_R.CLK_GEN_SEL_VAL                 */
#define EMMC_CRYPTO_PRESET_HS_R_CLK_GEN_SEL_VAL_MSB 10u
#define EMMC_CRYPTO_PRESET_HS_R_CLK_GEN_SEL_VAL_LSB 10u
#define EMMC_CRYPTO_PRESET_HS_R_CLK_GEN_SEL_VAL_WIDTH 1u
#define EMMC_CRYPTO_PRESET_HS_R_CLK_GEN_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_HS_R_CLK_GEN_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_HS_R_CLK_GEN_SEL_VAL_RESET 0x0u
#define EMMC_CRYPTO_PRESET_HS_R_CLK_GEN_SEL_VAL_FIELD_MASK 0x0400u
#define EMMC_CRYPTO_PRESET_HS_R_CLK_GEN_SEL_VAL_GET(x) \
   (((x) & 0x0400u) >> 10)
#define EMMC_CRYPTO_PRESET_HS_R_CLK_GEN_SEL_VAL_SET(x) \
   (((x) << 10) & 0x0400u)
#define EMMC_CRYPTO_PRESET_HS_R_CLK_GEN_SEL_VAL_MODIFY(r, x) \
   ((((x) << 10) & 0x0400u) | ((r) & 0xfbffu))
/* Field member: emmc::crypto::PRESET_HS_R.FREQ_SEL_VAL                    */
#define EMMC_CRYPTO_PRESET_HS_R_FREQ_SEL_VAL_MSB 9u
#define EMMC_CRYPTO_PRESET_HS_R_FREQ_SEL_VAL_LSB 0u
#define EMMC_CRYPTO_PRESET_HS_R_FREQ_SEL_VAL_WIDTH 10u
#define EMMC_CRYPTO_PRESET_HS_R_FREQ_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_HS_R_FREQ_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_HS_R_FREQ_SEL_VAL_RESET 0x000u
#define EMMC_CRYPTO_PRESET_HS_R_FREQ_SEL_VAL_FIELD_MASK 0x03ffu
#define EMMC_CRYPTO_PRESET_HS_R_FREQ_SEL_VAL_GET(x) ((x) & 0x03ffu)
#define EMMC_CRYPTO_PRESET_HS_R_FREQ_SEL_VAL_SET(x) ((x) & 0x03ffu)
#define EMMC_CRYPTO_PRESET_HS_R_FREQ_SEL_VAL_MODIFY(r, x) \
   (((x) & 0x03ffu) | ((r) & 0xfc00u))

/* Register type: emmc::crypto::PRESET_SDR12_R                             */
/* Register template: emmc::crypto::PRESET_SDR12_R                         */
/* Field member: emmc::crypto::PRESET_SDR12_R.DRV_SEL_VAL                  */
#define EMMC_CRYPTO_PRESET_SDR12_R_DRV_SEL_VAL_MSB 15u
#define EMMC_CRYPTO_PRESET_SDR12_R_DRV_SEL_VAL_LSB 14u
#define EMMC_CRYPTO_PRESET_SDR12_R_DRV_SEL_VAL_WIDTH 2u
#define EMMC_CRYPTO_PRESET_SDR12_R_DRV_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR12_R_DRV_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR12_R_DRV_SEL_VAL_RESET 0x0u
#define EMMC_CRYPTO_PRESET_SDR12_R_DRV_SEL_VAL_FIELD_MASK 0xc000u
#define EMMC_CRYPTO_PRESET_SDR12_R_DRV_SEL_VAL_GET(x) (((x) & 0xc000u) >> 14)
#define EMMC_CRYPTO_PRESET_SDR12_R_DRV_SEL_VAL_SET(x) \
   (((x) << 14) & 0xc000u)
#define EMMC_CRYPTO_PRESET_SDR12_R_DRV_SEL_VAL_MODIFY(r, x) \
   ((((x) << 14) & 0xc000u) | ((r) & 0x3fffu))
/* Field member: emmc::crypto::PRESET_SDR12_R.RSVD_13_11                   */
#define EMMC_CRYPTO_PRESET_SDR12_R_RSVD_13_11_MSB 13u
#define EMMC_CRYPTO_PRESET_SDR12_R_RSVD_13_11_LSB 11u
#define EMMC_CRYPTO_PRESET_SDR12_R_RSVD_13_11_WIDTH 3u
#define EMMC_CRYPTO_PRESET_SDR12_R_RSVD_13_11_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR12_R_RSVD_13_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR12_R_RSVD_13_11_RESET 0x0u
#define EMMC_CRYPTO_PRESET_SDR12_R_RSVD_13_11_FIELD_MASK 0x3800u
#define EMMC_CRYPTO_PRESET_SDR12_R_RSVD_13_11_GET(x) (((x) & 0x3800u) >> 11)
#define EMMC_CRYPTO_PRESET_SDR12_R_RSVD_13_11_SET(x) \
   (((x) << 11) & 0x3800u)
#define EMMC_CRYPTO_PRESET_SDR12_R_RSVD_13_11_MODIFY(r, x) \
   ((((x) << 11) & 0x3800u) | ((r) & 0xc7ffu))
/* Field member: emmc::crypto::PRESET_SDR12_R.CLK_GEN_SEL_VAL              */
#define EMMC_CRYPTO_PRESET_SDR12_R_CLK_GEN_SEL_VAL_MSB 10u
#define EMMC_CRYPTO_PRESET_SDR12_R_CLK_GEN_SEL_VAL_LSB 10u
#define EMMC_CRYPTO_PRESET_SDR12_R_CLK_GEN_SEL_VAL_WIDTH 1u
#define EMMC_CRYPTO_PRESET_SDR12_R_CLK_GEN_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR12_R_CLK_GEN_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR12_R_CLK_GEN_SEL_VAL_RESET 0x0u
#define EMMC_CRYPTO_PRESET_SDR12_R_CLK_GEN_SEL_VAL_FIELD_MASK 0x0400u
#define EMMC_CRYPTO_PRESET_SDR12_R_CLK_GEN_SEL_VAL_GET(x) \
   (((x) & 0x0400u) >> 10)
#define EMMC_CRYPTO_PRESET_SDR12_R_CLK_GEN_SEL_VAL_SET(x) \
   (((x) << 10) & 0x0400u)
#define EMMC_CRYPTO_PRESET_SDR12_R_CLK_GEN_SEL_VAL_MODIFY(r, x) \
   ((((x) << 10) & 0x0400u) | ((r) & 0xfbffu))
/* Field member: emmc::crypto::PRESET_SDR12_R.FREQ_SEL_VAL                 */
#define EMMC_CRYPTO_PRESET_SDR12_R_FREQ_SEL_VAL_MSB 9u
#define EMMC_CRYPTO_PRESET_SDR12_R_FREQ_SEL_VAL_LSB 0u
#define EMMC_CRYPTO_PRESET_SDR12_R_FREQ_SEL_VAL_WIDTH 10u
#define EMMC_CRYPTO_PRESET_SDR12_R_FREQ_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR12_R_FREQ_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR12_R_FREQ_SEL_VAL_RESET 0x000u
#define EMMC_CRYPTO_PRESET_SDR12_R_FREQ_SEL_VAL_FIELD_MASK 0x03ffu
#define EMMC_CRYPTO_PRESET_SDR12_R_FREQ_SEL_VAL_GET(x) ((x) & 0x03ffu)
#define EMMC_CRYPTO_PRESET_SDR12_R_FREQ_SEL_VAL_SET(x) ((x) & 0x03ffu)
#define EMMC_CRYPTO_PRESET_SDR12_R_FREQ_SEL_VAL_MODIFY(r, x) \
   (((x) & 0x03ffu) | ((r) & 0xfc00u))

/* Register type: emmc::crypto::PRESET_SDR25_R                             */
/* Register template: emmc::crypto::PRESET_SDR25_R                         */
/* Field member: emmc::crypto::PRESET_SDR25_R.DRV_SEL_VAL                  */
#define EMMC_CRYPTO_PRESET_SDR25_R_DRV_SEL_VAL_MSB 15u
#define EMMC_CRYPTO_PRESET_SDR25_R_DRV_SEL_VAL_LSB 14u
#define EMMC_CRYPTO_PRESET_SDR25_R_DRV_SEL_VAL_WIDTH 2u
#define EMMC_CRYPTO_PRESET_SDR25_R_DRV_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR25_R_DRV_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR25_R_DRV_SEL_VAL_RESET 0x0u
#define EMMC_CRYPTO_PRESET_SDR25_R_DRV_SEL_VAL_FIELD_MASK 0xc000u
#define EMMC_CRYPTO_PRESET_SDR25_R_DRV_SEL_VAL_GET(x) (((x) & 0xc000u) >> 14)
#define EMMC_CRYPTO_PRESET_SDR25_R_DRV_SEL_VAL_SET(x) \
   (((x) << 14) & 0xc000u)
#define EMMC_CRYPTO_PRESET_SDR25_R_DRV_SEL_VAL_MODIFY(r, x) \
   ((((x) << 14) & 0xc000u) | ((r) & 0x3fffu))
/* Field member: emmc::crypto::PRESET_SDR25_R.RSVD_13_11                   */
#define EMMC_CRYPTO_PRESET_SDR25_R_RSVD_13_11_MSB 13u
#define EMMC_CRYPTO_PRESET_SDR25_R_RSVD_13_11_LSB 11u
#define EMMC_CRYPTO_PRESET_SDR25_R_RSVD_13_11_WIDTH 3u
#define EMMC_CRYPTO_PRESET_SDR25_R_RSVD_13_11_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR25_R_RSVD_13_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR25_R_RSVD_13_11_RESET 0x0u
#define EMMC_CRYPTO_PRESET_SDR25_R_RSVD_13_11_FIELD_MASK 0x3800u
#define EMMC_CRYPTO_PRESET_SDR25_R_RSVD_13_11_GET(x) (((x) & 0x3800u) >> 11)
#define EMMC_CRYPTO_PRESET_SDR25_R_RSVD_13_11_SET(x) \
   (((x) << 11) & 0x3800u)
#define EMMC_CRYPTO_PRESET_SDR25_R_RSVD_13_11_MODIFY(r, x) \
   ((((x) << 11) & 0x3800u) | ((r) & 0xc7ffu))
/* Field member: emmc::crypto::PRESET_SDR25_R.CLK_GEN_SEL_VAL              */
#define EMMC_CRYPTO_PRESET_SDR25_R_CLK_GEN_SEL_VAL_MSB 10u
#define EMMC_CRYPTO_PRESET_SDR25_R_CLK_GEN_SEL_VAL_LSB 10u
#define EMMC_CRYPTO_PRESET_SDR25_R_CLK_GEN_SEL_VAL_WIDTH 1u
#define EMMC_CRYPTO_PRESET_SDR25_R_CLK_GEN_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR25_R_CLK_GEN_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR25_R_CLK_GEN_SEL_VAL_RESET 0x0u
#define EMMC_CRYPTO_PRESET_SDR25_R_CLK_GEN_SEL_VAL_FIELD_MASK 0x0400u
#define EMMC_CRYPTO_PRESET_SDR25_R_CLK_GEN_SEL_VAL_GET(x) \
   (((x) & 0x0400u) >> 10)
#define EMMC_CRYPTO_PRESET_SDR25_R_CLK_GEN_SEL_VAL_SET(x) \
   (((x) << 10) & 0x0400u)
#define EMMC_CRYPTO_PRESET_SDR25_R_CLK_GEN_SEL_VAL_MODIFY(r, x) \
   ((((x) << 10) & 0x0400u) | ((r) & 0xfbffu))
/* Field member: emmc::crypto::PRESET_SDR25_R.FREQ_SEL_VAL                 */
#define EMMC_CRYPTO_PRESET_SDR25_R_FREQ_SEL_VAL_MSB 9u
#define EMMC_CRYPTO_PRESET_SDR25_R_FREQ_SEL_VAL_LSB 0u
#define EMMC_CRYPTO_PRESET_SDR25_R_FREQ_SEL_VAL_WIDTH 10u
#define EMMC_CRYPTO_PRESET_SDR25_R_FREQ_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR25_R_FREQ_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR25_R_FREQ_SEL_VAL_RESET 0x000u
#define EMMC_CRYPTO_PRESET_SDR25_R_FREQ_SEL_VAL_FIELD_MASK 0x03ffu
#define EMMC_CRYPTO_PRESET_SDR25_R_FREQ_SEL_VAL_GET(x) ((x) & 0x03ffu)
#define EMMC_CRYPTO_PRESET_SDR25_R_FREQ_SEL_VAL_SET(x) ((x) & 0x03ffu)
#define EMMC_CRYPTO_PRESET_SDR25_R_FREQ_SEL_VAL_MODIFY(r, x) \
   (((x) & 0x03ffu) | ((r) & 0xfc00u))

/* Register type: emmc::crypto::PRESET_SDR50_R                             */
/* Register template: emmc::crypto::PRESET_SDR50_R                         */
/* Field member: emmc::crypto::PRESET_SDR50_R.DRV_SEL_VAL                  */
#define EMMC_CRYPTO_PRESET_SDR50_R_DRV_SEL_VAL_MSB 15u
#define EMMC_CRYPTO_PRESET_SDR50_R_DRV_SEL_VAL_LSB 14u
#define EMMC_CRYPTO_PRESET_SDR50_R_DRV_SEL_VAL_WIDTH 2u
#define EMMC_CRYPTO_PRESET_SDR50_R_DRV_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR50_R_DRV_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR50_R_DRV_SEL_VAL_RESET 0x0u
#define EMMC_CRYPTO_PRESET_SDR50_R_DRV_SEL_VAL_FIELD_MASK 0xc000u
#define EMMC_CRYPTO_PRESET_SDR50_R_DRV_SEL_VAL_GET(x) (((x) & 0xc000u) >> 14)
#define EMMC_CRYPTO_PRESET_SDR50_R_DRV_SEL_VAL_SET(x) \
   (((x) << 14) & 0xc000u)
#define EMMC_CRYPTO_PRESET_SDR50_R_DRV_SEL_VAL_MODIFY(r, x) \
   ((((x) << 14) & 0xc000u) | ((r) & 0x3fffu))
/* Field member: emmc::crypto::PRESET_SDR50_R.RSVD_13_11                   */
#define EMMC_CRYPTO_PRESET_SDR50_R_RSVD_13_11_MSB 13u
#define EMMC_CRYPTO_PRESET_SDR50_R_RSVD_13_11_LSB 11u
#define EMMC_CRYPTO_PRESET_SDR50_R_RSVD_13_11_WIDTH 3u
#define EMMC_CRYPTO_PRESET_SDR50_R_RSVD_13_11_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR50_R_RSVD_13_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR50_R_RSVD_13_11_RESET 0x0u
#define EMMC_CRYPTO_PRESET_SDR50_R_RSVD_13_11_FIELD_MASK 0x3800u
#define EMMC_CRYPTO_PRESET_SDR50_R_RSVD_13_11_GET(x) (((x) & 0x3800u) >> 11)
#define EMMC_CRYPTO_PRESET_SDR50_R_RSVD_13_11_SET(x) \
   (((x) << 11) & 0x3800u)
#define EMMC_CRYPTO_PRESET_SDR50_R_RSVD_13_11_MODIFY(r, x) \
   ((((x) << 11) & 0x3800u) | ((r) & 0xc7ffu))
/* Field member: emmc::crypto::PRESET_SDR50_R.CLK_GEN_SEL_VAL              */
#define EMMC_CRYPTO_PRESET_SDR50_R_CLK_GEN_SEL_VAL_MSB 10u
#define EMMC_CRYPTO_PRESET_SDR50_R_CLK_GEN_SEL_VAL_LSB 10u
#define EMMC_CRYPTO_PRESET_SDR50_R_CLK_GEN_SEL_VAL_WIDTH 1u
#define EMMC_CRYPTO_PRESET_SDR50_R_CLK_GEN_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR50_R_CLK_GEN_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR50_R_CLK_GEN_SEL_VAL_RESET 0x0u
#define EMMC_CRYPTO_PRESET_SDR50_R_CLK_GEN_SEL_VAL_FIELD_MASK 0x0400u
#define EMMC_CRYPTO_PRESET_SDR50_R_CLK_GEN_SEL_VAL_GET(x) \
   (((x) & 0x0400u) >> 10)
#define EMMC_CRYPTO_PRESET_SDR50_R_CLK_GEN_SEL_VAL_SET(x) \
   (((x) << 10) & 0x0400u)
#define EMMC_CRYPTO_PRESET_SDR50_R_CLK_GEN_SEL_VAL_MODIFY(r, x) \
   ((((x) << 10) & 0x0400u) | ((r) & 0xfbffu))
/* Field member: emmc::crypto::PRESET_SDR50_R.FREQ_SEL_VAL                 */
#define EMMC_CRYPTO_PRESET_SDR50_R_FREQ_SEL_VAL_MSB 9u
#define EMMC_CRYPTO_PRESET_SDR50_R_FREQ_SEL_VAL_LSB 0u
#define EMMC_CRYPTO_PRESET_SDR50_R_FREQ_SEL_VAL_WIDTH 10u
#define EMMC_CRYPTO_PRESET_SDR50_R_FREQ_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR50_R_FREQ_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR50_R_FREQ_SEL_VAL_RESET 0x000u
#define EMMC_CRYPTO_PRESET_SDR50_R_FREQ_SEL_VAL_FIELD_MASK 0x03ffu
#define EMMC_CRYPTO_PRESET_SDR50_R_FREQ_SEL_VAL_GET(x) ((x) & 0x03ffu)
#define EMMC_CRYPTO_PRESET_SDR50_R_FREQ_SEL_VAL_SET(x) ((x) & 0x03ffu)
#define EMMC_CRYPTO_PRESET_SDR50_R_FREQ_SEL_VAL_MODIFY(r, x) \
   (((x) & 0x03ffu) | ((r) & 0xfc00u))

/* Register type: emmc::crypto::PRESET_SDR104_R                            */
/* Register template: emmc::crypto::PRESET_SDR104_R                        */
/* Field member: emmc::crypto::PRESET_SDR104_R.DRV_SEL_VAL                 */
#define EMMC_CRYPTO_PRESET_SDR104_R_DRV_SEL_VAL_MSB 15u
#define EMMC_CRYPTO_PRESET_SDR104_R_DRV_SEL_VAL_LSB 14u
#define EMMC_CRYPTO_PRESET_SDR104_R_DRV_SEL_VAL_WIDTH 2u
#define EMMC_CRYPTO_PRESET_SDR104_R_DRV_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR104_R_DRV_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR104_R_DRV_SEL_VAL_RESET 0x0u
#define EMMC_CRYPTO_PRESET_SDR104_R_DRV_SEL_VAL_FIELD_MASK 0xc000u
#define EMMC_CRYPTO_PRESET_SDR104_R_DRV_SEL_VAL_GET(x) \
   (((x) & 0xc000u) >> 14)
#define EMMC_CRYPTO_PRESET_SDR104_R_DRV_SEL_VAL_SET(x) \
   (((x) << 14) & 0xc000u)
#define EMMC_CRYPTO_PRESET_SDR104_R_DRV_SEL_VAL_MODIFY(r, x) \
   ((((x) << 14) & 0xc000u) | ((r) & 0x3fffu))
/* Field member: emmc::crypto::PRESET_SDR104_R.RSVD_13_11                  */
#define EMMC_CRYPTO_PRESET_SDR104_R_RSVD_13_11_MSB 13u
#define EMMC_CRYPTO_PRESET_SDR104_R_RSVD_13_11_LSB 11u
#define EMMC_CRYPTO_PRESET_SDR104_R_RSVD_13_11_WIDTH 3u
#define EMMC_CRYPTO_PRESET_SDR104_R_RSVD_13_11_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR104_R_RSVD_13_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR104_R_RSVD_13_11_RESET 0x0u
#define EMMC_CRYPTO_PRESET_SDR104_R_RSVD_13_11_FIELD_MASK 0x3800u
#define EMMC_CRYPTO_PRESET_SDR104_R_RSVD_13_11_GET(x) (((x) & 0x3800u) >> 11)
#define EMMC_CRYPTO_PRESET_SDR104_R_RSVD_13_11_SET(x) \
   (((x) << 11) & 0x3800u)
#define EMMC_CRYPTO_PRESET_SDR104_R_RSVD_13_11_MODIFY(r, x) \
   ((((x) << 11) & 0x3800u) | ((r) & 0xc7ffu))
/* Field member: emmc::crypto::PRESET_SDR104_R.CLK_GEN_SEL_VAL             */
#define EMMC_CRYPTO_PRESET_SDR104_R_CLK_GEN_SEL_VAL_MSB 10u
#define EMMC_CRYPTO_PRESET_SDR104_R_CLK_GEN_SEL_VAL_LSB 10u
#define EMMC_CRYPTO_PRESET_SDR104_R_CLK_GEN_SEL_VAL_WIDTH 1u
#define EMMC_CRYPTO_PRESET_SDR104_R_CLK_GEN_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR104_R_CLK_GEN_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR104_R_CLK_GEN_SEL_VAL_RESET 0x0u
#define EMMC_CRYPTO_PRESET_SDR104_R_CLK_GEN_SEL_VAL_FIELD_MASK 0x0400u
#define EMMC_CRYPTO_PRESET_SDR104_R_CLK_GEN_SEL_VAL_GET(x) \
   (((x) & 0x0400u) >> 10)
#define EMMC_CRYPTO_PRESET_SDR104_R_CLK_GEN_SEL_VAL_SET(x) \
   (((x) << 10) & 0x0400u)
#define EMMC_CRYPTO_PRESET_SDR104_R_CLK_GEN_SEL_VAL_MODIFY(r, x) \
   ((((x) << 10) & 0x0400u) | ((r) & 0xfbffu))
/* Field member: emmc::crypto::PRESET_SDR104_R.FREQ_SEL_VAL                */
#define EMMC_CRYPTO_PRESET_SDR104_R_FREQ_SEL_VAL_MSB 9u
#define EMMC_CRYPTO_PRESET_SDR104_R_FREQ_SEL_VAL_LSB 0u
#define EMMC_CRYPTO_PRESET_SDR104_R_FREQ_SEL_VAL_WIDTH 10u
#define EMMC_CRYPTO_PRESET_SDR104_R_FREQ_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_SDR104_R_FREQ_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_SDR104_R_FREQ_SEL_VAL_RESET 0x000u
#define EMMC_CRYPTO_PRESET_SDR104_R_FREQ_SEL_VAL_FIELD_MASK 0x03ffu
#define EMMC_CRYPTO_PRESET_SDR104_R_FREQ_SEL_VAL_GET(x) ((x) & 0x03ffu)
#define EMMC_CRYPTO_PRESET_SDR104_R_FREQ_SEL_VAL_SET(x) ((x) & 0x03ffu)
#define EMMC_CRYPTO_PRESET_SDR104_R_FREQ_SEL_VAL_MODIFY(r, x) \
   (((x) & 0x03ffu) | ((r) & 0xfc00u))

/* Register type: emmc::crypto::PRESET_DDR50_R                             */
/* Register template: emmc::crypto::PRESET_DDR50_R                         */
/* Field member: emmc::crypto::PRESET_DDR50_R.DRV_SEL_VAL                  */
#define EMMC_CRYPTO_PRESET_DDR50_R_DRV_SEL_VAL_MSB 15u
#define EMMC_CRYPTO_PRESET_DDR50_R_DRV_SEL_VAL_LSB 14u
#define EMMC_CRYPTO_PRESET_DDR50_R_DRV_SEL_VAL_WIDTH 2u
#define EMMC_CRYPTO_PRESET_DDR50_R_DRV_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_DDR50_R_DRV_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_DDR50_R_DRV_SEL_VAL_RESET 0x0u
#define EMMC_CRYPTO_PRESET_DDR50_R_DRV_SEL_VAL_FIELD_MASK 0xc000u
#define EMMC_CRYPTO_PRESET_DDR50_R_DRV_SEL_VAL_GET(x) (((x) & 0xc000u) >> 14)
#define EMMC_CRYPTO_PRESET_DDR50_R_DRV_SEL_VAL_SET(x) \
   (((x) << 14) & 0xc000u)
#define EMMC_CRYPTO_PRESET_DDR50_R_DRV_SEL_VAL_MODIFY(r, x) \
   ((((x) << 14) & 0xc000u) | ((r) & 0x3fffu))
/* Field member: emmc::crypto::PRESET_DDR50_R.RSVD_13_11                   */
#define EMMC_CRYPTO_PRESET_DDR50_R_RSVD_13_11_MSB 13u
#define EMMC_CRYPTO_PRESET_DDR50_R_RSVD_13_11_LSB 11u
#define EMMC_CRYPTO_PRESET_DDR50_R_RSVD_13_11_WIDTH 3u
#define EMMC_CRYPTO_PRESET_DDR50_R_RSVD_13_11_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_DDR50_R_RSVD_13_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_DDR50_R_RSVD_13_11_RESET 0x0u
#define EMMC_CRYPTO_PRESET_DDR50_R_RSVD_13_11_FIELD_MASK 0x3800u
#define EMMC_CRYPTO_PRESET_DDR50_R_RSVD_13_11_GET(x) (((x) & 0x3800u) >> 11)
#define EMMC_CRYPTO_PRESET_DDR50_R_RSVD_13_11_SET(x) \
   (((x) << 11) & 0x3800u)
#define EMMC_CRYPTO_PRESET_DDR50_R_RSVD_13_11_MODIFY(r, x) \
   ((((x) << 11) & 0x3800u) | ((r) & 0xc7ffu))
/* Field member: emmc::crypto::PRESET_DDR50_R.CLK_GEN_SEL_VAL              */
#define EMMC_CRYPTO_PRESET_DDR50_R_CLK_GEN_SEL_VAL_MSB 10u
#define EMMC_CRYPTO_PRESET_DDR50_R_CLK_GEN_SEL_VAL_LSB 10u
#define EMMC_CRYPTO_PRESET_DDR50_R_CLK_GEN_SEL_VAL_WIDTH 1u
#define EMMC_CRYPTO_PRESET_DDR50_R_CLK_GEN_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_DDR50_R_CLK_GEN_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_DDR50_R_CLK_GEN_SEL_VAL_RESET 0x0u
#define EMMC_CRYPTO_PRESET_DDR50_R_CLK_GEN_SEL_VAL_FIELD_MASK 0x0400u
#define EMMC_CRYPTO_PRESET_DDR50_R_CLK_GEN_SEL_VAL_GET(x) \
   (((x) & 0x0400u) >> 10)
#define EMMC_CRYPTO_PRESET_DDR50_R_CLK_GEN_SEL_VAL_SET(x) \
   (((x) << 10) & 0x0400u)
#define EMMC_CRYPTO_PRESET_DDR50_R_CLK_GEN_SEL_VAL_MODIFY(r, x) \
   ((((x) << 10) & 0x0400u) | ((r) & 0xfbffu))
/* Field member: emmc::crypto::PRESET_DDR50_R.FREQ_SEL_VAL                 */
#define EMMC_CRYPTO_PRESET_DDR50_R_FREQ_SEL_VAL_MSB 9u
#define EMMC_CRYPTO_PRESET_DDR50_R_FREQ_SEL_VAL_LSB 0u
#define EMMC_CRYPTO_PRESET_DDR50_R_FREQ_SEL_VAL_WIDTH 10u
#define EMMC_CRYPTO_PRESET_DDR50_R_FREQ_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_DDR50_R_FREQ_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_DDR50_R_FREQ_SEL_VAL_RESET 0x000u
#define EMMC_CRYPTO_PRESET_DDR50_R_FREQ_SEL_VAL_FIELD_MASK 0x03ffu
#define EMMC_CRYPTO_PRESET_DDR50_R_FREQ_SEL_VAL_GET(x) ((x) & 0x03ffu)
#define EMMC_CRYPTO_PRESET_DDR50_R_FREQ_SEL_VAL_SET(x) ((x) & 0x03ffu)
#define EMMC_CRYPTO_PRESET_DDR50_R_FREQ_SEL_VAL_MODIFY(r, x) \
   (((x) & 0x03ffu) | ((r) & 0xfc00u))

/* Register type: emmc::crypto::PRESET_UHS2_R                              */
/* Register template: emmc::crypto::PRESET_UHS2_R                          */
/* Field member: emmc::crypto::PRESET_UHS2_R.DRV_SEL_VAL                   */
#define EMMC_CRYPTO_PRESET_UHS2_R_DRV_SEL_VAL_MSB 15u
#define EMMC_CRYPTO_PRESET_UHS2_R_DRV_SEL_VAL_LSB 14u
#define EMMC_CRYPTO_PRESET_UHS2_R_DRV_SEL_VAL_WIDTH 2u
#define EMMC_CRYPTO_PRESET_UHS2_R_DRV_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_UHS2_R_DRV_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_UHS2_R_DRV_SEL_VAL_RESET 0x0u
#define EMMC_CRYPTO_PRESET_UHS2_R_DRV_SEL_VAL_FIELD_MASK 0xc000u
#define EMMC_CRYPTO_PRESET_UHS2_R_DRV_SEL_VAL_GET(x) (((x) & 0xc000u) >> 14)
#define EMMC_CRYPTO_PRESET_UHS2_R_DRV_SEL_VAL_SET(x) \
   (((x) << 14) & 0xc000u)
#define EMMC_CRYPTO_PRESET_UHS2_R_DRV_SEL_VAL_MODIFY(r, x) \
   ((((x) << 14) & 0xc000u) | ((r) & 0x3fffu))
/* Field member: emmc::crypto::PRESET_UHS2_R.RSVD_13_11                    */
#define EMMC_CRYPTO_PRESET_UHS2_R_RSVD_13_11_MSB 13u
#define EMMC_CRYPTO_PRESET_UHS2_R_RSVD_13_11_LSB 11u
#define EMMC_CRYPTO_PRESET_UHS2_R_RSVD_13_11_WIDTH 3u
#define EMMC_CRYPTO_PRESET_UHS2_R_RSVD_13_11_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_UHS2_R_RSVD_13_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_UHS2_R_RSVD_13_11_RESET 0x0u
#define EMMC_CRYPTO_PRESET_UHS2_R_RSVD_13_11_FIELD_MASK 0x3800u
#define EMMC_CRYPTO_PRESET_UHS2_R_RSVD_13_11_GET(x) (((x) & 0x3800u) >> 11)
#define EMMC_CRYPTO_PRESET_UHS2_R_RSVD_13_11_SET(x) (((x) << 11) & 0x3800u)
#define EMMC_CRYPTO_PRESET_UHS2_R_RSVD_13_11_MODIFY(r, x) \
   ((((x) << 11) & 0x3800u) | ((r) & 0xc7ffu))
/* Field member: emmc::crypto::PRESET_UHS2_R.CLK_GEN_SEL_VAL               */
#define EMMC_CRYPTO_PRESET_UHS2_R_CLK_GEN_SEL_VAL_MSB 10u
#define EMMC_CRYPTO_PRESET_UHS2_R_CLK_GEN_SEL_VAL_LSB 10u
#define EMMC_CRYPTO_PRESET_UHS2_R_CLK_GEN_SEL_VAL_WIDTH 1u
#define EMMC_CRYPTO_PRESET_UHS2_R_CLK_GEN_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_UHS2_R_CLK_GEN_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_UHS2_R_CLK_GEN_SEL_VAL_RESET 0x0u
#define EMMC_CRYPTO_PRESET_UHS2_R_CLK_GEN_SEL_VAL_FIELD_MASK 0x0400u
#define EMMC_CRYPTO_PRESET_UHS2_R_CLK_GEN_SEL_VAL_GET(x) \
   (((x) & 0x0400u) >> 10)
#define EMMC_CRYPTO_PRESET_UHS2_R_CLK_GEN_SEL_VAL_SET(x) \
   (((x) << 10) & 0x0400u)
#define EMMC_CRYPTO_PRESET_UHS2_R_CLK_GEN_SEL_VAL_MODIFY(r, x) \
   ((((x) << 10) & 0x0400u) | ((r) & 0xfbffu))
/* Field member: emmc::crypto::PRESET_UHS2_R.FREQ_SEL_VAL                  */
#define EMMC_CRYPTO_PRESET_UHS2_R_FREQ_SEL_VAL_MSB 9u
#define EMMC_CRYPTO_PRESET_UHS2_R_FREQ_SEL_VAL_LSB 0u
#define EMMC_CRYPTO_PRESET_UHS2_R_FREQ_SEL_VAL_WIDTH 10u
#define EMMC_CRYPTO_PRESET_UHS2_R_FREQ_SEL_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PRESET_UHS2_R_FREQ_SEL_VAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PRESET_UHS2_R_FREQ_SEL_VAL_RESET 0x000u
#define EMMC_CRYPTO_PRESET_UHS2_R_FREQ_SEL_VAL_FIELD_MASK 0x03ffu
#define EMMC_CRYPTO_PRESET_UHS2_R_FREQ_SEL_VAL_GET(x) ((x) & 0x03ffu)
#define EMMC_CRYPTO_PRESET_UHS2_R_FREQ_SEL_VAL_SET(x) ((x) & 0x03ffu)
#define EMMC_CRYPTO_PRESET_UHS2_R_FREQ_SEL_VAL_MODIFY(r, x) \
   (((x) & 0x03ffu) | ((r) & 0xfc00u))

/* Register type: emmc::crypto::P_EMBEDDED_CNTRL                           */
/* Register template: emmc::crypto::P_EMBEDDED_CNTRL                       */
/* Field member: emmc::crypto::P_EMBEDDED_CNTRL.RESERVED_15_12             */
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_RESERVED_15_12_MSB 15u
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_RESERVED_15_12_LSB 12u
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_RESERVED_15_12_WIDTH 4u
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_RESERVED_15_12_READ_ACCESS 1u
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_RESERVED_15_12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_RESERVED_15_12_RESET 0x0u
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_RESERVED_15_12_FIELD_MASK 0xf000u
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_RESERVED_15_12_GET(x) \
   (((x) & 0xf000u) >> 12)
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_RESERVED_15_12_SET(x) \
   (((x) << 12) & 0xf000u)
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_RESERVED_15_12_MODIFY(r, x) \
   ((((x) << 12) & 0xf000u) | ((r) & 0x0fffu))
/* Field member: emmc::crypto::P_EMBEDDED_CNTRL.REG_OFFSET_ADDR            */
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_REG_OFFSET_ADDR_MSB 11u
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_REG_OFFSET_ADDR_LSB 0u
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_REG_OFFSET_ADDR_WIDTH 12u
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_REG_OFFSET_ADDR_READ_ACCESS 1u
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_REG_OFFSET_ADDR_WRITE_ACCESS 0u
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_REG_OFFSET_ADDR_RESET 0xf6cu
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_REG_OFFSET_ADDR_FIELD_MASK 0x0fffu
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_REG_OFFSET_ADDR_GET(x) ((x) & 0x0fffu)
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_REG_OFFSET_ADDR_SET(x) ((x) & 0x0fffu)
#define EMMC_CRYPTO_P_EMBEDDED_CNTRL_REG_OFFSET_ADDR_MODIFY(r, x) \
   (((x) & 0x0fffu) | ((r) & 0xf000u))

/* Register type: emmc::crypto::P_VENDOR_SPECIFIC_AREA                     */
/* Register template: emmc::crypto::P_VENDOR_SPECIFIC_AREA                 */
/* Field member: emmc::crypto::P_VENDOR_SPECIFIC_AREA.RESERVED_15_12       */
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_RESERVED_15_12_MSB 15u
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_RESERVED_15_12_LSB 12u
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_RESERVED_15_12_WIDTH 4u
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_RESERVED_15_12_READ_ACCESS 1u
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_RESERVED_15_12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_RESERVED_15_12_RESET 0x0u
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_RESERVED_15_12_FIELD_MASK 0xf000u
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_RESERVED_15_12_GET(x) \
   (((x) & 0xf000u) >> 12)
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_RESERVED_15_12_SET(x) \
   (((x) << 12) & 0xf000u)
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_RESERVED_15_12_MODIFY(r, x) \
   ((((x) << 12) & 0xf000u) | ((r) & 0x0fffu))
/* Field member: emmc::crypto::P_VENDOR_SPECIFIC_AREA.REG_OFFSET_ADDR      */
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_REG_OFFSET_ADDR_MSB 11u
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_REG_OFFSET_ADDR_LSB 0u
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_REG_OFFSET_ADDR_WIDTH 12u
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_REG_OFFSET_ADDR_READ_ACCESS 1u
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_REG_OFFSET_ADDR_WRITE_ACCESS 0u
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_REG_OFFSET_ADDR_RESET 0x500u
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_REG_OFFSET_ADDR_FIELD_MASK 0x0fffu
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_REG_OFFSET_ADDR_GET(x) \
   ((x) & 0x0fffu)
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_REG_OFFSET_ADDR_SET(x) \
   ((x) & 0x0fffu)
#define EMMC_CRYPTO_P_VENDOR_SPECIFIC_AREA_REG_OFFSET_ADDR_MODIFY(r, x) \
   (((x) & 0x0fffu) | ((r) & 0xf000u))

/* Register type: emmc::crypto::P_VENDOR2_SPECIFIC_AREA                    */
/* Register template: emmc::crypto::P_VENDOR2_SPECIFIC_AREA                */
/* Field member: emmc::crypto::P_VENDOR2_SPECIFIC_AREA.REG_OFFSET_ADDR     */
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_REG_OFFSET_ADDR_MSB 15u
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_REG_OFFSET_ADDR_LSB 0u
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_REG_OFFSET_ADDR_WIDTH 16u
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_REG_OFFSET_ADDR_READ_ACCESS 1u
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_REG_OFFSET_ADDR_WRITE_ACCESS 0u
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_REG_OFFSET_ADDR_RESET 0x1000u
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_REG_OFFSET_ADDR_FIELD_MASK 0xffffu
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_REG_OFFSET_ADDR_GET(x) \
   ((x) & 0xffffu)
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_REG_OFFSET_ADDR_SET(x) \
   ((x) & 0xffffu)
#define EMMC_CRYPTO_P_VENDOR2_SPECIFIC_AREA_REG_OFFSET_ADDR_MODIFY(r, x) \
   ((x) & 0xffffu)

/* Register type: emmc::crypto::SLOT_INTR_STATUS_R                         */
/* Register template: emmc::crypto::SLOT_INTR_STATUS_R                     */
/* Field member: emmc::crypto::SLOT_INTR_STATUS_R.RESERVED_15_8            */
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_RESERVED_15_8_MSB 15u
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_RESERVED_15_8_LSB 8u
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_RESERVED_15_8_WIDTH 8u
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_RESERVED_15_8_READ_ACCESS 1u
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_RESERVED_15_8_WRITE_ACCESS 0u
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_RESERVED_15_8_RESET 0x00u
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_RESERVED_15_8_FIELD_MASK 0xff00u
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_RESERVED_15_8_GET(x) \
   (((x) & 0xff00u) >> 8)
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_RESERVED_15_8_SET(x) \
   (((x) << 8) & 0xff00u)
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_RESERVED_15_8_MODIFY(r, x) \
   ((((x) << 8) & 0xff00u) | ((r) & 0x00ffu))
/* Field member: emmc::crypto::SLOT_INTR_STATUS_R.INTR_SLOT                */
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_INTR_SLOT_MSB 7u
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_INTR_SLOT_LSB 0u
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_INTR_SLOT_WIDTH 8u
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_INTR_SLOT_READ_ACCESS 1u
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_INTR_SLOT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_INTR_SLOT_RESET 0x00u
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_INTR_SLOT_FIELD_MASK 0x00ffu
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_INTR_SLOT_GET(x) ((x) & 0x00ffu)
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_INTR_SLOT_SET(x) ((x) & 0x00ffu)
#define EMMC_CRYPTO_SLOT_INTR_STATUS_R_INTR_SLOT_MODIFY(r, x) \
   (((x) & 0x00ffu) | ((r) & 0xff00u))

/* Register type: emmc::crypto::HOST_CNTRL_VERS_R                          */
/* Register template: emmc::crypto::HOST_CNTRL_VERS_R                      */
/* Field member: emmc::crypto::HOST_CNTRL_VERS_R.VENDOR_VERSION_NUM        */
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_VENDOR_VERSION_NUM_MSB 15u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_VENDOR_VERSION_NUM_LSB 8u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_VENDOR_VERSION_NUM_WIDTH 8u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_VENDOR_VERSION_NUM_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_VENDOR_VERSION_NUM_WRITE_ACCESS 0u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_VENDOR_VERSION_NUM_RESET 0x01u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_VENDOR_VERSION_NUM_FIELD_MASK 0xff00u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_VENDOR_VERSION_NUM_GET(x) \
   (((x) & 0xff00u) >> 8)
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_VENDOR_VERSION_NUM_SET(x) \
   (((x) << 8) & 0xff00u)
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_VENDOR_VERSION_NUM_MODIFY(r, x) \
   ((((x) << 8) & 0xff00u) | ((r) & 0x00ffu))
/* Field member: emmc::crypto::HOST_CNTRL_VERS_R.SPEC_VERSION_NUM          */
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_SPEC_VERSION_NUM_MSB 7u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_SPEC_VERSION_NUM_LSB 0u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_SPEC_VERSION_NUM_WIDTH 8u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_SPEC_VERSION_NUM_READ_ACCESS 1u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_SPEC_VERSION_NUM_WRITE_ACCESS 0u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_SPEC_VERSION_NUM_RESET 0x05u
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_SPEC_VERSION_NUM_FIELD_MASK 0x00ffu
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_SPEC_VERSION_NUM_GET(x) ((x) & 0x00ffu)
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_SPEC_VERSION_NUM_SET(x) ((x) & 0x00ffu)
#define EMMC_CRYPTO_HOST_CNTRL_VERS_R_SPEC_VERSION_NUM_MODIFY(r, x) \
   (((x) & 0x00ffu) | ((r) & 0xff00u))

/* Group type: emmc::crypto_phy                                            */
/* Group template: emmc::crypto_phy                                        */
#define EMMC_CRYPTO_PHY_SIZE 0x40u
#define EMMC_CRYPTO_PHY_BYTE_SIZE 0x40u
/* Register member: emmc::crypto_phy.PHY_CNFG                              */
/* Register type referenced: emmc::crypto_phy::PHY_CNFG                    */
/* Register template referenced: emmc::crypto_phy::PHY_CNFG                */
#define EMMC_CRYPTO_PHY_PHY_CNFG_OFFSET 0x0u
#define EMMC_CRYPTO_PHY_PHY_CNFG_BYTE_OFFSET 0x0u
#define EMMC_CRYPTO_PHY_PHY_CNFG_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_PHY_CNFG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_PHY_CNFG_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_PHY_PHY_CNFG_RESET_MASK 0xfffffffdul
#define EMMC_CRYPTO_PHY_PHY_CNFG_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_PHY_PHY_CNFG_WRITE_MASK 0x00ff0001ul
/* Register member: emmc::crypto_phy.CMDPAD_CNFG                           */
/* Register type referenced: emmc::crypto_phy::CMDPAD_CNFG                 */
/* Register template referenced: emmc::crypto_phy::CMDPAD_CNFG             */
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_OFFSET 0x4u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_BYTE_OFFSET 0x4u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_RESET_VALUE 0x0440u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_RESET_MASK 0xffffu
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_READ_MASK 0xffffu
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_WRITE_MASK 0x1fffu
/* Register member: emmc::crypto_phy.DATPAD_CNFG                           */
/* Register type referenced: emmc::crypto_phy::DATPAD_CNFG                 */
/* Register template referenced: emmc::crypto_phy::DATPAD_CNFG             */
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_OFFSET 0x6u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_BYTE_OFFSET 0x6u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_RESET_VALUE 0x0440u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_RESET_MASK 0xffffu
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_READ_MASK 0xffffu
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_WRITE_MASK 0x1fffu
/* Register member: emmc::crypto_phy.CLKPAD_CNFG                           */
/* Register type referenced: emmc::crypto_phy::CLKPAD_CNFG                 */
/* Register template referenced: emmc::crypto_phy::CLKPAD_CNFG             */
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_OFFSET 0x8u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_BYTE_OFFSET 0x8u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_RESET_VALUE 0x0440u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_RESET_MASK 0xffffu
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_READ_MASK 0xffffu
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_WRITE_MASK 0x1fffu
/* Register member: emmc::crypto_phy.STBPAD_CNFG                           */
/* Register type referenced: emmc::crypto_phy::STBPAD_CNFG                 */
/* Register template referenced: emmc::crypto_phy::STBPAD_CNFG             */
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_OFFSET 0xau
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_BYTE_OFFSET 0xau
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_RESET_VALUE 0x0440u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_RESET_MASK 0xffffu
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_READ_MASK 0xffffu
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_WRITE_MASK 0x1fffu
/* Register member: emmc::crypto_phy.RSTNPAD_CNFG                          */
/* Register type referenced: emmc::crypto_phy::RSTNPAD_CNFG                */
/* Register template referenced: emmc::crypto_phy::RSTNPAD_CNFG            */
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_OFFSET 0xcu
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_BYTE_OFFSET 0xcu
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_RESET_VALUE 0x0440u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_RESET_MASK 0xffffu
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_READ_MASK 0xffffu
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_WRITE_MASK 0x1fffu
/* Register member: emmc::crypto_phy.PADTEST_CNFG                          */
/* Register type referenced: emmc::crypto_phy::PADTEST_CNFG                */
/* Register template referenced: emmc::crypto_phy::PADTEST_CNFG            */
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_OFFSET 0xeu
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_BYTE_OFFSET 0xeu
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_RESET_MASK 0xffffu
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_READ_MASK 0xffffu
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_WRITE_MASK 0xfff1u
/* Register member: emmc::crypto_phy.PADTEST_OUT                           */
/* Register type referenced: emmc::crypto_phy::PADTEST_OUT                 */
/* Register template referenced: emmc::crypto_phy::PADTEST_OUT             */
#define EMMC_CRYPTO_PHY_PADTEST_OUT_OFFSET 0x10u
#define EMMC_CRYPTO_PHY_PADTEST_OUT_BYTE_OFFSET 0x10u
#define EMMC_CRYPTO_PHY_PADTEST_OUT_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_PADTEST_OUT_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_PADTEST_OUT_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_PHY_PADTEST_OUT_RESET_MASK 0xffffu
#define EMMC_CRYPTO_PHY_PADTEST_OUT_READ_MASK 0xffffu
#define EMMC_CRYPTO_PHY_PADTEST_OUT_WRITE_MASK 0x0fffu
/* Register member: emmc::crypto_phy.PADTEST_IN                            */
/* Register type referenced: emmc::crypto_phy::PADTEST_IN                  */
/* Register template referenced: emmc::crypto_phy::PADTEST_IN              */
#define EMMC_CRYPTO_PHY_PADTEST_IN_OFFSET 0x12u
#define EMMC_CRYPTO_PHY_PADTEST_IN_BYTE_OFFSET 0x12u
#define EMMC_CRYPTO_PHY_PADTEST_IN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_PADTEST_IN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_PADTEST_IN_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_PHY_PADTEST_IN_RESET_MASK 0xffffu
#define EMMC_CRYPTO_PHY_PADTEST_IN_READ_MASK 0xffffu
#define EMMC_CRYPTO_PHY_PADTEST_IN_WRITE_MASK 0x0fffu
/* Register member: emmc::crypto_phy.PRBS_CNFG                             */
/* Register type referenced: emmc::crypto_phy::PRBS_CNFG                   */
/* Register template referenced: emmc::crypto_phy::PRBS_CNFG               */
#define EMMC_CRYPTO_PHY_PRBS_CNFG_OFFSET 0x18u
#define EMMC_CRYPTO_PHY_PRBS_CNFG_BYTE_OFFSET 0x18u
#define EMMC_CRYPTO_PHY_PRBS_CNFG_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_PRBS_CNFG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_PRBS_CNFG_RESET_VALUE 0xffffu
#define EMMC_CRYPTO_PHY_PRBS_CNFG_RESET_MASK 0xffffu
#define EMMC_CRYPTO_PHY_PRBS_CNFG_READ_MASK 0xffffu
#define EMMC_CRYPTO_PHY_PRBS_CNFG_WRITE_MASK 0xffffu
/* Register member: emmc::crypto_phy.PHYLPBK_CNFG                          */
/* Register type referenced: emmc::crypto_phy::PHYLPBK_CNFG                */
/* Register template referenced: emmc::crypto_phy::PHYLPBK_CNFG            */
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_OFFSET 0x1au
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_BYTE_OFFSET 0x1au
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_RESET_VALUE 0x00u
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_RESET_MASK 0xffu
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_READ_MASK 0xffu
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_WRITE_MASK 0x03u
/* Register member: emmc::crypto_phy.COMMDL_CNFG                           */
/* Register type referenced: emmc::crypto_phy::COMMDL_CNFG                 */
/* Register template referenced: emmc::crypto_phy::COMMDL_CNFG             */
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_OFFSET 0x1cu
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_BYTE_OFFSET 0x1cu
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_RESET_VALUE 0x00u
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_RESET_MASK 0xffu
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_READ_MASK 0xffu
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_WRITE_MASK 0x03u
/* Register member: emmc::crypto_phy.SDCLKDL_CNFG                          */
/* Register type referenced: emmc::crypto_phy::SDCLKDL_CNFG                */
/* Register template referenced: emmc::crypto_phy::SDCLKDL_CNFG            */
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_OFFSET 0x1du
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_BYTE_OFFSET 0x1du
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_RESET_VALUE 0x00u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_RESET_MASK 0xffu
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_READ_MASK 0xffu
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_WRITE_MASK 0x1fu
/* Register member: emmc::crypto_phy.SDCLKDL_DC                            */
/* Register type referenced: emmc::crypto_phy::SDCLKDL_DC                  */
/* Register template referenced: emmc::crypto_phy::SDCLKDL_DC              */
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_OFFSET 0x1eu
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_BYTE_OFFSET 0x1eu
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_RESET_VALUE 0x00u
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_RESET_MASK 0xffu
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_READ_MASK 0xffu
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_WRITE_MASK 0x7fu
/* Register member: emmc::crypto_phy.SMPLDL_CNFG                           */
/* Register type referenced: emmc::crypto_phy::SMPLDL_CNFG                 */
/* Register template referenced: emmc::crypto_phy::SMPLDL_CNFG             */
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_OFFSET 0x20u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_BYTE_OFFSET 0x20u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_RESET_VALUE 0x0eu
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_RESET_MASK 0xffu
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_READ_MASK 0xffu
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_WRITE_MASK 0x1fu
/* Register member: emmc::crypto_phy.ATDL_CNFG                             */
/* Register type referenced: emmc::crypto_phy::ATDL_CNFG                   */
/* Register template referenced: emmc::crypto_phy::ATDL_CNFG               */
#define EMMC_CRYPTO_PHY_ATDL_CNFG_OFFSET 0x21u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_BYTE_OFFSET 0x21u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_RESET_VALUE 0x00u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_RESET_MASK 0xffu
#define EMMC_CRYPTO_PHY_ATDL_CNFG_READ_MASK 0xffu
#define EMMC_CRYPTO_PHY_ATDL_CNFG_WRITE_MASK 0x0fu
/* Register member: emmc::crypto_phy.DLL_CTRL                              */
/* Register type referenced: emmc::crypto_phy::DLL_CTRL                    */
/* Register template referenced: emmc::crypto_phy::DLL_CTRL                */
#define EMMC_CRYPTO_PHY_DLL_CTRL_OFFSET 0x24u
#define EMMC_CRYPTO_PHY_DLL_CTRL_BYTE_OFFSET 0x24u
#define EMMC_CRYPTO_PHY_DLL_CTRL_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_CTRL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_CTRL_RESET_VALUE 0x00u
#define EMMC_CRYPTO_PHY_DLL_CTRL_RESET_MASK 0xffu
#define EMMC_CRYPTO_PHY_DLL_CTRL_READ_MASK 0xffu
#define EMMC_CRYPTO_PHY_DLL_CTRL_WRITE_MASK 0x07u
/* Register member: emmc::crypto_phy.DLL_CNFG1                             */
/* Register type referenced: emmc::crypto_phy::DLL_CNFG1                   */
/* Register template referenced: emmc::crypto_phy::DLL_CNFG1               */
#define EMMC_CRYPTO_PHY_DLL_CNFG1_OFFSET 0x25u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_BYTE_OFFSET 0x25u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_RESET_VALUE 0x00u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_RESET_MASK 0xffu
#define EMMC_CRYPTO_PHY_DLL_CNFG1_READ_MASK 0xffu
#define EMMC_CRYPTO_PHY_DLL_CNFG1_WRITE_MASK 0x37u
/* Register member: emmc::crypto_phy.DLL_CNFG2                             */
/* Register type referenced: emmc::crypto_phy::DLL_CNFG2                   */
/* Register template referenced: emmc::crypto_phy::DLL_CNFG2               */
#define EMMC_CRYPTO_PHY_DLL_CNFG2_OFFSET 0x26u
#define EMMC_CRYPTO_PHY_DLL_CNFG2_BYTE_OFFSET 0x26u
#define EMMC_CRYPTO_PHY_DLL_CNFG2_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_CNFG2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_CNFG2_RESET_VALUE 0x00u
#define EMMC_CRYPTO_PHY_DLL_CNFG2_RESET_MASK 0xffu
#define EMMC_CRYPTO_PHY_DLL_CNFG2_READ_MASK 0xffu
#define EMMC_CRYPTO_PHY_DLL_CNFG2_WRITE_MASK 0x7fu
/* Register member: emmc::crypto_phy.DLLDL_CNFG                            */
/* Register type referenced: emmc::crypto_phy::DLLDL_CNFG                  */
/* Register template referenced: emmc::crypto_phy::DLLDL_CNFG              */
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_OFFSET 0x28u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_BYTE_OFFSET 0x28u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_RESET_VALUE 0x00u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_RESET_MASK 0xffu
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_READ_MASK 0xffu
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_WRITE_MASK 0xffu
/* Register member: emmc::crypto_phy.DLL_OFFST                             */
/* Register type referenced: emmc::crypto_phy::DLL_OFFST                   */
/* Register template referenced: emmc::crypto_phy::DLL_OFFST               */
#define EMMC_CRYPTO_PHY_DLL_OFFST_OFFSET 0x29u
#define EMMC_CRYPTO_PHY_DLL_OFFST_BYTE_OFFSET 0x29u
#define EMMC_CRYPTO_PHY_DLL_OFFST_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_OFFST_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_OFFST_RESET_VALUE 0x00u
#define EMMC_CRYPTO_PHY_DLL_OFFST_RESET_MASK 0xffu
#define EMMC_CRYPTO_PHY_DLL_OFFST_READ_MASK 0xffu
#define EMMC_CRYPTO_PHY_DLL_OFFST_WRITE_MASK 0x7fu
/* Register member: emmc::crypto_phy.DLLMST_TSTDC                          */
/* Register type referenced: emmc::crypto_phy::DLLMST_TSTDC                */
/* Register template referenced: emmc::crypto_phy::DLLMST_TSTDC            */
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_OFFSET 0x2au
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_BYTE_OFFSET 0x2au
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_RESET_VALUE 0x00u
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_RESET_MASK 0xffu
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_READ_MASK 0xffu
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_WRITE_MASK 0x7fu
/* Register member: emmc::crypto_phy.DLLLBT_CNFG                           */
/* Register type referenced: emmc::crypto_phy::DLLLBT_CNFG                 */
/* Register template referenced: emmc::crypto_phy::DLLLBT_CNFG             */
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_OFFSET 0x2cu
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_BYTE_OFFSET 0x2cu
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_RESET_MASK 0xffffu
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_READ_MASK 0xffffu
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_WRITE_MASK 0xffffu
/* Register member: emmc::crypto_phy.DLL_STATUS                            */
/* Register type referenced: emmc::crypto_phy::DLL_STATUS                  */
/* Register template referenced: emmc::crypto_phy::DLL_STATUS              */
#define EMMC_CRYPTO_PHY_DLL_STATUS_OFFSET 0x2eu
#define EMMC_CRYPTO_PHY_DLL_STATUS_BYTE_OFFSET 0x2eu
#define EMMC_CRYPTO_PHY_DLL_STATUS_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_STATUS_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PHY_DLL_STATUS_RESET_VALUE 0x00u
#define EMMC_CRYPTO_PHY_DLL_STATUS_RESET_MASK 0xffu
#define EMMC_CRYPTO_PHY_DLL_STATUS_READ_MASK 0xffu
#define EMMC_CRYPTO_PHY_DLL_STATUS_WRITE_MASK 0x00u
/* Register member: emmc::crypto_phy.DLLDBG_MLKDC                          */
/* Register type referenced: emmc::crypto_phy::DLLDBG_MLKDC                */
/* Register template referenced: emmc::crypto_phy::DLLDBG_MLKDC            */
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_OFFSET 0x30u
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_BYTE_OFFSET 0x30u
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_RESET_VALUE 0x00u
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_RESET_MASK 0xffu
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_READ_MASK 0xffu
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_WRITE_MASK 0x00u
/* Register member: emmc::crypto_phy.DLLDBG_SLKDC                          */
/* Register type referenced: emmc::crypto_phy::DLLDBG_SLKDC                */
/* Register template referenced: emmc::crypto_phy::DLLDBG_SLKDC            */
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_OFFSET 0x32u
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_BYTE_OFFSET 0x32u
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_RESET_VALUE 0x00u
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_RESET_MASK 0xffu
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_READ_MASK 0xffu
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_WRITE_MASK 0x00u

/* Register type: emmc::crypto_phy::PHY_CNFG                               */
/* Register template: emmc::crypto_phy::PHY_CNFG                           */
/* Field member: emmc::crypto_phy::PHY_CNFG.PAD_SN                         */
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SN_MSB 23u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SN_LSB 20u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SN_WIDTH 4u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SN_RESET 0x0u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SN_FIELD_MASK 0x00f00000ul
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SN_GET(x) (((x) & 0x00f00000ul) >> 20)
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SN_SET(x) (((x) << 20) & 0x00f00000ul)
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SN_MODIFY(r, x) \
   ((((x) << 20) & 0x00f00000ul) | ((r) & 0xff0ffffful))
/* Field member: emmc::crypto_phy::PHY_CNFG.PAD_SP                         */
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SP_MSB 19u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SP_LSB 16u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SP_WIDTH 4u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SP_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SP_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SP_RESET 0x0u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SP_FIELD_MASK 0x000f0000ul
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SP_GET(x) (((x) & 0x000f0000ul) >> 16)
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SP_SET(x) (((x) << 16) & 0x000f0000ul)
#define EMMC_CRYPTO_PHY_PHY_CNFG_PAD_SP_MODIFY(r, x) \
   ((((x) << 16) & 0x000f0000ul) | ((r) & 0xfff0fffful))
/* Field member: emmc::crypto_phy::PHY_CNFG.PHY_PWRGOOD                    */
#define EMMC_CRYPTO_PHY_PHY_CNFG_PHY_PWRGOOD_MSB 1u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PHY_PWRGOOD_LSB 1u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PHY_PWRGOOD_WIDTH 1u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PHY_PWRGOOD_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PHY_PWRGOOD_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PHY_PWRGOOD_FIELD_MASK 0x00000002ul
#define EMMC_CRYPTO_PHY_PHY_CNFG_PHY_PWRGOOD_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define EMMC_CRYPTO_PHY_PHY_CNFG_PHY_PWRGOOD_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define EMMC_CRYPTO_PHY_PHY_CNFG_PHY_PWRGOOD_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: emmc::crypto_phy::PHY_CNFG.PHY_RSTN                       */
#define EMMC_CRYPTO_PHY_PHY_CNFG_PHY_RSTN_MSB 0u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PHY_RSTN_LSB 0u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PHY_RSTN_WIDTH 1u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PHY_RSTN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PHY_RSTN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PHY_RSTN_RESET 0x0u
#define EMMC_CRYPTO_PHY_PHY_CNFG_PHY_RSTN_FIELD_MASK 0x00000001ul
#define EMMC_CRYPTO_PHY_PHY_CNFG_PHY_RSTN_GET(x) ((x) & 0x00000001ul)
#define EMMC_CRYPTO_PHY_PHY_CNFG_PHY_RSTN_SET(x) ((x) & 0x00000001ul)
#define EMMC_CRYPTO_PHY_PHY_CNFG_PHY_RSTN_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: emmc::crypto_phy::CMDPAD_CNFG                            */
/* Register template: emmc::crypto_phy::CMDPAD_CNFG                        */
/* Field member: emmc::crypto_phy::CMDPAD_CNFG.TXSLEW_CTRL_N               */
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_N_MSB 12u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_N_LSB 9u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_N_WIDTH 4u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_N_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_N_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_N_RESET 0x2u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_N_FIELD_MASK 0x1e00u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_N_GET(x) \
   (((x) & 0x1e00u) >> 9)
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_N_SET(x) \
   (((x) << 9) & 0x1e00u)
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_N_MODIFY(r, x) \
   ((((x) << 9) & 0x1e00u) | ((r) & 0xe1ffu))
/* Field member: emmc::crypto_phy::CMDPAD_CNFG.TXSLEW_CTRL_P               */
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_P_MSB 8u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_P_LSB 5u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_P_WIDTH 4u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_P_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_P_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_P_RESET 0x2u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_P_FIELD_MASK 0x01e0u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_P_GET(x) \
   (((x) & 0x01e0u) >> 5)
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_P_SET(x) \
   (((x) << 5) & 0x01e0u)
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_TXSLEW_CTRL_P_MODIFY(r, x) \
   ((((x) << 5) & 0x01e0u) | ((r) & 0xfe1fu))
/* Field member: emmc::crypto_phy::CMDPAD_CNFG.WEAKPULL_EN                 */
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_WEAKPULL_EN_MSB 4u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_WEAKPULL_EN_LSB 3u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_WEAKPULL_EN_WIDTH 2u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_WEAKPULL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_WEAKPULL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_WEAKPULL_EN_RESET 0x0u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_WEAKPULL_EN_FIELD_MASK 0x0018u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_WEAKPULL_EN_GET(x) (((x) & 0x0018u) >> 3)
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_WEAKPULL_EN_SET(x) \
   (((x) << 3) & 0x0018u)
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_WEAKPULL_EN_MODIFY(r, x) \
   ((((x) << 3) & 0x0018u) | ((r) & 0xffe7u))
/* Field member: emmc::crypto_phy::CMDPAD_CNFG.RXSEL                       */
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_RXSEL_MSB 2u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_RXSEL_LSB 0u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_RXSEL_WIDTH 3u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_RXSEL_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_RXSEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_RXSEL_RESET 0x0u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_RXSEL_FIELD_MASK 0x0007u
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_RXSEL_GET(x) ((x) & 0x0007u)
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_RXSEL_SET(x) ((x) & 0x0007u)
#define EMMC_CRYPTO_PHY_CMDPAD_CNFG_RXSEL_MODIFY(r, x) \
   (((x) & 0x0007u) | ((r) & 0xfff8u))

/* Register type: emmc::crypto_phy::DATPAD_CNFG                            */
/* Register template: emmc::crypto_phy::DATPAD_CNFG                        */
/* Field member: emmc::crypto_phy::DATPAD_CNFG.TXSLEW_CTRL_N               */
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_N_MSB 12u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_N_LSB 9u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_N_WIDTH 4u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_N_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_N_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_N_RESET 0x2u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_N_FIELD_MASK 0x1e00u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_N_GET(x) \
   (((x) & 0x1e00u) >> 9)
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_N_SET(x) \
   (((x) << 9) & 0x1e00u)
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_N_MODIFY(r, x) \
   ((((x) << 9) & 0x1e00u) | ((r) & 0xe1ffu))
/* Field member: emmc::crypto_phy::DATPAD_CNFG.TXSLEW_CTRL_P               */
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_P_MSB 8u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_P_LSB 5u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_P_WIDTH 4u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_P_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_P_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_P_RESET 0x2u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_P_FIELD_MASK 0x01e0u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_P_GET(x) \
   (((x) & 0x01e0u) >> 5)
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_P_SET(x) \
   (((x) << 5) & 0x01e0u)
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_TXSLEW_CTRL_P_MODIFY(r, x) \
   ((((x) << 5) & 0x01e0u) | ((r) & 0xfe1fu))
/* Field member: emmc::crypto_phy::DATPAD_CNFG.WEAKPULL_EN                 */
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_WEAKPULL_EN_MSB 4u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_WEAKPULL_EN_LSB 3u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_WEAKPULL_EN_WIDTH 2u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_WEAKPULL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_WEAKPULL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_WEAKPULL_EN_RESET 0x0u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_WEAKPULL_EN_FIELD_MASK 0x0018u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_WEAKPULL_EN_GET(x) (((x) & 0x0018u) >> 3)
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_WEAKPULL_EN_SET(x) \
   (((x) << 3) & 0x0018u)
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_WEAKPULL_EN_MODIFY(r, x) \
   ((((x) << 3) & 0x0018u) | ((r) & 0xffe7u))
/* Field member: emmc::crypto_phy::DATPAD_CNFG.RXSEL                       */
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_RXSEL_MSB 2u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_RXSEL_LSB 0u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_RXSEL_WIDTH 3u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_RXSEL_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_RXSEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_RXSEL_RESET 0x0u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_RXSEL_FIELD_MASK 0x0007u
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_RXSEL_GET(x) ((x) & 0x0007u)
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_RXSEL_SET(x) ((x) & 0x0007u)
#define EMMC_CRYPTO_PHY_DATPAD_CNFG_RXSEL_MODIFY(r, x) \
   (((x) & 0x0007u) | ((r) & 0xfff8u))

/* Register type: emmc::crypto_phy::CLKPAD_CNFG                            */
/* Register template: emmc::crypto_phy::CLKPAD_CNFG                        */
/* Field member: emmc::crypto_phy::CLKPAD_CNFG.TXSLEW_CTRL_N               */
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_N_MSB 12u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_N_LSB 9u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_N_WIDTH 4u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_N_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_N_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_N_RESET 0x2u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_N_FIELD_MASK 0x1e00u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_N_GET(x) \
   (((x) & 0x1e00u) >> 9)
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_N_SET(x) \
   (((x) << 9) & 0x1e00u)
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_N_MODIFY(r, x) \
   ((((x) << 9) & 0x1e00u) | ((r) & 0xe1ffu))
/* Field member: emmc::crypto_phy::CLKPAD_CNFG.TXSLEW_CTRL_P               */
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_P_MSB 8u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_P_LSB 5u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_P_WIDTH 4u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_P_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_P_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_P_RESET 0x2u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_P_FIELD_MASK 0x01e0u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_P_GET(x) \
   (((x) & 0x01e0u) >> 5)
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_P_SET(x) \
   (((x) << 5) & 0x01e0u)
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_TXSLEW_CTRL_P_MODIFY(r, x) \
   ((((x) << 5) & 0x01e0u) | ((r) & 0xfe1fu))
/* Field member: emmc::crypto_phy::CLKPAD_CNFG.WEAKPULL_EN                 */
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_WEAKPULL_EN_MSB 4u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_WEAKPULL_EN_LSB 3u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_WEAKPULL_EN_WIDTH 2u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_WEAKPULL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_WEAKPULL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_WEAKPULL_EN_RESET 0x0u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_WEAKPULL_EN_FIELD_MASK 0x0018u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_WEAKPULL_EN_GET(x) (((x) & 0x0018u) >> 3)
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_WEAKPULL_EN_SET(x) \
   (((x) << 3) & 0x0018u)
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_WEAKPULL_EN_MODIFY(r, x) \
   ((((x) << 3) & 0x0018u) | ((r) & 0xffe7u))
/* Field member: emmc::crypto_phy::CLKPAD_CNFG.RXSEL                       */
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_RXSEL_MSB 2u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_RXSEL_LSB 0u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_RXSEL_WIDTH 3u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_RXSEL_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_RXSEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_RXSEL_RESET 0x0u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_RXSEL_FIELD_MASK 0x0007u
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_RXSEL_GET(x) ((x) & 0x0007u)
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_RXSEL_SET(x) ((x) & 0x0007u)
#define EMMC_CRYPTO_PHY_CLKPAD_CNFG_RXSEL_MODIFY(r, x) \
   (((x) & 0x0007u) | ((r) & 0xfff8u))

/* Register type: emmc::crypto_phy::STBPAD_CNFG                            */
/* Register template: emmc::crypto_phy::STBPAD_CNFG                        */
/* Field member: emmc::crypto_phy::STBPAD_CNFG.TXSLEW_CTRL_N               */
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_N_MSB 12u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_N_LSB 9u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_N_WIDTH 4u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_N_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_N_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_N_RESET 0x2u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_N_FIELD_MASK 0x1e00u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_N_GET(x) \
   (((x) & 0x1e00u) >> 9)
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_N_SET(x) \
   (((x) << 9) & 0x1e00u)
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_N_MODIFY(r, x) \
   ((((x) << 9) & 0x1e00u) | ((r) & 0xe1ffu))
/* Field member: emmc::crypto_phy::STBPAD_CNFG.TXSLEW_CTRL_P               */
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_P_MSB 8u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_P_LSB 5u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_P_WIDTH 4u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_P_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_P_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_P_RESET 0x2u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_P_FIELD_MASK 0x01e0u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_P_GET(x) \
   (((x) & 0x01e0u) >> 5)
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_P_SET(x) \
   (((x) << 5) & 0x01e0u)
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_TXSLEW_CTRL_P_MODIFY(r, x) \
   ((((x) << 5) & 0x01e0u) | ((r) & 0xfe1fu))
/* Field member: emmc::crypto_phy::STBPAD_CNFG.WEAKPULL_EN                 */
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_WEAKPULL_EN_MSB 4u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_WEAKPULL_EN_LSB 3u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_WEAKPULL_EN_WIDTH 2u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_WEAKPULL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_WEAKPULL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_WEAKPULL_EN_RESET 0x0u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_WEAKPULL_EN_FIELD_MASK 0x0018u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_WEAKPULL_EN_GET(x) (((x) & 0x0018u) >> 3)
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_WEAKPULL_EN_SET(x) \
   (((x) << 3) & 0x0018u)
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_WEAKPULL_EN_MODIFY(r, x) \
   ((((x) << 3) & 0x0018u) | ((r) & 0xffe7u))
/* Field member: emmc::crypto_phy::STBPAD_CNFG.RXSEL                       */
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_RXSEL_MSB 2u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_RXSEL_LSB 0u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_RXSEL_WIDTH 3u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_RXSEL_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_RXSEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_RXSEL_RESET 0x0u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_RXSEL_FIELD_MASK 0x0007u
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_RXSEL_GET(x) ((x) & 0x0007u)
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_RXSEL_SET(x) ((x) & 0x0007u)
#define EMMC_CRYPTO_PHY_STBPAD_CNFG_RXSEL_MODIFY(r, x) \
   (((x) & 0x0007u) | ((r) & 0xfff8u))

/* Register type: emmc::crypto_phy::RSTNPAD_CNFG                           */
/* Register template: emmc::crypto_phy::RSTNPAD_CNFG                       */
/* Field member: emmc::crypto_phy::RSTNPAD_CNFG.TXSLEW_CTRL_N              */
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_N_MSB 12u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_N_LSB 9u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_N_WIDTH 4u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_N_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_N_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_N_RESET 0x2u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_N_FIELD_MASK 0x1e00u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_N_GET(x) \
   (((x) & 0x1e00u) >> 9)
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_N_SET(x) \
   (((x) << 9) & 0x1e00u)
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_N_MODIFY(r, x) \
   ((((x) << 9) & 0x1e00u) | ((r) & 0xe1ffu))
/* Field member: emmc::crypto_phy::RSTNPAD_CNFG.TXSLEW_CTRL_P              */
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_P_MSB 8u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_P_LSB 5u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_P_WIDTH 4u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_P_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_P_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_P_RESET 0x2u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_P_FIELD_MASK 0x01e0u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_P_GET(x) \
   (((x) & 0x01e0u) >> 5)
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_P_SET(x) \
   (((x) << 5) & 0x01e0u)
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_TXSLEW_CTRL_P_MODIFY(r, x) \
   ((((x) << 5) & 0x01e0u) | ((r) & 0xfe1fu))
/* Field member: emmc::crypto_phy::RSTNPAD_CNFG.WEAKPULL_EN                */
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_WEAKPULL_EN_MSB 4u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_WEAKPULL_EN_LSB 3u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_WEAKPULL_EN_WIDTH 2u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_WEAKPULL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_WEAKPULL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_WEAKPULL_EN_RESET 0x0u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_WEAKPULL_EN_FIELD_MASK 0x0018u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_WEAKPULL_EN_GET(x) \
   (((x) & 0x0018u) >> 3)
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_WEAKPULL_EN_SET(x) \
   (((x) << 3) & 0x0018u)
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_WEAKPULL_EN_MODIFY(r, x) \
   ((((x) << 3) & 0x0018u) | ((r) & 0xffe7u))
/* Field member: emmc::crypto_phy::RSTNPAD_CNFG.RXSEL                      */
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_RXSEL_MSB 2u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_RXSEL_LSB 0u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_RXSEL_WIDTH 3u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_RXSEL_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_RXSEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_RXSEL_RESET 0x0u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_RXSEL_FIELD_MASK 0x0007u
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_RXSEL_GET(x) ((x) & 0x0007u)
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_RXSEL_SET(x) ((x) & 0x0007u)
#define EMMC_CRYPTO_PHY_RSTNPAD_CNFG_RXSEL_MODIFY(r, x) \
   (((x) & 0x0007u) | ((r) & 0xfff8u))

/* Register type: emmc::crypto_phy::PADTEST_CNFG                           */
/* Register template: emmc::crypto_phy::PADTEST_CNFG                       */
/* Field member: emmc::crypto_phy::PADTEST_CNFG.TEST_OE                    */
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TEST_OE_MSB 15u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TEST_OE_LSB 4u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TEST_OE_WIDTH 12u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TEST_OE_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TEST_OE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TEST_OE_RESET 0x000u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TEST_OE_FIELD_MASK 0xfff0u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TEST_OE_GET(x) (((x) & 0xfff0u) >> 4)
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TEST_OE_SET(x) (((x) << 4) & 0xfff0u)
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TEST_OE_MODIFY(r, x) \
   ((((x) << 4) & 0xfff0u) | ((r) & 0x000fu))
/* Field member: emmc::crypto_phy::PADTEST_CNFG.RSVD_1                     */
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_RSVD_1_MSB 3u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_RSVD_1_LSB 1u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_RSVD_1_WIDTH 3u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_RSVD_1_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_RSVD_1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_RSVD_1_RESET 0x0u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_RSVD_1_FIELD_MASK 0x000eu
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_RSVD_1_GET(x) (((x) & 0x000eu) >> 1)
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_RSVD_1_SET(x) (((x) << 1) & 0x000eu)
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_RSVD_1_MODIFY(r, x) \
   ((((x) << 1) & 0x000eu) | ((r) & 0xfff1u))
/* Field member: emmc::crypto_phy::PADTEST_CNFG.TESTMODE_EN                */
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TESTMODE_EN_MSB 0u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TESTMODE_EN_LSB 0u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TESTMODE_EN_WIDTH 1u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TESTMODE_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TESTMODE_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TESTMODE_EN_RESET 0x0u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TESTMODE_EN_FIELD_MASK 0x0001u
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TESTMODE_EN_GET(x) ((x) & 0x0001u)
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TESTMODE_EN_SET(x) ((x) & 0x0001u)
#define EMMC_CRYPTO_PHY_PADTEST_CNFG_TESTMODE_EN_MODIFY(r, x) \
   (((x) & 0x0001u) | ((r) & 0xfffeu))

/* Register type: emmc::crypto_phy::PADTEST_OUT                            */
/* Register template: emmc::crypto_phy::PADTEST_OUT                        */
/* Field member: emmc::crypto_phy::PADTEST_OUT.TESTDATA_OUT                */
#define EMMC_CRYPTO_PHY_PADTEST_OUT_TESTDATA_OUT_MSB 11u
#define EMMC_CRYPTO_PHY_PADTEST_OUT_TESTDATA_OUT_LSB 0u
#define EMMC_CRYPTO_PHY_PADTEST_OUT_TESTDATA_OUT_WIDTH 12u
#define EMMC_CRYPTO_PHY_PADTEST_OUT_TESTDATA_OUT_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_PADTEST_OUT_TESTDATA_OUT_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_PADTEST_OUT_TESTDATA_OUT_RESET 0x000u
#define EMMC_CRYPTO_PHY_PADTEST_OUT_TESTDATA_OUT_FIELD_MASK 0x0fffu
#define EMMC_CRYPTO_PHY_PADTEST_OUT_TESTDATA_OUT_GET(x) ((x) & 0x0fffu)
#define EMMC_CRYPTO_PHY_PADTEST_OUT_TESTDATA_OUT_SET(x) ((x) & 0x0fffu)
#define EMMC_CRYPTO_PHY_PADTEST_OUT_TESTDATA_OUT_MODIFY(r, x) \
   (((x) & 0x0fffu) | ((r) & 0xf000u))

/* Register type: emmc::crypto_phy::PADTEST_IN                             */
/* Register template: emmc::crypto_phy::PADTEST_IN                         */
/* Field member: emmc::crypto_phy::PADTEST_IN.TESTDATA_IN                  */
#define EMMC_CRYPTO_PHY_PADTEST_IN_TESTDATA_IN_MSB 11u
#define EMMC_CRYPTO_PHY_PADTEST_IN_TESTDATA_IN_LSB 0u
#define EMMC_CRYPTO_PHY_PADTEST_IN_TESTDATA_IN_WIDTH 12u
#define EMMC_CRYPTO_PHY_PADTEST_IN_TESTDATA_IN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_PADTEST_IN_TESTDATA_IN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_PADTEST_IN_TESTDATA_IN_RESET 0x000u
#define EMMC_CRYPTO_PHY_PADTEST_IN_TESTDATA_IN_FIELD_MASK 0x0fffu
#define EMMC_CRYPTO_PHY_PADTEST_IN_TESTDATA_IN_GET(x) ((x) & 0x0fffu)
#define EMMC_CRYPTO_PHY_PADTEST_IN_TESTDATA_IN_SET(x) ((x) & 0x0fffu)
#define EMMC_CRYPTO_PHY_PADTEST_IN_TESTDATA_IN_MODIFY(r, x) \
   (((x) & 0x0fffu) | ((r) & 0xf000u))

/* Register type: emmc::crypto_phy::PRBS_CNFG                              */
/* Register template: emmc::crypto_phy::PRBS_CNFG                          */
/* Field member: emmc::crypto_phy::PRBS_CNFG.INIT_SEED                     */
#define EMMC_CRYPTO_PHY_PRBS_CNFG_INIT_SEED_MSB 15u
#define EMMC_CRYPTO_PHY_PRBS_CNFG_INIT_SEED_LSB 0u
#define EMMC_CRYPTO_PHY_PRBS_CNFG_INIT_SEED_WIDTH 16u
#define EMMC_CRYPTO_PHY_PRBS_CNFG_INIT_SEED_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_PRBS_CNFG_INIT_SEED_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_PRBS_CNFG_INIT_SEED_RESET 0xffffu
#define EMMC_CRYPTO_PHY_PRBS_CNFG_INIT_SEED_FIELD_MASK 0xffffu
#define EMMC_CRYPTO_PHY_PRBS_CNFG_INIT_SEED_GET(x) ((x) & 0xffffu)
#define EMMC_CRYPTO_PHY_PRBS_CNFG_INIT_SEED_SET(x) ((x) & 0xffffu)
#define EMMC_CRYPTO_PHY_PRBS_CNFG_INIT_SEED_MODIFY(r, x) ((x) & 0xffffu)

/* Register type: emmc::crypto_phy::PHYLPBK_CNFG                           */
/* Register template: emmc::crypto_phy::PHYLPBK_CNFG                       */
/* Field member: emmc::crypto_phy::PHYLPBK_CNFG.OUT_EN_PHYLPBK_MODE        */
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_OUT_EN_PHYLPBK_MODE_MSB 1u
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_OUT_EN_PHYLPBK_MODE_LSB 1u
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_OUT_EN_PHYLPBK_MODE_WIDTH 1u
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_OUT_EN_PHYLPBK_MODE_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_OUT_EN_PHYLPBK_MODE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_OUT_EN_PHYLPBK_MODE_RESET 0x0u
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_OUT_EN_PHYLPBK_MODE_FIELD_MASK 0x02u
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_OUT_EN_PHYLPBK_MODE_GET(x) \
   (((x) & 0x02u) >> 1)
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_OUT_EN_PHYLPBK_MODE_SET(x) \
   (((x) << 1) & 0x02u)
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_OUT_EN_PHYLPBK_MODE_MODIFY(r, x) \
   ((((x) << 1) & 0x02u) | ((r) & 0xfdu))
/* Field member: emmc::crypto_phy::PHYLPBK_CNFG.PHYLPBK_EN                 */
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_PHYLPBK_EN_MSB 0u
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_PHYLPBK_EN_LSB 0u
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_PHYLPBK_EN_WIDTH 1u
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_PHYLPBK_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_PHYLPBK_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_PHYLPBK_EN_RESET 0x0u
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_PHYLPBK_EN_FIELD_MASK 0x01u
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_PHYLPBK_EN_GET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_PHYLPBK_EN_SET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_PHY_PHYLPBK_CNFG_PHYLPBK_EN_MODIFY(r, x) \
   (((x) & 0x01u) | ((r) & 0xfeu))

/* Register type: emmc::crypto_phy::COMMDL_CNFG                            */
/* Register template: emmc::crypto_phy::COMMDL_CNFG                        */
/* Field member: emmc::crypto_phy::COMMDL_CNFG.DLOUT_EN                    */
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLOUT_EN_MSB 1u
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLOUT_EN_LSB 1u
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLOUT_EN_WIDTH 1u
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLOUT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLOUT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLOUT_EN_RESET 0x0u
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLOUT_EN_FIELD_MASK 0x02u
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLOUT_EN_GET(x) (((x) & 0x02u) >> 1)
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLOUT_EN_SET(x) (((x) << 1) & 0x02u)
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLOUT_EN_MODIFY(r, x) \
   ((((x) << 1) & 0x02u) | ((r) & 0xfdu))
/* Field member: emmc::crypto_phy::COMMDL_CNFG.DLSTEP_SEL                  */
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLSTEP_SEL_MSB 0u
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLSTEP_SEL_LSB 0u
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLSTEP_SEL_WIDTH 1u
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLSTEP_SEL_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLSTEP_SEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLSTEP_SEL_RESET 0x0u
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLSTEP_SEL_FIELD_MASK 0x01u
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLSTEP_SEL_GET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLSTEP_SEL_SET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_PHY_COMMDL_CNFG_DLSTEP_SEL_MODIFY(r, x) \
   (((x) & 0x01u) | ((r) & 0xfeu))

/* Register type: emmc::crypto_phy::SDCLKDL_CNFG                           */
/* Register template: emmc::crypto_phy::SDCLKDL_CNFG                       */
/* Field member: emmc::crypto_phy::SDCLKDL_CNFG.UPDATE_DC                  */
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_UPDATE_DC_MSB 4u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_UPDATE_DC_LSB 4u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_UPDATE_DC_WIDTH 1u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_UPDATE_DC_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_UPDATE_DC_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_UPDATE_DC_RESET 0x0u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_UPDATE_DC_FIELD_MASK 0x10u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_UPDATE_DC_GET(x) (((x) & 0x10u) >> 4)
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_UPDATE_DC_SET(x) (((x) << 4) & 0x10u)
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_UPDATE_DC_MODIFY(r, x) \
   ((((x) << 4) & 0x10u) | ((r) & 0xefu))
/* Field member: emmc::crypto_phy::SDCLKDL_CNFG.INPSEL_CNFG                */
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_INPSEL_CNFG_MSB 3u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_INPSEL_CNFG_LSB 2u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_INPSEL_CNFG_WIDTH 2u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_INPSEL_CNFG_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_INPSEL_CNFG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_INPSEL_CNFG_RESET 0x0u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_INPSEL_CNFG_FIELD_MASK 0x0cu
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_INPSEL_CNFG_GET(x) (((x) & 0x0cu) >> 2)
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_INPSEL_CNFG_SET(x) (((x) << 2) & 0x0cu)
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_INPSEL_CNFG_MODIFY(r, x) \
   ((((x) << 2) & 0x0cu) | ((r) & 0xf3u))
/* Field member: emmc::crypto_phy::SDCLKDL_CNFG.BYPASS_EN                  */
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_BYPASS_EN_MSB 1u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_BYPASS_EN_LSB 1u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_BYPASS_EN_WIDTH 1u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_BYPASS_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_BYPASS_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_BYPASS_EN_RESET 0x0u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_BYPASS_EN_FIELD_MASK 0x02u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_BYPASS_EN_GET(x) (((x) & 0x02u) >> 1)
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_BYPASS_EN_SET(x) (((x) << 1) & 0x02u)
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_BYPASS_EN_MODIFY(r, x) \
   ((((x) << 1) & 0x02u) | ((r) & 0xfdu))
/* Field member: emmc::crypto_phy::SDCLKDL_CNFG.EXTDLY_EN                  */
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_EXTDLY_EN_MSB 0u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_EXTDLY_EN_LSB 0u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_EXTDLY_EN_WIDTH 1u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_EXTDLY_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_EXTDLY_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_EXTDLY_EN_RESET 0x0u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_EXTDLY_EN_FIELD_MASK 0x01u
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_EXTDLY_EN_GET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_EXTDLY_EN_SET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_PHY_SDCLKDL_CNFG_EXTDLY_EN_MODIFY(r, x) \
   (((x) & 0x01u) | ((r) & 0xfeu))

/* Register type: emmc::crypto_phy::SDCLKDL_DC                             */
/* Register template: emmc::crypto_phy::SDCLKDL_DC                         */
/* Field member: emmc::crypto_phy::SDCLKDL_DC.CCKDL_DC                     */
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_CCKDL_DC_MSB 6u
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_CCKDL_DC_LSB 0u
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_CCKDL_DC_WIDTH 7u
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_CCKDL_DC_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_CCKDL_DC_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_CCKDL_DC_RESET 0x00u
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_CCKDL_DC_FIELD_MASK 0x7fu
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_CCKDL_DC_GET(x) ((x) & 0x7fu)
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_CCKDL_DC_SET(x) ((x) & 0x7fu)
#define EMMC_CRYPTO_PHY_SDCLKDL_DC_CCKDL_DC_MODIFY(r, x) \
   (((x) & 0x7fu) | ((r) & 0x80u))

/* Register type: emmc::crypto_phy::SMPLDL_CNFG                            */
/* Register template: emmc::crypto_phy::SMPLDL_CNFG                        */
/* Field member: emmc::crypto_phy::SMPLDL_CNFG.INPSEL_OVERRIDE             */
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_OVERRIDE_MSB 4u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_OVERRIDE_LSB 4u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_OVERRIDE_WIDTH 1u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_OVERRIDE_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_OVERRIDE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_OVERRIDE_RESET 0x0u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_OVERRIDE_FIELD_MASK 0x10u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_OVERRIDE_GET(x) \
   (((x) & 0x10u) >> 4)
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_OVERRIDE_SET(x) \
   (((x) << 4) & 0x10u)
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_OVERRIDE_MODIFY(r, x) \
   ((((x) << 4) & 0x10u) | ((r) & 0xefu))
/* Field member: emmc::crypto_phy::SMPLDL_CNFG.INPSEL_CNFG                 */
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_CNFG_MSB 3u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_CNFG_LSB 2u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_CNFG_WIDTH 2u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_CNFG_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_CNFG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_CNFG_RESET 0x3u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_CNFG_FIELD_MASK 0x0cu
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_CNFG_GET(x) (((x) & 0x0cu) >> 2)
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_CNFG_SET(x) (((x) << 2) & 0x0cu)
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_INPSEL_CNFG_MODIFY(r, x) \
   ((((x) << 2) & 0x0cu) | ((r) & 0xf3u))
/* Field member: emmc::crypto_phy::SMPLDL_CNFG.BYPASS_EN                   */
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_BYPASS_EN_MSB 1u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_BYPASS_EN_LSB 1u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_BYPASS_EN_WIDTH 1u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_BYPASS_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_BYPASS_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_BYPASS_EN_RESET 0x1u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_BYPASS_EN_FIELD_MASK 0x02u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_BYPASS_EN_GET(x) (((x) & 0x02u) >> 1)
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_BYPASS_EN_SET(x) (((x) << 1) & 0x02u)
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_BYPASS_EN_MODIFY(r, x) \
   ((((x) << 1) & 0x02u) | ((r) & 0xfdu))
/* Field member: emmc::crypto_phy::SMPLDL_CNFG.EXTDLY_EN                   */
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_EXTDLY_EN_MSB 0u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_EXTDLY_EN_LSB 0u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_EXTDLY_EN_WIDTH 1u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_EXTDLY_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_EXTDLY_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_EXTDLY_EN_RESET 0x0u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_EXTDLY_EN_FIELD_MASK 0x01u
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_EXTDLY_EN_GET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_EXTDLY_EN_SET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_PHY_SMPLDL_CNFG_EXTDLY_EN_MODIFY(r, x) \
   (((x) & 0x01u) | ((r) & 0xfeu))

/* Register type: emmc::crypto_phy::ATDL_CNFG                              */
/* Register template: emmc::crypto_phy::ATDL_CNFG                          */
/* Field member: emmc::crypto_phy::ATDL_CNFG.INPSEL_CNFG                   */
#define EMMC_CRYPTO_PHY_ATDL_CNFG_INPSEL_CNFG_MSB 3u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_INPSEL_CNFG_LSB 2u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_INPSEL_CNFG_WIDTH 2u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_INPSEL_CNFG_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_INPSEL_CNFG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_INPSEL_CNFG_RESET 0x0u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_INPSEL_CNFG_FIELD_MASK 0x0cu
#define EMMC_CRYPTO_PHY_ATDL_CNFG_INPSEL_CNFG_GET(x) (((x) & 0x0cu) >> 2)
#define EMMC_CRYPTO_PHY_ATDL_CNFG_INPSEL_CNFG_SET(x) (((x) << 2) & 0x0cu)
#define EMMC_CRYPTO_PHY_ATDL_CNFG_INPSEL_CNFG_MODIFY(r, x) \
   ((((x) << 2) & 0x0cu) | ((r) & 0xf3u))
/* Field member: emmc::crypto_phy::ATDL_CNFG.BYPASS_EN                     */
#define EMMC_CRYPTO_PHY_ATDL_CNFG_BYPASS_EN_MSB 1u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_BYPASS_EN_LSB 1u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_BYPASS_EN_WIDTH 1u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_BYPASS_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_BYPASS_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_BYPASS_EN_RESET 0x0u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_BYPASS_EN_FIELD_MASK 0x02u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_BYPASS_EN_GET(x) (((x) & 0x02u) >> 1)
#define EMMC_CRYPTO_PHY_ATDL_CNFG_BYPASS_EN_SET(x) (((x) << 1) & 0x02u)
#define EMMC_CRYPTO_PHY_ATDL_CNFG_BYPASS_EN_MODIFY(r, x) \
   ((((x) << 1) & 0x02u) | ((r) & 0xfdu))
/* Field member: emmc::crypto_phy::ATDL_CNFG.EXTDLY_EN                     */
#define EMMC_CRYPTO_PHY_ATDL_CNFG_EXTDLY_EN_MSB 0u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_EXTDLY_EN_LSB 0u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_EXTDLY_EN_WIDTH 1u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_EXTDLY_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_EXTDLY_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_EXTDLY_EN_RESET 0x0u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_EXTDLY_EN_FIELD_MASK 0x01u
#define EMMC_CRYPTO_PHY_ATDL_CNFG_EXTDLY_EN_GET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_PHY_ATDL_CNFG_EXTDLY_EN_SET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_PHY_ATDL_CNFG_EXTDLY_EN_MODIFY(r, x) \
   (((x) & 0x01u) | ((r) & 0xfeu))

/* Register type: emmc::crypto_phy::DLL_CTRL                               */
/* Register template: emmc::crypto_phy::DLL_CTRL                           */
/* Field member: emmc::crypto_phy::DLL_CTRL.RSVD_3_7                       */
#define EMMC_CRYPTO_PHY_DLL_CTRL_RSVD_3_7_MSB 7u
#define EMMC_CRYPTO_PHY_DLL_CTRL_RSVD_3_7_LSB 3u
#define EMMC_CRYPTO_PHY_DLL_CTRL_RSVD_3_7_WIDTH 5u
#define EMMC_CRYPTO_PHY_DLL_CTRL_RSVD_3_7_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_CTRL_RSVD_3_7_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PHY_DLL_CTRL_RSVD_3_7_RESET 0x00u
#define EMMC_CRYPTO_PHY_DLL_CTRL_RSVD_3_7_FIELD_MASK 0xf8u
#define EMMC_CRYPTO_PHY_DLL_CTRL_RSVD_3_7_GET(x) (((x) & 0xf8u) >> 3)
#define EMMC_CRYPTO_PHY_DLL_CTRL_RSVD_3_7_SET(x) (((x) << 3) & 0xf8u)
#define EMMC_CRYPTO_PHY_DLL_CTRL_RSVD_3_7_MODIFY(r, x) \
   ((((x) << 3) & 0xf8u) | ((r) & 0x07u))
/* Field member: emmc::crypto_phy::DLL_CTRL.SLV_SWDC_UPDATE                */
#define EMMC_CRYPTO_PHY_DLL_CTRL_SLV_SWDC_UPDATE_MSB 2u
#define EMMC_CRYPTO_PHY_DLL_CTRL_SLV_SWDC_UPDATE_LSB 2u
#define EMMC_CRYPTO_PHY_DLL_CTRL_SLV_SWDC_UPDATE_WIDTH 1u
#define EMMC_CRYPTO_PHY_DLL_CTRL_SLV_SWDC_UPDATE_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_CTRL_SLV_SWDC_UPDATE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_CTRL_SLV_SWDC_UPDATE_RESET 0x0u
#define EMMC_CRYPTO_PHY_DLL_CTRL_SLV_SWDC_UPDATE_FIELD_MASK 0x04u
#define EMMC_CRYPTO_PHY_DLL_CTRL_SLV_SWDC_UPDATE_GET(x) (((x) & 0x04u) >> 2)
#define EMMC_CRYPTO_PHY_DLL_CTRL_SLV_SWDC_UPDATE_SET(x) (((x) << 2) & 0x04u)
#define EMMC_CRYPTO_PHY_DLL_CTRL_SLV_SWDC_UPDATE_MODIFY(r, x) \
   ((((x) << 2) & 0x04u) | ((r) & 0xfbu))
/* Field member: emmc::crypto_phy::DLL_CTRL.OFFST_EN                       */
#define EMMC_CRYPTO_PHY_DLL_CTRL_OFFST_EN_MSB 1u
#define EMMC_CRYPTO_PHY_DLL_CTRL_OFFST_EN_LSB 1u
#define EMMC_CRYPTO_PHY_DLL_CTRL_OFFST_EN_WIDTH 1u
#define EMMC_CRYPTO_PHY_DLL_CTRL_OFFST_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_CTRL_OFFST_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_CTRL_OFFST_EN_RESET 0x0u
#define EMMC_CRYPTO_PHY_DLL_CTRL_OFFST_EN_FIELD_MASK 0x02u
#define EMMC_CRYPTO_PHY_DLL_CTRL_OFFST_EN_GET(x) (((x) & 0x02u) >> 1)
#define EMMC_CRYPTO_PHY_DLL_CTRL_OFFST_EN_SET(x) (((x) << 1) & 0x02u)
#define EMMC_CRYPTO_PHY_DLL_CTRL_OFFST_EN_MODIFY(r, x) \
   ((((x) << 1) & 0x02u) | ((r) & 0xfdu))
/* Field member: emmc::crypto_phy::DLL_CTRL.DLL_EN                         */
#define EMMC_CRYPTO_PHY_DLL_CTRL_DLL_EN_MSB 0u
#define EMMC_CRYPTO_PHY_DLL_CTRL_DLL_EN_LSB 0u
#define EMMC_CRYPTO_PHY_DLL_CTRL_DLL_EN_WIDTH 1u
#define EMMC_CRYPTO_PHY_DLL_CTRL_DLL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_CTRL_DLL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_CTRL_DLL_EN_RESET 0x0u
#define EMMC_CRYPTO_PHY_DLL_CTRL_DLL_EN_FIELD_MASK 0x01u
#define EMMC_CRYPTO_PHY_DLL_CTRL_DLL_EN_GET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_PHY_DLL_CTRL_DLL_EN_SET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_PHY_DLL_CTRL_DLL_EN_MODIFY(r, x) \
   (((x) & 0x01u) | ((r) & 0xfeu))

/* Register type: emmc::crypto_phy::DLL_CNFG1                              */
/* Register template: emmc::crypto_phy::DLL_CNFG1                          */
/* Field member: emmc::crypto_phy::DLL_CNFG1.SLVDLY                        */
#define EMMC_CRYPTO_PHY_DLL_CNFG1_SLVDLY_MSB 5u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_SLVDLY_LSB 4u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_SLVDLY_WIDTH 2u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_SLVDLY_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_SLVDLY_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_SLVDLY_RESET 0x0u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_SLVDLY_FIELD_MASK 0x30u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_SLVDLY_GET(x) (((x) & 0x30u) >> 4)
#define EMMC_CRYPTO_PHY_DLL_CNFG1_SLVDLY_SET(x) (((x) << 4) & 0x30u)
#define EMMC_CRYPTO_PHY_DLL_CNFG1_SLVDLY_MODIFY(r, x) \
   ((((x) << 4) & 0x30u) | ((r) & 0xcfu))
/* Field member: emmc::crypto_phy::DLL_CNFG1.WAITCYCLE                     */
#define EMMC_CRYPTO_PHY_DLL_CNFG1_WAITCYCLE_MSB 2u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_WAITCYCLE_LSB 0u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_WAITCYCLE_WIDTH 3u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_WAITCYCLE_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_WAITCYCLE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_WAITCYCLE_RESET 0x0u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_WAITCYCLE_FIELD_MASK 0x07u
#define EMMC_CRYPTO_PHY_DLL_CNFG1_WAITCYCLE_GET(x) ((x) & 0x07u)
#define EMMC_CRYPTO_PHY_DLL_CNFG1_WAITCYCLE_SET(x) ((x) & 0x07u)
#define EMMC_CRYPTO_PHY_DLL_CNFG1_WAITCYCLE_MODIFY(r, x) \
   (((x) & 0x07u) | ((r) & 0xf8u))

/* Register type: emmc::crypto_phy::DLL_CNFG2                              */
/* Register template: emmc::crypto_phy::DLL_CNFG2                          */
/* Field member: emmc::crypto_phy::DLL_CNFG2.JUMPSTEP                      */
#define EMMC_CRYPTO_PHY_DLL_CNFG2_JUMPSTEP_MSB 6u
#define EMMC_CRYPTO_PHY_DLL_CNFG2_JUMPSTEP_LSB 0u
#define EMMC_CRYPTO_PHY_DLL_CNFG2_JUMPSTEP_WIDTH 7u
#define EMMC_CRYPTO_PHY_DLL_CNFG2_JUMPSTEP_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_CNFG2_JUMPSTEP_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_CNFG2_JUMPSTEP_RESET 0x00u
#define EMMC_CRYPTO_PHY_DLL_CNFG2_JUMPSTEP_FIELD_MASK 0x7fu
#define EMMC_CRYPTO_PHY_DLL_CNFG2_JUMPSTEP_GET(x) ((x) & 0x7fu)
#define EMMC_CRYPTO_PHY_DLL_CNFG2_JUMPSTEP_SET(x) ((x) & 0x7fu)
#define EMMC_CRYPTO_PHY_DLL_CNFG2_JUMPSTEP_MODIFY(r, x) \
   (((x) & 0x7fu) | ((r) & 0x80u))

/* Register type: emmc::crypto_phy::DLLDL_CNFG                             */
/* Register template: emmc::crypto_phy::DLLDL_CNFG                         */
/* Field member: emmc::crypto_phy::DLLDL_CNFG.SLV_BYPASS                   */
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_BYPASS_MSB 7u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_BYPASS_LSB 7u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_BYPASS_WIDTH 1u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_BYPASS_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_BYPASS_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_BYPASS_RESET 0x0u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_BYPASS_FIELD_MASK 0x80u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_BYPASS_GET(x) (((x) & 0x80u) >> 7)
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_BYPASS_SET(x) (((x) << 7) & 0x80u)
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_BYPASS_MODIFY(r, x) \
   ((((x) << 7) & 0x80u) | ((r) & 0x7fu))
/* Field member: emmc::crypto_phy::DLLDL_CNFG.SLV_INPSEL                   */
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_INPSEL_MSB 6u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_INPSEL_LSB 5u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_INPSEL_WIDTH 2u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_INPSEL_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_INPSEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_INPSEL_RESET 0x0u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_INPSEL_FIELD_MASK 0x60u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_INPSEL_GET(x) (((x) & 0x60u) >> 5)
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_INPSEL_SET(x) (((x) << 5) & 0x60u)
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_INPSEL_MODIFY(r, x) \
   ((((x) << 5) & 0x60u) | ((r) & 0x9fu))
/* Field member: emmc::crypto_phy::DLLDL_CNFG.SLV_EXTDLYEN                 */
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_EXTDLYEN_MSB 4u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_EXTDLYEN_LSB 4u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_EXTDLYEN_WIDTH 1u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_EXTDLYEN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_EXTDLYEN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_EXTDLYEN_RESET 0x0u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_EXTDLYEN_FIELD_MASK 0x10u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_EXTDLYEN_GET(x) (((x) & 0x10u) >> 4)
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_EXTDLYEN_SET(x) (((x) << 4) & 0x10u)
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_SLV_EXTDLYEN_MODIFY(r, x) \
   ((((x) << 4) & 0x10u) | ((r) & 0xefu))
/* Field member: emmc::crypto_phy::DLLDL_CNFG.MST_BYPASS                   */
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_BYPASS_MSB 3u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_BYPASS_LSB 3u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_BYPASS_WIDTH 1u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_BYPASS_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_BYPASS_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_BYPASS_RESET 0x0u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_BYPASS_FIELD_MASK 0x08u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_BYPASS_GET(x) (((x) & 0x08u) >> 3)
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_BYPASS_SET(x) (((x) << 3) & 0x08u)
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_BYPASS_MODIFY(r, x) \
   ((((x) << 3) & 0x08u) | ((r) & 0xf7u))
/* Field member: emmc::crypto_phy::DLLDL_CNFG.MST_INPSEL                   */
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_INPSEL_MSB 2u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_INPSEL_LSB 1u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_INPSEL_WIDTH 2u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_INPSEL_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_INPSEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_INPSEL_RESET 0x0u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_INPSEL_FIELD_MASK 0x06u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_INPSEL_GET(x) (((x) & 0x06u) >> 1)
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_INPSEL_SET(x) (((x) << 1) & 0x06u)
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_INPSEL_MODIFY(r, x) \
   ((((x) << 1) & 0x06u) | ((r) & 0xf9u))
/* Field member: emmc::crypto_phy::DLLDL_CNFG.MST_EXTDLYEN                 */
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_EXTDLYEN_MSB 0u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_EXTDLYEN_LSB 0u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_EXTDLYEN_WIDTH 1u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_EXTDLYEN_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_EXTDLYEN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_EXTDLYEN_RESET 0x0u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_EXTDLYEN_FIELD_MASK 0x01u
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_EXTDLYEN_GET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_EXTDLYEN_SET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_PHY_DLLDL_CNFG_MST_EXTDLYEN_MODIFY(r, x) \
   (((x) & 0x01u) | ((r) & 0xfeu))

/* Register type: emmc::crypto_phy::DLL_OFFST                              */
/* Register template: emmc::crypto_phy::DLL_OFFST                          */
/* Field member: emmc::crypto_phy::DLL_OFFST.OFFST                         */
#define EMMC_CRYPTO_PHY_DLL_OFFST_OFFST_MSB 6u
#define EMMC_CRYPTO_PHY_DLL_OFFST_OFFST_LSB 0u
#define EMMC_CRYPTO_PHY_DLL_OFFST_OFFST_WIDTH 7u
#define EMMC_CRYPTO_PHY_DLL_OFFST_OFFST_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_OFFST_OFFST_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_OFFST_OFFST_RESET 0x00u
#define EMMC_CRYPTO_PHY_DLL_OFFST_OFFST_FIELD_MASK 0x7fu
#define EMMC_CRYPTO_PHY_DLL_OFFST_OFFST_GET(x) ((x) & 0x7fu)
#define EMMC_CRYPTO_PHY_DLL_OFFST_OFFST_SET(x) ((x) & 0x7fu)
#define EMMC_CRYPTO_PHY_DLL_OFFST_OFFST_MODIFY(r, x) \
   (((x) & 0x7fu) | ((r) & 0x80u))

/* Register type: emmc::crypto_phy::DLLMST_TSTDC                           */
/* Register template: emmc::crypto_phy::DLLMST_TSTDC                       */
/* Field member: emmc::crypto_phy::DLLMST_TSTDC.MSTTST_DC                  */
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_MSTTST_DC_MSB 6u
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_MSTTST_DC_LSB 0u
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_MSTTST_DC_WIDTH 7u
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_MSTTST_DC_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_MSTTST_DC_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_MSTTST_DC_RESET 0x00u
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_MSTTST_DC_FIELD_MASK 0x7fu
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_MSTTST_DC_GET(x) ((x) & 0x7fu)
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_MSTTST_DC_SET(x) ((x) & 0x7fu)
#define EMMC_CRYPTO_PHY_DLLMST_TSTDC_MSTTST_DC_MODIFY(r, x) \
   (((x) & 0x7fu) | ((r) & 0x80u))

/* Register type: emmc::crypto_phy::DLLLBT_CNFG                            */
/* Register template: emmc::crypto_phy::DLLLBT_CNFG                        */
/* Field member: emmc::crypto_phy::DLLLBT_CNFG.LBT_LOADVAL                 */
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_LBT_LOADVAL_MSB 15u
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_LBT_LOADVAL_LSB 0u
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_LBT_LOADVAL_WIDTH 16u
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_LBT_LOADVAL_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_LBT_LOADVAL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_LBT_LOADVAL_RESET 0x0000u
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_LBT_LOADVAL_FIELD_MASK 0xffffu
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_LBT_LOADVAL_GET(x) ((x) & 0xffffu)
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_LBT_LOADVAL_SET(x) ((x) & 0xffffu)
#define EMMC_CRYPTO_PHY_DLLLBT_CNFG_LBT_LOADVAL_MODIFY(r, x) ((x) & 0xffffu)

/* Register type: emmc::crypto_phy::DLL_STATUS                             */
/* Register template: emmc::crypto_phy::DLL_STATUS                         */
/* Field member: emmc::crypto_phy::DLL_STATUS.ERROR_STS                    */
#define EMMC_CRYPTO_PHY_DLL_STATUS_ERROR_STS_MSB 1u
#define EMMC_CRYPTO_PHY_DLL_STATUS_ERROR_STS_LSB 1u
#define EMMC_CRYPTO_PHY_DLL_STATUS_ERROR_STS_WIDTH 1u
#define EMMC_CRYPTO_PHY_DLL_STATUS_ERROR_STS_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_STATUS_ERROR_STS_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PHY_DLL_STATUS_ERROR_STS_RESET 0x0u
#define EMMC_CRYPTO_PHY_DLL_STATUS_ERROR_STS_FIELD_MASK 0x02u
#define EMMC_CRYPTO_PHY_DLL_STATUS_ERROR_STS_GET(x) (((x) & 0x02u) >> 1)
#define EMMC_CRYPTO_PHY_DLL_STATUS_ERROR_STS_SET(x) (((x) << 1) & 0x02u)
#define EMMC_CRYPTO_PHY_DLL_STATUS_ERROR_STS_MODIFY(r, x) \
   ((((x) << 1) & 0x02u) | ((r) & 0xfdu))
/* Field member: emmc::crypto_phy::DLL_STATUS.LOCK_STS                     */
#define EMMC_CRYPTO_PHY_DLL_STATUS_LOCK_STS_MSB 0u
#define EMMC_CRYPTO_PHY_DLL_STATUS_LOCK_STS_LSB 0u
#define EMMC_CRYPTO_PHY_DLL_STATUS_LOCK_STS_WIDTH 1u
#define EMMC_CRYPTO_PHY_DLL_STATUS_LOCK_STS_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLL_STATUS_LOCK_STS_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PHY_DLL_STATUS_LOCK_STS_RESET 0x0u
#define EMMC_CRYPTO_PHY_DLL_STATUS_LOCK_STS_FIELD_MASK 0x01u
#define EMMC_CRYPTO_PHY_DLL_STATUS_LOCK_STS_GET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_PHY_DLL_STATUS_LOCK_STS_SET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_PHY_DLL_STATUS_LOCK_STS_MODIFY(r, x) \
   (((x) & 0x01u) | ((r) & 0xfeu))

/* Register type: emmc::crypto_phy::DLLDBG_MLKDC                           */
/* Register template: emmc::crypto_phy::DLLDBG_MLKDC                       */
/* Field member: emmc::crypto_phy::DLLDBG_MLKDC.MSTLKDC                    */
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_MSTLKDC_MSB 6u
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_MSTLKDC_LSB 0u
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_MSTLKDC_WIDTH 7u
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_MSTLKDC_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_MSTLKDC_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_MSTLKDC_RESET 0x00u
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_MSTLKDC_FIELD_MASK 0x7fu
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_MSTLKDC_GET(x) ((x) & 0x7fu)
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_MSTLKDC_SET(x) ((x) & 0x7fu)
#define EMMC_CRYPTO_PHY_DLLDBG_MLKDC_MSTLKDC_MODIFY(r, x) \
   (((x) & 0x7fu) | ((r) & 0x80u))

/* Register type: emmc::crypto_phy::DLLDBG_SLKDC                           */
/* Register template: emmc::crypto_phy::DLLDBG_SLKDC                       */
/* Field member: emmc::crypto_phy::DLLDBG_SLKDC.SLVLKDC                    */
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_SLVLKDC_MSB 6u
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_SLVLKDC_LSB 0u
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_SLVLKDC_WIDTH 7u
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_SLVLKDC_READ_ACCESS 1u
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_SLVLKDC_WRITE_ACCESS 0u
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_SLVLKDC_RESET 0x00u
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_SLVLKDC_FIELD_MASK 0x7fu
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_SLVLKDC_GET(x) ((x) & 0x7fu)
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_SLVLKDC_SET(x) ((x) & 0x7fu)
#define EMMC_CRYPTO_PHY_DLLDBG_SLKDC_SLVLKDC_MODIFY(r, x) \
   (((x) & 0x7fu) | ((r) & 0x80u))

/* Group type: emmc::crypto_vendor1                                        */
/* Group template: emmc::crypto_vendor1                                    */
#define EMMC_CRYPTO_VENDOR1_SIZE 0x50u
#define EMMC_CRYPTO_VENDOR1_BYTE_SIZE 0x50u
/* Register member: emmc::crypto_vendor1.MSHC_VER_ID_R                     */
/* Register type referenced: emmc::crypto_vendor1::MSHC_VER_ID_R           */
/* Register template referenced: emmc::crypto_vendor1::MSHC_VER_ID_R       */
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_OFFSET 0x0u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_BYTE_OFFSET 0x0u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_RESET_VALUE 0x3130302aul
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor1.MSHC_VER_TYPE_R                   */
/* Register type referenced: emmc::crypto_vendor1::MSHC_VER_TYPE_R         */
/* Register template referenced: emmc::crypto_vendor1::MSHC_VER_TYPE_R     */
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_OFFSET 0x4u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_BYTE_OFFSET 0x4u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_RESET_VALUE 0x65613033ul
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor1.MSHC_CTRL_R                       */
/* Register type referenced: emmc::crypto_vendor1::MSHC_CTRL_R             */
/* Register template referenced: emmc::crypto_vendor1::MSHC_CTRL_R         */
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_OFFSET 0x8u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_BYTE_OFFSET 0x8u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_RESET_VALUE 0x01u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_RESET_MASK 0xffu
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_READ_MASK 0xffu
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_WRITE_MASK 0x11u
/* Register member: emmc::crypto_vendor1.MBIU_CTRL_R                       */
/* Register type referenced: emmc::crypto_vendor1::MBIU_CTRL_R             */
/* Register template referenced: emmc::crypto_vendor1::MBIU_CTRL_R         */
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_OFFSET 0x10u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BYTE_OFFSET 0x10u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_RESET_VALUE 0x0fu
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_RESET_MASK 0xffu
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_READ_MASK 0xffu
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_WRITE_MASK 0x0fu
/* Register member: emmc::crypto_vendor1.EMMC_CTRL_R                       */
/* Register type referenced: emmc::crypto_vendor1::EMMC_CTRL_R             */
/* Register template referenced: emmc::crypto_vendor1::EMMC_CTRL_R         */
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_OFFSET 0x2cu
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_BYTE_OFFSET 0x2cu
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_RESET_VALUE 0x000cu
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_READ_MASK 0xffffu
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_WRITE_MASK 0x010fu
/* Register member: emmc::crypto_vendor1.BOOT_CTRL_R                       */
/* Register type referenced: emmc::crypto_vendor1::BOOT_CTRL_R             */
/* Register template referenced: emmc::crypto_vendor1::BOOT_CTRL_R         */
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_OFFSET 0x2eu
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BYTE_OFFSET 0x2eu
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RESET_VALUE 0x0000u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RESET_MASK 0xffffu
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_READ_MASK 0xff7fu
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_WRITE_MASK 0xf181u
/* Register member: emmc::crypto_vendor1.GP_IN_R                           */
/* Register type referenced: emmc::crypto_vendor1::GP_IN_R                 */
/* Register template referenced: emmc::crypto_vendor1::GP_IN_R             */
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_OFFSET 0x30u
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_BYTE_OFFSET 0x30u
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor1.GP_OUT_R                          */
/* Register type referenced: emmc::crypto_vendor1::GP_OUT_R                */
/* Register template referenced: emmc::crypto_vendor1::GP_OUT_R            */
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_OFFSET 0x34u
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_BYTE_OFFSET 0x34u
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_WRITE_MASK 0x00000003ul
/* Register member: emmc::crypto_vendor1.AT_CTRL_R                         */
/* Register type referenced: emmc::crypto_vendor1::AT_CTRL_R               */
/* Register template referenced: emmc::crypto_vendor1::AT_CTRL_R           */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_OFFSET 0x40u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_BYTE_OFFSET 0x40u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RESET_VALUE 0x1f000005ul
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_WRITE_MASK 0x7f1f0f1ful
/* Register member: emmc::crypto_vendor1.AT_STAT_R                         */
/* Register type referenced: emmc::crypto_vendor1::AT_STAT_R               */
/* Register template referenced: emmc::crypto_vendor1::AT_STAT_R           */
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_OFFSET 0x44u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_BYTE_OFFSET 0x44u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_RESET_VALUE 0x00000006ul
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_WRITE_MASK 0x000000fful

/* Register type: emmc::crypto_vendor1::MSHC_VER_ID_R                      */
/* Register template: emmc::crypto_vendor1::MSHC_VER_ID_R                  */
/* Field member: emmc::crypto_vendor1::MSHC_VER_ID_R.MSHC_VER_ID           */
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_MSHC_VER_ID_MSB 31u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_MSHC_VER_ID_LSB 0u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_MSHC_VER_ID_WIDTH 32u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_MSHC_VER_ID_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_MSHC_VER_ID_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_MSHC_VER_ID_RESET 0x3130302aul
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_MSHC_VER_ID_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_MSHC_VER_ID_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_MSHC_VER_ID_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_ID_R_MSHC_VER_ID_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor1::MSHC_VER_TYPE_R                    */
/* Register template: emmc::crypto_vendor1::MSHC_VER_TYPE_R                */
/* Field member: emmc::crypto_vendor1::MSHC_VER_TYPE_R.MSHC_VER_TYPE       */
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_MSHC_VER_TYPE_MSB 31u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_MSHC_VER_TYPE_LSB 0u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_MSHC_VER_TYPE_WIDTH 32u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_MSHC_VER_TYPE_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_MSHC_VER_TYPE_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_MSHC_VER_TYPE_RESET 0x65613033ul
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_MSHC_VER_TYPE_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_MSHC_VER_TYPE_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_MSHC_VER_TYPE_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR1_MSHC_VER_TYPE_R_MSHC_VER_TYPE_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor1::MSHC_CTRL_R                        */
/* Register template: emmc::crypto_vendor1::MSHC_CTRL_R                    */
/* Field member: emmc::crypto_vendor1::MSHC_CTRL_R.SW_CG_DIS               */
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_SW_CG_DIS_MSB 4u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_SW_CG_DIS_LSB 4u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_SW_CG_DIS_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_SW_CG_DIS_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_SW_CG_DIS_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_SW_CG_DIS_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_SW_CG_DIS_FIELD_MASK 0x10u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_SW_CG_DIS_GET(x) (((x) & 0x10u) >> 4)
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_SW_CG_DIS_SET(x) \
   (((x) << 4) & 0x10u)
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_SW_CG_DIS_MODIFY(r, x) \
   ((((x) << 4) & 0x10u) | ((r) & 0xefu))
/* Field member: emmc::crypto_vendor1::MSHC_CTRL_R.RSVD1                   */
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_RSVD1_MSB 3u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_RSVD1_LSB 1u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_RSVD1_WIDTH 3u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_RSVD1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_RSVD1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_RSVD1_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_RSVD1_FIELD_MASK 0x0eu
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_RSVD1_GET(x) (((x) & 0x0eu) >> 1)
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_RSVD1_SET(x) (((x) << 1) & 0x0eu)
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_RSVD1_MODIFY(r, x) \
   ((((x) << 1) & 0x0eu) | ((r) & 0xf1u))
/* Field member: emmc::crypto_vendor1::MSHC_CTRL_R.CMD_CONFLICT_CHECK      */
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_CMD_CONFLICT_CHECK_MSB 0u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_CMD_CONFLICT_CHECK_LSB 0u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_CMD_CONFLICT_CHECK_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_CMD_CONFLICT_CHECK_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_CMD_CONFLICT_CHECK_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_CMD_CONFLICT_CHECK_RESET 0x1u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_CMD_CONFLICT_CHECK_FIELD_MASK 0x01u
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_CMD_CONFLICT_CHECK_GET(x) \
   ((x) & 0x01u)
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_CMD_CONFLICT_CHECK_SET(x) \
   ((x) & 0x01u)
#define EMMC_CRYPTO_VENDOR1_MSHC_CTRL_R_CMD_CONFLICT_CHECK_MODIFY(r, x) \
   (((x) & 0x01u) | ((r) & 0xfeu))

/* Register type: emmc::crypto_vendor1::MBIU_CTRL_R                        */
/* Register template: emmc::crypto_vendor1::MBIU_CTRL_R                    */
/* Field member: emmc::crypto_vendor1::MBIU_CTRL_R.RSVD                    */
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_RSVD_MSB 7u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_RSVD_LSB 4u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_RSVD_WIDTH 4u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_RSVD_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_RSVD_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_RSVD_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_RSVD_FIELD_MASK 0xf0u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_RSVD_GET(x) (((x) & 0xf0u) >> 4)
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_RSVD_SET(x) (((x) << 4) & 0xf0u)
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_RSVD_MODIFY(r, x) \
   ((((x) << 4) & 0xf0u) | ((r) & 0x0fu))
/* Field member: emmc::crypto_vendor1::MBIU_CTRL_R.BURST_INCR16_EN         */
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR16_EN_MSB 3u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR16_EN_LSB 3u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR16_EN_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR16_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR16_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR16_EN_RESET 0x1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR16_EN_FIELD_MASK 0x08u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR16_EN_GET(x) \
   (((x) & 0x08u) >> 3)
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR16_EN_SET(x) \
   (((x) << 3) & 0x08u)
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR16_EN_MODIFY(r, x) \
   ((((x) << 3) & 0x08u) | ((r) & 0xf7u))
/* Field member: emmc::crypto_vendor1::MBIU_CTRL_R.BURST_INCR8_EN          */
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR8_EN_MSB 2u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR8_EN_LSB 2u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR8_EN_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR8_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR8_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR8_EN_RESET 0x1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR8_EN_FIELD_MASK 0x04u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR8_EN_GET(x) \
   (((x) & 0x04u) >> 2)
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR8_EN_SET(x) \
   (((x) << 2) & 0x04u)
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR8_EN_MODIFY(r, x) \
   ((((x) << 2) & 0x04u) | ((r) & 0xfbu))
/* Field member: emmc::crypto_vendor1::MBIU_CTRL_R.BURST_INCR4_EN          */
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR4_EN_MSB 1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR4_EN_LSB 1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR4_EN_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR4_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR4_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR4_EN_RESET 0x1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR4_EN_FIELD_MASK 0x02u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR4_EN_GET(x) \
   (((x) & 0x02u) >> 1)
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR4_EN_SET(x) \
   (((x) << 1) & 0x02u)
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_BURST_INCR4_EN_MODIFY(r, x) \
   ((((x) << 1) & 0x02u) | ((r) & 0xfdu))
/* Field member: emmc::crypto_vendor1::MBIU_CTRL_R.UNDEFL_INCR_EN          */
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_UNDEFL_INCR_EN_MSB 0u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_UNDEFL_INCR_EN_LSB 0u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_UNDEFL_INCR_EN_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_UNDEFL_INCR_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_UNDEFL_INCR_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_UNDEFL_INCR_EN_RESET 0x1u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_UNDEFL_INCR_EN_FIELD_MASK 0x01u
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_UNDEFL_INCR_EN_GET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_UNDEFL_INCR_EN_SET(x) ((x) & 0x01u)
#define EMMC_CRYPTO_VENDOR1_MBIU_CTRL_R_UNDEFL_INCR_EN_MODIFY(r, x) \
   (((x) & 0x01u) | ((r) & 0xfeu))

/* Register type: emmc::crypto_vendor1::EMMC_CTRL_R                        */
/* Register template: emmc::crypto_vendor1::EMMC_CTRL_R                    */
/* Field member: emmc::crypto_vendor1::EMMC_CTRL_R.RSVD                    */
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_RSVD_MSB 15u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_RSVD_LSB 11u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_RSVD_WIDTH 5u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_RSVD_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_RSVD_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_RSVD_RESET 0x00u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_RSVD_FIELD_MASK 0xf800u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_RSVD_GET(x) (((x) & 0xf800u) >> 11)
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_RSVD_SET(x) (((x) << 11) & 0xf800u)
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_RSVD_MODIFY(r, x) \
   ((((x) << 11) & 0xf800u) | ((r) & 0x07ffu))
/* Field member: emmc::crypto_vendor1::EMMC_CTRL_R.ENH_STROBE_ENABLE       */
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_ENH_STROBE_ENABLE_MSB 8u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_ENH_STROBE_ENABLE_LSB 8u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_ENH_STROBE_ENABLE_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_ENH_STROBE_ENABLE_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_ENH_STROBE_ENABLE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_ENH_STROBE_ENABLE_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_ENH_STROBE_ENABLE_FIELD_MASK 0x0100u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_ENH_STROBE_ENABLE_GET(x) \
   (((x) & 0x0100u) >> 8)
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_ENH_STROBE_ENABLE_SET(x) \
   (((x) << 8) & 0x0100u)
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_ENH_STROBE_ENABLE_MODIFY(r, x) \
   ((((x) << 8) & 0x0100u) | ((r) & 0xfeffu))
/* Field member: emmc::crypto_vendor1::EMMC_CTRL_R.EMMC_RST_N_OE           */
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_OE_MSB 3u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_OE_LSB 3u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_OE_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_OE_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_OE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_OE_RESET 0x1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_OE_FIELD_MASK 0x0008u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_OE_GET(x) \
   (((x) & 0x0008u) >> 3)
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_OE_SET(x) \
   (((x) << 3) & 0x0008u)
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_OE_MODIFY(r, x) \
   ((((x) << 3) & 0x0008u) | ((r) & 0xfff7u))
/* Field member: emmc::crypto_vendor1::EMMC_CTRL_R.EMMC_RST_N              */
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_MSB 2u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_LSB 2u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_RESET 0x1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_FIELD_MASK 0x0004u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_GET(x) \
   (((x) & 0x0004u) >> 2)
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_SET(x) \
   (((x) << 2) & 0x0004u)
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_EMMC_RST_N_MODIFY(r, x) \
   ((((x) << 2) & 0x0004u) | ((r) & 0xfffbu))
/* Field member: emmc::crypto_vendor1::EMMC_CTRL_R.DISABLE_DATA_CRC_CHK    */
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_DISABLE_DATA_CRC_CHK_MSB 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_DISABLE_DATA_CRC_CHK_LSB 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_DISABLE_DATA_CRC_CHK_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_DISABLE_DATA_CRC_CHK_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_DISABLE_DATA_CRC_CHK_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_DISABLE_DATA_CRC_CHK_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_DISABLE_DATA_CRC_CHK_FIELD_MASK 0x0002u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_DISABLE_DATA_CRC_CHK_GET(x) \
   (((x) & 0x0002u) >> 1)
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_DISABLE_DATA_CRC_CHK_SET(x) \
   (((x) << 1) & 0x0002u)
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_DISABLE_DATA_CRC_CHK_MODIFY(r, x) \
   ((((x) << 1) & 0x0002u) | ((r) & 0xfffdu))
/* Field member: emmc::crypto_vendor1::EMMC_CTRL_R.CARD_IS_EMMC            */
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_CARD_IS_EMMC_MSB 0u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_CARD_IS_EMMC_LSB 0u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_CARD_IS_EMMC_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_CARD_IS_EMMC_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_CARD_IS_EMMC_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_CARD_IS_EMMC_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_CARD_IS_EMMC_FIELD_MASK 0x0001u
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_CARD_IS_EMMC_GET(x) ((x) & 0x0001u)
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_CARD_IS_EMMC_SET(x) ((x) & 0x0001u)
#define EMMC_CRYPTO_VENDOR1_EMMC_CTRL_R_CARD_IS_EMMC_MODIFY(r, x) \
   (((x) & 0x0001u) | ((r) & 0xfffeu))

/* Register type: emmc::crypto_vendor1::BOOT_CTRL_R                        */
/* Register template: emmc::crypto_vendor1::BOOT_CTRL_R                    */
/* Field member: emmc::crypto_vendor1::BOOT_CTRL_R.BOOT_TOUT_CNT           */
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_TOUT_CNT_MSB 15u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_TOUT_CNT_LSB 12u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_TOUT_CNT_WIDTH 4u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_TOUT_CNT_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_TOUT_CNT_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_TOUT_CNT_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_TOUT_CNT_FIELD_MASK 0xf000u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_TOUT_CNT_GET(x) \
   (((x) & 0xf000u) >> 12)
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_TOUT_CNT_SET(x) \
   (((x) << 12) & 0xf000u)
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_TOUT_CNT_MODIFY(r, x) \
   ((((x) << 12) & 0xf000u) | ((r) & 0x0fffu))
/* Field member: emmc::crypto_vendor1::BOOT_CTRL_R.RSVD_11_9               */
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_11_9_MSB 11u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_11_9_LSB 9u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_11_9_WIDTH 3u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_11_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_11_9_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_11_9_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_11_9_FIELD_MASK 0x0e00u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_11_9_GET(x) \
   (((x) & 0x0e00u) >> 9)
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_11_9_SET(x) \
   (((x) << 9) & 0x0e00u)
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_11_9_MODIFY(r, x) \
   ((((x) << 9) & 0x0e00u) | ((r) & 0xf1ffu))
/* Field member: emmc::crypto_vendor1::BOOT_CTRL_R.BOOT_ACK_ENABLE         */
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_ACK_ENABLE_MSB 8u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_ACK_ENABLE_LSB 8u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_ACK_ENABLE_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_ACK_ENABLE_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_ACK_ENABLE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_ACK_ENABLE_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_ACK_ENABLE_FIELD_MASK 0x0100u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_ACK_ENABLE_GET(x) \
   (((x) & 0x0100u) >> 8)
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_ACK_ENABLE_SET(x) \
   (((x) << 8) & 0x0100u)
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_BOOT_ACK_ENABLE_MODIFY(r, x) \
   ((((x) << 8) & 0x0100u) | ((r) & 0xfeffu))
/* Field member: emmc::crypto_vendor1::BOOT_CTRL_R.VALIDATE_BOOT           */
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_VALIDATE_BOOT_MSB 7u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_VALIDATE_BOOT_LSB 7u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_VALIDATE_BOOT_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_VALIDATE_BOOT_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_VALIDATE_BOOT_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_VALIDATE_BOOT_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_VALIDATE_BOOT_FIELD_MASK 0x0080u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_VALIDATE_BOOT_GET(x) \
   (((x) & 0x0080u) >> 7)
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_VALIDATE_BOOT_SET(x) \
   (((x) << 7) & 0x0080u)
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_VALIDATE_BOOT_MODIFY(r, x) \
   ((((x) << 7) & 0x0080u) | ((r) & 0xff7fu))
/* Field member: emmc::crypto_vendor1::BOOT_CTRL_R.RSVD_6_1                */
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_6_1_MSB 6u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_6_1_LSB 1u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_6_1_WIDTH 6u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_6_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_6_1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_6_1_RESET 0x00u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_6_1_FIELD_MASK 0x007eu
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_6_1_GET(x) \
   (((x) & 0x007eu) >> 1)
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_6_1_SET(x) \
   (((x) << 1) & 0x007eu)
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_RSVD_6_1_MODIFY(r, x) \
   ((((x) << 1) & 0x007eu) | ((r) & 0xff81u))
/* Field member: emmc::crypto_vendor1::BOOT_CTRL_R.MAN_BOOT_EN             */
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_MAN_BOOT_EN_MSB 0u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_MAN_BOOT_EN_LSB 0u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_MAN_BOOT_EN_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_MAN_BOOT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_MAN_BOOT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_MAN_BOOT_EN_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_MAN_BOOT_EN_FIELD_MASK 0x0001u
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_MAN_BOOT_EN_GET(x) ((x) & 0x0001u)
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_MAN_BOOT_EN_SET(x) ((x) & 0x0001u)
#define EMMC_CRYPTO_VENDOR1_BOOT_CTRL_R_MAN_BOOT_EN_MODIFY(r, x) \
   (((x) & 0x0001u) | ((r) & 0xfffeu))

/* Register type: emmc::crypto_vendor1::GP_IN_R                            */
/* Register template: emmc::crypto_vendor1::GP_IN_R                        */
/* Field member: emmc::crypto_vendor1::GP_IN_R.RSVD                        */
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_RSVD_MSB 31u
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_RSVD_LSB 1u
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_RSVD_WIDTH 31u
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_RSVD_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_RSVD_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_RSVD_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_RSVD_FIELD_MASK 0xfffffffeul
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_RSVD_GET(x) (((x) & 0xfffffffeul) >> 1)
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_RSVD_SET(x) (((x) << 1) & 0xfffffffeul)
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_RSVD_MODIFY(r, x) \
   ((((x) << 1) & 0xfffffffeul) | ((r) & 0x00000001ul))
/* Field member: emmc::crypto_vendor1::GP_IN_R.GP_IN                       */
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_GP_IN_MSB 0u
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_GP_IN_LSB 0u
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_GP_IN_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_GP_IN_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_GP_IN_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_GP_IN_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_GP_IN_FIELD_MASK 0x00000001ul
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_GP_IN_GET(x) ((x) & 0x00000001ul)
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_GP_IN_SET(x) ((x) & 0x00000001ul)
#define EMMC_CRYPTO_VENDOR1_GP_IN_R_GP_IN_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: emmc::crypto_vendor1::GP_OUT_R                           */
/* Register template: emmc::crypto_vendor1::GP_OUT_R                       */
/* Field member: emmc::crypto_vendor1::GP_OUT_R.RSVD                       */
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_RSVD_MSB 31u
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_RSVD_LSB 2u
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_RSVD_WIDTH 30u
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_RSVD_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_RSVD_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_RSVD_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_RSVD_FIELD_MASK 0xfffffffcul
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_RSVD_GET(x) (((x) & 0xfffffffcul) >> 2)
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_RSVD_SET(x) (((x) << 2) & 0xfffffffcul)
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_RSVD_MODIFY(r, x) \
   ((((x) << 2) & 0xfffffffcul) | ((r) & 0x00000003ul))
/* Field member: emmc::crypto_vendor1::GP_OUT_R.GP_OUT                     */
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_GP_OUT_MSB 1u
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_GP_OUT_LSB 0u
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_GP_OUT_WIDTH 2u
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_GP_OUT_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_GP_OUT_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_GP_OUT_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_GP_OUT_FIELD_MASK 0x00000003ul
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_GP_OUT_GET(x) ((x) & 0x00000003ul)
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_GP_OUT_SET(x) ((x) & 0x00000003ul)
#define EMMC_CRYPTO_VENDOR1_GP_OUT_R_GP_OUT_MODIFY(r, x) \
   (((x) & 0x00000003ul) | ((r) & 0xfffffffcul))

/* Register type: emmc::crypto_vendor1::AT_CTRL_R                          */
/* Register template: emmc::crypto_vendor1::AT_CTRL_R                      */
/* Field member: emmc::crypto_vendor1::AT_CTRL_R.SWIN_TH_VAL               */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_VAL_MSB 30u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_VAL_LSB 24u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_VAL_WIDTH 7u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_VAL_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_VAL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_VAL_RESET 0x1fu
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_VAL_FIELD_MASK 0x7f000000ul
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_VAL_GET(x) \
   (((x) & 0x7f000000ul) >> 24)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_VAL_SET(x) \
   (((x) << 24) & 0x7f000000ul)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_VAL_MODIFY(r, x) \
   ((((x) << 24) & 0x7f000000ul) | ((r) & 0x80fffffful))
/* Field member: emmc::crypto_vendor1::AT_CTRL_R.POST_CHANGE_DLY           */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_POST_CHANGE_DLY_MSB 20u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_POST_CHANGE_DLY_LSB 19u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_POST_CHANGE_DLY_WIDTH 2u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_POST_CHANGE_DLY_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_POST_CHANGE_DLY_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_POST_CHANGE_DLY_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_POST_CHANGE_DLY_FIELD_MASK 0x00180000ul
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_POST_CHANGE_DLY_GET(x) \
   (((x) & 0x00180000ul) >> 19)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_POST_CHANGE_DLY_SET(x) \
   (((x) << 19) & 0x00180000ul)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_POST_CHANGE_DLY_MODIFY(r, x) \
   ((((x) << 19) & 0x00180000ul) | ((r) & 0xffe7fffful))
/* Field member: emmc::crypto_vendor1::AT_CTRL_R.PRE_CHANGE_DLY            */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_PRE_CHANGE_DLY_MSB 18u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_PRE_CHANGE_DLY_LSB 17u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_PRE_CHANGE_DLY_WIDTH 2u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_PRE_CHANGE_DLY_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_PRE_CHANGE_DLY_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_PRE_CHANGE_DLY_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_PRE_CHANGE_DLY_FIELD_MASK 0x00060000ul
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_PRE_CHANGE_DLY_GET(x) \
   (((x) & 0x00060000ul) >> 17)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_PRE_CHANGE_DLY_SET(x) \
   (((x) << 17) & 0x00060000ul)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_PRE_CHANGE_DLY_MODIFY(r, x) \
   ((((x) << 17) & 0x00060000ul) | ((r) & 0xfff9fffful))
/* Field member: emmc::crypto_vendor1::AT_CTRL_R.TUNE_CLK_STOP_EN          */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_TUNE_CLK_STOP_EN_MSB 16u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_TUNE_CLK_STOP_EN_LSB 16u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_TUNE_CLK_STOP_EN_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_TUNE_CLK_STOP_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_TUNE_CLK_STOP_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_TUNE_CLK_STOP_EN_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_TUNE_CLK_STOP_EN_FIELD_MASK 0x00010000ul
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_TUNE_CLK_STOP_EN_GET(x) \
   (((x) & 0x00010000ul) >> 16)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_TUNE_CLK_STOP_EN_SET(x) \
   (((x) << 16) & 0x00010000ul)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_TUNE_CLK_STOP_EN_MODIFY(r, x) \
   ((((x) << 16) & 0x00010000ul) | ((r) & 0xfffefffful))
/* Field member: emmc::crypto_vendor1::AT_CTRL_R.RSDV3                     */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV3_MSB 15u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV3_LSB 12u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV3_WIDTH 4u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV3_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV3_FIELD_MASK 0x0000f000ul
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV3_GET(x) \
   (((x) & 0x0000f000ul) >> 12)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV3_SET(x) \
   (((x) << 12) & 0x0000f000ul)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV3_MODIFY(r, x) \
   ((((x) << 12) & 0x0000f000ul) | ((r) & 0xffff0ffful))
/* Field member: emmc::crypto_vendor1::AT_CTRL_R.WIN_EDGE_SEL              */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_WIN_EDGE_SEL_MSB 11u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_WIN_EDGE_SEL_LSB 8u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_WIN_EDGE_SEL_WIDTH 4u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_WIN_EDGE_SEL_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_WIN_EDGE_SEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_WIN_EDGE_SEL_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_WIN_EDGE_SEL_FIELD_MASK 0x00000f00ul
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_WIN_EDGE_SEL_GET(x) \
   (((x) & 0x00000f00ul) >> 8)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_WIN_EDGE_SEL_SET(x) \
   (((x) << 8) & 0x00000f00ul)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_WIN_EDGE_SEL_MODIFY(r, x) \
   ((((x) << 8) & 0x00000f00ul) | ((r) & 0xfffff0fful))
/* Field member: emmc::crypto_vendor1::AT_CTRL_R.RSDV2                     */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV2_MSB 7u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV2_LSB 5u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV2_WIDTH 3u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV2_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV2_FIELD_MASK 0x000000e0ul
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV2_GET(x) \
   (((x) & 0x000000e0ul) >> 5)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV2_SET(x) \
   (((x) << 5) & 0x000000e0ul)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RSDV2_MODIFY(r, x) \
   ((((x) << 5) & 0x000000e0ul) | ((r) & 0xffffff1ful))
/* Field member: emmc::crypto_vendor1::AT_CTRL_R.SW_TUNE_EN                */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SW_TUNE_EN_MSB 4u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SW_TUNE_EN_LSB 4u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SW_TUNE_EN_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SW_TUNE_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SW_TUNE_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SW_TUNE_EN_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SW_TUNE_EN_FIELD_MASK 0x00000010ul
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SW_TUNE_EN_GET(x) \
   (((x) & 0x00000010ul) >> 4)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SW_TUNE_EN_SET(x) \
   (((x) << 4) & 0x00000010ul)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SW_TUNE_EN_MODIFY(r, x) \
   ((((x) << 4) & 0x00000010ul) | ((r) & 0xffffffeful))
/* Field member: emmc::crypto_vendor1::AT_CTRL_R.RPT_TUNE_ERR              */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RPT_TUNE_ERR_MSB 3u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RPT_TUNE_ERR_LSB 3u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RPT_TUNE_ERR_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RPT_TUNE_ERR_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RPT_TUNE_ERR_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RPT_TUNE_ERR_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RPT_TUNE_ERR_FIELD_MASK 0x00000008ul
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RPT_TUNE_ERR_GET(x) \
   (((x) & 0x00000008ul) >> 3)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RPT_TUNE_ERR_SET(x) \
   (((x) << 3) & 0x00000008ul)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_RPT_TUNE_ERR_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: emmc::crypto_vendor1::AT_CTRL_R.SWIN_TH_EN                */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_EN_MSB 2u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_EN_LSB 2u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_EN_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_EN_RESET 0x1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_EN_FIELD_MASK 0x00000004ul
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_EN_GET(x) \
   (((x) & 0x00000004ul) >> 2)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_EN_SET(x) \
   (((x) << 2) & 0x00000004ul)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_SWIN_TH_EN_MODIFY(r, x) \
   ((((x) << 2) & 0x00000004ul) | ((r) & 0xfffffffbul))
/* Field member: emmc::crypto_vendor1::AT_CTRL_R.CI_SEL                    */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_CI_SEL_MSB 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_CI_SEL_LSB 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_CI_SEL_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_CI_SEL_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_CI_SEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_CI_SEL_RESET 0x0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_CI_SEL_FIELD_MASK 0x00000002ul
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_CI_SEL_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_CI_SEL_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_CI_SEL_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: emmc::crypto_vendor1::AT_CTRL_R.AT_EN                     */
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_AT_EN_MSB 0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_AT_EN_LSB 0u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_AT_EN_WIDTH 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_AT_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_AT_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_AT_EN_RESET 0x1u
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_AT_EN_FIELD_MASK 0x00000001ul
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_AT_EN_GET(x) ((x) & 0x00000001ul)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_AT_EN_SET(x) ((x) & 0x00000001ul)
#define EMMC_CRYPTO_VENDOR1_AT_CTRL_R_AT_EN_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: emmc::crypto_vendor1::AT_STAT_R                          */
/* Register template: emmc::crypto_vendor1::AT_STAT_R                      */
/* Field member: emmc::crypto_vendor1::AT_STAT_R.RSDV1                     */
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_RSDV1_MSB 31u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_RSDV1_LSB 24u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_RSDV1_WIDTH 8u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_RSDV1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_RSDV1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_RSDV1_RESET 0x00u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_RSDV1_FIELD_MASK 0xff000000ul
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_RSDV1_GET(x) \
   (((x) & 0xff000000ul) >> 24)
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_RSDV1_SET(x) \
   (((x) << 24) & 0xff000000ul)
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_RSDV1_MODIFY(r, x) \
   ((((x) << 24) & 0xff000000ul) | ((r) & 0x00fffffful))
/* Field member: emmc::crypto_vendor1::AT_STAT_R.L_EDGE_PH_CODE            */
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_L_EDGE_PH_CODE_MSB 23u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_L_EDGE_PH_CODE_LSB 16u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_L_EDGE_PH_CODE_WIDTH 8u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_L_EDGE_PH_CODE_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_L_EDGE_PH_CODE_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_L_EDGE_PH_CODE_RESET 0x00u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_L_EDGE_PH_CODE_FIELD_MASK 0x00ff0000ul
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_L_EDGE_PH_CODE_GET(x) \
   (((x) & 0x00ff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_L_EDGE_PH_CODE_SET(x) \
   (((x) << 16) & 0x00ff0000ul)
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_L_EDGE_PH_CODE_MODIFY(r, x) \
   ((((x) << 16) & 0x00ff0000ul) | ((r) & 0xff00fffful))
/* Field member: emmc::crypto_vendor1::AT_STAT_R.R_EDGE_PH_CODE            */
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_R_EDGE_PH_CODE_MSB 15u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_R_EDGE_PH_CODE_LSB 8u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_R_EDGE_PH_CODE_WIDTH 8u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_R_EDGE_PH_CODE_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_R_EDGE_PH_CODE_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_R_EDGE_PH_CODE_RESET 0x00u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_R_EDGE_PH_CODE_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_R_EDGE_PH_CODE_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_R_EDGE_PH_CODE_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_R_EDGE_PH_CODE_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor1::AT_STAT_R.CENTER_PH_CODE            */
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_CENTER_PH_CODE_MSB 7u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_CENTER_PH_CODE_LSB 0u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_CENTER_PH_CODE_WIDTH 8u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_CENTER_PH_CODE_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_CENTER_PH_CODE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_CENTER_PH_CODE_RESET 0x06u
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_CENTER_PH_CODE_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_CENTER_PH_CODE_GET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_CENTER_PH_CODE_SET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR1_AT_STAT_R_CENTER_PH_CODE_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Group type: emmc::crypto_embedded_control                               */
/* Group template: emmc::crypto_embedded_control                           */
#define EMMC_CRYPTO_EMBEDDED_CONTROL_SIZE 0x4u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_BYTE_SIZE 0x4u
/* Register member: emmc::crypto_embedded_control.EMBEDDED_CTRL_R          */
/* Register type referenced: emmc::crypto_embedded_control::EMBEDDED_CTRL_R */
/* Register template referenced: emmc::crypto_embedded_control::EMBEDDED_CTRL_R */
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_OFFSET 0x0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BYTE_OFFSET 0x0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_READ_ACCESS 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_WRITE_ACCESS 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_WRITE_MASK 0x7f770000ul

/* Register type: emmc::crypto_embedded_control::EMBEDDED_CTRL_R           */
/* Register template: emmc::crypto_embedded_control::EMBEDDED_CTRL_R       */
/* Field member: emmc::crypto_embedded_control::EMBEDDED_CTRL_R.RSVD_31    */
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_31_MSB 31u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_31_LSB 31u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_31_WIDTH 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_31_READ_ACCESS 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_31_WRITE_ACCESS 0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_31_RESET 0x0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_31_FIELD_MASK 0x80000000ul
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_31_GET(x) \
   (((x) & 0x80000000ul) >> 31)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_31_SET(x) \
   (((x) << 31) & 0x80000000ul)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_31_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: emmc::crypto_embedded_control::EMBEDDED_CTRL_R.BACK_END_PWR_CTRL */
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BACK_END_PWR_CTRL_MSB 30u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BACK_END_PWR_CTRL_LSB 24u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BACK_END_PWR_CTRL_WIDTH 7u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BACK_END_PWR_CTRL_READ_ACCESS 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BACK_END_PWR_CTRL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BACK_END_PWR_CTRL_RESET 0x00u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BACK_END_PWR_CTRL_FIELD_MASK 0x7f000000ul
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BACK_END_PWR_CTRL_GET(x) \
   (((x) & 0x7f000000ul) >> 24)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BACK_END_PWR_CTRL_SET(x) \
   (((x) << 24) & 0x7f000000ul)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BACK_END_PWR_CTRL_MODIFY(r, x) \
   ((((x) << 24) & 0x7f000000ul) | ((r) & 0x80fffffful))
/* Field member: emmc::crypto_embedded_control::EMBEDDED_CTRL_R.RSVD_23    */
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_23_MSB 23u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_23_LSB 23u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_23_WIDTH 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_23_READ_ACCESS 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_23_WRITE_ACCESS 0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_23_RESET 0x0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_23_FIELD_MASK 0x00800000ul
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_23_GET(x) \
   (((x) & 0x00800000ul) >> 23)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_23_SET(x) \
   (((x) << 23) & 0x00800000ul)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_23_MODIFY(r, x) \
   ((((x) << 23) & 0x00800000ul) | ((r) & 0xff7ffffful))
/* Field member: emmc::crypto_embedded_control::EMBEDDED_CTRL_R.INT_PIN_SEL */
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_INT_PIN_SEL_MSB 22u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_INT_PIN_SEL_LSB 20u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_INT_PIN_SEL_WIDTH 3u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_INT_PIN_SEL_READ_ACCESS 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_INT_PIN_SEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_INT_PIN_SEL_RESET 0x0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_INT_PIN_SEL_FIELD_MASK 0x00700000ul
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_INT_PIN_SEL_GET(x) \
   (((x) & 0x00700000ul) >> 20)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_INT_PIN_SEL_SET(x) \
   (((x) << 20) & 0x00700000ul)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_INT_PIN_SEL_MODIFY(r, x) \
   ((((x) << 20) & 0x00700000ul) | ((r) & 0xff8ffffful))
/* Field member: emmc::crypto_embedded_control::EMBEDDED_CTRL_R.RSVD_19    */
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_19_MSB 19u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_19_LSB 19u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_19_WIDTH 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_19_READ_ACCESS 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_19_WRITE_ACCESS 0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_19_RESET 0x0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_19_FIELD_MASK 0x00080000ul
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_19_GET(x) \
   (((x) & 0x00080000ul) >> 19)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_19_SET(x) \
   (((x) << 19) & 0x00080000ul)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_19_MODIFY(r, x) \
   ((((x) << 19) & 0x00080000ul) | ((r) & 0xfff7fffful))
/* Field member: emmc::crypto_embedded_control::EMBEDDED_CTRL_R.CLK_PIN_SEL */
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_CLK_PIN_SEL_MSB 18u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_CLK_PIN_SEL_LSB 16u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_CLK_PIN_SEL_WIDTH 3u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_CLK_PIN_SEL_READ_ACCESS 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_CLK_PIN_SEL_WRITE_ACCESS 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_CLK_PIN_SEL_RESET 0x0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_CLK_PIN_SEL_FIELD_MASK 0x00070000ul
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_CLK_PIN_SEL_GET(x) \
   (((x) & 0x00070000ul) >> 16)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_CLK_PIN_SEL_SET(x) \
   (((x) << 16) & 0x00070000ul)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_CLK_PIN_SEL_MODIFY(r, x) \
   ((((x) << 16) & 0x00070000ul) | ((r) & 0xfff8fffful))
/* Field member: emmc::crypto_embedded_control::EMBEDDED_CTRL_R.RSVD_15    */
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_15_MSB 15u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_15_LSB 15u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_15_WIDTH 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_15_READ_ACCESS 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_15_RESET 0x0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_15_FIELD_MASK 0x00008000ul
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_15_GET(x) \
   (((x) & 0x00008000ul) >> 15)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_15_SET(x) \
   (((x) << 15) & 0x00008000ul)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_15_MODIFY(r, x) \
   ((((x) << 15) & 0x00008000ul) | ((r) & 0xffff7ffful))
/* Field member: emmc::crypto_embedded_control::EMBEDDED_CTRL_R.BUS_WIDTH_PRESET */
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BUS_WIDTH_PRESET_MSB 14u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BUS_WIDTH_PRESET_LSB 8u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BUS_WIDTH_PRESET_WIDTH 7u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BUS_WIDTH_PRESET_READ_ACCESS 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BUS_WIDTH_PRESET_WRITE_ACCESS 0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BUS_WIDTH_PRESET_RESET 0x00u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BUS_WIDTH_PRESET_FIELD_MASK 0x00007f00ul
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BUS_WIDTH_PRESET_GET(x) \
   (((x) & 0x00007f00ul) >> 8)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BUS_WIDTH_PRESET_SET(x) \
   (((x) << 8) & 0x00007f00ul)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_BUS_WIDTH_PRESET_MODIFY(r, x) \
   ((((x) << 8) & 0x00007f00ul) | ((r) & 0xffff80fful))
/* Field member: emmc::crypto_embedded_control::EMBEDDED_CTRL_R.RSVD_7_6   */
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_7_6_MSB 7u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_7_6_LSB 6u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_7_6_WIDTH 2u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_7_6_READ_ACCESS 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_7_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_7_6_RESET 0x0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_7_6_FIELD_MASK 0x000000c0ul
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_7_6_GET(x) \
   (((x) & 0x000000c0ul) >> 6)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_7_6_SET(x) \
   (((x) << 6) & 0x000000c0ul)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_7_6_MODIFY(r, x) \
   ((((x) << 6) & 0x000000c0ul) | ((r) & 0xffffff3ful))
/* Field member: emmc::crypto_embedded_control::EMBEDDED_CTRL_R.NUM_INT_PIN */
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_INT_PIN_MSB 5u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_INT_PIN_LSB 4u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_INT_PIN_WIDTH 2u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_INT_PIN_READ_ACCESS 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_INT_PIN_WRITE_ACCESS 0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_INT_PIN_RESET 0x0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_INT_PIN_FIELD_MASK 0x00000030ul
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_INT_PIN_GET(x) \
   (((x) & 0x00000030ul) >> 4)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_INT_PIN_SET(x) \
   (((x) << 4) & 0x00000030ul)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_INT_PIN_MODIFY(r, x) \
   ((((x) << 4) & 0x00000030ul) | ((r) & 0xffffffcful))
/* Field member: emmc::crypto_embedded_control::EMBEDDED_CTRL_R.RSVD_3     */
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_3_MSB 3u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_3_LSB 3u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_3_WIDTH 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_3_READ_ACCESS 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_3_RESET 0x0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_3_FIELD_MASK 0x00000008ul
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_3_GET(x) \
   (((x) & 0x00000008ul) >> 3)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_3_SET(x) \
   (((x) << 3) & 0x00000008ul)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_RSVD_3_MODIFY(r, x) \
   ((((x) << 3) & 0x00000008ul) | ((r) & 0xfffffff7ul))
/* Field member: emmc::crypto_embedded_control::EMBEDDED_CTRL_R.NUM_CLK_PIN */
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_CLK_PIN_MSB 2u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_CLK_PIN_LSB 0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_CLK_PIN_WIDTH 3u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_CLK_PIN_READ_ACCESS 1u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_CLK_PIN_WRITE_ACCESS 0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_CLK_PIN_RESET 0x0u
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_CLK_PIN_FIELD_MASK 0x00000007ul
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_CLK_PIN_GET(x) \
   ((x) & 0x00000007ul)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_CLK_PIN_SET(x) \
   ((x) & 0x00000007ul)
#define EMMC_CRYPTO_EMBEDDED_CONTROL_EMBEDDED_CTRL_R_NUM_CLK_PIN_MODIFY(r, x) \
   (((x) & 0x00000007ul) | ((r) & 0xfffffff8ul))

/* Group type: emmc::crypto_vendor2                                        */
/* Group template: emmc::crypto_vendor2                                    */
#define EMMC_CRYPTO_VENDOR2_SIZE 0x1000u
#define EMMC_CRYPTO_VENDOR2_BYTE_SIZE 0x1000u
/* Register member: emmc::crypto_vendor2.CQCAP                             */
/* Register type referenced: emmc::crypto_vendor2::CQCAP                   */
/* Register template referenced: emmc::crypto_vendor2::CQCAP               */
#define EMMC_CRYPTO_VENDOR2_CQCAP_OFFSET 0x4u
#define EMMC_CRYPTO_VENDOR2_CQCAP_BYTE_OFFSET 0x4u
#define EMMC_CRYPTO_VENDOR2_CQCAP_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CQCAP_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CQCAP_RESET_VALUE 0x100030c8ul
#define EMMC_CRYPTO_VENDOR2_CQCAP_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CQCAP_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CQCAP_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CQCFG                             */
/* Register type referenced: emmc::crypto_vendor2::CQCFG                   */
/* Register template referenced: emmc::crypto_vendor2::CQCFG               */
#define EMMC_CRYPTO_VENDOR2_CQCFG_OFFSET 0x8u
#define EMMC_CRYPTO_VENDOR2_CQCFG_BYTE_OFFSET 0x8u
#define EMMC_CRYPTO_VENDOR2_CQCFG_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CQCFG_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CQCFG_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CQCFG_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CQCFG_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CQCFG_WRITE_MASK 0x00000002ul
/* Register member: emmc::crypto_vendor2.CRNQP                             */
/* Register type referenced: emmc::crypto_vendor2::CRNQP                   */
/* Register template referenced: emmc::crypto_vendor2::CRNQP               */
#define EMMC_CRYPTO_VENDOR2_CRNQP_OFFSET 0x70u
#define EMMC_CRYPTO_VENDOR2_CRNQP_BYTE_OFFSET 0x70u
#define EMMC_CRYPTO_VENDOR2_CRNQP_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQP_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQP_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRNQP_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRNQP_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRNQP_WRITE_MASK 0x000001fful
/* Register member: emmc::crypto_vendor2.CRNQDUN                           */
/* Register type referenced: emmc::crypto_vendor2::CRNQDUN                 */
/* Register template referenced: emmc::crypto_vendor2::CRNQDUN             */
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_OFFSET 0x74u
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_BYTE_OFFSET 0x74u
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRNQIS                            */
/* Register type referenced: emmc::crypto_vendor2::CRNQIS                  */
/* Register template referenced: emmc::crypto_vendor2::CRNQIS              */
#define EMMC_CRYPTO_VENDOR2_CRNQIS_OFFSET 0x78u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_BYTE_OFFSET 0x78u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRNQIS_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRNQIS_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRNQIS_WRITE_MASK 0x00000003ul
/* Register member: emmc::crypto_vendor2.CRNQIE                            */
/* Register type referenced: emmc::crypto_vendor2::CRNQIE                  */
/* Register template referenced: emmc::crypto_vendor2::CRNQIE              */
#define EMMC_CRYPTO_VENDOR2_CRNQIE_OFFSET 0x7cu
#define EMMC_CRYPTO_VENDOR2_CRNQIE_BYTE_OFFSET 0x7cu
#define EMMC_CRYPTO_VENDOR2_CRNQIE_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRNQIE_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRNQIE_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRNQIE_WRITE_MASK 0x00000003ul
/* Register member: emmc::crypto_vendor2.CRCAP                             */
/* Register type referenced: emmc::crypto_vendor2::CRCAP                   */
/* Register template referenced: emmc::crypto_vendor2::CRCAP               */
#define EMMC_CRYPTO_VENDOR2_CRCAP_OFFSET 0x100u
#define EMMC_CRYPTO_VENDOR2_CRCAP_BYTE_OFFSET 0x100u
#define EMMC_CRYPTO_VENDOR2_CRCAP_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRCAP_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRCAP_RESET_VALUE 0x08000f04ul
#define EMMC_CRYPTO_VENDOR2_CRCAP_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRCAP_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRCAP_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCAP_0                       */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCAP_0             */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCAP_0         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_OFFSET 0x104u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_BYTE_OFFSET 0x104u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_RESET_VALUE 0x0001ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCAP_1                       */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCAP_1             */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCAP_1         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_OFFSET 0x108u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_BYTE_OFFSET 0x108u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_RESET_VALUE 0x0003ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCAP_2                       */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCAP_2             */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCAP_2         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_OFFSET 0x10cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_BYTE_OFFSET 0x10cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_RESET_VALUE 0x0001ff01ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCAP_3                       */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCAP_3             */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCAP_3         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_OFFSET 0x110u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_BYTE_OFFSET 0x110u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_RESET_VALUE 0x0003ff01ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_0                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_0           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_0       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_OFFSET 0x800u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_BYTE_OFFSET 0x800u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_1                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_1           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_OFFSET 0x804u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_BYTE_OFFSET 0x804u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_2                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_2           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_2       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_OFFSET 0x808u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_BYTE_OFFSET 0x808u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_3                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_3           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_3       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_OFFSET 0x80cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_BYTE_OFFSET 0x80cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_4                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_4           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_4       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_OFFSET 0x810u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_BYTE_OFFSET 0x810u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_5                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_5           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_5       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_OFFSET 0x814u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_BYTE_OFFSET 0x814u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_6                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_6           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_6       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_OFFSET 0x818u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_BYTE_OFFSET 0x818u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_7                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_7           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_7       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_OFFSET 0x81cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_BYTE_OFFSET 0x81cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_8                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_8           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_8       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_OFFSET 0x820u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_BYTE_OFFSET 0x820u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_9                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_9           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_9       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_OFFSET 0x824u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_BYTE_OFFSET 0x824u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_10                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_10          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_10      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_OFFSET 0x828u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_BYTE_OFFSET 0x828u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_11                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_11          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_11      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_OFFSET 0x82cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_BYTE_OFFSET 0x82cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_12                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_12          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_12      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_OFFSET 0x830u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_BYTE_OFFSET 0x830u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_13                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_13          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_13      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_OFFSET 0x834u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_BYTE_OFFSET 0x834u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_14                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_14          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_14      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_OFFSET 0x838u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_BYTE_OFFSET 0x838u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_15                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_15          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_15      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_OFFSET 0x83cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_BYTE_OFFSET 0x83cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_16                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_16          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_16      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_OFFSET 0x840u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_BYTE_OFFSET 0x840u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_WRITE_MASK 0x8000fffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_17                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_17          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_17      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_OFFSET 0x844u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_BYTE_OFFSET 0x844u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_18                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_18          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_18      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_OFFSET 0x848u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_BYTE_OFFSET 0x848u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_19                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_19          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_19      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_OFFSET 0x84cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_BYTE_OFFSET 0x84cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_20                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_20          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_20      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_OFFSET 0x850u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_BYTE_OFFSET 0x850u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_21                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_21          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_21      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_OFFSET 0x854u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_BYTE_OFFSET 0x854u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_22                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_22          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_22      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_OFFSET 0x858u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_BYTE_OFFSET 0x858u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_23                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_23          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_23      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_OFFSET 0x85cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_BYTE_OFFSET 0x85cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_24                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_24          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_24      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_OFFSET 0x860u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_BYTE_OFFSET 0x860u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_25                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_25          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_25      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_OFFSET 0x864u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_BYTE_OFFSET 0x864u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_26                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_26          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_26      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_OFFSET 0x868u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_BYTE_OFFSET 0x868u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_27                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_27          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_27      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_OFFSET 0x86cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_BYTE_OFFSET 0x86cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_28                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_28          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_28      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_OFFSET 0x870u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_BYTE_OFFSET 0x870u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_29                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_29          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_29      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_OFFSET 0x874u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_BYTE_OFFSET 0x874u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_30                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_30          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_30      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_OFFSET 0x878u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_BYTE_OFFSET 0x878u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_0_31                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_0_31          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_0_31      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_OFFSET 0x87cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_BYTE_OFFSET 0x87cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_0                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_0           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_0       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_OFFSET 0x880u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_BYTE_OFFSET 0x880u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_1                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_1           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_OFFSET 0x884u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_BYTE_OFFSET 0x884u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_2                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_2           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_2       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_OFFSET 0x888u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_BYTE_OFFSET 0x888u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_3                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_3           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_3       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_OFFSET 0x88cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_BYTE_OFFSET 0x88cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_4                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_4           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_4       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_OFFSET 0x890u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_BYTE_OFFSET 0x890u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_5                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_5           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_5       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_OFFSET 0x894u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_BYTE_OFFSET 0x894u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_6                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_6           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_6       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_OFFSET 0x898u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_BYTE_OFFSET 0x898u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_7                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_7           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_7       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_OFFSET 0x89cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_BYTE_OFFSET 0x89cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_8                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_8           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_8       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_OFFSET 0x8a0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_BYTE_OFFSET 0x8a0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_9                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_9           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_9       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_OFFSET 0x8a4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_BYTE_OFFSET 0x8a4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_10                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_10          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_10      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_OFFSET 0x8a8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_BYTE_OFFSET 0x8a8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_11                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_11          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_11      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_OFFSET 0x8acu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_BYTE_OFFSET 0x8acu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_12                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_12          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_12      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_OFFSET 0x8b0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_BYTE_OFFSET 0x8b0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_13                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_13          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_13      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_OFFSET 0x8b4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_BYTE_OFFSET 0x8b4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_14                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_14          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_14      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_OFFSET 0x8b8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_BYTE_OFFSET 0x8b8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_15                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_15          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_15      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_OFFSET 0x8bcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_BYTE_OFFSET 0x8bcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_16                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_16          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_16      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_OFFSET 0x8c0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_BYTE_OFFSET 0x8c0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_WRITE_MASK 0x8000fffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_17                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_17          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_17      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_OFFSET 0x8c4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_BYTE_OFFSET 0x8c4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_18                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_18          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_18      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_OFFSET 0x8c8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_BYTE_OFFSET 0x8c8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_19                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_19          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_19      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_OFFSET 0x8ccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_BYTE_OFFSET 0x8ccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_20                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_20          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_20      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_OFFSET 0x8d0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_BYTE_OFFSET 0x8d0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_21                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_21          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_21      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_OFFSET 0x8d4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_BYTE_OFFSET 0x8d4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_22                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_22          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_22      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_OFFSET 0x8d8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_BYTE_OFFSET 0x8d8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_23                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_23          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_23      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_OFFSET 0x8dcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_BYTE_OFFSET 0x8dcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_24                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_24          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_24      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_OFFSET 0x8e0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_BYTE_OFFSET 0x8e0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_25                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_25          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_25      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_OFFSET 0x8e4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_BYTE_OFFSET 0x8e4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_26                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_26          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_26      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_OFFSET 0x8e8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_BYTE_OFFSET 0x8e8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_27                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_27          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_27      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_OFFSET 0x8ecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_BYTE_OFFSET 0x8ecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_28                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_28          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_28      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_OFFSET 0x8f0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_BYTE_OFFSET 0x8f0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_29                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_29          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_29      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_OFFSET 0x8f4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_BYTE_OFFSET 0x8f4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_30                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_30          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_30      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_OFFSET 0x8f8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_BYTE_OFFSET 0x8f8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_1_31                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_1_31          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_1_31      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_OFFSET 0x8fcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_BYTE_OFFSET 0x8fcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_0                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_0           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_0       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_OFFSET 0x900u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_BYTE_OFFSET 0x900u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_1                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_1           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_OFFSET 0x904u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_BYTE_OFFSET 0x904u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_2                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_2           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_2       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_OFFSET 0x908u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_BYTE_OFFSET 0x908u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_3                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_3           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_3       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_OFFSET 0x90cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_BYTE_OFFSET 0x90cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_4                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_4           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_4       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_OFFSET 0x910u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_BYTE_OFFSET 0x910u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_5                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_5           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_5       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_OFFSET 0x914u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_BYTE_OFFSET 0x914u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_6                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_6           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_6       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_OFFSET 0x918u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_BYTE_OFFSET 0x918u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_7                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_7           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_7       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_OFFSET 0x91cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_BYTE_OFFSET 0x91cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_8                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_8           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_8       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_OFFSET 0x920u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_BYTE_OFFSET 0x920u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_9                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_9           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_9       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_OFFSET 0x924u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_BYTE_OFFSET 0x924u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_10                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_10          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_10      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_OFFSET 0x928u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_BYTE_OFFSET 0x928u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_11                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_11          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_11      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_OFFSET 0x92cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_BYTE_OFFSET 0x92cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_12                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_12          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_12      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_OFFSET 0x930u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_BYTE_OFFSET 0x930u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_13                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_13          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_13      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_OFFSET 0x934u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_BYTE_OFFSET 0x934u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_14                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_14          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_14      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_OFFSET 0x938u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_BYTE_OFFSET 0x938u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_15                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_15          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_15      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_OFFSET 0x93cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_BYTE_OFFSET 0x93cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_16                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_16          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_16      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_OFFSET 0x940u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_BYTE_OFFSET 0x940u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_WRITE_MASK 0x8000fffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_17                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_17          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_17      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_OFFSET 0x944u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_BYTE_OFFSET 0x944u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_18                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_18          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_18      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_OFFSET 0x948u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_BYTE_OFFSET 0x948u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_19                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_19          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_19      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_OFFSET 0x94cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_BYTE_OFFSET 0x94cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_20                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_20          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_20      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_OFFSET 0x950u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_BYTE_OFFSET 0x950u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_21                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_21          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_21      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_OFFSET 0x954u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_BYTE_OFFSET 0x954u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_22                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_22          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_22      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_OFFSET 0x958u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_BYTE_OFFSET 0x958u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_23                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_23          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_23      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_OFFSET 0x95cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_BYTE_OFFSET 0x95cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_24                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_24          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_24      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_OFFSET 0x960u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_BYTE_OFFSET 0x960u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_25                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_25          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_25      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_OFFSET 0x964u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_BYTE_OFFSET 0x964u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_26                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_26          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_26      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_OFFSET 0x968u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_BYTE_OFFSET 0x968u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_27                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_27          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_27      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_OFFSET 0x96cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_BYTE_OFFSET 0x96cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_28                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_28          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_28      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_OFFSET 0x970u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_BYTE_OFFSET 0x970u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_29                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_29          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_29      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_OFFSET 0x974u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_BYTE_OFFSET 0x974u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_30                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_30          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_30      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_OFFSET 0x978u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_BYTE_OFFSET 0x978u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_2_31                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_2_31          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_2_31      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_OFFSET 0x97cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_BYTE_OFFSET 0x97cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_0                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_0           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_0       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_OFFSET 0x980u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_BYTE_OFFSET 0x980u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_1                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_1           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_OFFSET 0x984u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_BYTE_OFFSET 0x984u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_2                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_2           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_2       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_OFFSET 0x988u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_BYTE_OFFSET 0x988u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_3                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_3           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_3       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_OFFSET 0x98cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_BYTE_OFFSET 0x98cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_4                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_4           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_4       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_OFFSET 0x990u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_BYTE_OFFSET 0x990u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_5                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_5           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_5       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_OFFSET 0x994u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_BYTE_OFFSET 0x994u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_6                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_6           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_6       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_OFFSET 0x998u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_BYTE_OFFSET 0x998u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_7                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_7           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_7       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_OFFSET 0x99cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_BYTE_OFFSET 0x99cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_8                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_8           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_8       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_OFFSET 0x9a0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_BYTE_OFFSET 0x9a0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_9                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_9           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_9       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_OFFSET 0x9a4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_BYTE_OFFSET 0x9a4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_10                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_10          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_10      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_OFFSET 0x9a8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_BYTE_OFFSET 0x9a8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_11                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_11          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_11      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_OFFSET 0x9acu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_BYTE_OFFSET 0x9acu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_12                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_12          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_12      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_OFFSET 0x9b0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_BYTE_OFFSET 0x9b0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_13                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_13          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_13      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_OFFSET 0x9b4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_BYTE_OFFSET 0x9b4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_14                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_14          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_14      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_OFFSET 0x9b8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_BYTE_OFFSET 0x9b8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_15                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_15          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_15      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_OFFSET 0x9bcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_BYTE_OFFSET 0x9bcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_16                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_16          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_16      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_OFFSET 0x9c0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_BYTE_OFFSET 0x9c0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_WRITE_MASK 0x8000fffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_17                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_17          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_17      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_OFFSET 0x9c4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_BYTE_OFFSET 0x9c4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_18                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_18          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_18      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_OFFSET 0x9c8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_BYTE_OFFSET 0x9c8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_19                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_19          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_19      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_OFFSET 0x9ccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_BYTE_OFFSET 0x9ccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_20                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_20          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_20      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_OFFSET 0x9d0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_BYTE_OFFSET 0x9d0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_21                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_21          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_21      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_OFFSET 0x9d4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_BYTE_OFFSET 0x9d4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_22                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_22          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_22      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_OFFSET 0x9d8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_BYTE_OFFSET 0x9d8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_23                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_23          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_23      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_OFFSET 0x9dcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_BYTE_OFFSET 0x9dcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_24                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_24          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_24      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_OFFSET 0x9e0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_BYTE_OFFSET 0x9e0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_25                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_25          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_25      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_OFFSET 0x9e4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_BYTE_OFFSET 0x9e4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_26                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_26          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_26      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_OFFSET 0x9e8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_BYTE_OFFSET 0x9e8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_27                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_27          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_27      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_OFFSET 0x9ecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_BYTE_OFFSET 0x9ecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_28                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_28          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_28      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_OFFSET 0x9f0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_BYTE_OFFSET 0x9f0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_29                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_29          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_29      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_OFFSET 0x9f4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_BYTE_OFFSET 0x9f4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_30                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_30          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_30      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_OFFSET 0x9f8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_BYTE_OFFSET 0x9f8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_3_31                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_3_31          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_3_31      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_OFFSET 0x9fcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_BYTE_OFFSET 0x9fcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_0                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_0           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_0       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_OFFSET 0xa00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_BYTE_OFFSET 0xa00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_1                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_1           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_OFFSET 0xa04u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_BYTE_OFFSET 0xa04u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_2                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_2           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_2       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_OFFSET 0xa08u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_BYTE_OFFSET 0xa08u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_3                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_3           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_3       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_OFFSET 0xa0cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_BYTE_OFFSET 0xa0cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_4                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_4           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_4       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_OFFSET 0xa10u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_BYTE_OFFSET 0xa10u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_5                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_5           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_5       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_OFFSET 0xa14u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_BYTE_OFFSET 0xa14u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_6                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_6           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_6       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_OFFSET 0xa18u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_BYTE_OFFSET 0xa18u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_7                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_7           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_7       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_OFFSET 0xa1cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_BYTE_OFFSET 0xa1cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_8                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_8           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_8       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_OFFSET 0xa20u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_BYTE_OFFSET 0xa20u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_9                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_9           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_9       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_OFFSET 0xa24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_BYTE_OFFSET 0xa24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_10                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_10          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_10      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_OFFSET 0xa28u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_BYTE_OFFSET 0xa28u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_11                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_11          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_11      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_OFFSET 0xa2cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_BYTE_OFFSET 0xa2cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_12                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_12          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_12      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_OFFSET 0xa30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_BYTE_OFFSET 0xa30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_13                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_13          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_13      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_OFFSET 0xa34u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_BYTE_OFFSET 0xa34u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_14                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_14          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_14      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_OFFSET 0xa38u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_BYTE_OFFSET 0xa38u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_15                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_15          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_15      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_OFFSET 0xa3cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_BYTE_OFFSET 0xa3cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_16                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_16          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_16      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_OFFSET 0xa40u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_BYTE_OFFSET 0xa40u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_WRITE_MASK 0x8000fffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_17                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_17          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_17      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_OFFSET 0xa44u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_BYTE_OFFSET 0xa44u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_18                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_18          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_18      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_OFFSET 0xa48u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_BYTE_OFFSET 0xa48u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_19                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_19          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_19      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_OFFSET 0xa4cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_BYTE_OFFSET 0xa4cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_20                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_20          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_20      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_OFFSET 0xa50u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_BYTE_OFFSET 0xa50u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_21                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_21          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_21      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_OFFSET 0xa54u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_BYTE_OFFSET 0xa54u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_22                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_22          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_22      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_OFFSET 0xa58u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_BYTE_OFFSET 0xa58u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_23                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_23          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_23      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_OFFSET 0xa5cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_BYTE_OFFSET 0xa5cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_24                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_24          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_24      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_OFFSET 0xa60u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_BYTE_OFFSET 0xa60u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_25                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_25          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_25      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_OFFSET 0xa64u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_BYTE_OFFSET 0xa64u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_26                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_26          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_26      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_OFFSET 0xa68u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_BYTE_OFFSET 0xa68u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_27                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_27          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_27      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_OFFSET 0xa6cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_BYTE_OFFSET 0xa6cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_28                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_28          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_28      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_OFFSET 0xa70u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_BYTE_OFFSET 0xa70u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_29                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_29          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_29      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_OFFSET 0xa74u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_BYTE_OFFSET 0xa74u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_30                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_30          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_30      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_OFFSET 0xa78u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_BYTE_OFFSET 0xa78u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_4_31                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_4_31          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_4_31      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_OFFSET 0xa7cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_BYTE_OFFSET 0xa7cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_0                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_0           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_0       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_OFFSET 0xa80u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_BYTE_OFFSET 0xa80u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_1                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_1           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_OFFSET 0xa84u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_BYTE_OFFSET 0xa84u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_2                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_2           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_2       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_OFFSET 0xa88u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_BYTE_OFFSET 0xa88u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_3                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_3           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_3       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_OFFSET 0xa8cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_BYTE_OFFSET 0xa8cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_4                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_4           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_4       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_OFFSET 0xa90u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_BYTE_OFFSET 0xa90u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_5                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_5           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_5       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_OFFSET 0xa94u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_BYTE_OFFSET 0xa94u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_6                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_6           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_6       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_OFFSET 0xa98u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_BYTE_OFFSET 0xa98u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_7                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_7           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_7       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_OFFSET 0xa9cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_BYTE_OFFSET 0xa9cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_8                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_8           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_8       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_OFFSET 0xaa0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_BYTE_OFFSET 0xaa0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_9                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_9           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_9       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_OFFSET 0xaa4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_BYTE_OFFSET 0xaa4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_10                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_10          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_10      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_OFFSET 0xaa8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_BYTE_OFFSET 0xaa8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_11                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_11          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_11      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_OFFSET 0xaacu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_BYTE_OFFSET 0xaacu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_12                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_12          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_12      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_OFFSET 0xab0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_BYTE_OFFSET 0xab0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_13                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_13          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_13      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_OFFSET 0xab4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_BYTE_OFFSET 0xab4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_14                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_14          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_14      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_OFFSET 0xab8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_BYTE_OFFSET 0xab8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_15                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_15          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_15      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_OFFSET 0xabcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_BYTE_OFFSET 0xabcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_16                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_16          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_16      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_OFFSET 0xac0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_BYTE_OFFSET 0xac0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_WRITE_MASK 0x8000fffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_17                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_17          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_17      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_OFFSET 0xac4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_BYTE_OFFSET 0xac4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_18                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_18          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_18      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_OFFSET 0xac8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_BYTE_OFFSET 0xac8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_19                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_19          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_19      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_OFFSET 0xaccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_BYTE_OFFSET 0xaccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_20                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_20          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_20      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_OFFSET 0xad0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_BYTE_OFFSET 0xad0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_21                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_21          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_21      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_OFFSET 0xad4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_BYTE_OFFSET 0xad4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_22                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_22          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_22      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_OFFSET 0xad8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_BYTE_OFFSET 0xad8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_23                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_23          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_23      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_OFFSET 0xadcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_BYTE_OFFSET 0xadcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_24                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_24          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_24      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_OFFSET 0xae0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_BYTE_OFFSET 0xae0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_25                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_25          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_25      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_OFFSET 0xae4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_BYTE_OFFSET 0xae4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_26                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_26          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_26      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_OFFSET 0xae8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_BYTE_OFFSET 0xae8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_27                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_27          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_27      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_OFFSET 0xaecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_BYTE_OFFSET 0xaecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_28                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_28          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_28      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_OFFSET 0xaf0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_BYTE_OFFSET 0xaf0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_29                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_29          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_29      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_OFFSET 0xaf4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_BYTE_OFFSET 0xaf4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_30                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_30          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_30      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_OFFSET 0xaf8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_BYTE_OFFSET 0xaf8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_5_31                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_5_31          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_5_31      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_OFFSET 0xafcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_BYTE_OFFSET 0xafcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_0                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_0           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_0       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_OFFSET 0xb00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_BYTE_OFFSET 0xb00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_1                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_1           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_OFFSET 0xb04u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_BYTE_OFFSET 0xb04u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_2                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_2           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_2       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_OFFSET 0xb08u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_BYTE_OFFSET 0xb08u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_3                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_3           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_3       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_OFFSET 0xb0cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_BYTE_OFFSET 0xb0cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_4                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_4           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_4       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_OFFSET 0xb10u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_BYTE_OFFSET 0xb10u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_5                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_5           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_5       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_OFFSET 0xb14u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_BYTE_OFFSET 0xb14u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_6                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_6           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_6       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_OFFSET 0xb18u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_BYTE_OFFSET 0xb18u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_7                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_7           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_7       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_OFFSET 0xb1cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_BYTE_OFFSET 0xb1cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_8                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_8           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_8       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_OFFSET 0xb20u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_BYTE_OFFSET 0xb20u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_9                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_9           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_9       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_OFFSET 0xb24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_BYTE_OFFSET 0xb24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_10                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_10          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_10      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_OFFSET 0xb28u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_BYTE_OFFSET 0xb28u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_11                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_11          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_11      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_OFFSET 0xb2cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_BYTE_OFFSET 0xb2cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_12                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_12          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_12      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_OFFSET 0xb30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_BYTE_OFFSET 0xb30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_13                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_13          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_13      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_OFFSET 0xb34u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_BYTE_OFFSET 0xb34u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_14                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_14          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_14      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_OFFSET 0xb38u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_BYTE_OFFSET 0xb38u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_15                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_15          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_15      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_OFFSET 0xb3cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_BYTE_OFFSET 0xb3cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_16                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_16          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_16      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_OFFSET 0xb40u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_BYTE_OFFSET 0xb40u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_WRITE_MASK 0x8000fffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_17                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_17          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_17      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_OFFSET 0xb44u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_BYTE_OFFSET 0xb44u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_18                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_18          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_18      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_OFFSET 0xb48u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_BYTE_OFFSET 0xb48u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_19                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_19          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_19      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_OFFSET 0xb4cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_BYTE_OFFSET 0xb4cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_20                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_20          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_20      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_OFFSET 0xb50u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_BYTE_OFFSET 0xb50u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_21                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_21          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_21      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_OFFSET 0xb54u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_BYTE_OFFSET 0xb54u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_22                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_22          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_22      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_OFFSET 0xb58u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_BYTE_OFFSET 0xb58u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_23                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_23          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_23      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_OFFSET 0xb5cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_BYTE_OFFSET 0xb5cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_24                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_24          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_24      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_OFFSET 0xb60u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_BYTE_OFFSET 0xb60u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_25                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_25          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_25      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_OFFSET 0xb64u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_BYTE_OFFSET 0xb64u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_26                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_26          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_26      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_OFFSET 0xb68u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_BYTE_OFFSET 0xb68u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_27                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_27          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_27      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_OFFSET 0xb6cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_BYTE_OFFSET 0xb6cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_28                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_28          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_28      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_OFFSET 0xb70u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_BYTE_OFFSET 0xb70u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_29                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_29          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_29      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_OFFSET 0xb74u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_BYTE_OFFSET 0xb74u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_30                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_30          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_30      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_OFFSET 0xb78u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_BYTE_OFFSET 0xb78u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_6_31                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_6_31          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_6_31      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_OFFSET 0xb7cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_BYTE_OFFSET 0xb7cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_0                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_0           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_0       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_OFFSET 0xb80u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_BYTE_OFFSET 0xb80u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_1                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_1           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_OFFSET 0xb84u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_BYTE_OFFSET 0xb84u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_2                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_2           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_2       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_OFFSET 0xb88u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_BYTE_OFFSET 0xb88u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_3                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_3           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_3       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_OFFSET 0xb8cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_BYTE_OFFSET 0xb8cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_4                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_4           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_4       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_OFFSET 0xb90u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_BYTE_OFFSET 0xb90u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_5                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_5           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_5       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_OFFSET 0xb94u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_BYTE_OFFSET 0xb94u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_6                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_6           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_6       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_OFFSET 0xb98u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_BYTE_OFFSET 0xb98u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_7                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_7           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_7       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_OFFSET 0xb9cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_BYTE_OFFSET 0xb9cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_8                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_8           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_8       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_OFFSET 0xba0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_BYTE_OFFSET 0xba0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_9                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_9           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_9       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_OFFSET 0xba4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_BYTE_OFFSET 0xba4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_10                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_10          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_10      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_OFFSET 0xba8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_BYTE_OFFSET 0xba8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_11                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_11          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_11      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_OFFSET 0xbacu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_BYTE_OFFSET 0xbacu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_12                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_12          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_12      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_OFFSET 0xbb0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_BYTE_OFFSET 0xbb0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_13                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_13          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_13      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_OFFSET 0xbb4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_BYTE_OFFSET 0xbb4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_14                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_14          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_14      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_OFFSET 0xbb8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_BYTE_OFFSET 0xbb8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_15                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_15          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_15      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_OFFSET 0xbbcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_BYTE_OFFSET 0xbbcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_16                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_16          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_16      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_OFFSET 0xbc0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_BYTE_OFFSET 0xbc0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_WRITE_MASK 0x8000fffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_17                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_17          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_17      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_OFFSET 0xbc4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_BYTE_OFFSET 0xbc4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_18                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_18          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_18      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_OFFSET 0xbc8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_BYTE_OFFSET 0xbc8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_19                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_19          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_19      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_OFFSET 0xbccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_BYTE_OFFSET 0xbccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_20                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_20          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_20      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_OFFSET 0xbd0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_BYTE_OFFSET 0xbd0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_21                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_21          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_21      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_OFFSET 0xbd4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_BYTE_OFFSET 0xbd4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_22                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_22          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_22      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_OFFSET 0xbd8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_BYTE_OFFSET 0xbd8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_23                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_23          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_23      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_OFFSET 0xbdcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_BYTE_OFFSET 0xbdcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_24                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_24          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_24      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_OFFSET 0xbe0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_BYTE_OFFSET 0xbe0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_25                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_25          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_25      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_OFFSET 0xbe4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_BYTE_OFFSET 0xbe4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_26                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_26          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_26      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_OFFSET 0xbe8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_BYTE_OFFSET 0xbe8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_27                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_27          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_27      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_OFFSET 0xbecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_BYTE_OFFSET 0xbecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_28                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_28          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_28      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_OFFSET 0xbf0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_BYTE_OFFSET 0xbf0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_29                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_29          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_29      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_OFFSET 0xbf4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_BYTE_OFFSET 0xbf4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_30                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_30          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_30      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_OFFSET 0xbf8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_BYTE_OFFSET 0xbf8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_7_31                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_7_31          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_7_31      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_OFFSET 0xbfcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_BYTE_OFFSET 0xbfcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_0                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_0           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_0       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_OFFSET 0xc00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_BYTE_OFFSET 0xc00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_1                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_1           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_OFFSET 0xc04u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_BYTE_OFFSET 0xc04u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_2                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_2           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_2       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_OFFSET 0xc08u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_BYTE_OFFSET 0xc08u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_3                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_3           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_3       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_OFFSET 0xc0cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_BYTE_OFFSET 0xc0cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_4                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_4           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_4       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_OFFSET 0xc10u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_BYTE_OFFSET 0xc10u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_5                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_5           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_5       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_OFFSET 0xc14u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_BYTE_OFFSET 0xc14u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_6                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_6           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_6       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_OFFSET 0xc18u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_BYTE_OFFSET 0xc18u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_7                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_7           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_7       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_OFFSET 0xc1cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_BYTE_OFFSET 0xc1cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_8                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_8           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_8       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_OFFSET 0xc20u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_BYTE_OFFSET 0xc20u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_9                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_9           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_9       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_OFFSET 0xc24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_BYTE_OFFSET 0xc24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_10                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_10          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_10      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_OFFSET 0xc28u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_BYTE_OFFSET 0xc28u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_11                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_11          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_11      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_OFFSET 0xc2cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_BYTE_OFFSET 0xc2cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_12                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_12          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_12      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_OFFSET 0xc30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_BYTE_OFFSET 0xc30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_13                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_13          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_13      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_OFFSET 0xc34u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_BYTE_OFFSET 0xc34u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_14                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_14          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_14      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_OFFSET 0xc38u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_BYTE_OFFSET 0xc38u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_15                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_15          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_15      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_OFFSET 0xc3cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_BYTE_OFFSET 0xc3cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_16                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_16          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_16      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_OFFSET 0xc40u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_BYTE_OFFSET 0xc40u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_WRITE_MASK 0x8000fffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_17                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_17          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_17      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_OFFSET 0xc44u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_BYTE_OFFSET 0xc44u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_18                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_18          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_18      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_OFFSET 0xc48u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_BYTE_OFFSET 0xc48u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_19                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_19          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_19      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_OFFSET 0xc4cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_BYTE_OFFSET 0xc4cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_20                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_20          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_20      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_OFFSET 0xc50u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_BYTE_OFFSET 0xc50u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_21                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_21          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_21      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_OFFSET 0xc54u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_BYTE_OFFSET 0xc54u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_22                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_22          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_22      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_OFFSET 0xc58u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_BYTE_OFFSET 0xc58u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_23                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_23          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_23      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_OFFSET 0xc5cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_BYTE_OFFSET 0xc5cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_24                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_24          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_24      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_OFFSET 0xc60u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_BYTE_OFFSET 0xc60u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_25                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_25          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_25      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_OFFSET 0xc64u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_BYTE_OFFSET 0xc64u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_26                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_26          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_26      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_OFFSET 0xc68u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_BYTE_OFFSET 0xc68u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_27                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_27          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_27      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_OFFSET 0xc6cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_BYTE_OFFSET 0xc6cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_28                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_28          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_28      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_OFFSET 0xc70u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_BYTE_OFFSET 0xc70u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_29                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_29          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_29      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_OFFSET 0xc74u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_BYTE_OFFSET 0xc74u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_30                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_30          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_30      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_OFFSET 0xc78u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_BYTE_OFFSET 0xc78u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_8_31                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_8_31          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_8_31      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_OFFSET 0xc7cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_BYTE_OFFSET 0xc7cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_0                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_0           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_0       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_OFFSET 0xc80u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_BYTE_OFFSET 0xc80u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_1                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_1           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_OFFSET 0xc84u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_BYTE_OFFSET 0xc84u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_2                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_2           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_2       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_OFFSET 0xc88u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_BYTE_OFFSET 0xc88u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_3                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_3           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_3       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_OFFSET 0xc8cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_BYTE_OFFSET 0xc8cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_4                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_4           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_4       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_OFFSET 0xc90u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_BYTE_OFFSET 0xc90u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_5                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_5           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_5       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_OFFSET 0xc94u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_BYTE_OFFSET 0xc94u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_6                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_6           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_6       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_OFFSET 0xc98u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_BYTE_OFFSET 0xc98u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_7                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_7           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_7       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_OFFSET 0xc9cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_BYTE_OFFSET 0xc9cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_8                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_8           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_8       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_OFFSET 0xca0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_BYTE_OFFSET 0xca0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_9                     */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_9           */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_9       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_OFFSET 0xca4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_BYTE_OFFSET 0xca4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_10                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_10          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_10      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_OFFSET 0xca8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_BYTE_OFFSET 0xca8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_11                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_11          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_11      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_OFFSET 0xcacu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_BYTE_OFFSET 0xcacu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_12                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_12          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_12      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_OFFSET 0xcb0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_BYTE_OFFSET 0xcb0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_13                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_13          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_13      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_OFFSET 0xcb4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_BYTE_OFFSET 0xcb4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_14                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_14          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_14      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_OFFSET 0xcb8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_BYTE_OFFSET 0xcb8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_15                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_15          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_15      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_OFFSET 0xcbcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_BYTE_OFFSET 0xcbcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_16                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_16          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_16      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_OFFSET 0xcc0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_BYTE_OFFSET 0xcc0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_WRITE_MASK 0x8000fffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_17                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_17          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_17      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_OFFSET 0xcc4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_BYTE_OFFSET 0xcc4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_18                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_18          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_18      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_OFFSET 0xcc8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_BYTE_OFFSET 0xcc8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_19                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_19          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_19      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_OFFSET 0xcccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_BYTE_OFFSET 0xcccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_20                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_20          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_20      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_OFFSET 0xcd0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_BYTE_OFFSET 0xcd0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_21                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_21          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_21      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_OFFSET 0xcd4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_BYTE_OFFSET 0xcd4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_22                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_22          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_22      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_OFFSET 0xcd8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_BYTE_OFFSET 0xcd8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_23                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_23          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_23      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_OFFSET 0xcdcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_BYTE_OFFSET 0xcdcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_24                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_24          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_24      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_OFFSET 0xce0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_BYTE_OFFSET 0xce0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_25                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_25          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_25      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_OFFSET 0xce4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_BYTE_OFFSET 0xce4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_26                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_26          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_26      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_OFFSET 0xce8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_BYTE_OFFSET 0xce8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_27                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_27          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_27      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_OFFSET 0xcecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_BYTE_OFFSET 0xcecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_28                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_28          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_28      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_OFFSET 0xcf0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_BYTE_OFFSET 0xcf0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_29                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_29          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_29      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_OFFSET 0xcf4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_BYTE_OFFSET 0xcf4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_30                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_30          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_30      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_OFFSET 0xcf8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_BYTE_OFFSET 0xcf8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_9_31                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_9_31          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_9_31      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_OFFSET 0xcfcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_BYTE_OFFSET 0xcfcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_0                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_0          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_0      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_OFFSET 0xd00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_BYTE_OFFSET 0xd00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_1                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_1          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_1      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_OFFSET 0xd04u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_BYTE_OFFSET 0xd04u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_2                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_2          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_2      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_OFFSET 0xd08u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_BYTE_OFFSET 0xd08u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_3                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_3          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_3      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_OFFSET 0xd0cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_BYTE_OFFSET 0xd0cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_4                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_4          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_4      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_OFFSET 0xd10u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_BYTE_OFFSET 0xd10u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_5                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_5          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_5      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_OFFSET 0xd14u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_BYTE_OFFSET 0xd14u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_6                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_6          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_6      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_OFFSET 0xd18u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_BYTE_OFFSET 0xd18u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_7                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_7          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_7      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_OFFSET 0xd1cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_BYTE_OFFSET 0xd1cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_8                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_8          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_8      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_OFFSET 0xd20u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_BYTE_OFFSET 0xd20u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_9                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_9          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_9      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_OFFSET 0xd24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_BYTE_OFFSET 0xd24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_10                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_10         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_10     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_OFFSET 0xd28u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_BYTE_OFFSET 0xd28u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_11                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_11         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_11     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_OFFSET 0xd2cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_BYTE_OFFSET 0xd2cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_12                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_12         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_12     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_OFFSET 0xd30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_BYTE_OFFSET 0xd30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_13                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_13         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_13     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_OFFSET 0xd34u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_BYTE_OFFSET 0xd34u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_14                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_14         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_14     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_OFFSET 0xd38u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_BYTE_OFFSET 0xd38u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_15                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_15         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_15     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_OFFSET 0xd3cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_BYTE_OFFSET 0xd3cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_16                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_16         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_16     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_OFFSET 0xd40u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_BYTE_OFFSET 0xd40u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_WRITE_MASK 0x8000fffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_17                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_17         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_17     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_OFFSET 0xd44u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_BYTE_OFFSET 0xd44u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_18                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_18         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_18     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_OFFSET 0xd48u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_BYTE_OFFSET 0xd48u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_19                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_19         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_19     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_OFFSET 0xd4cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_BYTE_OFFSET 0xd4cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_20                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_20         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_20     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_OFFSET 0xd50u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_BYTE_OFFSET 0xd50u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_21                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_21         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_21     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_OFFSET 0xd54u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_BYTE_OFFSET 0xd54u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_22                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_22         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_22     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_OFFSET 0xd58u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_BYTE_OFFSET 0xd58u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_23                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_23         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_23     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_OFFSET 0xd5cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_BYTE_OFFSET 0xd5cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_24                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_24         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_24     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_OFFSET 0xd60u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_BYTE_OFFSET 0xd60u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_25                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_25         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_25     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_OFFSET 0xd64u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_BYTE_OFFSET 0xd64u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_26                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_26         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_26     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_OFFSET 0xd68u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_BYTE_OFFSET 0xd68u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_27                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_27         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_27     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_OFFSET 0xd6cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_BYTE_OFFSET 0xd6cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_28                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_28         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_28     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_OFFSET 0xd70u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_BYTE_OFFSET 0xd70u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_29                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_29         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_29     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_OFFSET 0xd74u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_BYTE_OFFSET 0xd74u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_30                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_30         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_30     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_OFFSET 0xd78u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_BYTE_OFFSET 0xd78u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_10_31                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_10_31         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_10_31     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_OFFSET 0xd7cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_BYTE_OFFSET 0xd7cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_0                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_0          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_0      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_OFFSET 0xd80u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_BYTE_OFFSET 0xd80u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_1                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_1          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_1      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_OFFSET 0xd84u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_BYTE_OFFSET 0xd84u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_2                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_2          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_2      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_OFFSET 0xd88u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_BYTE_OFFSET 0xd88u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_3                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_3          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_3      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_OFFSET 0xd8cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_BYTE_OFFSET 0xd8cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_4                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_4          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_4      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_OFFSET 0xd90u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_BYTE_OFFSET 0xd90u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_5                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_5          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_5      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_OFFSET 0xd94u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_BYTE_OFFSET 0xd94u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_6                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_6          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_6      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_OFFSET 0xd98u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_BYTE_OFFSET 0xd98u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_7                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_7          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_7      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_OFFSET 0xd9cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_BYTE_OFFSET 0xd9cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_8                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_8          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_8      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_OFFSET 0xda0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_BYTE_OFFSET 0xda0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_9                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_9          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_9      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_OFFSET 0xda4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_BYTE_OFFSET 0xda4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_10                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_10         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_10     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_OFFSET 0xda8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_BYTE_OFFSET 0xda8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_11                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_11         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_11     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_OFFSET 0xdacu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_BYTE_OFFSET 0xdacu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_12                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_12         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_12     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_OFFSET 0xdb0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_BYTE_OFFSET 0xdb0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_13                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_13         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_13     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_OFFSET 0xdb4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_BYTE_OFFSET 0xdb4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_14                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_14         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_14     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_OFFSET 0xdb8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_BYTE_OFFSET 0xdb8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_15                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_15         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_15     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_OFFSET 0xdbcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_BYTE_OFFSET 0xdbcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_16                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_16         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_16     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_OFFSET 0xdc0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_BYTE_OFFSET 0xdc0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_WRITE_MASK 0x8000fffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_17                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_17         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_17     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_OFFSET 0xdc4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_BYTE_OFFSET 0xdc4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_18                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_18         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_18     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_OFFSET 0xdc8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_BYTE_OFFSET 0xdc8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_19                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_19         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_19     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_OFFSET 0xdccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_BYTE_OFFSET 0xdccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_20                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_20         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_20     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_OFFSET 0xdd0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_BYTE_OFFSET 0xdd0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_21                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_21         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_21     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_OFFSET 0xdd4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_BYTE_OFFSET 0xdd4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_22                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_22         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_22     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_OFFSET 0xdd8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_BYTE_OFFSET 0xdd8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_23                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_23         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_23     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_OFFSET 0xddcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_BYTE_OFFSET 0xddcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_24                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_24         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_24     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_OFFSET 0xde0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_BYTE_OFFSET 0xde0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_25                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_25         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_25     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_OFFSET 0xde4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_BYTE_OFFSET 0xde4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_26                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_26         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_26     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_OFFSET 0xde8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_BYTE_OFFSET 0xde8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_27                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_27         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_27     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_OFFSET 0xdecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_BYTE_OFFSET 0xdecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_28                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_28         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_28     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_OFFSET 0xdf0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_BYTE_OFFSET 0xdf0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_29                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_29         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_29     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_OFFSET 0xdf4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_BYTE_OFFSET 0xdf4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_30                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_30         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_30     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_OFFSET 0xdf8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_BYTE_OFFSET 0xdf8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_11_31                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_11_31         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_11_31     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_OFFSET 0xdfcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_BYTE_OFFSET 0xdfcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_0                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_0          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_0      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_OFFSET 0xe00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_BYTE_OFFSET 0xe00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_1                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_1          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_1      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_OFFSET 0xe04u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_BYTE_OFFSET 0xe04u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_2                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_2          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_2      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_OFFSET 0xe08u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_BYTE_OFFSET 0xe08u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_3                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_3          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_3      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_OFFSET 0xe0cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_BYTE_OFFSET 0xe0cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_4                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_4          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_4      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_OFFSET 0xe10u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_BYTE_OFFSET 0xe10u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_5                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_5          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_5      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_OFFSET 0xe14u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_BYTE_OFFSET 0xe14u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_6                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_6          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_6      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_OFFSET 0xe18u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_BYTE_OFFSET 0xe18u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_7                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_7          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_7      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_OFFSET 0xe1cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_BYTE_OFFSET 0xe1cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_8                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_8          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_8      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_OFFSET 0xe20u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_BYTE_OFFSET 0xe20u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_9                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_9          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_9      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_OFFSET 0xe24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_BYTE_OFFSET 0xe24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_10                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_10         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_10     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_OFFSET 0xe28u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_BYTE_OFFSET 0xe28u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_11                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_11         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_11     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_OFFSET 0xe2cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_BYTE_OFFSET 0xe2cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_12                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_12         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_12     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_OFFSET 0xe30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_BYTE_OFFSET 0xe30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_13                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_13         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_13     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_OFFSET 0xe34u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_BYTE_OFFSET 0xe34u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_14                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_14         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_14     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_OFFSET 0xe38u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_BYTE_OFFSET 0xe38u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_15                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_15         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_15     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_OFFSET 0xe3cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_BYTE_OFFSET 0xe3cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_16                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_16         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_16     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_OFFSET 0xe40u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_BYTE_OFFSET 0xe40u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_WRITE_MASK 0x8000fffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_17                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_17         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_17     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_OFFSET 0xe44u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_BYTE_OFFSET 0xe44u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_18                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_18         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_18     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_OFFSET 0xe48u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_BYTE_OFFSET 0xe48u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_19                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_19         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_19     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_OFFSET 0xe4cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_BYTE_OFFSET 0xe4cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_20                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_20         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_20     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_OFFSET 0xe50u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_BYTE_OFFSET 0xe50u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_21                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_21         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_21     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_OFFSET 0xe54u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_BYTE_OFFSET 0xe54u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_22                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_22         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_22     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_OFFSET 0xe58u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_BYTE_OFFSET 0xe58u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_23                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_23         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_23     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_OFFSET 0xe5cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_BYTE_OFFSET 0xe5cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_24                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_24         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_24     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_OFFSET 0xe60u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_BYTE_OFFSET 0xe60u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_25                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_25         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_25     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_OFFSET 0xe64u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_BYTE_OFFSET 0xe64u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_26                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_26         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_26     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_OFFSET 0xe68u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_BYTE_OFFSET 0xe68u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_27                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_27         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_27     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_OFFSET 0xe6cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_BYTE_OFFSET 0xe6cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_28                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_28         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_28     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_OFFSET 0xe70u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_BYTE_OFFSET 0xe70u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_29                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_29         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_29     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_OFFSET 0xe74u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_BYTE_OFFSET 0xe74u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_30                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_30         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_30     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_OFFSET 0xe78u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_BYTE_OFFSET 0xe78u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_12_31                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_12_31         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_12_31     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_OFFSET 0xe7cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_BYTE_OFFSET 0xe7cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_0                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_0          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_0      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_OFFSET 0xe80u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_BYTE_OFFSET 0xe80u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_1                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_1          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_1      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_OFFSET 0xe84u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_BYTE_OFFSET 0xe84u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_2                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_2          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_2      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_OFFSET 0xe88u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_BYTE_OFFSET 0xe88u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_3                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_3          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_3      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_OFFSET 0xe8cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_BYTE_OFFSET 0xe8cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_4                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_4          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_4      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_OFFSET 0xe90u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_BYTE_OFFSET 0xe90u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_5                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_5          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_5      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_OFFSET 0xe94u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_BYTE_OFFSET 0xe94u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_6                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_6          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_6      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_OFFSET 0xe98u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_BYTE_OFFSET 0xe98u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_7                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_7          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_7      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_OFFSET 0xe9cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_BYTE_OFFSET 0xe9cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_8                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_8          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_8      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_OFFSET 0xea0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_BYTE_OFFSET 0xea0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_9                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_9          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_9      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_OFFSET 0xea4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_BYTE_OFFSET 0xea4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_10                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_10         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_10     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_OFFSET 0xea8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_BYTE_OFFSET 0xea8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_11                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_11         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_11     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_OFFSET 0xeacu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_BYTE_OFFSET 0xeacu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_12                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_12         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_12     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_OFFSET 0xeb0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_BYTE_OFFSET 0xeb0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_13                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_13         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_13     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_OFFSET 0xeb4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_BYTE_OFFSET 0xeb4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_14                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_14         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_14     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_OFFSET 0xeb8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_BYTE_OFFSET 0xeb8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_15                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_15         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_15     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_OFFSET 0xebcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_BYTE_OFFSET 0xebcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_16                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_16         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_16     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_OFFSET 0xec0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_BYTE_OFFSET 0xec0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_WRITE_MASK 0x8000fffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_17                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_17         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_17     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_OFFSET 0xec4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_BYTE_OFFSET 0xec4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_18                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_18         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_18     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_OFFSET 0xec8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_BYTE_OFFSET 0xec8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_19                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_19         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_19     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_OFFSET 0xeccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_BYTE_OFFSET 0xeccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_20                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_20         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_20     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_OFFSET 0xed0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_BYTE_OFFSET 0xed0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_21                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_21         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_21     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_OFFSET 0xed4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_BYTE_OFFSET 0xed4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_22                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_22         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_22     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_OFFSET 0xed8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_BYTE_OFFSET 0xed8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_23                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_23         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_23     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_OFFSET 0xedcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_BYTE_OFFSET 0xedcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_24                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_24         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_24     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_OFFSET 0xee0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_BYTE_OFFSET 0xee0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_25                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_25         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_25     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_OFFSET 0xee4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_BYTE_OFFSET 0xee4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_26                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_26         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_26     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_OFFSET 0xee8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_BYTE_OFFSET 0xee8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_27                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_27         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_27     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_OFFSET 0xeecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_BYTE_OFFSET 0xeecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_28                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_28         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_28     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_OFFSET 0xef0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_BYTE_OFFSET 0xef0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_29                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_29         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_29     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_OFFSET 0xef4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_BYTE_OFFSET 0xef4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_30                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_30         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_30     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_OFFSET 0xef8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_BYTE_OFFSET 0xef8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_13_31                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_13_31         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_13_31     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_OFFSET 0xefcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_BYTE_OFFSET 0xefcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_0                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_0          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_0      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_OFFSET 0xf00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_BYTE_OFFSET 0xf00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_1                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_1          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_1      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_OFFSET 0xf04u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_BYTE_OFFSET 0xf04u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_2                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_2          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_2      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_OFFSET 0xf08u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_BYTE_OFFSET 0xf08u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_3                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_3          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_3      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_OFFSET 0xf0cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_BYTE_OFFSET 0xf0cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_4                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_4          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_4      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_OFFSET 0xf10u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_BYTE_OFFSET 0xf10u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_5                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_5          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_5      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_OFFSET 0xf14u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_BYTE_OFFSET 0xf14u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_6                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_6          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_6      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_OFFSET 0xf18u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_BYTE_OFFSET 0xf18u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_7                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_7          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_7      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_OFFSET 0xf1cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_BYTE_OFFSET 0xf1cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_8                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_8          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_8      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_OFFSET 0xf20u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_BYTE_OFFSET 0xf20u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_9                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_9          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_9      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_OFFSET 0xf24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_BYTE_OFFSET 0xf24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_10                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_10         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_10     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_OFFSET 0xf28u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_BYTE_OFFSET 0xf28u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_11                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_11         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_11     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_OFFSET 0xf2cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_BYTE_OFFSET 0xf2cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_12                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_12         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_12     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_OFFSET 0xf30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_BYTE_OFFSET 0xf30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_13                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_13         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_13     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_OFFSET 0xf34u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_BYTE_OFFSET 0xf34u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_14                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_14         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_14     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_OFFSET 0xf38u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_BYTE_OFFSET 0xf38u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_15                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_15         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_15     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_OFFSET 0xf3cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_BYTE_OFFSET 0xf3cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_16                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_16         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_16     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_OFFSET 0xf40u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_BYTE_OFFSET 0xf40u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_WRITE_MASK 0x8000fffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_17                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_17         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_17     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_OFFSET 0xf44u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_BYTE_OFFSET 0xf44u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_18                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_18         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_18     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_OFFSET 0xf48u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_BYTE_OFFSET 0xf48u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_19                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_19         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_19     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_OFFSET 0xf4cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_BYTE_OFFSET 0xf4cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_20                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_20         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_20     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_OFFSET 0xf50u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_BYTE_OFFSET 0xf50u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_21                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_21         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_21     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_OFFSET 0xf54u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_BYTE_OFFSET 0xf54u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_22                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_22         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_22     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_OFFSET 0xf58u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_BYTE_OFFSET 0xf58u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_23                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_23         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_23     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_OFFSET 0xf5cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_BYTE_OFFSET 0xf5cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_24                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_24         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_24     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_OFFSET 0xf60u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_BYTE_OFFSET 0xf60u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_25                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_25         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_25     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_OFFSET 0xf64u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_BYTE_OFFSET 0xf64u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_26                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_26         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_26     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_OFFSET 0xf68u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_BYTE_OFFSET 0xf68u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_27                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_27         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_27     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_OFFSET 0xf6cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_BYTE_OFFSET 0xf6cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_28                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_28         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_28     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_OFFSET 0xf70u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_BYTE_OFFSET 0xf70u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_29                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_29         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_29     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_OFFSET 0xf74u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_BYTE_OFFSET 0xf74u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_30                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_30         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_30     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_OFFSET 0xf78u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_BYTE_OFFSET 0xf78u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_14_31                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_14_31         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_14_31     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_OFFSET 0xf7cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_BYTE_OFFSET 0xf7cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_0                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_0          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_0      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_OFFSET 0xf80u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_BYTE_OFFSET 0xf80u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_1                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_1          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_1      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_OFFSET 0xf84u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_BYTE_OFFSET 0xf84u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_2                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_2          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_2      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_OFFSET 0xf88u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_BYTE_OFFSET 0xf88u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_3                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_3          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_3      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_OFFSET 0xf8cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_BYTE_OFFSET 0xf8cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_4                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_4          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_4      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_OFFSET 0xf90u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_BYTE_OFFSET 0xf90u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_5                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_5          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_5      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_OFFSET 0xf94u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_BYTE_OFFSET 0xf94u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_6                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_6          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_6      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_OFFSET 0xf98u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_BYTE_OFFSET 0xf98u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_7                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_7          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_7      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_OFFSET 0xf9cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_BYTE_OFFSET 0xf9cu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_8                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_8          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_8      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_OFFSET 0xfa0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_BYTE_OFFSET 0xfa0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_9                    */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_9          */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_9      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_OFFSET 0xfa4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_BYTE_OFFSET 0xfa4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_10                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_10         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_10     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_OFFSET 0xfa8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_BYTE_OFFSET 0xfa8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_11                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_11         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_11     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_OFFSET 0xfacu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_BYTE_OFFSET 0xfacu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_12                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_12         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_12     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_OFFSET 0xfb0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_BYTE_OFFSET 0xfb0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_13                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_13         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_13     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_OFFSET 0xfb4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_BYTE_OFFSET 0xfb4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_14                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_14         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_14     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_OFFSET 0xfb8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_BYTE_OFFSET 0xfb8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_15                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_15         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_15     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_OFFSET 0xfbcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_BYTE_OFFSET 0xfbcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_READ_MASK 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_WRITE_MASK 0xfffffffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_16                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_16         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_16     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_OFFSET 0xfc0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_BYTE_OFFSET 0xfc0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_WRITE_MASK 0x8000fffful
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_17                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_17         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_17     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_OFFSET 0xfc4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_BYTE_OFFSET 0xfc4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_18                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_18         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_18     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_OFFSET 0xfc8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_BYTE_OFFSET 0xfc8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_19                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_19         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_19     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_OFFSET 0xfccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_BYTE_OFFSET 0xfccu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_20                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_20         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_20     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_OFFSET 0xfd0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_BYTE_OFFSET 0xfd0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_21                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_21         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_21     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_OFFSET 0xfd4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_BYTE_OFFSET 0xfd4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_22                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_22         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_22     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_OFFSET 0xfd8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_BYTE_OFFSET 0xfd8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_23                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_23         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_23     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_OFFSET 0xfdcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_BYTE_OFFSET 0xfdcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_24                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_24         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_24     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_OFFSET 0xfe0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_BYTE_OFFSET 0xfe0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_25                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_25         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_25     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_OFFSET 0xfe4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_BYTE_OFFSET 0xfe4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_26                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_26         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_26     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_OFFSET 0xfe8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_BYTE_OFFSET 0xfe8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_27                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_27         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_27     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_OFFSET 0xfecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_BYTE_OFFSET 0xfecu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_28                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_28         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_28     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_OFFSET 0xff0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_BYTE_OFFSET 0xff0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_29                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_29         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_29     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_OFFSET 0xff4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_BYTE_OFFSET 0xff4u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_30                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_30         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_30     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_OFFSET 0xff8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_BYTE_OFFSET 0xff8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_WRITE_MASK 0x00000000ul
/* Register member: emmc::crypto_vendor2.CRYPTOCFG_15_31                   */
/* Register type referenced: emmc::crypto_vendor2::CRYPTOCFG_15_31         */
/* Register template referenced: emmc::crypto_vendor2::CRYPTOCFG_15_31     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_OFFSET 0xffcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_BYTE_OFFSET 0xffcu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_RESET_VALUE 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_RESET_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_READ_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_WRITE_MASK 0x00000000ul

/* Register type: emmc::crypto_vendor2::CQCAP                              */
/* Register template: emmc::crypto_vendor2::CQCAP                          */
/* Field member: emmc::crypto_vendor2::CQCAP.CQCCAP_RSVD3                  */
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD3_LSB 29u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD3_WIDTH 3u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD3_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD3_FIELD_MASK 0xe0000000ul
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD3_GET(x) \
   (((x) & 0xe0000000ul) >> 29)
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD3_SET(x) \
   (((x) << 29) & 0xe0000000ul)
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD3_MODIFY(r, x) \
   ((((x) << 29) & 0xe0000000ul) | ((r) & 0x1ffffffful))
/* Field member: emmc::crypto_vendor2::CQCAP.CRYPTO_SUPPORT                */
#define EMMC_CRYPTO_VENDOR2_CQCAP_CRYPTO_SUPPORT_MSB 28u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CRYPTO_SUPPORT_LSB 28u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CRYPTO_SUPPORT_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CRYPTO_SUPPORT_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CRYPTO_SUPPORT_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CRYPTO_SUPPORT_RESET 0x1u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CRYPTO_SUPPORT_FIELD_MASK 0x10000000ul
#define EMMC_CRYPTO_VENDOR2_CQCAP_CRYPTO_SUPPORT_GET(x) \
   (((x) & 0x10000000ul) >> 28)
#define EMMC_CRYPTO_VENDOR2_CQCAP_CRYPTO_SUPPORT_SET(x) \
   (((x) << 28) & 0x10000000ul)
#define EMMC_CRYPTO_VENDOR2_CQCAP_CRYPTO_SUPPORT_MODIFY(r, x) \
   ((((x) << 28) & 0x10000000ul) | ((r) & 0xeffffffful))
/* Field member: emmc::crypto_vendor2::CQCAP.CQCCAP_RSVD2                  */
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD2_MSB 27u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD2_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD2_WIDTH 12u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD2_RESET 0x000u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD2_FIELD_MASK 0x0fff0000ul
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD2_GET(x) \
   (((x) & 0x0fff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD2_SET(x) \
   (((x) << 16) & 0x0fff0000ul)
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD2_MODIFY(r, x) \
   ((((x) << 16) & 0x0fff0000ul) | ((r) & 0xf000fffful))
/* Field member: emmc::crypto_vendor2::CQCAP.ITCFMUL                       */
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFMUL_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFMUL_LSB 12u
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFMUL_WIDTH 4u
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFMUL_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFMUL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFMUL_RESET 0x3u
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFMUL_FIELD_MASK 0x0000f000ul
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFMUL_GET(x) (((x) & 0x0000f000ul) >> 12)
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFMUL_SET(x) \
   (((x) << 12) & 0x0000f000ul)
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFMUL_MODIFY(r, x) \
   ((((x) << 12) & 0x0000f000ul) | ((r) & 0xffff0ffful))
/* Field member: emmc::crypto_vendor2::CQCAP.CQCCAP_RSVD1                  */
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD1_MSB 11u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD1_LSB 10u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD1_WIDTH 2u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD1_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD1_FIELD_MASK 0x00000c00ul
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD1_GET(x) \
   (((x) & 0x00000c00ul) >> 10)
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD1_SET(x) \
   (((x) << 10) & 0x00000c00ul)
#define EMMC_CRYPTO_VENDOR2_CQCAP_CQCCAP_RSVD1_MODIFY(r, x) \
   ((((x) << 10) & 0x00000c00ul) | ((r) & 0xfffff3fful))
/* Field member: emmc::crypto_vendor2::CQCAP.ITCFVAL                       */
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFVAL_MSB 9u
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFVAL_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFVAL_WIDTH 10u
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFVAL_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFVAL_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFVAL_RESET 0x0c8u
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFVAL_FIELD_MASK 0x000003fful
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFVAL_GET(x) ((x) & 0x000003fful)
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFVAL_SET(x) ((x) & 0x000003fful)
#define EMMC_CRYPTO_VENDOR2_CQCAP_ITCFVAL_MODIFY(r, x) \
   (((x) & 0x000003fful) | ((r) & 0xfffffc00ul))

/* Register type: emmc::crypto_vendor2::CQCFG                              */
/* Register template: emmc::crypto_vendor2::CQCFG                          */
/* Field member: emmc::crypto_vendor2::CQCFG.CQCCFG_RSVD3                  */
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD3_LSB 13u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD3_WIDTH 19u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD3_RESET 0x00000ul
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD3_FIELD_MASK 0xffffe000ul
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD3_GET(x) \
   (((x) & 0xffffe000ul) >> 13)
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD3_SET(x) \
   (((x) << 13) & 0xffffe000ul)
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD3_MODIFY(r, x) \
   ((((x) << 13) & 0xffffe000ul) | ((r) & 0x00001ffful))
/* Field member: emmc::crypto_vendor2::CQCFG.CQCCFG_RSVD2                  */
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD2_MSB 11u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD2_LSB 9u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD2_WIDTH 3u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD2_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD2_FIELD_MASK 0x00000e00ul
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD2_GET(x) \
   (((x) & 0x00000e00ul) >> 9)
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD2_SET(x) \
   (((x) << 9) & 0x00000e00ul)
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD2_MODIFY(r, x) \
   ((((x) << 9) & 0x00000e00ul) | ((r) & 0xfffff1fful))
/* Field member: emmc::crypto_vendor2::CQCFG.CQCCFG_RSVD1                  */
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD1_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD1_LSB 2u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD1_WIDTH 6u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD1_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD1_FIELD_MASK 0x000000fcul
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD1_GET(x) \
   (((x) & 0x000000fcul) >> 2)
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD1_SET(x) \
   (((x) << 2) & 0x000000fcul)
#define EMMC_CRYPTO_VENDOR2_CQCFG_CQCCFG_RSVD1_MODIFY(r, x) \
   ((((x) << 2) & 0x000000fcul) | ((r) & 0xffffff03ul))
/* Field member: emmc::crypto_vendor2::CQCFG.CR_GENERAL_EN                 */
#define EMMC_CRYPTO_VENDOR2_CQCFG_CR_GENERAL_EN_MSB 1u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CR_GENERAL_EN_LSB 1u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CR_GENERAL_EN_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CR_GENERAL_EN_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CR_GENERAL_EN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CR_GENERAL_EN_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CQCFG_CR_GENERAL_EN_FIELD_MASK 0x00000002ul
#define EMMC_CRYPTO_VENDOR2_CQCFG_CR_GENERAL_EN_GET(x) \
   (((x) & 0x00000002ul) >> 1)
#define EMMC_CRYPTO_VENDOR2_CQCFG_CR_GENERAL_EN_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define EMMC_CRYPTO_VENDOR2_CQCFG_CR_GENERAL_EN_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))

/* Register type: emmc::crypto_vendor2::CRNQP                              */
/* Register template: emmc::crypto_vendor2::CRNQP                          */
/* Field member: emmc::crypto_vendor2::CRNQP.CRNQP_RSDV1                   */
#define EMMC_CRYPTO_VENDOR2_CRNQP_CRNQP_RSDV1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRNQP_CRNQP_RSDV1_LSB 9u
#define EMMC_CRYPTO_VENDOR2_CRNQP_CRNQP_RSDV1_WIDTH 23u
#define EMMC_CRYPTO_VENDOR2_CRNQP_CRNQP_RSDV1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQP_CRNQP_RSDV1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRNQP_CRNQP_RSDV1_RESET 0x000000ul
#define EMMC_CRYPTO_VENDOR2_CRNQP_CRNQP_RSDV1_FIELD_MASK 0xfffffe00ul
#define EMMC_CRYPTO_VENDOR2_CRNQP_CRNQP_RSDV1_GET(x) \
   (((x) & 0xfffffe00ul) >> 9)
#define EMMC_CRYPTO_VENDOR2_CRNQP_CRNQP_RSDV1_SET(x) \
   (((x) << 9) & 0xfffffe00ul)
#define EMMC_CRYPTO_VENDOR2_CRNQP_CRNQP_RSDV1_MODIFY(r, x) \
   ((((x) << 9) & 0xfffffe00ul) | ((r) & 0x000001fful))
/* Field member: emmc::crypto_vendor2::CRNQP.CE                            */
#define EMMC_CRYPTO_VENDOR2_CRNQP_CE_MSB 8u
#define EMMC_CRYPTO_VENDOR2_CRNQP_CE_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRNQP_CE_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRNQP_CE_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQP_CE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQP_CE_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRNQP_CE_FIELD_MASK 0x00000100ul
#define EMMC_CRYPTO_VENDOR2_CRNQP_CE_GET(x) (((x) & 0x00000100ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRNQP_CE_SET(x) (((x) << 8) & 0x00000100ul)
#define EMMC_CRYPTO_VENDOR2_CRNQP_CE_MODIFY(r, x) \
   ((((x) << 8) & 0x00000100ul) | ((r) & 0xfffffefful))
/* Field member: emmc::crypto_vendor2::CRNQP.CCI                           */
#define EMMC_CRYPTO_VENDOR2_CRNQP_CCI_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRNQP_CCI_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRNQP_CCI_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRNQP_CCI_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQP_CCI_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQP_CCI_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRNQP_CCI_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRNQP_CCI_GET(x) ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRNQP_CCI_SET(x) ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRNQP_CCI_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRNQDUN                            */
/* Register template: emmc::crypto_vendor2::CRNQDUN                        */
/* Field member: emmc::crypto_vendor2::CRNQDUN.DUN                         */
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_DUN_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_DUN_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_DUN_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_DUN_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_DUN_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_DUN_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_DUN_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_DUN_GET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_DUN_SET(x) ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRNQDUN_DUN_MODIFY(r, x) ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRNQIS                             */
/* Register template: emmc::crypto_vendor2::CRNQIS                         */
/* Field member: emmc::crypto_vendor2::CRNQIS.CRNQIS_RSVD1                 */
#define EMMC_CRYPTO_VENDOR2_CRNQIS_CRNQIS_RSVD1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_CRNQIS_RSVD1_LSB 2u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_CRNQIS_RSVD1_WIDTH 30u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_CRNQIS_RSVD1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_CRNQIS_RSVD1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_CRNQIS_RSVD1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRNQIS_CRNQIS_RSVD1_FIELD_MASK 0xfffffffcul
#define EMMC_CRYPTO_VENDOR2_CRNQIS_CRNQIS_RSVD1_GET(x) \
   (((x) & 0xfffffffcul) >> 2)
#define EMMC_CRYPTO_VENDOR2_CRNQIS_CRNQIS_RSVD1_SET(x) \
   (((x) << 2) & 0xfffffffcul)
#define EMMC_CRYPTO_VENDOR2_CRNQIS_CRNQIS_RSVD1_MODIFY(r, x) \
   ((((x) << 2) & 0xfffffffcul) | ((r) & 0x00000003ul))
/* Field member: emmc::crypto_vendor2::CRNQIS.ICCE                         */
#define EMMC_CRYPTO_VENDOR2_CRNQIS_ICCE_MSB 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_ICCE_LSB 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_ICCE_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_ICCE_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_ICCE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_ICCE_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_ICCE_FIELD_MASK 0x00000002ul
#define EMMC_CRYPTO_VENDOR2_CRNQIS_ICCE_GET(x) (((x) & 0x00000002ul) >> 1)
#define EMMC_CRYPTO_VENDOR2_CRNQIS_ICCE_SET(x) (((x) << 1) & 0x00000002ul)
#define EMMC_CRYPTO_VENDOR2_CRNQIS_ICCE_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: emmc::crypto_vendor2::CRNQIS.GCE                          */
#define EMMC_CRYPTO_VENDOR2_CRNQIS_GCE_MSB 0u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_GCE_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_GCE_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_GCE_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_GCE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_GCE_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRNQIS_GCE_FIELD_MASK 0x00000001ul
#define EMMC_CRYPTO_VENDOR2_CRNQIS_GCE_GET(x) ((x) & 0x00000001ul)
#define EMMC_CRYPTO_VENDOR2_CRNQIS_GCE_SET(x) ((x) & 0x00000001ul)
#define EMMC_CRYPTO_VENDOR2_CRNQIS_GCE_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: emmc::crypto_vendor2::CRNQIE                             */
/* Register template: emmc::crypto_vendor2::CRNQIE                         */
/* Field member: emmc::crypto_vendor2::CRNQIE.CRNQIE_RSVD1                 */
#define EMMC_CRYPTO_VENDOR2_CRNQIE_CRNQIE_RSVD1_MSB 21u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_CRNQIE_RSVD1_LSB 2u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_CRNQIE_RSVD1_WIDTH 20u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_CRNQIE_RSVD1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_CRNQIE_RSVD1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_CRNQIE_RSVD1_RESET 0x00000ul
#define EMMC_CRYPTO_VENDOR2_CRNQIE_CRNQIE_RSVD1_FIELD_MASK 0x003ffffcul
#define EMMC_CRYPTO_VENDOR2_CRNQIE_CRNQIE_RSVD1_GET(x) \
   (((x) & 0x003ffffcul) >> 2)
#define EMMC_CRYPTO_VENDOR2_CRNQIE_CRNQIE_RSVD1_SET(x) \
   (((x) << 2) & 0x003ffffcul)
#define EMMC_CRYPTO_VENDOR2_CRNQIE_CRNQIE_RSVD1_MODIFY(r, x) \
   ((((x) << 2) & 0x003ffffcul) | ((r) & 0xffc00003ul))
/* Field member: emmc::crypto_vendor2::CRNQIE.ICCE_IE                      */
#define EMMC_CRYPTO_VENDOR2_CRNQIE_ICCE_IE_MSB 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_ICCE_IE_LSB 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_ICCE_IE_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_ICCE_IE_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_ICCE_IE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_ICCE_IE_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_ICCE_IE_FIELD_MASK 0x00000002ul
#define EMMC_CRYPTO_VENDOR2_CRNQIE_ICCE_IE_GET(x) (((x) & 0x00000002ul) >> 1)
#define EMMC_CRYPTO_VENDOR2_CRNQIE_ICCE_IE_SET(x) \
   (((x) << 1) & 0x00000002ul)
#define EMMC_CRYPTO_VENDOR2_CRNQIE_ICCE_IE_MODIFY(r, x) \
   ((((x) << 1) & 0x00000002ul) | ((r) & 0xfffffffdul))
/* Field member: emmc::crypto_vendor2::CRNQIE.GCE_IE                       */
#define EMMC_CRYPTO_VENDOR2_CRNQIE_GCE_IE_MSB 0u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_GCE_IE_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_GCE_IE_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_GCE_IE_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_GCE_IE_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_GCE_IE_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRNQIE_GCE_IE_FIELD_MASK 0x00000001ul
#define EMMC_CRYPTO_VENDOR2_CRNQIE_GCE_IE_GET(x) ((x) & 0x00000001ul)
#define EMMC_CRYPTO_VENDOR2_CRNQIE_GCE_IE_SET(x) ((x) & 0x00000001ul)
#define EMMC_CRYPTO_VENDOR2_CRNQIE_GCE_IE_MODIFY(r, x) \
   (((x) & 0x00000001ul) | ((r) & 0xfffffffeul))

/* Register type: emmc::crypto_vendor2::CRCAP                              */
/* Register template: emmc::crypto_vendor2::CRCAP                          */
/* Field member: emmc::crypto_vendor2::CRCAP.CFGPTR                        */
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGPTR_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGPTR_LSB 24u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGPTR_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGPTR_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGPTR_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGPTR_RESET 0x08u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGPTR_FIELD_MASK 0xff000000ul
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGPTR_GET(x) (((x) & 0xff000000ul) >> 24)
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGPTR_SET(x) \
   (((x) << 24) & 0xff000000ul)
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGPTR_MODIFY(r, x) \
   ((((x) << 24) & 0xff000000ul) | ((r) & 0x00fffffful))
/* Field member: emmc::crypto_vendor2::CRCAP.CRCAP_RSVD1                   */
#define EMMC_CRYPTO_VENDOR2_CRCAP_CRCAP_RSVD1_MSB 23u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CRCAP_RSVD1_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CRCAP_RSVD1_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CRCAP_RSVD1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CRCAP_RSVD1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CRCAP_RSVD1_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CRCAP_RSVD1_FIELD_MASK 0x00ff0000ul
#define EMMC_CRYPTO_VENDOR2_CRCAP_CRCAP_RSVD1_GET(x) \
   (((x) & 0x00ff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRCAP_CRCAP_RSVD1_SET(x) \
   (((x) << 16) & 0x00ff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRCAP_CRCAP_RSVD1_MODIFY(r, x) \
   ((((x) << 16) & 0x00ff0000ul) | ((r) & 0xff00fffful))
/* Field member: emmc::crypto_vendor2::CRCAP.CFGC                          */
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGC_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGC_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGC_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGC_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGC_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGC_RESET 0x0fu
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGC_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGC_GET(x) (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGC_SET(x) (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRCAP_CFGC_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRCAP.CC                            */
#define EMMC_CRYPTO_VENDOR2_CRCAP_CC_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CC_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CC_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CC_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CC_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CC_RESET 0x04u
#define EMMC_CRYPTO_VENDOR2_CRCAP_CC_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRCAP_CC_GET(x) ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRCAP_CC_SET(x) ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRCAP_CC_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCAP_0                        */
/* Register template: emmc::crypto_vendor2::CRYPTOCAP_0                    */
/* Field member: emmc::crypto_vendor2::CRYPTOCAP_0.CRYPTPCAP_0_RSVD1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_CRYPTPCAP_0_RSVD1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_CRYPTPCAP_0_RSVD1_LSB 24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_CRYPTPCAP_0_RSVD1_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_CRYPTPCAP_0_RSVD1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_CRYPTPCAP_0_RSVD1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_CRYPTPCAP_0_RSVD1_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_CRYPTPCAP_0_RSVD1_FIELD_MASK 0xff000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_CRYPTPCAP_0_RSVD1_GET(x) \
   (((x) & 0xff000000ul) >> 24)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_CRYPTPCAP_0_RSVD1_SET(x) \
   (((x) << 24) & 0xff000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_CRYPTPCAP_0_RSVD1_MODIFY(r, x) \
   ((((x) << 24) & 0xff000000ul) | ((r) & 0x00fffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCAP_0.KS                      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_KS_MSB 23u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_KS_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_KS_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_KS_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_KS_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_KS_RESET 0x01u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_KS_FIELD_MASK 0x00ff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_KS_GET(x) \
   (((x) & 0x00ff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_KS_SET(x) \
   (((x) << 16) & 0x00ff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_KS_MODIFY(r, x) \
   ((((x) << 16) & 0x00ff0000ul) | ((r) & 0xff00fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCAP_0.SDUSB                   */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_SDUSB_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_SDUSB_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_SDUSB_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_SDUSB_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_SDUSB_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_SDUSB_RESET 0xffu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_SDUSB_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_SDUSB_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_SDUSB_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_SDUSB_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCAP_0.ALGID                   */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_ALGID_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_ALGID_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_ALGID_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_ALGID_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_ALGID_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_ALGID_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_ALGID_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_ALGID_GET(x) ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_ALGID_SET(x) ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_0_ALGID_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCAP_1                        */
/* Register template: emmc::crypto_vendor2::CRYPTOCAP_1                    */
/* Field member: emmc::crypto_vendor2::CRYPTOCAP_1.CRYPTPCAP_1_RSVD1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_CRYPTPCAP_1_RSVD1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_CRYPTPCAP_1_RSVD1_LSB 24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_CRYPTPCAP_1_RSVD1_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_CRYPTPCAP_1_RSVD1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_CRYPTPCAP_1_RSVD1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_CRYPTPCAP_1_RSVD1_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_CRYPTPCAP_1_RSVD1_FIELD_MASK 0xff000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_CRYPTPCAP_1_RSVD1_GET(x) \
   (((x) & 0xff000000ul) >> 24)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_CRYPTPCAP_1_RSVD1_SET(x) \
   (((x) << 24) & 0xff000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_CRYPTPCAP_1_RSVD1_MODIFY(r, x) \
   ((((x) << 24) & 0xff000000ul) | ((r) & 0x00fffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCAP_1.KS                      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_KS_MSB 23u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_KS_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_KS_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_KS_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_KS_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_KS_RESET 0x03u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_KS_FIELD_MASK 0x00ff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_KS_GET(x) \
   (((x) & 0x00ff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_KS_SET(x) \
   (((x) << 16) & 0x00ff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_KS_MODIFY(r, x) \
   ((((x) << 16) & 0x00ff0000ul) | ((r) & 0xff00fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCAP_1.SDUSB                   */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_SDUSB_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_SDUSB_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_SDUSB_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_SDUSB_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_SDUSB_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_SDUSB_RESET 0xffu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_SDUSB_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_SDUSB_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_SDUSB_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_SDUSB_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCAP_1.ALGID                   */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_ALGID_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_ALGID_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_ALGID_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_ALGID_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_ALGID_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_ALGID_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_ALGID_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_ALGID_GET(x) ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_ALGID_SET(x) ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_1_ALGID_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCAP_2                        */
/* Register template: emmc::crypto_vendor2::CRYPTOCAP_2                    */
/* Field member: emmc::crypto_vendor2::CRYPTOCAP_2.CRYPTPCAP_2_RSVD1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_CRYPTPCAP_2_RSVD1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_CRYPTPCAP_2_RSVD1_LSB 24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_CRYPTPCAP_2_RSVD1_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_CRYPTPCAP_2_RSVD1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_CRYPTPCAP_2_RSVD1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_CRYPTPCAP_2_RSVD1_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_CRYPTPCAP_2_RSVD1_FIELD_MASK 0xff000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_CRYPTPCAP_2_RSVD1_GET(x) \
   (((x) & 0xff000000ul) >> 24)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_CRYPTPCAP_2_RSVD1_SET(x) \
   (((x) << 24) & 0xff000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_CRYPTPCAP_2_RSVD1_MODIFY(r, x) \
   ((((x) << 24) & 0xff000000ul) | ((r) & 0x00fffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCAP_2.KS                      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_KS_MSB 23u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_KS_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_KS_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_KS_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_KS_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_KS_RESET 0x01u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_KS_FIELD_MASK 0x00ff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_KS_GET(x) \
   (((x) & 0x00ff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_KS_SET(x) \
   (((x) << 16) & 0x00ff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_KS_MODIFY(r, x) \
   ((((x) << 16) & 0x00ff0000ul) | ((r) & 0xff00fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCAP_2.SDUSB                   */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_SDUSB_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_SDUSB_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_SDUSB_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_SDUSB_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_SDUSB_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_SDUSB_RESET 0xffu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_SDUSB_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_SDUSB_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_SDUSB_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_SDUSB_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCAP_2.ALGID                   */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_ALGID_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_ALGID_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_ALGID_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_ALGID_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_ALGID_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_ALGID_RESET 0x01u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_ALGID_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_ALGID_GET(x) ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_ALGID_SET(x) ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_2_ALGID_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCAP_3                        */
/* Register template: emmc::crypto_vendor2::CRYPTOCAP_3                    */
/* Field member: emmc::crypto_vendor2::CRYPTOCAP_3.CRYPTPCAP_3_RSVD1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_CRYPTPCAP_3_RSVD1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_CRYPTPCAP_3_RSVD1_LSB 24u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_CRYPTPCAP_3_RSVD1_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_CRYPTPCAP_3_RSVD1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_CRYPTPCAP_3_RSVD1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_CRYPTPCAP_3_RSVD1_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_CRYPTPCAP_3_RSVD1_FIELD_MASK 0xff000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_CRYPTPCAP_3_RSVD1_GET(x) \
   (((x) & 0xff000000ul) >> 24)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_CRYPTPCAP_3_RSVD1_SET(x) \
   (((x) << 24) & 0xff000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_CRYPTPCAP_3_RSVD1_MODIFY(r, x) \
   ((((x) << 24) & 0xff000000ul) | ((r) & 0x00fffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCAP_3.KS                      */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_KS_MSB 23u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_KS_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_KS_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_KS_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_KS_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_KS_RESET 0x03u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_KS_FIELD_MASK 0x00ff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_KS_GET(x) \
   (((x) & 0x00ff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_KS_SET(x) \
   (((x) << 16) & 0x00ff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_KS_MODIFY(r, x) \
   ((((x) << 16) & 0x00ff0000ul) | ((r) & 0xff00fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCAP_3.SDUSB                   */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_SDUSB_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_SDUSB_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_SDUSB_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_SDUSB_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_SDUSB_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_SDUSB_RESET 0xffu
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_SDUSB_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_SDUSB_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_SDUSB_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_SDUSB_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCAP_3.ALGID                   */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_ALGID_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_ALGID_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_ALGID_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_ALGID_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_ALGID_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_ALGID_RESET 0x01u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_ALGID_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_ALGID_GET(x) ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_ALGID_SET(x) ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCAP_3_ALGID_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_0                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_0                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_0.CRYPTOKEY_0_0         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_CRYPTOKEY_0_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_CRYPTOKEY_0_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_CRYPTOKEY_0_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_CRYPTOKEY_0_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_CRYPTOKEY_0_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_CRYPTOKEY_0_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_CRYPTOKEY_0_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_CRYPTOKEY_0_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_CRYPTOKEY_0_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_0_CRYPTOKEY_0_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_1                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_1                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_1.CRYPTOKEY_0_1         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_CRYPTOKEY_0_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_CRYPTOKEY_0_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_CRYPTOKEY_0_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_CRYPTOKEY_0_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_CRYPTOKEY_0_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_CRYPTOKEY_0_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_CRYPTOKEY_0_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_CRYPTOKEY_0_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_CRYPTOKEY_0_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_1_CRYPTOKEY_0_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_2                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_2                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_2.CRYPTOKEY_0_2         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_CRYPTOKEY_0_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_CRYPTOKEY_0_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_CRYPTOKEY_0_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_CRYPTOKEY_0_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_CRYPTOKEY_0_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_CRYPTOKEY_0_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_CRYPTOKEY_0_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_CRYPTOKEY_0_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_CRYPTOKEY_0_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_2_CRYPTOKEY_0_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_3                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_3                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_3.CRYPTOKEY_0_3         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_CRYPTOKEY_0_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_CRYPTOKEY_0_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_CRYPTOKEY_0_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_CRYPTOKEY_0_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_CRYPTOKEY_0_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_CRYPTOKEY_0_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_CRYPTOKEY_0_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_CRYPTOKEY_0_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_CRYPTOKEY_0_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_3_CRYPTOKEY_0_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_4                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_4                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_4.CRYPTOKEY_0_4         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_CRYPTOKEY_0_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_CRYPTOKEY_0_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_CRYPTOKEY_0_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_CRYPTOKEY_0_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_CRYPTOKEY_0_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_CRYPTOKEY_0_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_CRYPTOKEY_0_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_CRYPTOKEY_0_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_CRYPTOKEY_0_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_4_CRYPTOKEY_0_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_5                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_5                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_5.CRYPTOKEY_0_5         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_CRYPTOKEY_0_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_CRYPTOKEY_0_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_CRYPTOKEY_0_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_CRYPTOKEY_0_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_CRYPTOKEY_0_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_CRYPTOKEY_0_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_CRYPTOKEY_0_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_CRYPTOKEY_0_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_CRYPTOKEY_0_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_5_CRYPTOKEY_0_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_6                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_6                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_6.CRYPTOKEY_0_6         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_CRYPTOKEY_0_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_CRYPTOKEY_0_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_CRYPTOKEY_0_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_CRYPTOKEY_0_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_CRYPTOKEY_0_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_CRYPTOKEY_0_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_CRYPTOKEY_0_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_CRYPTOKEY_0_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_CRYPTOKEY_0_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_6_CRYPTOKEY_0_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_7                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_7                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_7.CRYPTOKEY_0_7         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_CRYPTOKEY_0_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_CRYPTOKEY_0_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_CRYPTOKEY_0_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_CRYPTOKEY_0_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_CRYPTOKEY_0_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_CRYPTOKEY_0_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_CRYPTOKEY_0_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_CRYPTOKEY_0_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_CRYPTOKEY_0_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_7_CRYPTOKEY_0_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_8                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_8                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_8.CRYPTOKEY_0_8         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_CRYPTOKEY_0_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_CRYPTOKEY_0_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_CRYPTOKEY_0_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_CRYPTOKEY_0_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_CRYPTOKEY_0_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_CRYPTOKEY_0_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_CRYPTOKEY_0_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_CRYPTOKEY_0_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_CRYPTOKEY_0_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_8_CRYPTOKEY_0_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_9                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_9                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_9.CRYPTOKEY_0_9         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_CRYPTOKEY_0_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_CRYPTOKEY_0_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_CRYPTOKEY_0_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_CRYPTOKEY_0_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_CRYPTOKEY_0_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_CRYPTOKEY_0_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_CRYPTOKEY_0_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_CRYPTOKEY_0_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_CRYPTOKEY_0_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_9_CRYPTOKEY_0_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_10                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_10                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_10.CRYPTOKEY_0_10       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_CRYPTOKEY_0_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_CRYPTOKEY_0_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_CRYPTOKEY_0_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_CRYPTOKEY_0_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_CRYPTOKEY_0_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_CRYPTOKEY_0_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_CRYPTOKEY_0_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_CRYPTOKEY_0_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_CRYPTOKEY_0_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_10_CRYPTOKEY_0_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_11                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_11                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_11.CRYPTOKEY_0_11       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_CRYPTOKEY_0_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_CRYPTOKEY_0_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_CRYPTOKEY_0_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_CRYPTOKEY_0_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_CRYPTOKEY_0_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_CRYPTOKEY_0_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_CRYPTOKEY_0_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_CRYPTOKEY_0_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_CRYPTOKEY_0_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_11_CRYPTOKEY_0_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_12                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_12                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_12.CRYPTOKEY_0_12       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_CRYPTOKEY_0_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_CRYPTOKEY_0_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_CRYPTOKEY_0_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_CRYPTOKEY_0_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_CRYPTOKEY_0_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_CRYPTOKEY_0_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_CRYPTOKEY_0_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_CRYPTOKEY_0_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_CRYPTOKEY_0_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_12_CRYPTOKEY_0_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_13                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_13                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_13.CRYPTOKEY_0_13       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_CRYPTOKEY_0_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_CRYPTOKEY_0_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_CRYPTOKEY_0_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_CRYPTOKEY_0_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_CRYPTOKEY_0_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_CRYPTOKEY_0_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_CRYPTOKEY_0_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_CRYPTOKEY_0_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_CRYPTOKEY_0_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_13_CRYPTOKEY_0_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_14                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_14                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_14.CRYPTOKEY_0_14       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_CRYPTOKEY_0_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_CRYPTOKEY_0_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_CRYPTOKEY_0_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_CRYPTOKEY_0_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_CRYPTOKEY_0_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_CRYPTOKEY_0_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_CRYPTOKEY_0_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_CRYPTOKEY_0_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_CRYPTOKEY_0_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_14_CRYPTOKEY_0_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_15                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_15                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_15.CRYPTOKEY_0_15       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_CRYPTOKEY_0_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_CRYPTOKEY_0_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_CRYPTOKEY_0_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_CRYPTOKEY_0_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_CRYPTOKEY_0_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_CRYPTOKEY_0_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_CRYPTOKEY_0_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_CRYPTOKEY_0_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_CRYPTOKEY_0_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_15_CRYPTOKEY_0_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_16                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_16                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_16.CFGE_0               */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CFGE_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CFGE_0_LSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CFGE_0_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CFGE_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CFGE_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CFGE_0_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CFGE_0_FIELD_MASK 0x80000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CFGE_0_GET(x) \
   (((x) & 0x80000000ul) >> 31)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CFGE_0_SET(x) \
   (((x) << 31) & 0x80000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CFGE_0_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_16.CRYPTPCFG_RSVD_0     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CRYPTPCFG_RSVD_0_MSB 30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CRYPTPCFG_RSVD_0_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CRYPTPCFG_RSVD_0_WIDTH 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CRYPTPCFG_RSVD_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CRYPTPCFG_RSVD_0_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CRYPTPCFG_RSVD_0_RESET 0x0000u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CRYPTPCFG_RSVD_0_FIELD_MASK 0x7fff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CRYPTPCFG_RSVD_0_GET(x) \
   (((x) & 0x7fff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CRYPTPCFG_RSVD_0_SET(x) \
   (((x) << 16) & 0x7fff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CRYPTPCFG_RSVD_0_MODIFY(r, x) \
   ((((x) << 16) & 0x7fff0000ul) | ((r) & 0x8000fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_16.CAPIDX_0             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CAPIDX_0_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CAPIDX_0_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CAPIDX_0_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CAPIDX_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CAPIDX_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CAPIDX_0_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CAPIDX_0_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CAPIDX_0_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CAPIDX_0_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_CAPIDX_0_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_16.DUSIZE_0             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_DUSIZE_0_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_DUSIZE_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_DUSIZE_0_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_DUSIZE_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_DUSIZE_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_DUSIZE_0_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_DUSIZE_0_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_DUSIZE_0_GET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_DUSIZE_0_SET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_16_DUSIZE_0_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_17                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_17                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_17.RESERVED_0           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_RESERVED_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_RESERVED_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_RESERVED_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_RESERVED_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_RESERVED_0_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_RESERVED_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_RESERVED_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_RESERVED_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_RESERVED_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_17_RESERVED_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_18                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_18                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_18.RESERVED_0           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_RESERVED_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_RESERVED_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_RESERVED_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_RESERVED_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_RESERVED_0_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_RESERVED_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_RESERVED_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_RESERVED_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_RESERVED_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_18_RESERVED_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_19                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_19                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_19.RESERVED_0           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_RESERVED_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_RESERVED_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_RESERVED_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_RESERVED_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_RESERVED_0_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_RESERVED_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_RESERVED_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_RESERVED_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_RESERVED_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_19_RESERVED_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_20                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_20                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_20.RESERVED_0           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_RESERVED_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_RESERVED_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_RESERVED_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_RESERVED_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_RESERVED_0_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_RESERVED_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_RESERVED_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_RESERVED_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_RESERVED_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_20_RESERVED_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_21                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_21                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_21.RESERVED_0           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_RESERVED_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_RESERVED_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_RESERVED_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_RESERVED_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_RESERVED_0_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_RESERVED_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_RESERVED_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_RESERVED_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_RESERVED_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_21_RESERVED_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_22                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_22                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_22.RESERVED_0           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_RESERVED_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_RESERVED_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_RESERVED_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_RESERVED_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_RESERVED_0_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_RESERVED_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_RESERVED_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_RESERVED_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_RESERVED_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_22_RESERVED_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_23                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_23                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_23.RESERVED_0           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_RESERVED_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_RESERVED_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_RESERVED_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_RESERVED_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_RESERVED_0_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_RESERVED_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_RESERVED_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_RESERVED_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_RESERVED_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_23_RESERVED_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_24                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_24                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_24.RESERVED_0           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_RESERVED_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_RESERVED_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_RESERVED_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_RESERVED_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_RESERVED_0_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_RESERVED_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_RESERVED_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_RESERVED_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_RESERVED_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_24_RESERVED_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_25                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_25                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_25.RESERVED_0           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_RESERVED_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_RESERVED_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_RESERVED_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_RESERVED_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_RESERVED_0_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_RESERVED_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_RESERVED_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_RESERVED_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_RESERVED_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_25_RESERVED_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_26                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_26                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_26.RESERVED_0           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_RESERVED_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_RESERVED_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_RESERVED_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_RESERVED_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_RESERVED_0_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_RESERVED_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_RESERVED_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_RESERVED_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_RESERVED_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_26_RESERVED_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_27                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_27                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_27.RESERVED_0           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_RESERVED_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_RESERVED_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_RESERVED_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_RESERVED_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_RESERVED_0_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_RESERVED_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_RESERVED_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_RESERVED_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_RESERVED_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_27_RESERVED_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_28                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_28                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_28.RESERVED_0           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_RESERVED_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_RESERVED_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_RESERVED_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_RESERVED_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_RESERVED_0_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_RESERVED_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_RESERVED_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_RESERVED_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_RESERVED_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_28_RESERVED_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_29                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_29                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_29.RESERVED_0           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_RESERVED_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_RESERVED_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_RESERVED_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_RESERVED_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_RESERVED_0_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_RESERVED_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_RESERVED_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_RESERVED_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_RESERVED_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_29_RESERVED_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_30                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_30                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_30.RESERVED_0           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_RESERVED_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_RESERVED_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_RESERVED_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_RESERVED_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_RESERVED_0_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_RESERVED_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_RESERVED_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_RESERVED_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_RESERVED_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_30_RESERVED_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_0_31                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_0_31                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_0_31.RESERVED_0           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_RESERVED_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_RESERVED_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_RESERVED_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_RESERVED_0_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_RESERVED_0_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_RESERVED_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_RESERVED_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_RESERVED_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_RESERVED_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_0_31_RESERVED_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_0                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_0                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_0.CRYPTOKEY_1_0         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_CRYPTOKEY_1_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_CRYPTOKEY_1_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_CRYPTOKEY_1_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_CRYPTOKEY_1_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_CRYPTOKEY_1_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_CRYPTOKEY_1_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_CRYPTOKEY_1_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_CRYPTOKEY_1_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_CRYPTOKEY_1_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_0_CRYPTOKEY_1_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_1                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_1                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_1.CRYPTOKEY_1_1         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_CRYPTOKEY_1_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_CRYPTOKEY_1_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_CRYPTOKEY_1_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_CRYPTOKEY_1_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_CRYPTOKEY_1_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_CRYPTOKEY_1_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_CRYPTOKEY_1_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_CRYPTOKEY_1_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_CRYPTOKEY_1_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_1_CRYPTOKEY_1_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_2                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_2                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_2.CRYPTOKEY_1_2         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_CRYPTOKEY_1_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_CRYPTOKEY_1_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_CRYPTOKEY_1_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_CRYPTOKEY_1_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_CRYPTOKEY_1_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_CRYPTOKEY_1_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_CRYPTOKEY_1_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_CRYPTOKEY_1_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_CRYPTOKEY_1_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_2_CRYPTOKEY_1_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_3                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_3                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_3.CRYPTOKEY_1_3         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_CRYPTOKEY_1_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_CRYPTOKEY_1_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_CRYPTOKEY_1_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_CRYPTOKEY_1_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_CRYPTOKEY_1_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_CRYPTOKEY_1_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_CRYPTOKEY_1_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_CRYPTOKEY_1_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_CRYPTOKEY_1_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_3_CRYPTOKEY_1_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_4                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_4                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_4.CRYPTOKEY_1_4         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_CRYPTOKEY_1_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_CRYPTOKEY_1_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_CRYPTOKEY_1_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_CRYPTOKEY_1_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_CRYPTOKEY_1_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_CRYPTOKEY_1_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_CRYPTOKEY_1_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_CRYPTOKEY_1_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_CRYPTOKEY_1_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_4_CRYPTOKEY_1_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_5                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_5                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_5.CRYPTOKEY_1_5         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_CRYPTOKEY_1_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_CRYPTOKEY_1_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_CRYPTOKEY_1_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_CRYPTOKEY_1_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_CRYPTOKEY_1_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_CRYPTOKEY_1_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_CRYPTOKEY_1_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_CRYPTOKEY_1_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_CRYPTOKEY_1_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_5_CRYPTOKEY_1_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_6                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_6                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_6.CRYPTOKEY_1_6         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_CRYPTOKEY_1_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_CRYPTOKEY_1_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_CRYPTOKEY_1_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_CRYPTOKEY_1_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_CRYPTOKEY_1_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_CRYPTOKEY_1_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_CRYPTOKEY_1_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_CRYPTOKEY_1_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_CRYPTOKEY_1_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_6_CRYPTOKEY_1_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_7                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_7                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_7.CRYPTOKEY_1_7         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_CRYPTOKEY_1_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_CRYPTOKEY_1_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_CRYPTOKEY_1_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_CRYPTOKEY_1_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_CRYPTOKEY_1_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_CRYPTOKEY_1_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_CRYPTOKEY_1_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_CRYPTOKEY_1_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_CRYPTOKEY_1_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_7_CRYPTOKEY_1_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_8                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_8                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_8.CRYPTOKEY_1_8         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_CRYPTOKEY_1_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_CRYPTOKEY_1_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_CRYPTOKEY_1_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_CRYPTOKEY_1_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_CRYPTOKEY_1_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_CRYPTOKEY_1_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_CRYPTOKEY_1_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_CRYPTOKEY_1_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_CRYPTOKEY_1_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_8_CRYPTOKEY_1_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_9                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_9                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_9.CRYPTOKEY_1_9         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_CRYPTOKEY_1_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_CRYPTOKEY_1_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_CRYPTOKEY_1_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_CRYPTOKEY_1_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_CRYPTOKEY_1_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_CRYPTOKEY_1_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_CRYPTOKEY_1_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_CRYPTOKEY_1_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_CRYPTOKEY_1_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_9_CRYPTOKEY_1_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_10                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_10                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_10.CRYPTOKEY_1_10       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_CRYPTOKEY_1_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_CRYPTOKEY_1_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_CRYPTOKEY_1_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_CRYPTOKEY_1_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_CRYPTOKEY_1_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_CRYPTOKEY_1_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_CRYPTOKEY_1_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_CRYPTOKEY_1_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_CRYPTOKEY_1_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_10_CRYPTOKEY_1_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_11                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_11                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_11.CRYPTOKEY_1_11       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_CRYPTOKEY_1_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_CRYPTOKEY_1_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_CRYPTOKEY_1_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_CRYPTOKEY_1_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_CRYPTOKEY_1_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_CRYPTOKEY_1_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_CRYPTOKEY_1_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_CRYPTOKEY_1_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_CRYPTOKEY_1_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_11_CRYPTOKEY_1_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_12                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_12                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_12.CRYPTOKEY_1_12       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_CRYPTOKEY_1_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_CRYPTOKEY_1_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_CRYPTOKEY_1_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_CRYPTOKEY_1_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_CRYPTOKEY_1_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_CRYPTOKEY_1_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_CRYPTOKEY_1_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_CRYPTOKEY_1_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_CRYPTOKEY_1_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_12_CRYPTOKEY_1_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_13                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_13                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_13.CRYPTOKEY_1_13       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_CRYPTOKEY_1_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_CRYPTOKEY_1_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_CRYPTOKEY_1_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_CRYPTOKEY_1_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_CRYPTOKEY_1_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_CRYPTOKEY_1_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_CRYPTOKEY_1_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_CRYPTOKEY_1_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_CRYPTOKEY_1_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_13_CRYPTOKEY_1_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_14                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_14                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_14.CRYPTOKEY_1_14       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_CRYPTOKEY_1_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_CRYPTOKEY_1_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_CRYPTOKEY_1_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_CRYPTOKEY_1_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_CRYPTOKEY_1_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_CRYPTOKEY_1_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_CRYPTOKEY_1_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_CRYPTOKEY_1_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_CRYPTOKEY_1_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_14_CRYPTOKEY_1_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_15                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_15                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_15.CRYPTOKEY_1_15       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_CRYPTOKEY_1_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_CRYPTOKEY_1_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_CRYPTOKEY_1_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_CRYPTOKEY_1_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_CRYPTOKEY_1_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_CRYPTOKEY_1_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_CRYPTOKEY_1_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_CRYPTOKEY_1_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_CRYPTOKEY_1_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_15_CRYPTOKEY_1_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_16                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_16                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_16.CFGE_1               */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CFGE_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CFGE_1_LSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CFGE_1_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CFGE_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CFGE_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CFGE_1_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CFGE_1_FIELD_MASK 0x80000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CFGE_1_GET(x) \
   (((x) & 0x80000000ul) >> 31)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CFGE_1_SET(x) \
   (((x) << 31) & 0x80000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CFGE_1_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_16.CRYPTPCFG_RSVD_1     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CRYPTPCFG_RSVD_1_MSB 30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CRYPTPCFG_RSVD_1_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CRYPTPCFG_RSVD_1_WIDTH 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CRYPTPCFG_RSVD_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CRYPTPCFG_RSVD_1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CRYPTPCFG_RSVD_1_RESET 0x0000u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CRYPTPCFG_RSVD_1_FIELD_MASK 0x7fff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CRYPTPCFG_RSVD_1_GET(x) \
   (((x) & 0x7fff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CRYPTPCFG_RSVD_1_SET(x) \
   (((x) << 16) & 0x7fff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CRYPTPCFG_RSVD_1_MODIFY(r, x) \
   ((((x) << 16) & 0x7fff0000ul) | ((r) & 0x8000fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_16.CAPIDX_1             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CAPIDX_1_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CAPIDX_1_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CAPIDX_1_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CAPIDX_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CAPIDX_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CAPIDX_1_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CAPIDX_1_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CAPIDX_1_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CAPIDX_1_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_CAPIDX_1_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_16.DUSIZE_1             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_DUSIZE_1_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_DUSIZE_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_DUSIZE_1_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_DUSIZE_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_DUSIZE_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_DUSIZE_1_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_DUSIZE_1_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_DUSIZE_1_GET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_DUSIZE_1_SET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_16_DUSIZE_1_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_17                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_17                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_17.RESERVED_1           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_RESERVED_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_RESERVED_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_RESERVED_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_RESERVED_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_RESERVED_1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_RESERVED_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_RESERVED_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_RESERVED_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_RESERVED_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_17_RESERVED_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_18                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_18                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_18.RESERVED_1           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_RESERVED_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_RESERVED_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_RESERVED_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_RESERVED_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_RESERVED_1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_RESERVED_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_RESERVED_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_RESERVED_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_RESERVED_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_18_RESERVED_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_19                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_19                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_19.RESERVED_1           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_RESERVED_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_RESERVED_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_RESERVED_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_RESERVED_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_RESERVED_1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_RESERVED_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_RESERVED_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_RESERVED_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_RESERVED_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_19_RESERVED_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_20                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_20                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_20.RESERVED_1           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_RESERVED_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_RESERVED_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_RESERVED_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_RESERVED_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_RESERVED_1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_RESERVED_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_RESERVED_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_RESERVED_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_RESERVED_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_20_RESERVED_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_21                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_21                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_21.RESERVED_1           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_RESERVED_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_RESERVED_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_RESERVED_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_RESERVED_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_RESERVED_1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_RESERVED_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_RESERVED_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_RESERVED_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_RESERVED_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_21_RESERVED_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_22                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_22                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_22.RESERVED_1           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_RESERVED_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_RESERVED_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_RESERVED_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_RESERVED_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_RESERVED_1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_RESERVED_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_RESERVED_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_RESERVED_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_RESERVED_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_22_RESERVED_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_23                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_23                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_23.RESERVED_1           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_RESERVED_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_RESERVED_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_RESERVED_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_RESERVED_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_RESERVED_1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_RESERVED_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_RESERVED_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_RESERVED_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_RESERVED_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_23_RESERVED_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_24                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_24                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_24.RESERVED_1           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_RESERVED_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_RESERVED_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_RESERVED_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_RESERVED_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_RESERVED_1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_RESERVED_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_RESERVED_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_RESERVED_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_RESERVED_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_24_RESERVED_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_25                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_25                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_25.RESERVED_1           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_RESERVED_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_RESERVED_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_RESERVED_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_RESERVED_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_RESERVED_1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_RESERVED_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_RESERVED_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_RESERVED_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_RESERVED_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_25_RESERVED_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_26                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_26                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_26.RESERVED_1           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_RESERVED_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_RESERVED_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_RESERVED_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_RESERVED_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_RESERVED_1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_RESERVED_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_RESERVED_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_RESERVED_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_RESERVED_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_26_RESERVED_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_27                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_27                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_27.RESERVED_1           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_RESERVED_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_RESERVED_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_RESERVED_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_RESERVED_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_RESERVED_1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_RESERVED_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_RESERVED_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_RESERVED_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_RESERVED_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_27_RESERVED_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_28                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_28                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_28.RESERVED_1           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_RESERVED_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_RESERVED_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_RESERVED_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_RESERVED_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_RESERVED_1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_RESERVED_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_RESERVED_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_RESERVED_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_RESERVED_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_28_RESERVED_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_29                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_29                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_29.RESERVED_1           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_RESERVED_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_RESERVED_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_RESERVED_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_RESERVED_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_RESERVED_1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_RESERVED_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_RESERVED_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_RESERVED_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_RESERVED_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_29_RESERVED_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_30                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_30                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_30.RESERVED_1           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_RESERVED_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_RESERVED_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_RESERVED_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_RESERVED_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_RESERVED_1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_RESERVED_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_RESERVED_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_RESERVED_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_RESERVED_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_30_RESERVED_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_1_31                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_1_31                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_1_31.RESERVED_1           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_RESERVED_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_RESERVED_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_RESERVED_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_RESERVED_1_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_RESERVED_1_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_RESERVED_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_RESERVED_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_RESERVED_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_RESERVED_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_1_31_RESERVED_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_0                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_0                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_0.CRYPTOKEY_2_0         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_CRYPTOKEY_2_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_CRYPTOKEY_2_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_CRYPTOKEY_2_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_CRYPTOKEY_2_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_CRYPTOKEY_2_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_CRYPTOKEY_2_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_CRYPTOKEY_2_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_CRYPTOKEY_2_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_CRYPTOKEY_2_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_0_CRYPTOKEY_2_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_1                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_1                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_1.CRYPTOKEY_2_1         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_CRYPTOKEY_2_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_CRYPTOKEY_2_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_CRYPTOKEY_2_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_CRYPTOKEY_2_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_CRYPTOKEY_2_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_CRYPTOKEY_2_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_CRYPTOKEY_2_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_CRYPTOKEY_2_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_CRYPTOKEY_2_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_1_CRYPTOKEY_2_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_2                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_2                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_2.CRYPTOKEY_2_2         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_CRYPTOKEY_2_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_CRYPTOKEY_2_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_CRYPTOKEY_2_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_CRYPTOKEY_2_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_CRYPTOKEY_2_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_CRYPTOKEY_2_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_CRYPTOKEY_2_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_CRYPTOKEY_2_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_CRYPTOKEY_2_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_2_CRYPTOKEY_2_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_3                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_3                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_3.CRYPTOKEY_2_3         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_CRYPTOKEY_2_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_CRYPTOKEY_2_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_CRYPTOKEY_2_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_CRYPTOKEY_2_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_CRYPTOKEY_2_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_CRYPTOKEY_2_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_CRYPTOKEY_2_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_CRYPTOKEY_2_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_CRYPTOKEY_2_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_3_CRYPTOKEY_2_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_4                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_4                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_4.CRYPTOKEY_2_4         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_CRYPTOKEY_2_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_CRYPTOKEY_2_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_CRYPTOKEY_2_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_CRYPTOKEY_2_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_CRYPTOKEY_2_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_CRYPTOKEY_2_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_CRYPTOKEY_2_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_CRYPTOKEY_2_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_CRYPTOKEY_2_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_4_CRYPTOKEY_2_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_5                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_5                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_5.CRYPTOKEY_2_5         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_CRYPTOKEY_2_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_CRYPTOKEY_2_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_CRYPTOKEY_2_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_CRYPTOKEY_2_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_CRYPTOKEY_2_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_CRYPTOKEY_2_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_CRYPTOKEY_2_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_CRYPTOKEY_2_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_CRYPTOKEY_2_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_5_CRYPTOKEY_2_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_6                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_6                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_6.CRYPTOKEY_2_6         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_CRYPTOKEY_2_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_CRYPTOKEY_2_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_CRYPTOKEY_2_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_CRYPTOKEY_2_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_CRYPTOKEY_2_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_CRYPTOKEY_2_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_CRYPTOKEY_2_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_CRYPTOKEY_2_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_CRYPTOKEY_2_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_6_CRYPTOKEY_2_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_7                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_7                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_7.CRYPTOKEY_2_7         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_CRYPTOKEY_2_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_CRYPTOKEY_2_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_CRYPTOKEY_2_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_CRYPTOKEY_2_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_CRYPTOKEY_2_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_CRYPTOKEY_2_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_CRYPTOKEY_2_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_CRYPTOKEY_2_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_CRYPTOKEY_2_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_7_CRYPTOKEY_2_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_8                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_8                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_8.CRYPTOKEY_2_8         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_CRYPTOKEY_2_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_CRYPTOKEY_2_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_CRYPTOKEY_2_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_CRYPTOKEY_2_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_CRYPTOKEY_2_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_CRYPTOKEY_2_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_CRYPTOKEY_2_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_CRYPTOKEY_2_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_CRYPTOKEY_2_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_8_CRYPTOKEY_2_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_9                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_9                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_9.CRYPTOKEY_2_9         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_CRYPTOKEY_2_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_CRYPTOKEY_2_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_CRYPTOKEY_2_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_CRYPTOKEY_2_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_CRYPTOKEY_2_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_CRYPTOKEY_2_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_CRYPTOKEY_2_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_CRYPTOKEY_2_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_CRYPTOKEY_2_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_9_CRYPTOKEY_2_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_10                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_10                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_10.CRYPTOKEY_2_10       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_CRYPTOKEY_2_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_CRYPTOKEY_2_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_CRYPTOKEY_2_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_CRYPTOKEY_2_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_CRYPTOKEY_2_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_CRYPTOKEY_2_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_CRYPTOKEY_2_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_CRYPTOKEY_2_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_CRYPTOKEY_2_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_10_CRYPTOKEY_2_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_11                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_11                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_11.CRYPTOKEY_2_11       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_CRYPTOKEY_2_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_CRYPTOKEY_2_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_CRYPTOKEY_2_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_CRYPTOKEY_2_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_CRYPTOKEY_2_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_CRYPTOKEY_2_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_CRYPTOKEY_2_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_CRYPTOKEY_2_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_CRYPTOKEY_2_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_11_CRYPTOKEY_2_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_12                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_12                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_12.CRYPTOKEY_2_12       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_CRYPTOKEY_2_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_CRYPTOKEY_2_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_CRYPTOKEY_2_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_CRYPTOKEY_2_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_CRYPTOKEY_2_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_CRYPTOKEY_2_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_CRYPTOKEY_2_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_CRYPTOKEY_2_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_CRYPTOKEY_2_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_12_CRYPTOKEY_2_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_13                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_13                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_13.CRYPTOKEY_2_13       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_CRYPTOKEY_2_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_CRYPTOKEY_2_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_CRYPTOKEY_2_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_CRYPTOKEY_2_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_CRYPTOKEY_2_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_CRYPTOKEY_2_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_CRYPTOKEY_2_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_CRYPTOKEY_2_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_CRYPTOKEY_2_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_13_CRYPTOKEY_2_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_14                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_14                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_14.CRYPTOKEY_2_14       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_CRYPTOKEY_2_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_CRYPTOKEY_2_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_CRYPTOKEY_2_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_CRYPTOKEY_2_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_CRYPTOKEY_2_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_CRYPTOKEY_2_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_CRYPTOKEY_2_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_CRYPTOKEY_2_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_CRYPTOKEY_2_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_14_CRYPTOKEY_2_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_15                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_15                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_15.CRYPTOKEY_2_15       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_CRYPTOKEY_2_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_CRYPTOKEY_2_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_CRYPTOKEY_2_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_CRYPTOKEY_2_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_CRYPTOKEY_2_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_CRYPTOKEY_2_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_CRYPTOKEY_2_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_CRYPTOKEY_2_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_CRYPTOKEY_2_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_15_CRYPTOKEY_2_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_16                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_16                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_16.CFGE_2               */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CFGE_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CFGE_2_LSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CFGE_2_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CFGE_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CFGE_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CFGE_2_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CFGE_2_FIELD_MASK 0x80000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CFGE_2_GET(x) \
   (((x) & 0x80000000ul) >> 31)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CFGE_2_SET(x) \
   (((x) << 31) & 0x80000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CFGE_2_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_16.CRYPTPCFG_RSVD_2     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CRYPTPCFG_RSVD_2_MSB 30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CRYPTPCFG_RSVD_2_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CRYPTPCFG_RSVD_2_WIDTH 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CRYPTPCFG_RSVD_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CRYPTPCFG_RSVD_2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CRYPTPCFG_RSVD_2_RESET 0x0000u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CRYPTPCFG_RSVD_2_FIELD_MASK 0x7fff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CRYPTPCFG_RSVD_2_GET(x) \
   (((x) & 0x7fff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CRYPTPCFG_RSVD_2_SET(x) \
   (((x) << 16) & 0x7fff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CRYPTPCFG_RSVD_2_MODIFY(r, x) \
   ((((x) << 16) & 0x7fff0000ul) | ((r) & 0x8000fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_16.CAPIDX_2             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CAPIDX_2_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CAPIDX_2_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CAPIDX_2_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CAPIDX_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CAPIDX_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CAPIDX_2_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CAPIDX_2_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CAPIDX_2_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CAPIDX_2_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_CAPIDX_2_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_16.DUSIZE_2             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_DUSIZE_2_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_DUSIZE_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_DUSIZE_2_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_DUSIZE_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_DUSIZE_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_DUSIZE_2_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_DUSIZE_2_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_DUSIZE_2_GET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_DUSIZE_2_SET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_16_DUSIZE_2_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_17                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_17                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_17.RESERVED_2           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_RESERVED_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_RESERVED_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_RESERVED_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_RESERVED_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_RESERVED_2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_RESERVED_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_RESERVED_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_RESERVED_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_RESERVED_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_17_RESERVED_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_18                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_18                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_18.RESERVED_2           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_RESERVED_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_RESERVED_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_RESERVED_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_RESERVED_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_RESERVED_2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_RESERVED_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_RESERVED_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_RESERVED_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_RESERVED_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_18_RESERVED_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_19                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_19                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_19.RESERVED_2           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_RESERVED_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_RESERVED_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_RESERVED_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_RESERVED_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_RESERVED_2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_RESERVED_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_RESERVED_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_RESERVED_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_RESERVED_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_19_RESERVED_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_20                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_20                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_20.RESERVED_2           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_RESERVED_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_RESERVED_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_RESERVED_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_RESERVED_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_RESERVED_2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_RESERVED_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_RESERVED_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_RESERVED_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_RESERVED_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_20_RESERVED_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_21                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_21                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_21.RESERVED_2           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_RESERVED_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_RESERVED_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_RESERVED_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_RESERVED_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_RESERVED_2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_RESERVED_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_RESERVED_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_RESERVED_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_RESERVED_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_21_RESERVED_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_22                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_22                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_22.RESERVED_2           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_RESERVED_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_RESERVED_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_RESERVED_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_RESERVED_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_RESERVED_2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_RESERVED_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_RESERVED_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_RESERVED_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_RESERVED_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_22_RESERVED_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_23                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_23                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_23.RESERVED_2           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_RESERVED_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_RESERVED_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_RESERVED_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_RESERVED_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_RESERVED_2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_RESERVED_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_RESERVED_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_RESERVED_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_RESERVED_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_23_RESERVED_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_24                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_24                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_24.RESERVED_2           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_RESERVED_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_RESERVED_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_RESERVED_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_RESERVED_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_RESERVED_2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_RESERVED_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_RESERVED_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_RESERVED_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_RESERVED_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_24_RESERVED_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_25                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_25                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_25.RESERVED_2           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_RESERVED_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_RESERVED_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_RESERVED_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_RESERVED_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_RESERVED_2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_RESERVED_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_RESERVED_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_RESERVED_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_RESERVED_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_25_RESERVED_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_26                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_26                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_26.RESERVED_2           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_RESERVED_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_RESERVED_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_RESERVED_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_RESERVED_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_RESERVED_2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_RESERVED_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_RESERVED_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_RESERVED_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_RESERVED_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_26_RESERVED_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_27                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_27                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_27.RESERVED_2           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_RESERVED_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_RESERVED_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_RESERVED_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_RESERVED_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_RESERVED_2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_RESERVED_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_RESERVED_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_RESERVED_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_RESERVED_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_27_RESERVED_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_28                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_28                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_28.RESERVED_2           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_RESERVED_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_RESERVED_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_RESERVED_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_RESERVED_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_RESERVED_2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_RESERVED_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_RESERVED_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_RESERVED_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_RESERVED_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_28_RESERVED_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_29                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_29                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_29.RESERVED_2           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_RESERVED_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_RESERVED_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_RESERVED_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_RESERVED_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_RESERVED_2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_RESERVED_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_RESERVED_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_RESERVED_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_RESERVED_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_29_RESERVED_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_30                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_30                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_30.RESERVED_2           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_RESERVED_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_RESERVED_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_RESERVED_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_RESERVED_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_RESERVED_2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_RESERVED_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_RESERVED_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_RESERVED_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_RESERVED_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_30_RESERVED_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_2_31                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_2_31                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_2_31.RESERVED_2           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_RESERVED_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_RESERVED_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_RESERVED_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_RESERVED_2_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_RESERVED_2_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_RESERVED_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_RESERVED_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_RESERVED_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_RESERVED_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_2_31_RESERVED_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_0                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_0                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_0.CRYPTOKEY_3_0         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_CRYPTOKEY_3_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_CRYPTOKEY_3_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_CRYPTOKEY_3_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_CRYPTOKEY_3_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_CRYPTOKEY_3_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_CRYPTOKEY_3_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_CRYPTOKEY_3_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_CRYPTOKEY_3_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_CRYPTOKEY_3_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_0_CRYPTOKEY_3_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_1                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_1                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_1.CRYPTOKEY_3_1         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_CRYPTOKEY_3_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_CRYPTOKEY_3_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_CRYPTOKEY_3_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_CRYPTOKEY_3_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_CRYPTOKEY_3_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_CRYPTOKEY_3_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_CRYPTOKEY_3_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_CRYPTOKEY_3_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_CRYPTOKEY_3_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_1_CRYPTOKEY_3_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_2                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_2                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_2.CRYPTOKEY_3_2         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_CRYPTOKEY_3_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_CRYPTOKEY_3_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_CRYPTOKEY_3_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_CRYPTOKEY_3_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_CRYPTOKEY_3_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_CRYPTOKEY_3_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_CRYPTOKEY_3_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_CRYPTOKEY_3_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_CRYPTOKEY_3_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_2_CRYPTOKEY_3_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_3                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_3                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_3.CRYPTOKEY_3_3         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_CRYPTOKEY_3_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_CRYPTOKEY_3_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_CRYPTOKEY_3_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_CRYPTOKEY_3_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_CRYPTOKEY_3_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_CRYPTOKEY_3_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_CRYPTOKEY_3_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_CRYPTOKEY_3_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_CRYPTOKEY_3_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_3_CRYPTOKEY_3_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_4                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_4                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_4.CRYPTOKEY_3_4         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_CRYPTOKEY_3_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_CRYPTOKEY_3_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_CRYPTOKEY_3_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_CRYPTOKEY_3_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_CRYPTOKEY_3_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_CRYPTOKEY_3_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_CRYPTOKEY_3_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_CRYPTOKEY_3_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_CRYPTOKEY_3_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_4_CRYPTOKEY_3_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_5                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_5                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_5.CRYPTOKEY_3_5         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_CRYPTOKEY_3_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_CRYPTOKEY_3_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_CRYPTOKEY_3_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_CRYPTOKEY_3_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_CRYPTOKEY_3_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_CRYPTOKEY_3_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_CRYPTOKEY_3_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_CRYPTOKEY_3_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_CRYPTOKEY_3_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_5_CRYPTOKEY_3_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_6                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_6                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_6.CRYPTOKEY_3_6         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_CRYPTOKEY_3_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_CRYPTOKEY_3_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_CRYPTOKEY_3_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_CRYPTOKEY_3_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_CRYPTOKEY_3_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_CRYPTOKEY_3_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_CRYPTOKEY_3_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_CRYPTOKEY_3_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_CRYPTOKEY_3_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_6_CRYPTOKEY_3_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_7                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_7                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_7.CRYPTOKEY_3_7         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_CRYPTOKEY_3_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_CRYPTOKEY_3_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_CRYPTOKEY_3_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_CRYPTOKEY_3_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_CRYPTOKEY_3_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_CRYPTOKEY_3_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_CRYPTOKEY_3_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_CRYPTOKEY_3_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_CRYPTOKEY_3_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_7_CRYPTOKEY_3_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_8                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_8                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_8.CRYPTOKEY_3_8         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_CRYPTOKEY_3_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_CRYPTOKEY_3_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_CRYPTOKEY_3_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_CRYPTOKEY_3_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_CRYPTOKEY_3_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_CRYPTOKEY_3_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_CRYPTOKEY_3_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_CRYPTOKEY_3_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_CRYPTOKEY_3_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_8_CRYPTOKEY_3_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_9                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_9                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_9.CRYPTOKEY_3_9         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_CRYPTOKEY_3_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_CRYPTOKEY_3_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_CRYPTOKEY_3_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_CRYPTOKEY_3_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_CRYPTOKEY_3_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_CRYPTOKEY_3_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_CRYPTOKEY_3_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_CRYPTOKEY_3_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_CRYPTOKEY_3_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_9_CRYPTOKEY_3_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_10                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_10                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_10.CRYPTOKEY_3_10       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_CRYPTOKEY_3_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_CRYPTOKEY_3_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_CRYPTOKEY_3_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_CRYPTOKEY_3_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_CRYPTOKEY_3_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_CRYPTOKEY_3_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_CRYPTOKEY_3_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_CRYPTOKEY_3_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_CRYPTOKEY_3_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_10_CRYPTOKEY_3_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_11                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_11                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_11.CRYPTOKEY_3_11       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_CRYPTOKEY_3_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_CRYPTOKEY_3_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_CRYPTOKEY_3_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_CRYPTOKEY_3_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_CRYPTOKEY_3_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_CRYPTOKEY_3_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_CRYPTOKEY_3_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_CRYPTOKEY_3_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_CRYPTOKEY_3_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_11_CRYPTOKEY_3_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_12                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_12                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_12.CRYPTOKEY_3_12       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_CRYPTOKEY_3_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_CRYPTOKEY_3_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_CRYPTOKEY_3_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_CRYPTOKEY_3_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_CRYPTOKEY_3_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_CRYPTOKEY_3_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_CRYPTOKEY_3_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_CRYPTOKEY_3_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_CRYPTOKEY_3_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_12_CRYPTOKEY_3_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_13                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_13                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_13.CRYPTOKEY_3_13       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_CRYPTOKEY_3_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_CRYPTOKEY_3_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_CRYPTOKEY_3_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_CRYPTOKEY_3_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_CRYPTOKEY_3_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_CRYPTOKEY_3_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_CRYPTOKEY_3_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_CRYPTOKEY_3_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_CRYPTOKEY_3_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_13_CRYPTOKEY_3_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_14                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_14                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_14.CRYPTOKEY_3_14       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_CRYPTOKEY_3_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_CRYPTOKEY_3_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_CRYPTOKEY_3_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_CRYPTOKEY_3_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_CRYPTOKEY_3_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_CRYPTOKEY_3_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_CRYPTOKEY_3_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_CRYPTOKEY_3_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_CRYPTOKEY_3_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_14_CRYPTOKEY_3_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_15                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_15                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_15.CRYPTOKEY_3_15       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_CRYPTOKEY_3_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_CRYPTOKEY_3_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_CRYPTOKEY_3_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_CRYPTOKEY_3_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_CRYPTOKEY_3_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_CRYPTOKEY_3_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_CRYPTOKEY_3_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_CRYPTOKEY_3_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_CRYPTOKEY_3_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_15_CRYPTOKEY_3_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_16                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_16                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_16.CFGE_3               */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CFGE_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CFGE_3_LSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CFGE_3_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CFGE_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CFGE_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CFGE_3_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CFGE_3_FIELD_MASK 0x80000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CFGE_3_GET(x) \
   (((x) & 0x80000000ul) >> 31)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CFGE_3_SET(x) \
   (((x) << 31) & 0x80000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CFGE_3_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_16.CRYPTPCFG_RSVD_3     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CRYPTPCFG_RSVD_3_MSB 30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CRYPTPCFG_RSVD_3_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CRYPTPCFG_RSVD_3_WIDTH 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CRYPTPCFG_RSVD_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CRYPTPCFG_RSVD_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CRYPTPCFG_RSVD_3_RESET 0x0000u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CRYPTPCFG_RSVD_3_FIELD_MASK 0x7fff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CRYPTPCFG_RSVD_3_GET(x) \
   (((x) & 0x7fff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CRYPTPCFG_RSVD_3_SET(x) \
   (((x) << 16) & 0x7fff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CRYPTPCFG_RSVD_3_MODIFY(r, x) \
   ((((x) << 16) & 0x7fff0000ul) | ((r) & 0x8000fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_16.CAPIDX_3             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CAPIDX_3_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CAPIDX_3_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CAPIDX_3_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CAPIDX_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CAPIDX_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CAPIDX_3_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CAPIDX_3_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CAPIDX_3_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CAPIDX_3_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_CAPIDX_3_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_16.DUSIZE_3             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_DUSIZE_3_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_DUSIZE_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_DUSIZE_3_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_DUSIZE_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_DUSIZE_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_DUSIZE_3_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_DUSIZE_3_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_DUSIZE_3_GET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_DUSIZE_3_SET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_16_DUSIZE_3_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_17                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_17                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_17.RESERVED_3           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_RESERVED_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_RESERVED_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_RESERVED_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_RESERVED_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_RESERVED_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_RESERVED_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_RESERVED_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_RESERVED_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_RESERVED_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_17_RESERVED_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_18                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_18                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_18.RESERVED_3           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_RESERVED_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_RESERVED_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_RESERVED_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_RESERVED_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_RESERVED_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_RESERVED_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_RESERVED_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_RESERVED_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_RESERVED_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_18_RESERVED_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_19                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_19                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_19.RESERVED_3           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_RESERVED_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_RESERVED_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_RESERVED_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_RESERVED_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_RESERVED_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_RESERVED_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_RESERVED_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_RESERVED_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_RESERVED_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_19_RESERVED_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_20                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_20                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_20.RESERVED_3           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_RESERVED_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_RESERVED_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_RESERVED_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_RESERVED_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_RESERVED_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_RESERVED_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_RESERVED_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_RESERVED_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_RESERVED_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_20_RESERVED_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_21                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_21                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_21.RESERVED_3           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_RESERVED_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_RESERVED_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_RESERVED_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_RESERVED_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_RESERVED_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_RESERVED_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_RESERVED_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_RESERVED_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_RESERVED_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_21_RESERVED_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_22                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_22                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_22.RESERVED_3           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_RESERVED_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_RESERVED_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_RESERVED_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_RESERVED_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_RESERVED_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_RESERVED_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_RESERVED_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_RESERVED_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_RESERVED_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_22_RESERVED_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_23                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_23                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_23.RESERVED_3           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_RESERVED_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_RESERVED_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_RESERVED_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_RESERVED_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_RESERVED_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_RESERVED_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_RESERVED_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_RESERVED_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_RESERVED_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_23_RESERVED_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_24                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_24                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_24.RESERVED_3           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_RESERVED_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_RESERVED_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_RESERVED_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_RESERVED_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_RESERVED_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_RESERVED_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_RESERVED_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_RESERVED_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_RESERVED_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_24_RESERVED_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_25                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_25                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_25.RESERVED_3           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_RESERVED_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_RESERVED_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_RESERVED_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_RESERVED_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_RESERVED_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_RESERVED_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_RESERVED_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_RESERVED_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_RESERVED_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_25_RESERVED_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_26                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_26                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_26.RESERVED_3           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_RESERVED_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_RESERVED_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_RESERVED_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_RESERVED_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_RESERVED_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_RESERVED_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_RESERVED_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_RESERVED_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_RESERVED_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_26_RESERVED_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_27                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_27                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_27.RESERVED_3           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_RESERVED_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_RESERVED_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_RESERVED_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_RESERVED_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_RESERVED_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_RESERVED_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_RESERVED_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_RESERVED_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_RESERVED_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_27_RESERVED_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_28                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_28                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_28.RESERVED_3           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_RESERVED_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_RESERVED_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_RESERVED_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_RESERVED_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_RESERVED_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_RESERVED_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_RESERVED_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_RESERVED_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_RESERVED_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_28_RESERVED_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_29                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_29                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_29.RESERVED_3           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_RESERVED_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_RESERVED_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_RESERVED_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_RESERVED_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_RESERVED_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_RESERVED_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_RESERVED_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_RESERVED_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_RESERVED_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_29_RESERVED_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_30                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_30                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_30.RESERVED_3           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_RESERVED_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_RESERVED_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_RESERVED_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_RESERVED_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_RESERVED_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_RESERVED_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_RESERVED_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_RESERVED_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_RESERVED_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_30_RESERVED_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_3_31                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_3_31                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_3_31.RESERVED_3           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_RESERVED_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_RESERVED_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_RESERVED_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_RESERVED_3_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_RESERVED_3_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_RESERVED_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_RESERVED_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_RESERVED_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_RESERVED_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_3_31_RESERVED_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_0                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_0                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_0.CRYPTOKEY_4_0         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_CRYPTOKEY_4_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_CRYPTOKEY_4_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_CRYPTOKEY_4_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_CRYPTOKEY_4_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_CRYPTOKEY_4_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_CRYPTOKEY_4_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_CRYPTOKEY_4_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_CRYPTOKEY_4_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_CRYPTOKEY_4_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_0_CRYPTOKEY_4_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_1                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_1                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_1.CRYPTOKEY_4_1         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_CRYPTOKEY_4_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_CRYPTOKEY_4_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_CRYPTOKEY_4_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_CRYPTOKEY_4_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_CRYPTOKEY_4_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_CRYPTOKEY_4_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_CRYPTOKEY_4_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_CRYPTOKEY_4_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_CRYPTOKEY_4_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_1_CRYPTOKEY_4_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_2                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_2                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_2.CRYPTOKEY_4_2         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_CRYPTOKEY_4_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_CRYPTOKEY_4_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_CRYPTOKEY_4_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_CRYPTOKEY_4_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_CRYPTOKEY_4_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_CRYPTOKEY_4_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_CRYPTOKEY_4_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_CRYPTOKEY_4_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_CRYPTOKEY_4_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_2_CRYPTOKEY_4_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_3                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_3                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_3.CRYPTOKEY_4_3         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_CRYPTOKEY_4_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_CRYPTOKEY_4_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_CRYPTOKEY_4_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_CRYPTOKEY_4_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_CRYPTOKEY_4_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_CRYPTOKEY_4_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_CRYPTOKEY_4_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_CRYPTOKEY_4_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_CRYPTOKEY_4_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_3_CRYPTOKEY_4_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_4                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_4                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_4.CRYPTOKEY_4_4         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_CRYPTOKEY_4_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_CRYPTOKEY_4_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_CRYPTOKEY_4_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_CRYPTOKEY_4_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_CRYPTOKEY_4_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_CRYPTOKEY_4_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_CRYPTOKEY_4_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_CRYPTOKEY_4_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_CRYPTOKEY_4_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_4_CRYPTOKEY_4_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_5                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_5                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_5.CRYPTOKEY_4_5         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_CRYPTOKEY_4_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_CRYPTOKEY_4_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_CRYPTOKEY_4_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_CRYPTOKEY_4_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_CRYPTOKEY_4_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_CRYPTOKEY_4_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_CRYPTOKEY_4_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_CRYPTOKEY_4_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_CRYPTOKEY_4_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_5_CRYPTOKEY_4_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_6                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_6                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_6.CRYPTOKEY_4_6         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_CRYPTOKEY_4_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_CRYPTOKEY_4_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_CRYPTOKEY_4_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_CRYPTOKEY_4_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_CRYPTOKEY_4_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_CRYPTOKEY_4_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_CRYPTOKEY_4_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_CRYPTOKEY_4_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_CRYPTOKEY_4_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_6_CRYPTOKEY_4_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_7                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_7                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_7.CRYPTOKEY_4_7         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_CRYPTOKEY_4_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_CRYPTOKEY_4_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_CRYPTOKEY_4_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_CRYPTOKEY_4_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_CRYPTOKEY_4_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_CRYPTOKEY_4_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_CRYPTOKEY_4_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_CRYPTOKEY_4_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_CRYPTOKEY_4_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_7_CRYPTOKEY_4_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_8                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_8                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_8.CRYPTOKEY_4_8         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_CRYPTOKEY_4_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_CRYPTOKEY_4_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_CRYPTOKEY_4_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_CRYPTOKEY_4_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_CRYPTOKEY_4_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_CRYPTOKEY_4_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_CRYPTOKEY_4_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_CRYPTOKEY_4_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_CRYPTOKEY_4_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_8_CRYPTOKEY_4_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_9                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_9                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_9.CRYPTOKEY_4_9         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_CRYPTOKEY_4_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_CRYPTOKEY_4_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_CRYPTOKEY_4_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_CRYPTOKEY_4_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_CRYPTOKEY_4_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_CRYPTOKEY_4_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_CRYPTOKEY_4_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_CRYPTOKEY_4_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_CRYPTOKEY_4_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_9_CRYPTOKEY_4_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_10                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_10                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_10.CRYPTOKEY_4_10       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_CRYPTOKEY_4_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_CRYPTOKEY_4_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_CRYPTOKEY_4_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_CRYPTOKEY_4_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_CRYPTOKEY_4_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_CRYPTOKEY_4_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_CRYPTOKEY_4_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_CRYPTOKEY_4_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_CRYPTOKEY_4_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_10_CRYPTOKEY_4_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_11                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_11                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_11.CRYPTOKEY_4_11       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_CRYPTOKEY_4_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_CRYPTOKEY_4_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_CRYPTOKEY_4_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_CRYPTOKEY_4_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_CRYPTOKEY_4_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_CRYPTOKEY_4_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_CRYPTOKEY_4_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_CRYPTOKEY_4_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_CRYPTOKEY_4_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_11_CRYPTOKEY_4_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_12                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_12                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_12.CRYPTOKEY_4_12       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_CRYPTOKEY_4_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_CRYPTOKEY_4_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_CRYPTOKEY_4_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_CRYPTOKEY_4_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_CRYPTOKEY_4_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_CRYPTOKEY_4_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_CRYPTOKEY_4_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_CRYPTOKEY_4_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_CRYPTOKEY_4_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_12_CRYPTOKEY_4_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_13                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_13                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_13.CRYPTOKEY_4_13       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_CRYPTOKEY_4_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_CRYPTOKEY_4_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_CRYPTOKEY_4_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_CRYPTOKEY_4_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_CRYPTOKEY_4_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_CRYPTOKEY_4_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_CRYPTOKEY_4_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_CRYPTOKEY_4_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_CRYPTOKEY_4_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_13_CRYPTOKEY_4_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_14                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_14                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_14.CRYPTOKEY_4_14       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_CRYPTOKEY_4_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_CRYPTOKEY_4_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_CRYPTOKEY_4_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_CRYPTOKEY_4_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_CRYPTOKEY_4_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_CRYPTOKEY_4_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_CRYPTOKEY_4_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_CRYPTOKEY_4_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_CRYPTOKEY_4_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_14_CRYPTOKEY_4_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_15                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_15                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_15.CRYPTOKEY_4_15       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_CRYPTOKEY_4_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_CRYPTOKEY_4_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_CRYPTOKEY_4_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_CRYPTOKEY_4_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_CRYPTOKEY_4_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_CRYPTOKEY_4_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_CRYPTOKEY_4_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_CRYPTOKEY_4_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_CRYPTOKEY_4_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_15_CRYPTOKEY_4_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_16                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_16                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_16.CFGE_4               */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CFGE_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CFGE_4_LSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CFGE_4_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CFGE_4_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CFGE_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CFGE_4_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CFGE_4_FIELD_MASK 0x80000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CFGE_4_GET(x) \
   (((x) & 0x80000000ul) >> 31)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CFGE_4_SET(x) \
   (((x) << 31) & 0x80000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CFGE_4_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_16.CRYPTPCFG_RSVD_4     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CRYPTPCFG_RSVD_4_MSB 30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CRYPTPCFG_RSVD_4_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CRYPTPCFG_RSVD_4_WIDTH 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CRYPTPCFG_RSVD_4_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CRYPTPCFG_RSVD_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CRYPTPCFG_RSVD_4_RESET 0x0000u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CRYPTPCFG_RSVD_4_FIELD_MASK 0x7fff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CRYPTPCFG_RSVD_4_GET(x) \
   (((x) & 0x7fff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CRYPTPCFG_RSVD_4_SET(x) \
   (((x) << 16) & 0x7fff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CRYPTPCFG_RSVD_4_MODIFY(r, x) \
   ((((x) << 16) & 0x7fff0000ul) | ((r) & 0x8000fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_16.CAPIDX_4             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CAPIDX_4_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CAPIDX_4_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CAPIDX_4_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CAPIDX_4_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CAPIDX_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CAPIDX_4_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CAPIDX_4_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CAPIDX_4_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CAPIDX_4_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_CAPIDX_4_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_16.DUSIZE_4             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_DUSIZE_4_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_DUSIZE_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_DUSIZE_4_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_DUSIZE_4_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_DUSIZE_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_DUSIZE_4_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_DUSIZE_4_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_DUSIZE_4_GET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_DUSIZE_4_SET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_16_DUSIZE_4_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_17                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_17                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_17.RESERVED_4           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_RESERVED_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_RESERVED_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_RESERVED_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_RESERVED_4_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_RESERVED_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_RESERVED_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_RESERVED_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_RESERVED_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_RESERVED_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_17_RESERVED_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_18                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_18                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_18.RESERVED_4           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_RESERVED_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_RESERVED_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_RESERVED_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_RESERVED_4_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_RESERVED_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_RESERVED_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_RESERVED_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_RESERVED_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_RESERVED_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_18_RESERVED_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_19                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_19                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_19.RESERVED_4           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_RESERVED_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_RESERVED_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_RESERVED_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_RESERVED_4_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_RESERVED_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_RESERVED_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_RESERVED_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_RESERVED_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_RESERVED_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_19_RESERVED_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_20                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_20                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_20.RESERVED_4           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_RESERVED_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_RESERVED_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_RESERVED_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_RESERVED_4_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_RESERVED_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_RESERVED_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_RESERVED_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_RESERVED_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_RESERVED_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_20_RESERVED_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_21                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_21                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_21.RESERVED_4           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_RESERVED_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_RESERVED_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_RESERVED_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_RESERVED_4_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_RESERVED_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_RESERVED_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_RESERVED_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_RESERVED_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_RESERVED_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_21_RESERVED_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_22                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_22                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_22.RESERVED_4           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_RESERVED_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_RESERVED_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_RESERVED_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_RESERVED_4_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_RESERVED_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_RESERVED_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_RESERVED_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_RESERVED_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_RESERVED_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_22_RESERVED_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_23                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_23                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_23.RESERVED_4           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_RESERVED_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_RESERVED_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_RESERVED_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_RESERVED_4_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_RESERVED_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_RESERVED_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_RESERVED_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_RESERVED_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_RESERVED_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_23_RESERVED_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_24                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_24                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_24.RESERVED_4           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_RESERVED_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_RESERVED_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_RESERVED_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_RESERVED_4_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_RESERVED_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_RESERVED_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_RESERVED_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_RESERVED_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_RESERVED_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_24_RESERVED_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_25                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_25                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_25.RESERVED_4           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_RESERVED_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_RESERVED_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_RESERVED_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_RESERVED_4_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_RESERVED_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_RESERVED_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_RESERVED_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_RESERVED_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_RESERVED_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_25_RESERVED_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_26                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_26                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_26.RESERVED_4           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_RESERVED_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_RESERVED_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_RESERVED_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_RESERVED_4_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_RESERVED_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_RESERVED_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_RESERVED_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_RESERVED_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_RESERVED_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_26_RESERVED_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_27                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_27                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_27.RESERVED_4           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_RESERVED_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_RESERVED_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_RESERVED_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_RESERVED_4_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_RESERVED_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_RESERVED_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_RESERVED_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_RESERVED_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_RESERVED_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_27_RESERVED_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_28                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_28                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_28.RESERVED_4           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_RESERVED_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_RESERVED_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_RESERVED_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_RESERVED_4_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_RESERVED_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_RESERVED_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_RESERVED_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_RESERVED_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_RESERVED_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_28_RESERVED_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_29                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_29                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_29.RESERVED_4           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_RESERVED_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_RESERVED_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_RESERVED_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_RESERVED_4_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_RESERVED_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_RESERVED_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_RESERVED_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_RESERVED_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_RESERVED_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_29_RESERVED_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_30                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_30                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_30.RESERVED_4           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_RESERVED_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_RESERVED_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_RESERVED_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_RESERVED_4_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_RESERVED_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_RESERVED_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_RESERVED_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_RESERVED_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_RESERVED_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_30_RESERVED_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_4_31                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_4_31                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_4_31.RESERVED_4           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_RESERVED_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_RESERVED_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_RESERVED_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_RESERVED_4_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_RESERVED_4_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_RESERVED_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_RESERVED_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_RESERVED_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_RESERVED_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_4_31_RESERVED_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_0                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_0                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_0.CRYPTOKEY_5_0         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_CRYPTOKEY_5_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_CRYPTOKEY_5_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_CRYPTOKEY_5_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_CRYPTOKEY_5_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_CRYPTOKEY_5_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_CRYPTOKEY_5_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_CRYPTOKEY_5_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_CRYPTOKEY_5_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_CRYPTOKEY_5_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_0_CRYPTOKEY_5_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_1                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_1                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_1.CRYPTOKEY_5_1         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_CRYPTOKEY_5_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_CRYPTOKEY_5_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_CRYPTOKEY_5_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_CRYPTOKEY_5_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_CRYPTOKEY_5_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_CRYPTOKEY_5_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_CRYPTOKEY_5_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_CRYPTOKEY_5_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_CRYPTOKEY_5_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_1_CRYPTOKEY_5_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_2                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_2                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_2.CRYPTOKEY_5_2         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_CRYPTOKEY_5_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_CRYPTOKEY_5_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_CRYPTOKEY_5_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_CRYPTOKEY_5_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_CRYPTOKEY_5_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_CRYPTOKEY_5_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_CRYPTOKEY_5_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_CRYPTOKEY_5_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_CRYPTOKEY_5_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_2_CRYPTOKEY_5_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_3                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_3                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_3.CRYPTOKEY_5_3         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_CRYPTOKEY_5_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_CRYPTOKEY_5_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_CRYPTOKEY_5_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_CRYPTOKEY_5_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_CRYPTOKEY_5_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_CRYPTOKEY_5_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_CRYPTOKEY_5_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_CRYPTOKEY_5_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_CRYPTOKEY_5_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_3_CRYPTOKEY_5_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_4                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_4                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_4.CRYPTOKEY_5_4         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_CRYPTOKEY_5_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_CRYPTOKEY_5_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_CRYPTOKEY_5_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_CRYPTOKEY_5_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_CRYPTOKEY_5_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_CRYPTOKEY_5_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_CRYPTOKEY_5_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_CRYPTOKEY_5_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_CRYPTOKEY_5_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_4_CRYPTOKEY_5_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_5                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_5                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_5.CRYPTOKEY_5_5         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_CRYPTOKEY_5_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_CRYPTOKEY_5_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_CRYPTOKEY_5_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_CRYPTOKEY_5_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_CRYPTOKEY_5_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_CRYPTOKEY_5_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_CRYPTOKEY_5_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_CRYPTOKEY_5_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_CRYPTOKEY_5_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_5_CRYPTOKEY_5_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_6                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_6                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_6.CRYPTOKEY_5_6         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_CRYPTOKEY_5_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_CRYPTOKEY_5_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_CRYPTOKEY_5_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_CRYPTOKEY_5_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_CRYPTOKEY_5_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_CRYPTOKEY_5_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_CRYPTOKEY_5_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_CRYPTOKEY_5_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_CRYPTOKEY_5_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_6_CRYPTOKEY_5_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_7                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_7                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_7.CRYPTOKEY_5_7         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_CRYPTOKEY_5_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_CRYPTOKEY_5_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_CRYPTOKEY_5_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_CRYPTOKEY_5_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_CRYPTOKEY_5_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_CRYPTOKEY_5_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_CRYPTOKEY_5_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_CRYPTOKEY_5_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_CRYPTOKEY_5_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_7_CRYPTOKEY_5_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_8                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_8                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_8.CRYPTOKEY_5_8         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_CRYPTOKEY_5_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_CRYPTOKEY_5_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_CRYPTOKEY_5_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_CRYPTOKEY_5_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_CRYPTOKEY_5_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_CRYPTOKEY_5_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_CRYPTOKEY_5_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_CRYPTOKEY_5_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_CRYPTOKEY_5_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_8_CRYPTOKEY_5_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_9                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_9                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_9.CRYPTOKEY_5_9         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_CRYPTOKEY_5_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_CRYPTOKEY_5_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_CRYPTOKEY_5_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_CRYPTOKEY_5_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_CRYPTOKEY_5_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_CRYPTOKEY_5_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_CRYPTOKEY_5_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_CRYPTOKEY_5_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_CRYPTOKEY_5_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_9_CRYPTOKEY_5_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_10                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_10                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_10.CRYPTOKEY_5_10       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_CRYPTOKEY_5_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_CRYPTOKEY_5_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_CRYPTOKEY_5_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_CRYPTOKEY_5_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_CRYPTOKEY_5_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_CRYPTOKEY_5_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_CRYPTOKEY_5_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_CRYPTOKEY_5_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_CRYPTOKEY_5_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_10_CRYPTOKEY_5_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_11                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_11                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_11.CRYPTOKEY_5_11       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_CRYPTOKEY_5_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_CRYPTOKEY_5_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_CRYPTOKEY_5_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_CRYPTOKEY_5_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_CRYPTOKEY_5_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_CRYPTOKEY_5_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_CRYPTOKEY_5_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_CRYPTOKEY_5_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_CRYPTOKEY_5_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_11_CRYPTOKEY_5_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_12                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_12                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_12.CRYPTOKEY_5_12       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_CRYPTOKEY_5_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_CRYPTOKEY_5_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_CRYPTOKEY_5_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_CRYPTOKEY_5_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_CRYPTOKEY_5_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_CRYPTOKEY_5_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_CRYPTOKEY_5_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_CRYPTOKEY_5_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_CRYPTOKEY_5_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_12_CRYPTOKEY_5_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_13                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_13                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_13.CRYPTOKEY_5_13       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_CRYPTOKEY_5_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_CRYPTOKEY_5_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_CRYPTOKEY_5_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_CRYPTOKEY_5_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_CRYPTOKEY_5_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_CRYPTOKEY_5_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_CRYPTOKEY_5_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_CRYPTOKEY_5_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_CRYPTOKEY_5_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_13_CRYPTOKEY_5_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_14                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_14                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_14.CRYPTOKEY_5_14       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_CRYPTOKEY_5_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_CRYPTOKEY_5_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_CRYPTOKEY_5_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_CRYPTOKEY_5_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_CRYPTOKEY_5_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_CRYPTOKEY_5_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_CRYPTOKEY_5_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_CRYPTOKEY_5_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_CRYPTOKEY_5_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_14_CRYPTOKEY_5_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_15                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_15                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_15.CRYPTOKEY_5_15       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_CRYPTOKEY_5_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_CRYPTOKEY_5_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_CRYPTOKEY_5_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_CRYPTOKEY_5_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_CRYPTOKEY_5_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_CRYPTOKEY_5_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_CRYPTOKEY_5_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_CRYPTOKEY_5_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_CRYPTOKEY_5_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_15_CRYPTOKEY_5_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_16                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_16                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_16.CFGE_5               */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CFGE_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CFGE_5_LSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CFGE_5_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CFGE_5_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CFGE_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CFGE_5_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CFGE_5_FIELD_MASK 0x80000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CFGE_5_GET(x) \
   (((x) & 0x80000000ul) >> 31)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CFGE_5_SET(x) \
   (((x) << 31) & 0x80000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CFGE_5_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_16.CRYPTPCFG_RSVD_5     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CRYPTPCFG_RSVD_5_MSB 30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CRYPTPCFG_RSVD_5_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CRYPTPCFG_RSVD_5_WIDTH 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CRYPTPCFG_RSVD_5_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CRYPTPCFG_RSVD_5_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CRYPTPCFG_RSVD_5_RESET 0x0000u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CRYPTPCFG_RSVD_5_FIELD_MASK 0x7fff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CRYPTPCFG_RSVD_5_GET(x) \
   (((x) & 0x7fff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CRYPTPCFG_RSVD_5_SET(x) \
   (((x) << 16) & 0x7fff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CRYPTPCFG_RSVD_5_MODIFY(r, x) \
   ((((x) << 16) & 0x7fff0000ul) | ((r) & 0x8000fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_16.CAPIDX_5             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CAPIDX_5_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CAPIDX_5_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CAPIDX_5_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CAPIDX_5_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CAPIDX_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CAPIDX_5_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CAPIDX_5_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CAPIDX_5_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CAPIDX_5_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_CAPIDX_5_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_16.DUSIZE_5             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_DUSIZE_5_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_DUSIZE_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_DUSIZE_5_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_DUSIZE_5_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_DUSIZE_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_DUSIZE_5_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_DUSIZE_5_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_DUSIZE_5_GET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_DUSIZE_5_SET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_16_DUSIZE_5_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_17                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_17                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_17.RESERVED_5           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_RESERVED_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_RESERVED_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_RESERVED_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_RESERVED_5_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_RESERVED_5_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_RESERVED_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_RESERVED_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_RESERVED_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_RESERVED_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_17_RESERVED_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_18                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_18                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_18.RESERVED_5           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_RESERVED_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_RESERVED_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_RESERVED_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_RESERVED_5_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_RESERVED_5_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_RESERVED_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_RESERVED_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_RESERVED_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_RESERVED_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_18_RESERVED_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_19                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_19                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_19.RESERVED_5           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_RESERVED_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_RESERVED_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_RESERVED_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_RESERVED_5_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_RESERVED_5_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_RESERVED_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_RESERVED_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_RESERVED_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_RESERVED_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_19_RESERVED_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_20                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_20                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_20.RESERVED_5           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_RESERVED_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_RESERVED_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_RESERVED_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_RESERVED_5_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_RESERVED_5_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_RESERVED_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_RESERVED_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_RESERVED_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_RESERVED_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_20_RESERVED_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_21                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_21                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_21.RESERVED_5           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_RESERVED_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_RESERVED_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_RESERVED_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_RESERVED_5_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_RESERVED_5_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_RESERVED_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_RESERVED_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_RESERVED_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_RESERVED_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_21_RESERVED_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_22                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_22                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_22.RESERVED_5           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_RESERVED_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_RESERVED_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_RESERVED_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_RESERVED_5_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_RESERVED_5_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_RESERVED_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_RESERVED_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_RESERVED_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_RESERVED_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_22_RESERVED_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_23                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_23                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_23.RESERVED_5           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_RESERVED_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_RESERVED_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_RESERVED_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_RESERVED_5_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_RESERVED_5_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_RESERVED_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_RESERVED_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_RESERVED_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_RESERVED_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_23_RESERVED_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_24                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_24                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_24.RESERVED_5           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_RESERVED_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_RESERVED_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_RESERVED_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_RESERVED_5_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_RESERVED_5_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_RESERVED_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_RESERVED_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_RESERVED_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_RESERVED_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_24_RESERVED_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_25                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_25                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_25.RESERVED_5           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_RESERVED_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_RESERVED_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_RESERVED_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_RESERVED_5_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_RESERVED_5_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_RESERVED_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_RESERVED_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_RESERVED_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_RESERVED_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_25_RESERVED_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_26                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_26                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_26.RESERVED_5           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_RESERVED_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_RESERVED_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_RESERVED_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_RESERVED_5_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_RESERVED_5_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_RESERVED_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_RESERVED_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_RESERVED_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_RESERVED_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_26_RESERVED_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_27                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_27                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_27.RESERVED_5           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_RESERVED_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_RESERVED_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_RESERVED_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_RESERVED_5_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_RESERVED_5_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_RESERVED_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_RESERVED_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_RESERVED_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_RESERVED_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_27_RESERVED_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_28                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_28                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_28.RESERVED_5           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_RESERVED_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_RESERVED_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_RESERVED_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_RESERVED_5_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_RESERVED_5_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_RESERVED_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_RESERVED_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_RESERVED_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_RESERVED_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_28_RESERVED_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_29                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_29                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_29.RESERVED_5           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_RESERVED_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_RESERVED_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_RESERVED_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_RESERVED_5_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_RESERVED_5_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_RESERVED_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_RESERVED_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_RESERVED_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_RESERVED_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_29_RESERVED_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_30                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_30                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_30.RESERVED_5           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_RESERVED_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_RESERVED_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_RESERVED_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_RESERVED_5_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_RESERVED_5_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_RESERVED_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_RESERVED_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_RESERVED_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_RESERVED_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_30_RESERVED_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_5_31                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_5_31                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_5_31.RESERVED_5           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_RESERVED_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_RESERVED_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_RESERVED_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_RESERVED_5_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_RESERVED_5_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_RESERVED_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_RESERVED_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_RESERVED_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_RESERVED_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_5_31_RESERVED_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_0                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_0                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_0.CRYPTOKEY_6_0         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_CRYPTOKEY_6_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_CRYPTOKEY_6_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_CRYPTOKEY_6_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_CRYPTOKEY_6_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_CRYPTOKEY_6_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_CRYPTOKEY_6_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_CRYPTOKEY_6_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_CRYPTOKEY_6_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_CRYPTOKEY_6_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_0_CRYPTOKEY_6_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_1                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_1                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_1.CRYPTOKEY_6_1         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_CRYPTOKEY_6_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_CRYPTOKEY_6_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_CRYPTOKEY_6_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_CRYPTOKEY_6_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_CRYPTOKEY_6_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_CRYPTOKEY_6_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_CRYPTOKEY_6_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_CRYPTOKEY_6_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_CRYPTOKEY_6_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_1_CRYPTOKEY_6_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_2                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_2                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_2.CRYPTOKEY_6_2         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_CRYPTOKEY_6_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_CRYPTOKEY_6_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_CRYPTOKEY_6_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_CRYPTOKEY_6_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_CRYPTOKEY_6_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_CRYPTOKEY_6_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_CRYPTOKEY_6_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_CRYPTOKEY_6_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_CRYPTOKEY_6_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_2_CRYPTOKEY_6_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_3                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_3                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_3.CRYPTOKEY_6_3         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_CRYPTOKEY_6_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_CRYPTOKEY_6_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_CRYPTOKEY_6_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_CRYPTOKEY_6_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_CRYPTOKEY_6_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_CRYPTOKEY_6_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_CRYPTOKEY_6_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_CRYPTOKEY_6_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_CRYPTOKEY_6_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_3_CRYPTOKEY_6_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_4                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_4                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_4.CRYPTOKEY_6_4         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_CRYPTOKEY_6_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_CRYPTOKEY_6_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_CRYPTOKEY_6_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_CRYPTOKEY_6_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_CRYPTOKEY_6_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_CRYPTOKEY_6_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_CRYPTOKEY_6_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_CRYPTOKEY_6_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_CRYPTOKEY_6_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_4_CRYPTOKEY_6_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_5                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_5                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_5.CRYPTOKEY_6_5         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_CRYPTOKEY_6_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_CRYPTOKEY_6_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_CRYPTOKEY_6_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_CRYPTOKEY_6_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_CRYPTOKEY_6_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_CRYPTOKEY_6_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_CRYPTOKEY_6_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_CRYPTOKEY_6_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_CRYPTOKEY_6_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_5_CRYPTOKEY_6_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_6                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_6                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_6.CRYPTOKEY_6_6         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_CRYPTOKEY_6_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_CRYPTOKEY_6_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_CRYPTOKEY_6_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_CRYPTOKEY_6_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_CRYPTOKEY_6_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_CRYPTOKEY_6_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_CRYPTOKEY_6_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_CRYPTOKEY_6_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_CRYPTOKEY_6_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_6_CRYPTOKEY_6_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_7                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_7                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_7.CRYPTOKEY_6_7         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_CRYPTOKEY_6_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_CRYPTOKEY_6_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_CRYPTOKEY_6_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_CRYPTOKEY_6_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_CRYPTOKEY_6_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_CRYPTOKEY_6_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_CRYPTOKEY_6_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_CRYPTOKEY_6_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_CRYPTOKEY_6_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_7_CRYPTOKEY_6_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_8                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_8                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_8.CRYPTOKEY_6_8         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_CRYPTOKEY_6_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_CRYPTOKEY_6_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_CRYPTOKEY_6_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_CRYPTOKEY_6_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_CRYPTOKEY_6_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_CRYPTOKEY_6_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_CRYPTOKEY_6_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_CRYPTOKEY_6_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_CRYPTOKEY_6_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_8_CRYPTOKEY_6_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_9                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_9                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_9.CRYPTOKEY_6_9         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_CRYPTOKEY_6_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_CRYPTOKEY_6_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_CRYPTOKEY_6_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_CRYPTOKEY_6_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_CRYPTOKEY_6_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_CRYPTOKEY_6_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_CRYPTOKEY_6_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_CRYPTOKEY_6_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_CRYPTOKEY_6_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_9_CRYPTOKEY_6_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_10                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_10                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_10.CRYPTOKEY_6_10       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_CRYPTOKEY_6_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_CRYPTOKEY_6_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_CRYPTOKEY_6_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_CRYPTOKEY_6_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_CRYPTOKEY_6_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_CRYPTOKEY_6_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_CRYPTOKEY_6_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_CRYPTOKEY_6_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_CRYPTOKEY_6_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_10_CRYPTOKEY_6_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_11                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_11                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_11.CRYPTOKEY_6_11       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_CRYPTOKEY_6_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_CRYPTOKEY_6_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_CRYPTOKEY_6_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_CRYPTOKEY_6_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_CRYPTOKEY_6_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_CRYPTOKEY_6_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_CRYPTOKEY_6_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_CRYPTOKEY_6_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_CRYPTOKEY_6_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_11_CRYPTOKEY_6_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_12                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_12                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_12.CRYPTOKEY_6_12       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_CRYPTOKEY_6_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_CRYPTOKEY_6_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_CRYPTOKEY_6_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_CRYPTOKEY_6_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_CRYPTOKEY_6_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_CRYPTOKEY_6_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_CRYPTOKEY_6_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_CRYPTOKEY_6_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_CRYPTOKEY_6_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_12_CRYPTOKEY_6_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_13                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_13                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_13.CRYPTOKEY_6_13       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_CRYPTOKEY_6_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_CRYPTOKEY_6_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_CRYPTOKEY_6_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_CRYPTOKEY_6_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_CRYPTOKEY_6_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_CRYPTOKEY_6_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_CRYPTOKEY_6_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_CRYPTOKEY_6_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_CRYPTOKEY_6_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_13_CRYPTOKEY_6_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_14                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_14                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_14.CRYPTOKEY_6_14       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_CRYPTOKEY_6_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_CRYPTOKEY_6_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_CRYPTOKEY_6_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_CRYPTOKEY_6_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_CRYPTOKEY_6_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_CRYPTOKEY_6_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_CRYPTOKEY_6_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_CRYPTOKEY_6_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_CRYPTOKEY_6_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_14_CRYPTOKEY_6_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_15                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_15                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_15.CRYPTOKEY_6_15       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_CRYPTOKEY_6_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_CRYPTOKEY_6_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_CRYPTOKEY_6_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_CRYPTOKEY_6_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_CRYPTOKEY_6_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_CRYPTOKEY_6_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_CRYPTOKEY_6_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_CRYPTOKEY_6_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_CRYPTOKEY_6_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_15_CRYPTOKEY_6_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_16                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_16                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_16.CFGE_6               */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CFGE_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CFGE_6_LSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CFGE_6_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CFGE_6_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CFGE_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CFGE_6_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CFGE_6_FIELD_MASK 0x80000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CFGE_6_GET(x) \
   (((x) & 0x80000000ul) >> 31)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CFGE_6_SET(x) \
   (((x) << 31) & 0x80000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CFGE_6_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_16.CRYPTPCFG_RSVD_6     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CRYPTPCFG_RSVD_6_MSB 30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CRYPTPCFG_RSVD_6_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CRYPTPCFG_RSVD_6_WIDTH 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CRYPTPCFG_RSVD_6_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CRYPTPCFG_RSVD_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CRYPTPCFG_RSVD_6_RESET 0x0000u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CRYPTPCFG_RSVD_6_FIELD_MASK 0x7fff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CRYPTPCFG_RSVD_6_GET(x) \
   (((x) & 0x7fff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CRYPTPCFG_RSVD_6_SET(x) \
   (((x) << 16) & 0x7fff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CRYPTPCFG_RSVD_6_MODIFY(r, x) \
   ((((x) << 16) & 0x7fff0000ul) | ((r) & 0x8000fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_16.CAPIDX_6             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CAPIDX_6_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CAPIDX_6_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CAPIDX_6_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CAPIDX_6_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CAPIDX_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CAPIDX_6_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CAPIDX_6_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CAPIDX_6_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CAPIDX_6_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_CAPIDX_6_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_16.DUSIZE_6             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_DUSIZE_6_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_DUSIZE_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_DUSIZE_6_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_DUSIZE_6_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_DUSIZE_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_DUSIZE_6_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_DUSIZE_6_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_DUSIZE_6_GET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_DUSIZE_6_SET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_16_DUSIZE_6_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_17                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_17                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_17.RESERVED_6           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_RESERVED_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_RESERVED_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_RESERVED_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_RESERVED_6_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_RESERVED_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_RESERVED_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_RESERVED_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_RESERVED_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_RESERVED_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_17_RESERVED_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_18                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_18                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_18.RESERVED_6           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_RESERVED_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_RESERVED_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_RESERVED_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_RESERVED_6_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_RESERVED_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_RESERVED_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_RESERVED_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_RESERVED_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_RESERVED_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_18_RESERVED_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_19                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_19                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_19.RESERVED_6           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_RESERVED_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_RESERVED_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_RESERVED_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_RESERVED_6_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_RESERVED_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_RESERVED_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_RESERVED_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_RESERVED_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_RESERVED_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_19_RESERVED_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_20                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_20                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_20.RESERVED_6           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_RESERVED_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_RESERVED_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_RESERVED_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_RESERVED_6_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_RESERVED_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_RESERVED_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_RESERVED_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_RESERVED_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_RESERVED_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_20_RESERVED_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_21                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_21                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_21.RESERVED_6           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_RESERVED_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_RESERVED_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_RESERVED_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_RESERVED_6_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_RESERVED_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_RESERVED_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_RESERVED_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_RESERVED_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_RESERVED_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_21_RESERVED_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_22                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_22                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_22.RESERVED_6           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_RESERVED_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_RESERVED_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_RESERVED_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_RESERVED_6_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_RESERVED_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_RESERVED_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_RESERVED_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_RESERVED_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_RESERVED_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_22_RESERVED_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_23                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_23                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_23.RESERVED_6           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_RESERVED_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_RESERVED_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_RESERVED_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_RESERVED_6_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_RESERVED_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_RESERVED_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_RESERVED_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_RESERVED_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_RESERVED_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_23_RESERVED_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_24                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_24                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_24.RESERVED_6           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_RESERVED_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_RESERVED_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_RESERVED_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_RESERVED_6_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_RESERVED_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_RESERVED_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_RESERVED_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_RESERVED_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_RESERVED_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_24_RESERVED_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_25                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_25                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_25.RESERVED_6           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_RESERVED_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_RESERVED_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_RESERVED_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_RESERVED_6_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_RESERVED_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_RESERVED_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_RESERVED_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_RESERVED_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_RESERVED_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_25_RESERVED_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_26                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_26                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_26.RESERVED_6           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_RESERVED_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_RESERVED_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_RESERVED_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_RESERVED_6_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_RESERVED_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_RESERVED_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_RESERVED_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_RESERVED_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_RESERVED_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_26_RESERVED_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_27                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_27                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_27.RESERVED_6           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_RESERVED_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_RESERVED_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_RESERVED_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_RESERVED_6_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_RESERVED_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_RESERVED_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_RESERVED_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_RESERVED_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_RESERVED_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_27_RESERVED_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_28                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_28                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_28.RESERVED_6           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_RESERVED_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_RESERVED_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_RESERVED_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_RESERVED_6_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_RESERVED_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_RESERVED_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_RESERVED_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_RESERVED_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_RESERVED_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_28_RESERVED_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_29                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_29                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_29.RESERVED_6           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_RESERVED_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_RESERVED_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_RESERVED_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_RESERVED_6_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_RESERVED_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_RESERVED_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_RESERVED_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_RESERVED_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_RESERVED_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_29_RESERVED_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_30                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_30                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_30.RESERVED_6           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_RESERVED_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_RESERVED_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_RESERVED_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_RESERVED_6_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_RESERVED_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_RESERVED_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_RESERVED_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_RESERVED_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_RESERVED_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_30_RESERVED_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_6_31                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_6_31                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_6_31.RESERVED_6           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_RESERVED_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_RESERVED_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_RESERVED_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_RESERVED_6_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_RESERVED_6_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_RESERVED_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_RESERVED_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_RESERVED_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_RESERVED_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_6_31_RESERVED_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_0                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_0                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_0.CRYPTOKEY_7_0         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_CRYPTOKEY_7_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_CRYPTOKEY_7_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_CRYPTOKEY_7_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_CRYPTOKEY_7_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_CRYPTOKEY_7_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_CRYPTOKEY_7_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_CRYPTOKEY_7_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_CRYPTOKEY_7_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_CRYPTOKEY_7_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_0_CRYPTOKEY_7_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_1                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_1                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_1.CRYPTOKEY_7_1         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_CRYPTOKEY_7_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_CRYPTOKEY_7_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_CRYPTOKEY_7_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_CRYPTOKEY_7_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_CRYPTOKEY_7_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_CRYPTOKEY_7_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_CRYPTOKEY_7_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_CRYPTOKEY_7_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_CRYPTOKEY_7_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_1_CRYPTOKEY_7_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_2                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_2                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_2.CRYPTOKEY_7_2         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_CRYPTOKEY_7_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_CRYPTOKEY_7_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_CRYPTOKEY_7_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_CRYPTOKEY_7_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_CRYPTOKEY_7_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_CRYPTOKEY_7_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_CRYPTOKEY_7_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_CRYPTOKEY_7_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_CRYPTOKEY_7_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_2_CRYPTOKEY_7_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_3                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_3                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_3.CRYPTOKEY_7_3         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_CRYPTOKEY_7_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_CRYPTOKEY_7_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_CRYPTOKEY_7_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_CRYPTOKEY_7_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_CRYPTOKEY_7_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_CRYPTOKEY_7_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_CRYPTOKEY_7_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_CRYPTOKEY_7_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_CRYPTOKEY_7_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_3_CRYPTOKEY_7_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_4                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_4                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_4.CRYPTOKEY_7_4         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_CRYPTOKEY_7_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_CRYPTOKEY_7_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_CRYPTOKEY_7_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_CRYPTOKEY_7_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_CRYPTOKEY_7_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_CRYPTOKEY_7_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_CRYPTOKEY_7_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_CRYPTOKEY_7_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_CRYPTOKEY_7_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_4_CRYPTOKEY_7_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_5                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_5                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_5.CRYPTOKEY_7_5         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_CRYPTOKEY_7_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_CRYPTOKEY_7_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_CRYPTOKEY_7_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_CRYPTOKEY_7_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_CRYPTOKEY_7_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_CRYPTOKEY_7_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_CRYPTOKEY_7_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_CRYPTOKEY_7_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_CRYPTOKEY_7_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_5_CRYPTOKEY_7_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_6                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_6                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_6.CRYPTOKEY_7_6         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_CRYPTOKEY_7_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_CRYPTOKEY_7_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_CRYPTOKEY_7_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_CRYPTOKEY_7_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_CRYPTOKEY_7_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_CRYPTOKEY_7_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_CRYPTOKEY_7_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_CRYPTOKEY_7_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_CRYPTOKEY_7_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_6_CRYPTOKEY_7_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_7                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_7                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_7.CRYPTOKEY_7_7         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_CRYPTOKEY_7_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_CRYPTOKEY_7_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_CRYPTOKEY_7_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_CRYPTOKEY_7_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_CRYPTOKEY_7_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_CRYPTOKEY_7_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_CRYPTOKEY_7_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_CRYPTOKEY_7_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_CRYPTOKEY_7_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_7_CRYPTOKEY_7_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_8                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_8                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_8.CRYPTOKEY_7_8         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_CRYPTOKEY_7_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_CRYPTOKEY_7_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_CRYPTOKEY_7_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_CRYPTOKEY_7_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_CRYPTOKEY_7_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_CRYPTOKEY_7_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_CRYPTOKEY_7_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_CRYPTOKEY_7_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_CRYPTOKEY_7_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_8_CRYPTOKEY_7_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_9                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_9                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_9.CRYPTOKEY_7_9         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_CRYPTOKEY_7_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_CRYPTOKEY_7_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_CRYPTOKEY_7_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_CRYPTOKEY_7_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_CRYPTOKEY_7_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_CRYPTOKEY_7_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_CRYPTOKEY_7_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_CRYPTOKEY_7_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_CRYPTOKEY_7_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_9_CRYPTOKEY_7_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_10                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_10                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_10.CRYPTOKEY_7_10       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_CRYPTOKEY_7_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_CRYPTOKEY_7_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_CRYPTOKEY_7_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_CRYPTOKEY_7_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_CRYPTOKEY_7_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_CRYPTOKEY_7_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_CRYPTOKEY_7_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_CRYPTOKEY_7_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_CRYPTOKEY_7_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_10_CRYPTOKEY_7_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_11                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_11                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_11.CRYPTOKEY_7_11       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_CRYPTOKEY_7_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_CRYPTOKEY_7_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_CRYPTOKEY_7_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_CRYPTOKEY_7_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_CRYPTOKEY_7_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_CRYPTOKEY_7_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_CRYPTOKEY_7_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_CRYPTOKEY_7_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_CRYPTOKEY_7_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_11_CRYPTOKEY_7_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_12                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_12                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_12.CRYPTOKEY_7_12       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_CRYPTOKEY_7_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_CRYPTOKEY_7_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_CRYPTOKEY_7_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_CRYPTOKEY_7_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_CRYPTOKEY_7_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_CRYPTOKEY_7_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_CRYPTOKEY_7_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_CRYPTOKEY_7_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_CRYPTOKEY_7_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_12_CRYPTOKEY_7_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_13                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_13                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_13.CRYPTOKEY_7_13       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_CRYPTOKEY_7_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_CRYPTOKEY_7_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_CRYPTOKEY_7_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_CRYPTOKEY_7_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_CRYPTOKEY_7_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_CRYPTOKEY_7_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_CRYPTOKEY_7_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_CRYPTOKEY_7_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_CRYPTOKEY_7_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_13_CRYPTOKEY_7_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_14                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_14                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_14.CRYPTOKEY_7_14       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_CRYPTOKEY_7_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_CRYPTOKEY_7_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_CRYPTOKEY_7_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_CRYPTOKEY_7_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_CRYPTOKEY_7_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_CRYPTOKEY_7_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_CRYPTOKEY_7_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_CRYPTOKEY_7_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_CRYPTOKEY_7_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_14_CRYPTOKEY_7_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_15                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_15                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_15.CRYPTOKEY_7_15       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_CRYPTOKEY_7_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_CRYPTOKEY_7_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_CRYPTOKEY_7_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_CRYPTOKEY_7_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_CRYPTOKEY_7_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_CRYPTOKEY_7_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_CRYPTOKEY_7_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_CRYPTOKEY_7_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_CRYPTOKEY_7_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_15_CRYPTOKEY_7_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_16                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_16                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_16.CFGE_7               */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CFGE_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CFGE_7_LSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CFGE_7_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CFGE_7_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CFGE_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CFGE_7_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CFGE_7_FIELD_MASK 0x80000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CFGE_7_GET(x) \
   (((x) & 0x80000000ul) >> 31)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CFGE_7_SET(x) \
   (((x) << 31) & 0x80000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CFGE_7_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_16.CRYPTPCFG_RSVD_7     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CRYPTPCFG_RSVD_7_MSB 30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CRYPTPCFG_RSVD_7_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CRYPTPCFG_RSVD_7_WIDTH 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CRYPTPCFG_RSVD_7_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CRYPTPCFG_RSVD_7_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CRYPTPCFG_RSVD_7_RESET 0x0000u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CRYPTPCFG_RSVD_7_FIELD_MASK 0x7fff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CRYPTPCFG_RSVD_7_GET(x) \
   (((x) & 0x7fff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CRYPTPCFG_RSVD_7_SET(x) \
   (((x) << 16) & 0x7fff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CRYPTPCFG_RSVD_7_MODIFY(r, x) \
   ((((x) << 16) & 0x7fff0000ul) | ((r) & 0x8000fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_16.CAPIDX_7             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CAPIDX_7_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CAPIDX_7_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CAPIDX_7_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CAPIDX_7_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CAPIDX_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CAPIDX_7_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CAPIDX_7_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CAPIDX_7_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CAPIDX_7_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_CAPIDX_7_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_16.DUSIZE_7             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_DUSIZE_7_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_DUSIZE_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_DUSIZE_7_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_DUSIZE_7_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_DUSIZE_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_DUSIZE_7_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_DUSIZE_7_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_DUSIZE_7_GET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_DUSIZE_7_SET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_16_DUSIZE_7_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_17                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_17                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_17.RESERVED_7           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_RESERVED_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_RESERVED_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_RESERVED_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_RESERVED_7_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_RESERVED_7_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_RESERVED_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_RESERVED_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_RESERVED_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_RESERVED_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_17_RESERVED_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_18                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_18                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_18.RESERVED_7           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_RESERVED_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_RESERVED_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_RESERVED_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_RESERVED_7_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_RESERVED_7_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_RESERVED_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_RESERVED_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_RESERVED_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_RESERVED_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_18_RESERVED_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_19                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_19                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_19.RESERVED_7           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_RESERVED_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_RESERVED_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_RESERVED_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_RESERVED_7_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_RESERVED_7_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_RESERVED_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_RESERVED_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_RESERVED_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_RESERVED_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_19_RESERVED_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_20                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_20                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_20.RESERVED_7           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_RESERVED_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_RESERVED_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_RESERVED_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_RESERVED_7_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_RESERVED_7_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_RESERVED_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_RESERVED_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_RESERVED_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_RESERVED_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_20_RESERVED_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_21                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_21                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_21.RESERVED_7           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_RESERVED_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_RESERVED_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_RESERVED_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_RESERVED_7_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_RESERVED_7_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_RESERVED_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_RESERVED_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_RESERVED_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_RESERVED_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_21_RESERVED_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_22                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_22                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_22.RESERVED_7           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_RESERVED_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_RESERVED_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_RESERVED_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_RESERVED_7_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_RESERVED_7_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_RESERVED_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_RESERVED_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_RESERVED_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_RESERVED_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_22_RESERVED_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_23                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_23                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_23.RESERVED_7           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_RESERVED_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_RESERVED_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_RESERVED_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_RESERVED_7_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_RESERVED_7_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_RESERVED_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_RESERVED_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_RESERVED_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_RESERVED_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_23_RESERVED_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_24                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_24                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_24.RESERVED_7           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_RESERVED_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_RESERVED_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_RESERVED_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_RESERVED_7_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_RESERVED_7_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_RESERVED_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_RESERVED_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_RESERVED_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_RESERVED_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_24_RESERVED_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_25                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_25                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_25.RESERVED_7           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_RESERVED_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_RESERVED_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_RESERVED_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_RESERVED_7_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_RESERVED_7_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_RESERVED_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_RESERVED_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_RESERVED_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_RESERVED_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_25_RESERVED_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_26                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_26                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_26.RESERVED_7           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_RESERVED_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_RESERVED_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_RESERVED_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_RESERVED_7_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_RESERVED_7_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_RESERVED_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_RESERVED_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_RESERVED_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_RESERVED_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_26_RESERVED_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_27                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_27                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_27.RESERVED_7           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_RESERVED_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_RESERVED_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_RESERVED_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_RESERVED_7_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_RESERVED_7_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_RESERVED_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_RESERVED_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_RESERVED_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_RESERVED_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_27_RESERVED_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_28                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_28                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_28.RESERVED_7           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_RESERVED_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_RESERVED_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_RESERVED_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_RESERVED_7_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_RESERVED_7_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_RESERVED_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_RESERVED_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_RESERVED_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_RESERVED_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_28_RESERVED_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_29                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_29                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_29.RESERVED_7           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_RESERVED_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_RESERVED_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_RESERVED_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_RESERVED_7_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_RESERVED_7_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_RESERVED_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_RESERVED_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_RESERVED_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_RESERVED_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_29_RESERVED_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_30                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_30                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_30.RESERVED_7           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_RESERVED_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_RESERVED_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_RESERVED_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_RESERVED_7_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_RESERVED_7_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_RESERVED_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_RESERVED_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_RESERVED_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_RESERVED_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_30_RESERVED_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_7_31                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_7_31                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_7_31.RESERVED_7           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_RESERVED_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_RESERVED_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_RESERVED_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_RESERVED_7_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_RESERVED_7_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_RESERVED_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_RESERVED_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_RESERVED_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_RESERVED_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_7_31_RESERVED_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_0                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_0                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_0.CRYPTOKEY_8_0         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_CRYPTOKEY_8_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_CRYPTOKEY_8_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_CRYPTOKEY_8_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_CRYPTOKEY_8_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_CRYPTOKEY_8_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_CRYPTOKEY_8_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_CRYPTOKEY_8_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_CRYPTOKEY_8_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_CRYPTOKEY_8_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_0_CRYPTOKEY_8_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_1                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_1                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_1.CRYPTOKEY_8_1         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_CRYPTOKEY_8_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_CRYPTOKEY_8_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_CRYPTOKEY_8_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_CRYPTOKEY_8_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_CRYPTOKEY_8_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_CRYPTOKEY_8_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_CRYPTOKEY_8_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_CRYPTOKEY_8_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_CRYPTOKEY_8_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_1_CRYPTOKEY_8_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_2                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_2                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_2.CRYPTOKEY_8_2         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_CRYPTOKEY_8_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_CRYPTOKEY_8_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_CRYPTOKEY_8_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_CRYPTOKEY_8_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_CRYPTOKEY_8_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_CRYPTOKEY_8_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_CRYPTOKEY_8_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_CRYPTOKEY_8_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_CRYPTOKEY_8_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_2_CRYPTOKEY_8_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_3                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_3                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_3.CRYPTOKEY_8_3         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_CRYPTOKEY_8_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_CRYPTOKEY_8_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_CRYPTOKEY_8_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_CRYPTOKEY_8_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_CRYPTOKEY_8_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_CRYPTOKEY_8_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_CRYPTOKEY_8_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_CRYPTOKEY_8_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_CRYPTOKEY_8_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_3_CRYPTOKEY_8_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_4                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_4                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_4.CRYPTOKEY_8_4         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_CRYPTOKEY_8_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_CRYPTOKEY_8_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_CRYPTOKEY_8_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_CRYPTOKEY_8_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_CRYPTOKEY_8_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_CRYPTOKEY_8_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_CRYPTOKEY_8_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_CRYPTOKEY_8_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_CRYPTOKEY_8_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_4_CRYPTOKEY_8_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_5                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_5                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_5.CRYPTOKEY_8_5         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_CRYPTOKEY_8_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_CRYPTOKEY_8_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_CRYPTOKEY_8_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_CRYPTOKEY_8_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_CRYPTOKEY_8_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_CRYPTOKEY_8_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_CRYPTOKEY_8_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_CRYPTOKEY_8_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_CRYPTOKEY_8_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_5_CRYPTOKEY_8_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_6                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_6                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_6.CRYPTOKEY_8_6         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_CRYPTOKEY_8_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_CRYPTOKEY_8_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_CRYPTOKEY_8_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_CRYPTOKEY_8_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_CRYPTOKEY_8_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_CRYPTOKEY_8_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_CRYPTOKEY_8_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_CRYPTOKEY_8_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_CRYPTOKEY_8_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_6_CRYPTOKEY_8_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_7                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_7                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_7.CRYPTOKEY_8_7         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_CRYPTOKEY_8_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_CRYPTOKEY_8_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_CRYPTOKEY_8_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_CRYPTOKEY_8_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_CRYPTOKEY_8_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_CRYPTOKEY_8_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_CRYPTOKEY_8_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_CRYPTOKEY_8_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_CRYPTOKEY_8_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_7_CRYPTOKEY_8_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_8                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_8                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_8.CRYPTOKEY_8_8         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_CRYPTOKEY_8_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_CRYPTOKEY_8_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_CRYPTOKEY_8_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_CRYPTOKEY_8_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_CRYPTOKEY_8_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_CRYPTOKEY_8_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_CRYPTOKEY_8_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_CRYPTOKEY_8_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_CRYPTOKEY_8_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_8_CRYPTOKEY_8_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_9                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_9                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_9.CRYPTOKEY_8_9         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_CRYPTOKEY_8_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_CRYPTOKEY_8_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_CRYPTOKEY_8_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_CRYPTOKEY_8_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_CRYPTOKEY_8_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_CRYPTOKEY_8_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_CRYPTOKEY_8_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_CRYPTOKEY_8_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_CRYPTOKEY_8_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_9_CRYPTOKEY_8_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_10                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_10                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_10.CRYPTOKEY_8_10       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_CRYPTOKEY_8_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_CRYPTOKEY_8_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_CRYPTOKEY_8_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_CRYPTOKEY_8_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_CRYPTOKEY_8_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_CRYPTOKEY_8_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_CRYPTOKEY_8_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_CRYPTOKEY_8_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_CRYPTOKEY_8_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_10_CRYPTOKEY_8_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_11                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_11                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_11.CRYPTOKEY_8_11       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_CRYPTOKEY_8_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_CRYPTOKEY_8_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_CRYPTOKEY_8_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_CRYPTOKEY_8_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_CRYPTOKEY_8_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_CRYPTOKEY_8_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_CRYPTOKEY_8_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_CRYPTOKEY_8_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_CRYPTOKEY_8_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_11_CRYPTOKEY_8_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_12                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_12                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_12.CRYPTOKEY_8_12       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_CRYPTOKEY_8_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_CRYPTOKEY_8_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_CRYPTOKEY_8_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_CRYPTOKEY_8_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_CRYPTOKEY_8_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_CRYPTOKEY_8_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_CRYPTOKEY_8_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_CRYPTOKEY_8_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_CRYPTOKEY_8_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_12_CRYPTOKEY_8_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_13                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_13                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_13.CRYPTOKEY_8_13       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_CRYPTOKEY_8_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_CRYPTOKEY_8_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_CRYPTOKEY_8_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_CRYPTOKEY_8_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_CRYPTOKEY_8_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_CRYPTOKEY_8_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_CRYPTOKEY_8_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_CRYPTOKEY_8_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_CRYPTOKEY_8_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_13_CRYPTOKEY_8_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_14                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_14                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_14.CRYPTOKEY_8_14       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_CRYPTOKEY_8_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_CRYPTOKEY_8_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_CRYPTOKEY_8_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_CRYPTOKEY_8_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_CRYPTOKEY_8_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_CRYPTOKEY_8_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_CRYPTOKEY_8_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_CRYPTOKEY_8_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_CRYPTOKEY_8_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_14_CRYPTOKEY_8_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_15                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_15                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_15.CRYPTOKEY_8_15       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_CRYPTOKEY_8_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_CRYPTOKEY_8_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_CRYPTOKEY_8_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_CRYPTOKEY_8_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_CRYPTOKEY_8_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_CRYPTOKEY_8_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_CRYPTOKEY_8_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_CRYPTOKEY_8_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_CRYPTOKEY_8_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_15_CRYPTOKEY_8_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_16                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_16                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_16.CFGE_8               */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CFGE_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CFGE_8_LSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CFGE_8_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CFGE_8_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CFGE_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CFGE_8_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CFGE_8_FIELD_MASK 0x80000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CFGE_8_GET(x) \
   (((x) & 0x80000000ul) >> 31)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CFGE_8_SET(x) \
   (((x) << 31) & 0x80000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CFGE_8_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_16.CRYPTPCFG_RSVD_8     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CRYPTPCFG_RSVD_8_MSB 30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CRYPTPCFG_RSVD_8_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CRYPTPCFG_RSVD_8_WIDTH 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CRYPTPCFG_RSVD_8_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CRYPTPCFG_RSVD_8_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CRYPTPCFG_RSVD_8_RESET 0x0000u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CRYPTPCFG_RSVD_8_FIELD_MASK 0x7fff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CRYPTPCFG_RSVD_8_GET(x) \
   (((x) & 0x7fff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CRYPTPCFG_RSVD_8_SET(x) \
   (((x) << 16) & 0x7fff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CRYPTPCFG_RSVD_8_MODIFY(r, x) \
   ((((x) << 16) & 0x7fff0000ul) | ((r) & 0x8000fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_16.CAPIDX_8             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CAPIDX_8_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CAPIDX_8_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CAPIDX_8_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CAPIDX_8_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CAPIDX_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CAPIDX_8_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CAPIDX_8_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CAPIDX_8_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CAPIDX_8_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_CAPIDX_8_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_16.DUSIZE_8             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_DUSIZE_8_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_DUSIZE_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_DUSIZE_8_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_DUSIZE_8_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_DUSIZE_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_DUSIZE_8_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_DUSIZE_8_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_DUSIZE_8_GET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_DUSIZE_8_SET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_16_DUSIZE_8_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_17                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_17                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_17.RESERVED_8           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_RESERVED_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_RESERVED_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_RESERVED_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_RESERVED_8_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_RESERVED_8_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_RESERVED_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_RESERVED_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_RESERVED_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_RESERVED_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_17_RESERVED_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_18                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_18                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_18.RESERVED_8           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_RESERVED_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_RESERVED_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_RESERVED_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_RESERVED_8_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_RESERVED_8_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_RESERVED_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_RESERVED_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_RESERVED_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_RESERVED_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_18_RESERVED_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_19                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_19                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_19.RESERVED_8           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_RESERVED_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_RESERVED_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_RESERVED_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_RESERVED_8_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_RESERVED_8_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_RESERVED_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_RESERVED_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_RESERVED_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_RESERVED_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_19_RESERVED_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_20                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_20                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_20.RESERVED_8           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_RESERVED_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_RESERVED_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_RESERVED_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_RESERVED_8_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_RESERVED_8_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_RESERVED_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_RESERVED_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_RESERVED_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_RESERVED_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_20_RESERVED_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_21                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_21                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_21.RESERVED_8           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_RESERVED_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_RESERVED_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_RESERVED_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_RESERVED_8_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_RESERVED_8_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_RESERVED_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_RESERVED_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_RESERVED_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_RESERVED_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_21_RESERVED_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_22                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_22                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_22.RESERVED_8           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_RESERVED_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_RESERVED_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_RESERVED_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_RESERVED_8_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_RESERVED_8_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_RESERVED_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_RESERVED_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_RESERVED_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_RESERVED_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_22_RESERVED_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_23                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_23                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_23.RESERVED_8           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_RESERVED_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_RESERVED_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_RESERVED_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_RESERVED_8_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_RESERVED_8_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_RESERVED_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_RESERVED_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_RESERVED_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_RESERVED_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_23_RESERVED_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_24                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_24                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_24.RESERVED_8           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_RESERVED_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_RESERVED_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_RESERVED_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_RESERVED_8_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_RESERVED_8_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_RESERVED_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_RESERVED_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_RESERVED_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_RESERVED_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_24_RESERVED_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_25                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_25                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_25.RESERVED_8           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_RESERVED_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_RESERVED_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_RESERVED_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_RESERVED_8_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_RESERVED_8_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_RESERVED_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_RESERVED_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_RESERVED_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_RESERVED_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_25_RESERVED_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_26                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_26                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_26.RESERVED_8           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_RESERVED_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_RESERVED_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_RESERVED_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_RESERVED_8_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_RESERVED_8_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_RESERVED_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_RESERVED_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_RESERVED_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_RESERVED_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_26_RESERVED_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_27                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_27                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_27.RESERVED_8           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_RESERVED_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_RESERVED_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_RESERVED_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_RESERVED_8_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_RESERVED_8_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_RESERVED_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_RESERVED_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_RESERVED_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_RESERVED_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_27_RESERVED_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_28                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_28                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_28.RESERVED_8           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_RESERVED_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_RESERVED_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_RESERVED_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_RESERVED_8_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_RESERVED_8_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_RESERVED_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_RESERVED_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_RESERVED_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_RESERVED_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_28_RESERVED_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_29                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_29                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_29.RESERVED_8           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_RESERVED_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_RESERVED_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_RESERVED_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_RESERVED_8_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_RESERVED_8_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_RESERVED_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_RESERVED_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_RESERVED_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_RESERVED_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_29_RESERVED_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_30                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_30                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_30.RESERVED_8           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_RESERVED_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_RESERVED_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_RESERVED_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_RESERVED_8_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_RESERVED_8_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_RESERVED_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_RESERVED_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_RESERVED_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_RESERVED_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_30_RESERVED_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_8_31                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_8_31                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_8_31.RESERVED_8           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_RESERVED_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_RESERVED_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_RESERVED_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_RESERVED_8_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_RESERVED_8_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_RESERVED_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_RESERVED_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_RESERVED_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_RESERVED_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_8_31_RESERVED_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_0                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_0                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_0.CRYPTOKEY_9_0         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_CRYPTOKEY_9_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_CRYPTOKEY_9_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_CRYPTOKEY_9_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_CRYPTOKEY_9_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_CRYPTOKEY_9_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_CRYPTOKEY_9_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_CRYPTOKEY_9_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_CRYPTOKEY_9_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_CRYPTOKEY_9_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_0_CRYPTOKEY_9_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_1                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_1                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_1.CRYPTOKEY_9_1         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_CRYPTOKEY_9_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_CRYPTOKEY_9_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_CRYPTOKEY_9_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_CRYPTOKEY_9_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_CRYPTOKEY_9_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_CRYPTOKEY_9_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_CRYPTOKEY_9_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_CRYPTOKEY_9_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_CRYPTOKEY_9_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_1_CRYPTOKEY_9_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_2                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_2                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_2.CRYPTOKEY_9_2         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_CRYPTOKEY_9_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_CRYPTOKEY_9_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_CRYPTOKEY_9_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_CRYPTOKEY_9_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_CRYPTOKEY_9_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_CRYPTOKEY_9_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_CRYPTOKEY_9_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_CRYPTOKEY_9_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_CRYPTOKEY_9_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_2_CRYPTOKEY_9_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_3                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_3                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_3.CRYPTOKEY_9_3         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_CRYPTOKEY_9_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_CRYPTOKEY_9_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_CRYPTOKEY_9_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_CRYPTOKEY_9_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_CRYPTOKEY_9_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_CRYPTOKEY_9_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_CRYPTOKEY_9_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_CRYPTOKEY_9_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_CRYPTOKEY_9_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_3_CRYPTOKEY_9_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_4                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_4                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_4.CRYPTOKEY_9_4         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_CRYPTOKEY_9_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_CRYPTOKEY_9_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_CRYPTOKEY_9_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_CRYPTOKEY_9_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_CRYPTOKEY_9_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_CRYPTOKEY_9_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_CRYPTOKEY_9_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_CRYPTOKEY_9_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_CRYPTOKEY_9_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_4_CRYPTOKEY_9_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_5                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_5                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_5.CRYPTOKEY_9_5         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_CRYPTOKEY_9_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_CRYPTOKEY_9_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_CRYPTOKEY_9_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_CRYPTOKEY_9_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_CRYPTOKEY_9_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_CRYPTOKEY_9_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_CRYPTOKEY_9_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_CRYPTOKEY_9_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_CRYPTOKEY_9_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_5_CRYPTOKEY_9_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_6                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_6                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_6.CRYPTOKEY_9_6         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_CRYPTOKEY_9_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_CRYPTOKEY_9_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_CRYPTOKEY_9_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_CRYPTOKEY_9_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_CRYPTOKEY_9_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_CRYPTOKEY_9_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_CRYPTOKEY_9_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_CRYPTOKEY_9_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_CRYPTOKEY_9_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_6_CRYPTOKEY_9_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_7                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_7                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_7.CRYPTOKEY_9_7         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_CRYPTOKEY_9_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_CRYPTOKEY_9_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_CRYPTOKEY_9_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_CRYPTOKEY_9_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_CRYPTOKEY_9_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_CRYPTOKEY_9_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_CRYPTOKEY_9_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_CRYPTOKEY_9_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_CRYPTOKEY_9_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_7_CRYPTOKEY_9_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_8                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_8                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_8.CRYPTOKEY_9_8         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_CRYPTOKEY_9_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_CRYPTOKEY_9_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_CRYPTOKEY_9_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_CRYPTOKEY_9_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_CRYPTOKEY_9_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_CRYPTOKEY_9_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_CRYPTOKEY_9_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_CRYPTOKEY_9_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_CRYPTOKEY_9_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_8_CRYPTOKEY_9_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_9                      */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_9                  */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_9.CRYPTOKEY_9_9         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_CRYPTOKEY_9_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_CRYPTOKEY_9_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_CRYPTOKEY_9_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_CRYPTOKEY_9_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_CRYPTOKEY_9_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_CRYPTOKEY_9_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_CRYPTOKEY_9_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_CRYPTOKEY_9_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_CRYPTOKEY_9_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_9_CRYPTOKEY_9_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_10                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_10                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_10.CRYPTOKEY_9_10       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_CRYPTOKEY_9_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_CRYPTOKEY_9_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_CRYPTOKEY_9_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_CRYPTOKEY_9_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_CRYPTOKEY_9_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_CRYPTOKEY_9_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_CRYPTOKEY_9_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_CRYPTOKEY_9_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_CRYPTOKEY_9_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_10_CRYPTOKEY_9_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_11                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_11                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_11.CRYPTOKEY_9_11       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_CRYPTOKEY_9_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_CRYPTOKEY_9_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_CRYPTOKEY_9_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_CRYPTOKEY_9_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_CRYPTOKEY_9_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_CRYPTOKEY_9_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_CRYPTOKEY_9_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_CRYPTOKEY_9_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_CRYPTOKEY_9_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_11_CRYPTOKEY_9_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_12                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_12                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_12.CRYPTOKEY_9_12       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_CRYPTOKEY_9_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_CRYPTOKEY_9_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_CRYPTOKEY_9_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_CRYPTOKEY_9_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_CRYPTOKEY_9_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_CRYPTOKEY_9_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_CRYPTOKEY_9_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_CRYPTOKEY_9_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_CRYPTOKEY_9_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_12_CRYPTOKEY_9_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_13                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_13                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_13.CRYPTOKEY_9_13       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_CRYPTOKEY_9_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_CRYPTOKEY_9_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_CRYPTOKEY_9_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_CRYPTOKEY_9_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_CRYPTOKEY_9_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_CRYPTOKEY_9_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_CRYPTOKEY_9_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_CRYPTOKEY_9_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_CRYPTOKEY_9_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_13_CRYPTOKEY_9_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_14                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_14                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_14.CRYPTOKEY_9_14       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_CRYPTOKEY_9_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_CRYPTOKEY_9_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_CRYPTOKEY_9_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_CRYPTOKEY_9_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_CRYPTOKEY_9_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_CRYPTOKEY_9_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_CRYPTOKEY_9_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_CRYPTOKEY_9_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_CRYPTOKEY_9_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_14_CRYPTOKEY_9_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_15                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_15                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_15.CRYPTOKEY_9_15       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_CRYPTOKEY_9_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_CRYPTOKEY_9_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_CRYPTOKEY_9_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_CRYPTOKEY_9_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_CRYPTOKEY_9_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_CRYPTOKEY_9_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_CRYPTOKEY_9_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_CRYPTOKEY_9_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_CRYPTOKEY_9_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_15_CRYPTOKEY_9_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_16                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_16                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_16.CFGE_9               */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CFGE_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CFGE_9_LSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CFGE_9_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CFGE_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CFGE_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CFGE_9_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CFGE_9_FIELD_MASK 0x80000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CFGE_9_GET(x) \
   (((x) & 0x80000000ul) >> 31)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CFGE_9_SET(x) \
   (((x) << 31) & 0x80000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CFGE_9_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_16.CRYPTPCFG_RSVD_9     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CRYPTPCFG_RSVD_9_MSB 30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CRYPTPCFG_RSVD_9_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CRYPTPCFG_RSVD_9_WIDTH 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CRYPTPCFG_RSVD_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CRYPTPCFG_RSVD_9_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CRYPTPCFG_RSVD_9_RESET 0x0000u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CRYPTPCFG_RSVD_9_FIELD_MASK 0x7fff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CRYPTPCFG_RSVD_9_GET(x) \
   (((x) & 0x7fff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CRYPTPCFG_RSVD_9_SET(x) \
   (((x) << 16) & 0x7fff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CRYPTPCFG_RSVD_9_MODIFY(r, x) \
   ((((x) << 16) & 0x7fff0000ul) | ((r) & 0x8000fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_16.CAPIDX_9             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CAPIDX_9_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CAPIDX_9_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CAPIDX_9_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CAPIDX_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CAPIDX_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CAPIDX_9_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CAPIDX_9_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CAPIDX_9_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CAPIDX_9_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_CAPIDX_9_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_16.DUSIZE_9             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_DUSIZE_9_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_DUSIZE_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_DUSIZE_9_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_DUSIZE_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_DUSIZE_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_DUSIZE_9_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_DUSIZE_9_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_DUSIZE_9_GET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_DUSIZE_9_SET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_16_DUSIZE_9_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_17                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_17                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_17.RESERVED_9           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_RESERVED_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_RESERVED_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_RESERVED_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_RESERVED_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_RESERVED_9_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_RESERVED_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_RESERVED_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_RESERVED_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_RESERVED_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_17_RESERVED_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_18                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_18                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_18.RESERVED_9           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_RESERVED_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_RESERVED_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_RESERVED_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_RESERVED_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_RESERVED_9_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_RESERVED_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_RESERVED_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_RESERVED_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_RESERVED_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_18_RESERVED_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_19                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_19                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_19.RESERVED_9           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_RESERVED_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_RESERVED_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_RESERVED_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_RESERVED_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_RESERVED_9_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_RESERVED_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_RESERVED_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_RESERVED_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_RESERVED_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_19_RESERVED_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_20                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_20                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_20.RESERVED_9           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_RESERVED_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_RESERVED_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_RESERVED_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_RESERVED_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_RESERVED_9_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_RESERVED_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_RESERVED_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_RESERVED_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_RESERVED_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_20_RESERVED_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_21                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_21                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_21.RESERVED_9           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_RESERVED_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_RESERVED_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_RESERVED_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_RESERVED_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_RESERVED_9_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_RESERVED_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_RESERVED_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_RESERVED_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_RESERVED_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_21_RESERVED_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_22                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_22                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_22.RESERVED_9           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_RESERVED_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_RESERVED_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_RESERVED_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_RESERVED_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_RESERVED_9_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_RESERVED_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_RESERVED_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_RESERVED_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_RESERVED_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_22_RESERVED_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_23                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_23                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_23.RESERVED_9           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_RESERVED_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_RESERVED_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_RESERVED_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_RESERVED_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_RESERVED_9_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_RESERVED_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_RESERVED_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_RESERVED_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_RESERVED_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_23_RESERVED_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_24                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_24                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_24.RESERVED_9           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_RESERVED_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_RESERVED_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_RESERVED_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_RESERVED_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_RESERVED_9_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_RESERVED_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_RESERVED_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_RESERVED_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_RESERVED_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_24_RESERVED_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_25                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_25                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_25.RESERVED_9           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_RESERVED_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_RESERVED_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_RESERVED_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_RESERVED_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_RESERVED_9_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_RESERVED_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_RESERVED_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_RESERVED_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_RESERVED_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_25_RESERVED_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_26                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_26                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_26.RESERVED_9           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_RESERVED_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_RESERVED_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_RESERVED_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_RESERVED_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_RESERVED_9_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_RESERVED_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_RESERVED_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_RESERVED_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_RESERVED_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_26_RESERVED_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_27                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_27                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_27.RESERVED_9           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_RESERVED_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_RESERVED_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_RESERVED_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_RESERVED_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_RESERVED_9_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_RESERVED_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_RESERVED_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_RESERVED_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_RESERVED_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_27_RESERVED_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_28                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_28                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_28.RESERVED_9           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_RESERVED_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_RESERVED_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_RESERVED_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_RESERVED_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_RESERVED_9_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_RESERVED_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_RESERVED_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_RESERVED_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_RESERVED_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_28_RESERVED_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_29                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_29                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_29.RESERVED_9           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_RESERVED_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_RESERVED_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_RESERVED_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_RESERVED_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_RESERVED_9_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_RESERVED_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_RESERVED_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_RESERVED_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_RESERVED_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_29_RESERVED_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_30                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_30                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_30.RESERVED_9           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_RESERVED_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_RESERVED_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_RESERVED_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_RESERVED_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_RESERVED_9_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_RESERVED_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_RESERVED_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_RESERVED_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_RESERVED_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_30_RESERVED_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_9_31                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_9_31                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_9_31.RESERVED_9           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_RESERVED_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_RESERVED_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_RESERVED_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_RESERVED_9_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_RESERVED_9_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_RESERVED_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_RESERVED_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_RESERVED_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_RESERVED_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_9_31_RESERVED_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_0                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_0                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_0.CRYPTOKEY_10_0       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_CRYPTOKEY_10_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_CRYPTOKEY_10_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_CRYPTOKEY_10_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_CRYPTOKEY_10_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_CRYPTOKEY_10_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_CRYPTOKEY_10_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_CRYPTOKEY_10_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_CRYPTOKEY_10_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_CRYPTOKEY_10_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_0_CRYPTOKEY_10_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_1                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_1                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_1.CRYPTOKEY_10_1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_CRYPTOKEY_10_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_CRYPTOKEY_10_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_CRYPTOKEY_10_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_CRYPTOKEY_10_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_CRYPTOKEY_10_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_CRYPTOKEY_10_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_CRYPTOKEY_10_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_CRYPTOKEY_10_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_CRYPTOKEY_10_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_1_CRYPTOKEY_10_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_2                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_2                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_2.CRYPTOKEY_10_2       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_CRYPTOKEY_10_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_CRYPTOKEY_10_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_CRYPTOKEY_10_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_CRYPTOKEY_10_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_CRYPTOKEY_10_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_CRYPTOKEY_10_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_CRYPTOKEY_10_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_CRYPTOKEY_10_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_CRYPTOKEY_10_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_2_CRYPTOKEY_10_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_3                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_3                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_3.CRYPTOKEY_10_3       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_CRYPTOKEY_10_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_CRYPTOKEY_10_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_CRYPTOKEY_10_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_CRYPTOKEY_10_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_CRYPTOKEY_10_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_CRYPTOKEY_10_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_CRYPTOKEY_10_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_CRYPTOKEY_10_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_CRYPTOKEY_10_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_3_CRYPTOKEY_10_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_4                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_4                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_4.CRYPTOKEY_10_4       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_CRYPTOKEY_10_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_CRYPTOKEY_10_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_CRYPTOKEY_10_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_CRYPTOKEY_10_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_CRYPTOKEY_10_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_CRYPTOKEY_10_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_CRYPTOKEY_10_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_CRYPTOKEY_10_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_CRYPTOKEY_10_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_4_CRYPTOKEY_10_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_5                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_5                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_5.CRYPTOKEY_10_5       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_CRYPTOKEY_10_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_CRYPTOKEY_10_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_CRYPTOKEY_10_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_CRYPTOKEY_10_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_CRYPTOKEY_10_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_CRYPTOKEY_10_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_CRYPTOKEY_10_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_CRYPTOKEY_10_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_CRYPTOKEY_10_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_5_CRYPTOKEY_10_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_6                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_6                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_6.CRYPTOKEY_10_6       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_CRYPTOKEY_10_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_CRYPTOKEY_10_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_CRYPTOKEY_10_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_CRYPTOKEY_10_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_CRYPTOKEY_10_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_CRYPTOKEY_10_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_CRYPTOKEY_10_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_CRYPTOKEY_10_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_CRYPTOKEY_10_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_6_CRYPTOKEY_10_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_7                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_7                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_7.CRYPTOKEY_10_7       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_CRYPTOKEY_10_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_CRYPTOKEY_10_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_CRYPTOKEY_10_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_CRYPTOKEY_10_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_CRYPTOKEY_10_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_CRYPTOKEY_10_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_CRYPTOKEY_10_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_CRYPTOKEY_10_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_CRYPTOKEY_10_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_7_CRYPTOKEY_10_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_8                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_8                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_8.CRYPTOKEY_10_8       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_CRYPTOKEY_10_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_CRYPTOKEY_10_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_CRYPTOKEY_10_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_CRYPTOKEY_10_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_CRYPTOKEY_10_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_CRYPTOKEY_10_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_CRYPTOKEY_10_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_CRYPTOKEY_10_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_CRYPTOKEY_10_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_8_CRYPTOKEY_10_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_9                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_9                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_9.CRYPTOKEY_10_9       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_CRYPTOKEY_10_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_CRYPTOKEY_10_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_CRYPTOKEY_10_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_CRYPTOKEY_10_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_CRYPTOKEY_10_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_CRYPTOKEY_10_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_CRYPTOKEY_10_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_CRYPTOKEY_10_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_CRYPTOKEY_10_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_9_CRYPTOKEY_10_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_10                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_10                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_10.CRYPTOKEY_10_10     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_CRYPTOKEY_10_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_CRYPTOKEY_10_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_CRYPTOKEY_10_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_CRYPTOKEY_10_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_CRYPTOKEY_10_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_CRYPTOKEY_10_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_CRYPTOKEY_10_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_CRYPTOKEY_10_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_CRYPTOKEY_10_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_10_CRYPTOKEY_10_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_11                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_11                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_11.CRYPTOKEY_10_11     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_CRYPTOKEY_10_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_CRYPTOKEY_10_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_CRYPTOKEY_10_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_CRYPTOKEY_10_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_CRYPTOKEY_10_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_CRYPTOKEY_10_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_CRYPTOKEY_10_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_CRYPTOKEY_10_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_CRYPTOKEY_10_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_11_CRYPTOKEY_10_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_12                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_12                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_12.CRYPTOKEY_10_12     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_CRYPTOKEY_10_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_CRYPTOKEY_10_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_CRYPTOKEY_10_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_CRYPTOKEY_10_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_CRYPTOKEY_10_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_CRYPTOKEY_10_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_CRYPTOKEY_10_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_CRYPTOKEY_10_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_CRYPTOKEY_10_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_12_CRYPTOKEY_10_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_13                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_13                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_13.CRYPTOKEY_10_13     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_CRYPTOKEY_10_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_CRYPTOKEY_10_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_CRYPTOKEY_10_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_CRYPTOKEY_10_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_CRYPTOKEY_10_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_CRYPTOKEY_10_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_CRYPTOKEY_10_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_CRYPTOKEY_10_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_CRYPTOKEY_10_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_13_CRYPTOKEY_10_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_14                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_14                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_14.CRYPTOKEY_10_14     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_CRYPTOKEY_10_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_CRYPTOKEY_10_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_CRYPTOKEY_10_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_CRYPTOKEY_10_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_CRYPTOKEY_10_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_CRYPTOKEY_10_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_CRYPTOKEY_10_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_CRYPTOKEY_10_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_CRYPTOKEY_10_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_14_CRYPTOKEY_10_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_15                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_15                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_15.CRYPTOKEY_10_15     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_CRYPTOKEY_10_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_CRYPTOKEY_10_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_CRYPTOKEY_10_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_CRYPTOKEY_10_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_CRYPTOKEY_10_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_CRYPTOKEY_10_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_CRYPTOKEY_10_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_CRYPTOKEY_10_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_CRYPTOKEY_10_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_15_CRYPTOKEY_10_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_16                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_16                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_16.CFGE_10             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CFGE_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CFGE_10_LSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CFGE_10_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CFGE_10_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CFGE_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CFGE_10_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CFGE_10_FIELD_MASK 0x80000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CFGE_10_GET(x) \
   (((x) & 0x80000000ul) >> 31)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CFGE_10_SET(x) \
   (((x) << 31) & 0x80000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CFGE_10_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_16.CRYPTPCFG_RSVD_10   */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CRYPTPCFG_RSVD_10_MSB 30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CRYPTPCFG_RSVD_10_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CRYPTPCFG_RSVD_10_WIDTH 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CRYPTPCFG_RSVD_10_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CRYPTPCFG_RSVD_10_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CRYPTPCFG_RSVD_10_RESET 0x0000u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CRYPTPCFG_RSVD_10_FIELD_MASK 0x7fff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CRYPTPCFG_RSVD_10_GET(x) \
   (((x) & 0x7fff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CRYPTPCFG_RSVD_10_SET(x) \
   (((x) << 16) & 0x7fff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CRYPTPCFG_RSVD_10_MODIFY(r, x) \
   ((((x) << 16) & 0x7fff0000ul) | ((r) & 0x8000fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_16.CAPIDX_10           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CAPIDX_10_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CAPIDX_10_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CAPIDX_10_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CAPIDX_10_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CAPIDX_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CAPIDX_10_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CAPIDX_10_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CAPIDX_10_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CAPIDX_10_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_CAPIDX_10_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_16.DUSIZE_10           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_DUSIZE_10_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_DUSIZE_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_DUSIZE_10_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_DUSIZE_10_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_DUSIZE_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_DUSIZE_10_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_DUSIZE_10_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_DUSIZE_10_GET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_DUSIZE_10_SET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_16_DUSIZE_10_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_17                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_17                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_17.RESERVED_10         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_RESERVED_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_RESERVED_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_RESERVED_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_RESERVED_10_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_RESERVED_10_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_RESERVED_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_RESERVED_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_RESERVED_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_RESERVED_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_17_RESERVED_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_18                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_18                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_18.RESERVED_10         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_RESERVED_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_RESERVED_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_RESERVED_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_RESERVED_10_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_RESERVED_10_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_RESERVED_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_RESERVED_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_RESERVED_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_RESERVED_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_18_RESERVED_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_19                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_19                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_19.RESERVED_10         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_RESERVED_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_RESERVED_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_RESERVED_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_RESERVED_10_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_RESERVED_10_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_RESERVED_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_RESERVED_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_RESERVED_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_RESERVED_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_19_RESERVED_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_20                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_20                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_20.RESERVED_10         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_RESERVED_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_RESERVED_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_RESERVED_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_RESERVED_10_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_RESERVED_10_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_RESERVED_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_RESERVED_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_RESERVED_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_RESERVED_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_20_RESERVED_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_21                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_21                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_21.RESERVED_10         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_RESERVED_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_RESERVED_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_RESERVED_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_RESERVED_10_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_RESERVED_10_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_RESERVED_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_RESERVED_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_RESERVED_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_RESERVED_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_21_RESERVED_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_22                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_22                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_22.RESERVED_10         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_RESERVED_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_RESERVED_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_RESERVED_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_RESERVED_10_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_RESERVED_10_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_RESERVED_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_RESERVED_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_RESERVED_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_RESERVED_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_22_RESERVED_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_23                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_23                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_23.RESERVED_10         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_RESERVED_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_RESERVED_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_RESERVED_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_RESERVED_10_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_RESERVED_10_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_RESERVED_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_RESERVED_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_RESERVED_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_RESERVED_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_23_RESERVED_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_24                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_24                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_24.RESERVED_10         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_RESERVED_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_RESERVED_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_RESERVED_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_RESERVED_10_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_RESERVED_10_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_RESERVED_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_RESERVED_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_RESERVED_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_RESERVED_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_24_RESERVED_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_25                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_25                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_25.RESERVED_10         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_RESERVED_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_RESERVED_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_RESERVED_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_RESERVED_10_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_RESERVED_10_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_RESERVED_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_RESERVED_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_RESERVED_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_RESERVED_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_25_RESERVED_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_26                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_26                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_26.RESERVED_10         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_RESERVED_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_RESERVED_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_RESERVED_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_RESERVED_10_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_RESERVED_10_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_RESERVED_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_RESERVED_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_RESERVED_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_RESERVED_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_26_RESERVED_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_27                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_27                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_27.RESERVED_10         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_RESERVED_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_RESERVED_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_RESERVED_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_RESERVED_10_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_RESERVED_10_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_RESERVED_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_RESERVED_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_RESERVED_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_RESERVED_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_27_RESERVED_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_28                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_28                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_28.RESERVED_10         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_RESERVED_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_RESERVED_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_RESERVED_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_RESERVED_10_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_RESERVED_10_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_RESERVED_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_RESERVED_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_RESERVED_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_RESERVED_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_28_RESERVED_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_29                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_29                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_29.RESERVED_10         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_RESERVED_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_RESERVED_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_RESERVED_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_RESERVED_10_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_RESERVED_10_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_RESERVED_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_RESERVED_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_RESERVED_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_RESERVED_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_29_RESERVED_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_30                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_30                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_30.RESERVED_10         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_RESERVED_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_RESERVED_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_RESERVED_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_RESERVED_10_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_RESERVED_10_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_RESERVED_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_RESERVED_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_RESERVED_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_RESERVED_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_30_RESERVED_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_10_31                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_10_31                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_10_31.RESERVED_10         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_RESERVED_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_RESERVED_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_RESERVED_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_RESERVED_10_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_RESERVED_10_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_RESERVED_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_RESERVED_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_RESERVED_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_RESERVED_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_10_31_RESERVED_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_0                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_0                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_0.CRYPTOKEY_11_0       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_CRYPTOKEY_11_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_CRYPTOKEY_11_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_CRYPTOKEY_11_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_CRYPTOKEY_11_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_CRYPTOKEY_11_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_CRYPTOKEY_11_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_CRYPTOKEY_11_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_CRYPTOKEY_11_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_CRYPTOKEY_11_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_0_CRYPTOKEY_11_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_1                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_1                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_1.CRYPTOKEY_11_1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_CRYPTOKEY_11_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_CRYPTOKEY_11_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_CRYPTOKEY_11_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_CRYPTOKEY_11_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_CRYPTOKEY_11_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_CRYPTOKEY_11_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_CRYPTOKEY_11_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_CRYPTOKEY_11_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_CRYPTOKEY_11_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_1_CRYPTOKEY_11_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_2                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_2                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_2.CRYPTOKEY_11_2       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_CRYPTOKEY_11_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_CRYPTOKEY_11_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_CRYPTOKEY_11_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_CRYPTOKEY_11_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_CRYPTOKEY_11_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_CRYPTOKEY_11_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_CRYPTOKEY_11_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_CRYPTOKEY_11_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_CRYPTOKEY_11_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_2_CRYPTOKEY_11_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_3                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_3                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_3.CRYPTOKEY_11_3       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_CRYPTOKEY_11_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_CRYPTOKEY_11_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_CRYPTOKEY_11_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_CRYPTOKEY_11_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_CRYPTOKEY_11_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_CRYPTOKEY_11_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_CRYPTOKEY_11_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_CRYPTOKEY_11_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_CRYPTOKEY_11_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_3_CRYPTOKEY_11_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_4                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_4                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_4.CRYPTOKEY_11_4       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_CRYPTOKEY_11_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_CRYPTOKEY_11_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_CRYPTOKEY_11_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_CRYPTOKEY_11_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_CRYPTOKEY_11_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_CRYPTOKEY_11_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_CRYPTOKEY_11_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_CRYPTOKEY_11_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_CRYPTOKEY_11_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_4_CRYPTOKEY_11_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_5                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_5                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_5.CRYPTOKEY_11_5       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_CRYPTOKEY_11_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_CRYPTOKEY_11_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_CRYPTOKEY_11_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_CRYPTOKEY_11_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_CRYPTOKEY_11_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_CRYPTOKEY_11_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_CRYPTOKEY_11_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_CRYPTOKEY_11_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_CRYPTOKEY_11_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_5_CRYPTOKEY_11_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_6                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_6                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_6.CRYPTOKEY_11_6       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_CRYPTOKEY_11_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_CRYPTOKEY_11_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_CRYPTOKEY_11_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_CRYPTOKEY_11_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_CRYPTOKEY_11_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_CRYPTOKEY_11_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_CRYPTOKEY_11_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_CRYPTOKEY_11_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_CRYPTOKEY_11_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_6_CRYPTOKEY_11_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_7                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_7                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_7.CRYPTOKEY_11_7       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_CRYPTOKEY_11_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_CRYPTOKEY_11_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_CRYPTOKEY_11_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_CRYPTOKEY_11_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_CRYPTOKEY_11_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_CRYPTOKEY_11_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_CRYPTOKEY_11_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_CRYPTOKEY_11_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_CRYPTOKEY_11_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_7_CRYPTOKEY_11_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_8                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_8                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_8.CRYPTOKEY_11_8       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_CRYPTOKEY_11_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_CRYPTOKEY_11_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_CRYPTOKEY_11_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_CRYPTOKEY_11_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_CRYPTOKEY_11_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_CRYPTOKEY_11_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_CRYPTOKEY_11_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_CRYPTOKEY_11_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_CRYPTOKEY_11_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_8_CRYPTOKEY_11_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_9                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_9                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_9.CRYPTOKEY_11_9       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_CRYPTOKEY_11_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_CRYPTOKEY_11_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_CRYPTOKEY_11_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_CRYPTOKEY_11_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_CRYPTOKEY_11_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_CRYPTOKEY_11_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_CRYPTOKEY_11_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_CRYPTOKEY_11_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_CRYPTOKEY_11_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_9_CRYPTOKEY_11_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_10                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_10                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_10.CRYPTOKEY_11_10     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_CRYPTOKEY_11_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_CRYPTOKEY_11_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_CRYPTOKEY_11_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_CRYPTOKEY_11_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_CRYPTOKEY_11_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_CRYPTOKEY_11_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_CRYPTOKEY_11_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_CRYPTOKEY_11_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_CRYPTOKEY_11_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_10_CRYPTOKEY_11_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_11                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_11                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_11.CRYPTOKEY_11_11     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_CRYPTOKEY_11_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_CRYPTOKEY_11_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_CRYPTOKEY_11_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_CRYPTOKEY_11_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_CRYPTOKEY_11_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_CRYPTOKEY_11_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_CRYPTOKEY_11_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_CRYPTOKEY_11_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_CRYPTOKEY_11_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_11_CRYPTOKEY_11_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_12                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_12                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_12.CRYPTOKEY_11_12     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_CRYPTOKEY_11_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_CRYPTOKEY_11_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_CRYPTOKEY_11_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_CRYPTOKEY_11_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_CRYPTOKEY_11_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_CRYPTOKEY_11_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_CRYPTOKEY_11_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_CRYPTOKEY_11_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_CRYPTOKEY_11_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_12_CRYPTOKEY_11_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_13                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_13                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_13.CRYPTOKEY_11_13     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_CRYPTOKEY_11_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_CRYPTOKEY_11_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_CRYPTOKEY_11_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_CRYPTOKEY_11_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_CRYPTOKEY_11_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_CRYPTOKEY_11_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_CRYPTOKEY_11_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_CRYPTOKEY_11_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_CRYPTOKEY_11_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_13_CRYPTOKEY_11_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_14                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_14                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_14.CRYPTOKEY_11_14     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_CRYPTOKEY_11_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_CRYPTOKEY_11_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_CRYPTOKEY_11_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_CRYPTOKEY_11_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_CRYPTOKEY_11_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_CRYPTOKEY_11_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_CRYPTOKEY_11_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_CRYPTOKEY_11_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_CRYPTOKEY_11_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_14_CRYPTOKEY_11_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_15                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_15                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_15.CRYPTOKEY_11_15     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_CRYPTOKEY_11_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_CRYPTOKEY_11_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_CRYPTOKEY_11_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_CRYPTOKEY_11_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_CRYPTOKEY_11_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_CRYPTOKEY_11_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_CRYPTOKEY_11_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_CRYPTOKEY_11_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_CRYPTOKEY_11_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_15_CRYPTOKEY_11_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_16                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_16                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_16.CFGE_11             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CFGE_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CFGE_11_LSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CFGE_11_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CFGE_11_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CFGE_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CFGE_11_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CFGE_11_FIELD_MASK 0x80000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CFGE_11_GET(x) \
   (((x) & 0x80000000ul) >> 31)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CFGE_11_SET(x) \
   (((x) << 31) & 0x80000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CFGE_11_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_16.CRYPTPCFG_RSVD_11   */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CRYPTPCFG_RSVD_11_MSB 30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CRYPTPCFG_RSVD_11_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CRYPTPCFG_RSVD_11_WIDTH 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CRYPTPCFG_RSVD_11_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CRYPTPCFG_RSVD_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CRYPTPCFG_RSVD_11_RESET 0x0000u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CRYPTPCFG_RSVD_11_FIELD_MASK 0x7fff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CRYPTPCFG_RSVD_11_GET(x) \
   (((x) & 0x7fff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CRYPTPCFG_RSVD_11_SET(x) \
   (((x) << 16) & 0x7fff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CRYPTPCFG_RSVD_11_MODIFY(r, x) \
   ((((x) << 16) & 0x7fff0000ul) | ((r) & 0x8000fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_16.CAPIDX_11           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CAPIDX_11_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CAPIDX_11_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CAPIDX_11_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CAPIDX_11_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CAPIDX_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CAPIDX_11_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CAPIDX_11_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CAPIDX_11_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CAPIDX_11_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_CAPIDX_11_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_16.DUSIZE_11           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_DUSIZE_11_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_DUSIZE_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_DUSIZE_11_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_DUSIZE_11_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_DUSIZE_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_DUSIZE_11_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_DUSIZE_11_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_DUSIZE_11_GET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_DUSIZE_11_SET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_16_DUSIZE_11_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_17                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_17                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_17.RESERVED_11         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_RESERVED_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_RESERVED_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_RESERVED_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_RESERVED_11_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_RESERVED_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_RESERVED_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_RESERVED_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_RESERVED_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_RESERVED_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_17_RESERVED_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_18                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_18                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_18.RESERVED_11         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_RESERVED_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_RESERVED_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_RESERVED_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_RESERVED_11_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_RESERVED_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_RESERVED_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_RESERVED_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_RESERVED_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_RESERVED_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_18_RESERVED_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_19                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_19                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_19.RESERVED_11         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_RESERVED_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_RESERVED_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_RESERVED_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_RESERVED_11_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_RESERVED_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_RESERVED_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_RESERVED_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_RESERVED_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_RESERVED_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_19_RESERVED_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_20                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_20                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_20.RESERVED_11         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_RESERVED_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_RESERVED_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_RESERVED_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_RESERVED_11_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_RESERVED_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_RESERVED_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_RESERVED_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_RESERVED_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_RESERVED_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_20_RESERVED_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_21                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_21                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_21.RESERVED_11         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_RESERVED_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_RESERVED_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_RESERVED_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_RESERVED_11_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_RESERVED_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_RESERVED_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_RESERVED_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_RESERVED_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_RESERVED_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_21_RESERVED_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_22                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_22                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_22.RESERVED_11         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_RESERVED_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_RESERVED_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_RESERVED_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_RESERVED_11_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_RESERVED_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_RESERVED_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_RESERVED_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_RESERVED_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_RESERVED_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_22_RESERVED_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_23                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_23                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_23.RESERVED_11         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_RESERVED_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_RESERVED_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_RESERVED_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_RESERVED_11_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_RESERVED_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_RESERVED_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_RESERVED_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_RESERVED_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_RESERVED_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_23_RESERVED_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_24                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_24                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_24.RESERVED_11         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_RESERVED_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_RESERVED_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_RESERVED_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_RESERVED_11_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_RESERVED_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_RESERVED_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_RESERVED_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_RESERVED_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_RESERVED_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_24_RESERVED_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_25                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_25                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_25.RESERVED_11         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_RESERVED_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_RESERVED_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_RESERVED_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_RESERVED_11_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_RESERVED_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_RESERVED_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_RESERVED_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_RESERVED_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_RESERVED_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_25_RESERVED_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_26                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_26                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_26.RESERVED_11         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_RESERVED_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_RESERVED_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_RESERVED_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_RESERVED_11_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_RESERVED_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_RESERVED_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_RESERVED_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_RESERVED_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_RESERVED_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_26_RESERVED_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_27                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_27                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_27.RESERVED_11         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_RESERVED_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_RESERVED_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_RESERVED_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_RESERVED_11_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_RESERVED_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_RESERVED_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_RESERVED_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_RESERVED_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_RESERVED_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_27_RESERVED_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_28                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_28                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_28.RESERVED_11         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_RESERVED_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_RESERVED_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_RESERVED_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_RESERVED_11_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_RESERVED_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_RESERVED_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_RESERVED_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_RESERVED_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_RESERVED_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_28_RESERVED_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_29                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_29                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_29.RESERVED_11         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_RESERVED_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_RESERVED_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_RESERVED_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_RESERVED_11_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_RESERVED_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_RESERVED_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_RESERVED_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_RESERVED_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_RESERVED_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_29_RESERVED_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_30                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_30                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_30.RESERVED_11         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_RESERVED_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_RESERVED_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_RESERVED_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_RESERVED_11_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_RESERVED_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_RESERVED_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_RESERVED_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_RESERVED_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_RESERVED_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_30_RESERVED_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_11_31                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_11_31                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_11_31.RESERVED_11         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_RESERVED_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_RESERVED_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_RESERVED_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_RESERVED_11_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_RESERVED_11_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_RESERVED_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_RESERVED_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_RESERVED_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_RESERVED_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_11_31_RESERVED_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_0                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_0                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_0.CRYPTOKEY_12_0       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_CRYPTOKEY_12_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_CRYPTOKEY_12_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_CRYPTOKEY_12_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_CRYPTOKEY_12_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_CRYPTOKEY_12_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_CRYPTOKEY_12_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_CRYPTOKEY_12_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_CRYPTOKEY_12_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_CRYPTOKEY_12_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_0_CRYPTOKEY_12_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_1                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_1                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_1.CRYPTOKEY_12_1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_CRYPTOKEY_12_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_CRYPTOKEY_12_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_CRYPTOKEY_12_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_CRYPTOKEY_12_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_CRYPTOKEY_12_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_CRYPTOKEY_12_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_CRYPTOKEY_12_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_CRYPTOKEY_12_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_CRYPTOKEY_12_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_1_CRYPTOKEY_12_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_2                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_2                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_2.CRYPTOKEY_12_2       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_CRYPTOKEY_12_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_CRYPTOKEY_12_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_CRYPTOKEY_12_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_CRYPTOKEY_12_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_CRYPTOKEY_12_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_CRYPTOKEY_12_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_CRYPTOKEY_12_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_CRYPTOKEY_12_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_CRYPTOKEY_12_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_2_CRYPTOKEY_12_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_3                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_3                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_3.CRYPTOKEY_12_3       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_CRYPTOKEY_12_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_CRYPTOKEY_12_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_CRYPTOKEY_12_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_CRYPTOKEY_12_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_CRYPTOKEY_12_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_CRYPTOKEY_12_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_CRYPTOKEY_12_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_CRYPTOKEY_12_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_CRYPTOKEY_12_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_3_CRYPTOKEY_12_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_4                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_4                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_4.CRYPTOKEY_12_4       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_CRYPTOKEY_12_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_CRYPTOKEY_12_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_CRYPTOKEY_12_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_CRYPTOKEY_12_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_CRYPTOKEY_12_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_CRYPTOKEY_12_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_CRYPTOKEY_12_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_CRYPTOKEY_12_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_CRYPTOKEY_12_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_4_CRYPTOKEY_12_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_5                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_5                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_5.CRYPTOKEY_12_5       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_CRYPTOKEY_12_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_CRYPTOKEY_12_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_CRYPTOKEY_12_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_CRYPTOKEY_12_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_CRYPTOKEY_12_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_CRYPTOKEY_12_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_CRYPTOKEY_12_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_CRYPTOKEY_12_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_CRYPTOKEY_12_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_5_CRYPTOKEY_12_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_6                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_6                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_6.CRYPTOKEY_12_6       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_CRYPTOKEY_12_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_CRYPTOKEY_12_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_CRYPTOKEY_12_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_CRYPTOKEY_12_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_CRYPTOKEY_12_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_CRYPTOKEY_12_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_CRYPTOKEY_12_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_CRYPTOKEY_12_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_CRYPTOKEY_12_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_6_CRYPTOKEY_12_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_7                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_7                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_7.CRYPTOKEY_12_7       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_CRYPTOKEY_12_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_CRYPTOKEY_12_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_CRYPTOKEY_12_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_CRYPTOKEY_12_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_CRYPTOKEY_12_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_CRYPTOKEY_12_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_CRYPTOKEY_12_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_CRYPTOKEY_12_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_CRYPTOKEY_12_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_7_CRYPTOKEY_12_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_8                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_8                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_8.CRYPTOKEY_12_8       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_CRYPTOKEY_12_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_CRYPTOKEY_12_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_CRYPTOKEY_12_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_CRYPTOKEY_12_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_CRYPTOKEY_12_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_CRYPTOKEY_12_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_CRYPTOKEY_12_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_CRYPTOKEY_12_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_CRYPTOKEY_12_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_8_CRYPTOKEY_12_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_9                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_9                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_9.CRYPTOKEY_12_9       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_CRYPTOKEY_12_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_CRYPTOKEY_12_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_CRYPTOKEY_12_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_CRYPTOKEY_12_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_CRYPTOKEY_12_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_CRYPTOKEY_12_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_CRYPTOKEY_12_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_CRYPTOKEY_12_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_CRYPTOKEY_12_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_9_CRYPTOKEY_12_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_10                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_10                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_10.CRYPTOKEY_12_10     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_CRYPTOKEY_12_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_CRYPTOKEY_12_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_CRYPTOKEY_12_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_CRYPTOKEY_12_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_CRYPTOKEY_12_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_CRYPTOKEY_12_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_CRYPTOKEY_12_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_CRYPTOKEY_12_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_CRYPTOKEY_12_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_10_CRYPTOKEY_12_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_11                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_11                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_11.CRYPTOKEY_12_11     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_CRYPTOKEY_12_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_CRYPTOKEY_12_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_CRYPTOKEY_12_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_CRYPTOKEY_12_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_CRYPTOKEY_12_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_CRYPTOKEY_12_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_CRYPTOKEY_12_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_CRYPTOKEY_12_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_CRYPTOKEY_12_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_11_CRYPTOKEY_12_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_12                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_12                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_12.CRYPTOKEY_12_12     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_CRYPTOKEY_12_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_CRYPTOKEY_12_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_CRYPTOKEY_12_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_CRYPTOKEY_12_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_CRYPTOKEY_12_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_CRYPTOKEY_12_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_CRYPTOKEY_12_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_CRYPTOKEY_12_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_CRYPTOKEY_12_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_12_CRYPTOKEY_12_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_13                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_13                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_13.CRYPTOKEY_12_13     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_CRYPTOKEY_12_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_CRYPTOKEY_12_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_CRYPTOKEY_12_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_CRYPTOKEY_12_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_CRYPTOKEY_12_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_CRYPTOKEY_12_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_CRYPTOKEY_12_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_CRYPTOKEY_12_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_CRYPTOKEY_12_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_13_CRYPTOKEY_12_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_14                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_14                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_14.CRYPTOKEY_12_14     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_CRYPTOKEY_12_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_CRYPTOKEY_12_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_CRYPTOKEY_12_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_CRYPTOKEY_12_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_CRYPTOKEY_12_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_CRYPTOKEY_12_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_CRYPTOKEY_12_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_CRYPTOKEY_12_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_CRYPTOKEY_12_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_14_CRYPTOKEY_12_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_15                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_15                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_15.CRYPTOKEY_12_15     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_CRYPTOKEY_12_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_CRYPTOKEY_12_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_CRYPTOKEY_12_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_CRYPTOKEY_12_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_CRYPTOKEY_12_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_CRYPTOKEY_12_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_CRYPTOKEY_12_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_CRYPTOKEY_12_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_CRYPTOKEY_12_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_15_CRYPTOKEY_12_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_16                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_16                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_16.CFGE_12             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CFGE_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CFGE_12_LSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CFGE_12_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CFGE_12_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CFGE_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CFGE_12_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CFGE_12_FIELD_MASK 0x80000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CFGE_12_GET(x) \
   (((x) & 0x80000000ul) >> 31)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CFGE_12_SET(x) \
   (((x) << 31) & 0x80000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CFGE_12_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_16.CRYPTPCFG_RSVD_12   */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CRYPTPCFG_RSVD_12_MSB 30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CRYPTPCFG_RSVD_12_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CRYPTPCFG_RSVD_12_WIDTH 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CRYPTPCFG_RSVD_12_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CRYPTPCFG_RSVD_12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CRYPTPCFG_RSVD_12_RESET 0x0000u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CRYPTPCFG_RSVD_12_FIELD_MASK 0x7fff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CRYPTPCFG_RSVD_12_GET(x) \
   (((x) & 0x7fff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CRYPTPCFG_RSVD_12_SET(x) \
   (((x) << 16) & 0x7fff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CRYPTPCFG_RSVD_12_MODIFY(r, x) \
   ((((x) << 16) & 0x7fff0000ul) | ((r) & 0x8000fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_16.CAPIDX_12           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CAPIDX_12_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CAPIDX_12_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CAPIDX_12_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CAPIDX_12_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CAPIDX_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CAPIDX_12_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CAPIDX_12_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CAPIDX_12_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CAPIDX_12_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_CAPIDX_12_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_16.DUSIZE_12           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_DUSIZE_12_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_DUSIZE_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_DUSIZE_12_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_DUSIZE_12_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_DUSIZE_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_DUSIZE_12_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_DUSIZE_12_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_DUSIZE_12_GET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_DUSIZE_12_SET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_16_DUSIZE_12_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_17                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_17                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_17.RESERVED_12         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_RESERVED_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_RESERVED_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_RESERVED_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_RESERVED_12_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_RESERVED_12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_RESERVED_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_RESERVED_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_RESERVED_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_RESERVED_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_17_RESERVED_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_18                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_18                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_18.RESERVED_12         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_RESERVED_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_RESERVED_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_RESERVED_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_RESERVED_12_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_RESERVED_12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_RESERVED_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_RESERVED_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_RESERVED_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_RESERVED_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_18_RESERVED_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_19                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_19                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_19.RESERVED_12         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_RESERVED_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_RESERVED_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_RESERVED_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_RESERVED_12_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_RESERVED_12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_RESERVED_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_RESERVED_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_RESERVED_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_RESERVED_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_19_RESERVED_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_20                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_20                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_20.RESERVED_12         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_RESERVED_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_RESERVED_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_RESERVED_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_RESERVED_12_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_RESERVED_12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_RESERVED_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_RESERVED_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_RESERVED_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_RESERVED_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_20_RESERVED_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_21                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_21                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_21.RESERVED_12         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_RESERVED_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_RESERVED_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_RESERVED_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_RESERVED_12_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_RESERVED_12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_RESERVED_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_RESERVED_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_RESERVED_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_RESERVED_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_21_RESERVED_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_22                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_22                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_22.RESERVED_12         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_RESERVED_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_RESERVED_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_RESERVED_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_RESERVED_12_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_RESERVED_12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_RESERVED_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_RESERVED_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_RESERVED_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_RESERVED_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_22_RESERVED_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_23                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_23                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_23.RESERVED_12         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_RESERVED_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_RESERVED_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_RESERVED_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_RESERVED_12_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_RESERVED_12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_RESERVED_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_RESERVED_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_RESERVED_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_RESERVED_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_23_RESERVED_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_24                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_24                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_24.RESERVED_12         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_RESERVED_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_RESERVED_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_RESERVED_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_RESERVED_12_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_RESERVED_12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_RESERVED_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_RESERVED_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_RESERVED_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_RESERVED_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_24_RESERVED_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_25                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_25                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_25.RESERVED_12         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_RESERVED_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_RESERVED_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_RESERVED_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_RESERVED_12_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_RESERVED_12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_RESERVED_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_RESERVED_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_RESERVED_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_RESERVED_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_25_RESERVED_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_26                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_26                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_26.RESERVED_12         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_RESERVED_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_RESERVED_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_RESERVED_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_RESERVED_12_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_RESERVED_12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_RESERVED_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_RESERVED_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_RESERVED_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_RESERVED_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_26_RESERVED_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_27                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_27                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_27.RESERVED_12         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_RESERVED_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_RESERVED_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_RESERVED_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_RESERVED_12_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_RESERVED_12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_RESERVED_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_RESERVED_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_RESERVED_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_RESERVED_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_27_RESERVED_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_28                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_28                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_28.RESERVED_12         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_RESERVED_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_RESERVED_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_RESERVED_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_RESERVED_12_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_RESERVED_12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_RESERVED_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_RESERVED_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_RESERVED_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_RESERVED_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_28_RESERVED_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_29                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_29                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_29.RESERVED_12         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_RESERVED_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_RESERVED_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_RESERVED_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_RESERVED_12_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_RESERVED_12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_RESERVED_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_RESERVED_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_RESERVED_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_RESERVED_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_29_RESERVED_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_30                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_30                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_30.RESERVED_12         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_RESERVED_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_RESERVED_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_RESERVED_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_RESERVED_12_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_RESERVED_12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_RESERVED_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_RESERVED_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_RESERVED_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_RESERVED_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_30_RESERVED_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_12_31                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_12_31                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_12_31.RESERVED_12         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_RESERVED_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_RESERVED_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_RESERVED_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_RESERVED_12_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_RESERVED_12_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_RESERVED_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_RESERVED_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_RESERVED_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_RESERVED_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_12_31_RESERVED_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_0                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_0                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_0.CRYPTOKEY_13_0       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_CRYPTOKEY_13_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_CRYPTOKEY_13_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_CRYPTOKEY_13_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_CRYPTOKEY_13_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_CRYPTOKEY_13_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_CRYPTOKEY_13_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_CRYPTOKEY_13_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_CRYPTOKEY_13_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_CRYPTOKEY_13_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_0_CRYPTOKEY_13_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_1                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_1                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_1.CRYPTOKEY_13_1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_CRYPTOKEY_13_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_CRYPTOKEY_13_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_CRYPTOKEY_13_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_CRYPTOKEY_13_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_CRYPTOKEY_13_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_CRYPTOKEY_13_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_CRYPTOKEY_13_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_CRYPTOKEY_13_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_CRYPTOKEY_13_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_1_CRYPTOKEY_13_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_2                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_2                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_2.CRYPTOKEY_13_2       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_CRYPTOKEY_13_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_CRYPTOKEY_13_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_CRYPTOKEY_13_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_CRYPTOKEY_13_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_CRYPTOKEY_13_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_CRYPTOKEY_13_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_CRYPTOKEY_13_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_CRYPTOKEY_13_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_CRYPTOKEY_13_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_2_CRYPTOKEY_13_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_3                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_3                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_3.CRYPTOKEY_13_3       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_CRYPTOKEY_13_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_CRYPTOKEY_13_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_CRYPTOKEY_13_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_CRYPTOKEY_13_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_CRYPTOKEY_13_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_CRYPTOKEY_13_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_CRYPTOKEY_13_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_CRYPTOKEY_13_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_CRYPTOKEY_13_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_3_CRYPTOKEY_13_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_4                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_4                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_4.CRYPTOKEY_13_4       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_CRYPTOKEY_13_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_CRYPTOKEY_13_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_CRYPTOKEY_13_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_CRYPTOKEY_13_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_CRYPTOKEY_13_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_CRYPTOKEY_13_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_CRYPTOKEY_13_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_CRYPTOKEY_13_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_CRYPTOKEY_13_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_4_CRYPTOKEY_13_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_5                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_5                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_5.CRYPTOKEY_13_5       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_CRYPTOKEY_13_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_CRYPTOKEY_13_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_CRYPTOKEY_13_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_CRYPTOKEY_13_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_CRYPTOKEY_13_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_CRYPTOKEY_13_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_CRYPTOKEY_13_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_CRYPTOKEY_13_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_CRYPTOKEY_13_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_5_CRYPTOKEY_13_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_6                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_6                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_6.CRYPTOKEY_13_6       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_CRYPTOKEY_13_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_CRYPTOKEY_13_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_CRYPTOKEY_13_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_CRYPTOKEY_13_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_CRYPTOKEY_13_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_CRYPTOKEY_13_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_CRYPTOKEY_13_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_CRYPTOKEY_13_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_CRYPTOKEY_13_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_6_CRYPTOKEY_13_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_7                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_7                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_7.CRYPTOKEY_13_7       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_CRYPTOKEY_13_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_CRYPTOKEY_13_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_CRYPTOKEY_13_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_CRYPTOKEY_13_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_CRYPTOKEY_13_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_CRYPTOKEY_13_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_CRYPTOKEY_13_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_CRYPTOKEY_13_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_CRYPTOKEY_13_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_7_CRYPTOKEY_13_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_8                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_8                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_8.CRYPTOKEY_13_8       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_CRYPTOKEY_13_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_CRYPTOKEY_13_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_CRYPTOKEY_13_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_CRYPTOKEY_13_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_CRYPTOKEY_13_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_CRYPTOKEY_13_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_CRYPTOKEY_13_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_CRYPTOKEY_13_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_CRYPTOKEY_13_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_8_CRYPTOKEY_13_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_9                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_9                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_9.CRYPTOKEY_13_9       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_CRYPTOKEY_13_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_CRYPTOKEY_13_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_CRYPTOKEY_13_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_CRYPTOKEY_13_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_CRYPTOKEY_13_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_CRYPTOKEY_13_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_CRYPTOKEY_13_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_CRYPTOKEY_13_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_CRYPTOKEY_13_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_9_CRYPTOKEY_13_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_10                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_10                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_10.CRYPTOKEY_13_10     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_CRYPTOKEY_13_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_CRYPTOKEY_13_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_CRYPTOKEY_13_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_CRYPTOKEY_13_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_CRYPTOKEY_13_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_CRYPTOKEY_13_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_CRYPTOKEY_13_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_CRYPTOKEY_13_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_CRYPTOKEY_13_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_10_CRYPTOKEY_13_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_11                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_11                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_11.CRYPTOKEY_13_11     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_CRYPTOKEY_13_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_CRYPTOKEY_13_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_CRYPTOKEY_13_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_CRYPTOKEY_13_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_CRYPTOKEY_13_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_CRYPTOKEY_13_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_CRYPTOKEY_13_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_CRYPTOKEY_13_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_CRYPTOKEY_13_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_11_CRYPTOKEY_13_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_12                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_12                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_12.CRYPTOKEY_13_12     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_CRYPTOKEY_13_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_CRYPTOKEY_13_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_CRYPTOKEY_13_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_CRYPTOKEY_13_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_CRYPTOKEY_13_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_CRYPTOKEY_13_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_CRYPTOKEY_13_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_CRYPTOKEY_13_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_CRYPTOKEY_13_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_12_CRYPTOKEY_13_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_13                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_13                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_13.CRYPTOKEY_13_13     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_CRYPTOKEY_13_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_CRYPTOKEY_13_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_CRYPTOKEY_13_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_CRYPTOKEY_13_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_CRYPTOKEY_13_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_CRYPTOKEY_13_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_CRYPTOKEY_13_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_CRYPTOKEY_13_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_CRYPTOKEY_13_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_13_CRYPTOKEY_13_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_14                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_14                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_14.CRYPTOKEY_13_14     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_CRYPTOKEY_13_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_CRYPTOKEY_13_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_CRYPTOKEY_13_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_CRYPTOKEY_13_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_CRYPTOKEY_13_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_CRYPTOKEY_13_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_CRYPTOKEY_13_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_CRYPTOKEY_13_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_CRYPTOKEY_13_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_14_CRYPTOKEY_13_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_15                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_15                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_15.CRYPTOKEY_13_15     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_CRYPTOKEY_13_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_CRYPTOKEY_13_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_CRYPTOKEY_13_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_CRYPTOKEY_13_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_CRYPTOKEY_13_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_CRYPTOKEY_13_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_CRYPTOKEY_13_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_CRYPTOKEY_13_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_CRYPTOKEY_13_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_15_CRYPTOKEY_13_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_16                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_16                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_16.CFGE_13             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CFGE_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CFGE_13_LSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CFGE_13_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CFGE_13_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CFGE_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CFGE_13_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CFGE_13_FIELD_MASK 0x80000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CFGE_13_GET(x) \
   (((x) & 0x80000000ul) >> 31)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CFGE_13_SET(x) \
   (((x) << 31) & 0x80000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CFGE_13_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_16.CRYPTPCFG_RSVD_13   */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CRYPTPCFG_RSVD_13_MSB 30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CRYPTPCFG_RSVD_13_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CRYPTPCFG_RSVD_13_WIDTH 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CRYPTPCFG_RSVD_13_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CRYPTPCFG_RSVD_13_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CRYPTPCFG_RSVD_13_RESET 0x0000u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CRYPTPCFG_RSVD_13_FIELD_MASK 0x7fff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CRYPTPCFG_RSVD_13_GET(x) \
   (((x) & 0x7fff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CRYPTPCFG_RSVD_13_SET(x) \
   (((x) << 16) & 0x7fff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CRYPTPCFG_RSVD_13_MODIFY(r, x) \
   ((((x) << 16) & 0x7fff0000ul) | ((r) & 0x8000fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_16.CAPIDX_13           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CAPIDX_13_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CAPIDX_13_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CAPIDX_13_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CAPIDX_13_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CAPIDX_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CAPIDX_13_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CAPIDX_13_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CAPIDX_13_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CAPIDX_13_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_CAPIDX_13_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_16.DUSIZE_13           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_DUSIZE_13_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_DUSIZE_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_DUSIZE_13_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_DUSIZE_13_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_DUSIZE_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_DUSIZE_13_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_DUSIZE_13_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_DUSIZE_13_GET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_DUSIZE_13_SET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_16_DUSIZE_13_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_17                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_17                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_17.RESERVED_13         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_RESERVED_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_RESERVED_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_RESERVED_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_RESERVED_13_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_RESERVED_13_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_RESERVED_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_RESERVED_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_RESERVED_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_RESERVED_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_17_RESERVED_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_18                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_18                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_18.RESERVED_13         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_RESERVED_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_RESERVED_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_RESERVED_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_RESERVED_13_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_RESERVED_13_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_RESERVED_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_RESERVED_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_RESERVED_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_RESERVED_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_18_RESERVED_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_19                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_19                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_19.RESERVED_13         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_RESERVED_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_RESERVED_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_RESERVED_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_RESERVED_13_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_RESERVED_13_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_RESERVED_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_RESERVED_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_RESERVED_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_RESERVED_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_19_RESERVED_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_20                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_20                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_20.RESERVED_13         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_RESERVED_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_RESERVED_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_RESERVED_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_RESERVED_13_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_RESERVED_13_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_RESERVED_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_RESERVED_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_RESERVED_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_RESERVED_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_20_RESERVED_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_21                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_21                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_21.RESERVED_13         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_RESERVED_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_RESERVED_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_RESERVED_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_RESERVED_13_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_RESERVED_13_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_RESERVED_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_RESERVED_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_RESERVED_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_RESERVED_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_21_RESERVED_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_22                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_22                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_22.RESERVED_13         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_RESERVED_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_RESERVED_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_RESERVED_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_RESERVED_13_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_RESERVED_13_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_RESERVED_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_RESERVED_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_RESERVED_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_RESERVED_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_22_RESERVED_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_23                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_23                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_23.RESERVED_13         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_RESERVED_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_RESERVED_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_RESERVED_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_RESERVED_13_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_RESERVED_13_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_RESERVED_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_RESERVED_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_RESERVED_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_RESERVED_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_23_RESERVED_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_24                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_24                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_24.RESERVED_13         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_RESERVED_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_RESERVED_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_RESERVED_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_RESERVED_13_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_RESERVED_13_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_RESERVED_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_RESERVED_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_RESERVED_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_RESERVED_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_24_RESERVED_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_25                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_25                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_25.RESERVED_13         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_RESERVED_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_RESERVED_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_RESERVED_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_RESERVED_13_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_RESERVED_13_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_RESERVED_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_RESERVED_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_RESERVED_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_RESERVED_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_25_RESERVED_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_26                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_26                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_26.RESERVED_13         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_RESERVED_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_RESERVED_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_RESERVED_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_RESERVED_13_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_RESERVED_13_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_RESERVED_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_RESERVED_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_RESERVED_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_RESERVED_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_26_RESERVED_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_27                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_27                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_27.RESERVED_13         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_RESERVED_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_RESERVED_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_RESERVED_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_RESERVED_13_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_RESERVED_13_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_RESERVED_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_RESERVED_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_RESERVED_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_RESERVED_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_27_RESERVED_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_28                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_28                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_28.RESERVED_13         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_RESERVED_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_RESERVED_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_RESERVED_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_RESERVED_13_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_RESERVED_13_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_RESERVED_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_RESERVED_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_RESERVED_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_RESERVED_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_28_RESERVED_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_29                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_29                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_29.RESERVED_13         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_RESERVED_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_RESERVED_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_RESERVED_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_RESERVED_13_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_RESERVED_13_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_RESERVED_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_RESERVED_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_RESERVED_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_RESERVED_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_29_RESERVED_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_30                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_30                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_30.RESERVED_13         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_RESERVED_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_RESERVED_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_RESERVED_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_RESERVED_13_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_RESERVED_13_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_RESERVED_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_RESERVED_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_RESERVED_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_RESERVED_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_30_RESERVED_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_13_31                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_13_31                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_13_31.RESERVED_13         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_RESERVED_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_RESERVED_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_RESERVED_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_RESERVED_13_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_RESERVED_13_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_RESERVED_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_RESERVED_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_RESERVED_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_RESERVED_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_13_31_RESERVED_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_0                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_0                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_0.CRYPTOKEY_14_0       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_CRYPTOKEY_14_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_CRYPTOKEY_14_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_CRYPTOKEY_14_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_CRYPTOKEY_14_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_CRYPTOKEY_14_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_CRYPTOKEY_14_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_CRYPTOKEY_14_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_CRYPTOKEY_14_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_CRYPTOKEY_14_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_0_CRYPTOKEY_14_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_1                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_1                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_1.CRYPTOKEY_14_1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_CRYPTOKEY_14_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_CRYPTOKEY_14_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_CRYPTOKEY_14_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_CRYPTOKEY_14_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_CRYPTOKEY_14_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_CRYPTOKEY_14_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_CRYPTOKEY_14_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_CRYPTOKEY_14_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_CRYPTOKEY_14_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_1_CRYPTOKEY_14_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_2                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_2                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_2.CRYPTOKEY_14_2       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_CRYPTOKEY_14_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_CRYPTOKEY_14_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_CRYPTOKEY_14_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_CRYPTOKEY_14_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_CRYPTOKEY_14_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_CRYPTOKEY_14_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_CRYPTOKEY_14_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_CRYPTOKEY_14_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_CRYPTOKEY_14_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_2_CRYPTOKEY_14_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_3                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_3                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_3.CRYPTOKEY_14_3       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_CRYPTOKEY_14_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_CRYPTOKEY_14_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_CRYPTOKEY_14_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_CRYPTOKEY_14_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_CRYPTOKEY_14_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_CRYPTOKEY_14_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_CRYPTOKEY_14_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_CRYPTOKEY_14_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_CRYPTOKEY_14_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_3_CRYPTOKEY_14_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_4                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_4                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_4.CRYPTOKEY_14_4       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_CRYPTOKEY_14_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_CRYPTOKEY_14_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_CRYPTOKEY_14_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_CRYPTOKEY_14_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_CRYPTOKEY_14_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_CRYPTOKEY_14_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_CRYPTOKEY_14_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_CRYPTOKEY_14_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_CRYPTOKEY_14_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_4_CRYPTOKEY_14_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_5                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_5                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_5.CRYPTOKEY_14_5       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_CRYPTOKEY_14_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_CRYPTOKEY_14_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_CRYPTOKEY_14_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_CRYPTOKEY_14_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_CRYPTOKEY_14_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_CRYPTOKEY_14_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_CRYPTOKEY_14_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_CRYPTOKEY_14_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_CRYPTOKEY_14_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_5_CRYPTOKEY_14_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_6                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_6                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_6.CRYPTOKEY_14_6       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_CRYPTOKEY_14_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_CRYPTOKEY_14_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_CRYPTOKEY_14_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_CRYPTOKEY_14_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_CRYPTOKEY_14_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_CRYPTOKEY_14_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_CRYPTOKEY_14_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_CRYPTOKEY_14_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_CRYPTOKEY_14_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_6_CRYPTOKEY_14_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_7                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_7                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_7.CRYPTOKEY_14_7       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_CRYPTOKEY_14_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_CRYPTOKEY_14_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_CRYPTOKEY_14_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_CRYPTOKEY_14_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_CRYPTOKEY_14_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_CRYPTOKEY_14_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_CRYPTOKEY_14_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_CRYPTOKEY_14_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_CRYPTOKEY_14_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_7_CRYPTOKEY_14_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_8                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_8                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_8.CRYPTOKEY_14_8       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_CRYPTOKEY_14_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_CRYPTOKEY_14_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_CRYPTOKEY_14_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_CRYPTOKEY_14_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_CRYPTOKEY_14_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_CRYPTOKEY_14_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_CRYPTOKEY_14_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_CRYPTOKEY_14_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_CRYPTOKEY_14_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_8_CRYPTOKEY_14_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_9                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_9                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_9.CRYPTOKEY_14_9       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_CRYPTOKEY_14_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_CRYPTOKEY_14_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_CRYPTOKEY_14_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_CRYPTOKEY_14_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_CRYPTOKEY_14_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_CRYPTOKEY_14_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_CRYPTOKEY_14_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_CRYPTOKEY_14_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_CRYPTOKEY_14_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_9_CRYPTOKEY_14_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_10                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_10                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_10.CRYPTOKEY_14_10     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_CRYPTOKEY_14_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_CRYPTOKEY_14_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_CRYPTOKEY_14_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_CRYPTOKEY_14_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_CRYPTOKEY_14_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_CRYPTOKEY_14_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_CRYPTOKEY_14_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_CRYPTOKEY_14_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_CRYPTOKEY_14_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_10_CRYPTOKEY_14_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_11                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_11                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_11.CRYPTOKEY_14_11     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_CRYPTOKEY_14_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_CRYPTOKEY_14_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_CRYPTOKEY_14_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_CRYPTOKEY_14_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_CRYPTOKEY_14_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_CRYPTOKEY_14_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_CRYPTOKEY_14_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_CRYPTOKEY_14_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_CRYPTOKEY_14_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_11_CRYPTOKEY_14_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_12                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_12                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_12.CRYPTOKEY_14_12     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_CRYPTOKEY_14_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_CRYPTOKEY_14_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_CRYPTOKEY_14_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_CRYPTOKEY_14_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_CRYPTOKEY_14_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_CRYPTOKEY_14_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_CRYPTOKEY_14_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_CRYPTOKEY_14_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_CRYPTOKEY_14_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_12_CRYPTOKEY_14_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_13                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_13                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_13.CRYPTOKEY_14_13     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_CRYPTOKEY_14_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_CRYPTOKEY_14_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_CRYPTOKEY_14_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_CRYPTOKEY_14_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_CRYPTOKEY_14_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_CRYPTOKEY_14_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_CRYPTOKEY_14_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_CRYPTOKEY_14_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_CRYPTOKEY_14_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_13_CRYPTOKEY_14_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_14                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_14                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_14.CRYPTOKEY_14_14     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_CRYPTOKEY_14_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_CRYPTOKEY_14_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_CRYPTOKEY_14_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_CRYPTOKEY_14_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_CRYPTOKEY_14_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_CRYPTOKEY_14_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_CRYPTOKEY_14_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_CRYPTOKEY_14_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_CRYPTOKEY_14_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_14_CRYPTOKEY_14_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_15                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_15                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_15.CRYPTOKEY_14_15     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_CRYPTOKEY_14_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_CRYPTOKEY_14_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_CRYPTOKEY_14_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_CRYPTOKEY_14_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_CRYPTOKEY_14_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_CRYPTOKEY_14_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_CRYPTOKEY_14_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_CRYPTOKEY_14_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_CRYPTOKEY_14_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_15_CRYPTOKEY_14_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_16                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_16                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_16.CFGE_14             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CFGE_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CFGE_14_LSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CFGE_14_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CFGE_14_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CFGE_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CFGE_14_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CFGE_14_FIELD_MASK 0x80000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CFGE_14_GET(x) \
   (((x) & 0x80000000ul) >> 31)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CFGE_14_SET(x) \
   (((x) << 31) & 0x80000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CFGE_14_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_16.CRYPTPCFG_RSVD_14   */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CRYPTPCFG_RSVD_14_MSB 30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CRYPTPCFG_RSVD_14_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CRYPTPCFG_RSVD_14_WIDTH 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CRYPTPCFG_RSVD_14_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CRYPTPCFG_RSVD_14_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CRYPTPCFG_RSVD_14_RESET 0x0000u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CRYPTPCFG_RSVD_14_FIELD_MASK 0x7fff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CRYPTPCFG_RSVD_14_GET(x) \
   (((x) & 0x7fff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CRYPTPCFG_RSVD_14_SET(x) \
   (((x) << 16) & 0x7fff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CRYPTPCFG_RSVD_14_MODIFY(r, x) \
   ((((x) << 16) & 0x7fff0000ul) | ((r) & 0x8000fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_16.CAPIDX_14           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CAPIDX_14_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CAPIDX_14_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CAPIDX_14_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CAPIDX_14_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CAPIDX_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CAPIDX_14_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CAPIDX_14_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CAPIDX_14_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CAPIDX_14_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_CAPIDX_14_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_16.DUSIZE_14           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_DUSIZE_14_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_DUSIZE_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_DUSIZE_14_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_DUSIZE_14_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_DUSIZE_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_DUSIZE_14_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_DUSIZE_14_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_DUSIZE_14_GET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_DUSIZE_14_SET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_16_DUSIZE_14_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_17                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_17                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_17.RESERVED_14         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_RESERVED_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_RESERVED_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_RESERVED_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_RESERVED_14_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_RESERVED_14_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_RESERVED_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_RESERVED_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_RESERVED_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_RESERVED_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_17_RESERVED_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_18                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_18                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_18.RESERVED_14         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_RESERVED_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_RESERVED_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_RESERVED_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_RESERVED_14_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_RESERVED_14_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_RESERVED_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_RESERVED_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_RESERVED_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_RESERVED_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_18_RESERVED_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_19                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_19                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_19.RESERVED_14         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_RESERVED_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_RESERVED_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_RESERVED_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_RESERVED_14_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_RESERVED_14_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_RESERVED_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_RESERVED_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_RESERVED_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_RESERVED_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_19_RESERVED_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_20                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_20                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_20.RESERVED_14         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_RESERVED_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_RESERVED_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_RESERVED_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_RESERVED_14_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_RESERVED_14_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_RESERVED_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_RESERVED_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_RESERVED_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_RESERVED_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_20_RESERVED_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_21                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_21                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_21.RESERVED_14         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_RESERVED_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_RESERVED_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_RESERVED_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_RESERVED_14_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_RESERVED_14_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_RESERVED_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_RESERVED_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_RESERVED_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_RESERVED_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_21_RESERVED_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_22                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_22                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_22.RESERVED_14         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_RESERVED_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_RESERVED_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_RESERVED_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_RESERVED_14_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_RESERVED_14_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_RESERVED_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_RESERVED_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_RESERVED_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_RESERVED_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_22_RESERVED_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_23                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_23                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_23.RESERVED_14         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_RESERVED_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_RESERVED_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_RESERVED_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_RESERVED_14_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_RESERVED_14_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_RESERVED_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_RESERVED_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_RESERVED_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_RESERVED_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_23_RESERVED_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_24                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_24                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_24.RESERVED_14         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_RESERVED_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_RESERVED_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_RESERVED_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_RESERVED_14_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_RESERVED_14_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_RESERVED_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_RESERVED_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_RESERVED_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_RESERVED_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_24_RESERVED_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_25                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_25                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_25.RESERVED_14         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_RESERVED_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_RESERVED_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_RESERVED_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_RESERVED_14_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_RESERVED_14_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_RESERVED_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_RESERVED_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_RESERVED_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_RESERVED_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_25_RESERVED_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_26                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_26                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_26.RESERVED_14         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_RESERVED_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_RESERVED_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_RESERVED_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_RESERVED_14_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_RESERVED_14_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_RESERVED_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_RESERVED_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_RESERVED_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_RESERVED_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_26_RESERVED_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_27                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_27                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_27.RESERVED_14         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_RESERVED_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_RESERVED_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_RESERVED_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_RESERVED_14_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_RESERVED_14_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_RESERVED_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_RESERVED_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_RESERVED_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_RESERVED_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_27_RESERVED_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_28                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_28                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_28.RESERVED_14         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_RESERVED_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_RESERVED_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_RESERVED_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_RESERVED_14_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_RESERVED_14_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_RESERVED_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_RESERVED_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_RESERVED_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_RESERVED_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_28_RESERVED_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_29                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_29                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_29.RESERVED_14         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_RESERVED_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_RESERVED_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_RESERVED_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_RESERVED_14_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_RESERVED_14_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_RESERVED_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_RESERVED_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_RESERVED_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_RESERVED_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_29_RESERVED_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_30                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_30                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_30.RESERVED_14         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_RESERVED_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_RESERVED_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_RESERVED_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_RESERVED_14_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_RESERVED_14_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_RESERVED_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_RESERVED_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_RESERVED_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_RESERVED_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_30_RESERVED_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_14_31                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_14_31                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_14_31.RESERVED_14         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_RESERVED_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_RESERVED_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_RESERVED_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_RESERVED_14_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_RESERVED_14_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_RESERVED_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_RESERVED_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_RESERVED_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_RESERVED_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_14_31_RESERVED_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_0                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_0                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_0.CRYPTOKEY_15_0       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_CRYPTOKEY_15_0_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_CRYPTOKEY_15_0_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_CRYPTOKEY_15_0_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_CRYPTOKEY_15_0_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_CRYPTOKEY_15_0_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_CRYPTOKEY_15_0_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_CRYPTOKEY_15_0_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_CRYPTOKEY_15_0_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_CRYPTOKEY_15_0_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_0_CRYPTOKEY_15_0_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_1                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_1                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_1.CRYPTOKEY_15_1       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_CRYPTOKEY_15_1_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_CRYPTOKEY_15_1_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_CRYPTOKEY_15_1_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_CRYPTOKEY_15_1_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_CRYPTOKEY_15_1_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_CRYPTOKEY_15_1_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_CRYPTOKEY_15_1_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_CRYPTOKEY_15_1_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_CRYPTOKEY_15_1_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_1_CRYPTOKEY_15_1_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_2                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_2                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_2.CRYPTOKEY_15_2       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_CRYPTOKEY_15_2_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_CRYPTOKEY_15_2_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_CRYPTOKEY_15_2_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_CRYPTOKEY_15_2_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_CRYPTOKEY_15_2_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_CRYPTOKEY_15_2_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_CRYPTOKEY_15_2_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_CRYPTOKEY_15_2_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_CRYPTOKEY_15_2_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_2_CRYPTOKEY_15_2_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_3                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_3                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_3.CRYPTOKEY_15_3       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_CRYPTOKEY_15_3_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_CRYPTOKEY_15_3_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_CRYPTOKEY_15_3_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_CRYPTOKEY_15_3_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_CRYPTOKEY_15_3_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_CRYPTOKEY_15_3_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_CRYPTOKEY_15_3_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_CRYPTOKEY_15_3_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_CRYPTOKEY_15_3_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_3_CRYPTOKEY_15_3_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_4                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_4                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_4.CRYPTOKEY_15_4       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_CRYPTOKEY_15_4_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_CRYPTOKEY_15_4_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_CRYPTOKEY_15_4_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_CRYPTOKEY_15_4_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_CRYPTOKEY_15_4_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_CRYPTOKEY_15_4_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_CRYPTOKEY_15_4_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_CRYPTOKEY_15_4_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_CRYPTOKEY_15_4_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_4_CRYPTOKEY_15_4_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_5                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_5                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_5.CRYPTOKEY_15_5       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_CRYPTOKEY_15_5_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_CRYPTOKEY_15_5_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_CRYPTOKEY_15_5_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_CRYPTOKEY_15_5_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_CRYPTOKEY_15_5_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_CRYPTOKEY_15_5_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_CRYPTOKEY_15_5_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_CRYPTOKEY_15_5_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_CRYPTOKEY_15_5_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_5_CRYPTOKEY_15_5_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_6                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_6                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_6.CRYPTOKEY_15_6       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_CRYPTOKEY_15_6_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_CRYPTOKEY_15_6_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_CRYPTOKEY_15_6_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_CRYPTOKEY_15_6_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_CRYPTOKEY_15_6_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_CRYPTOKEY_15_6_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_CRYPTOKEY_15_6_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_CRYPTOKEY_15_6_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_CRYPTOKEY_15_6_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_6_CRYPTOKEY_15_6_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_7                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_7                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_7.CRYPTOKEY_15_7       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_CRYPTOKEY_15_7_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_CRYPTOKEY_15_7_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_CRYPTOKEY_15_7_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_CRYPTOKEY_15_7_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_CRYPTOKEY_15_7_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_CRYPTOKEY_15_7_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_CRYPTOKEY_15_7_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_CRYPTOKEY_15_7_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_CRYPTOKEY_15_7_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_7_CRYPTOKEY_15_7_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_8                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_8                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_8.CRYPTOKEY_15_8       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_CRYPTOKEY_15_8_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_CRYPTOKEY_15_8_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_CRYPTOKEY_15_8_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_CRYPTOKEY_15_8_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_CRYPTOKEY_15_8_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_CRYPTOKEY_15_8_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_CRYPTOKEY_15_8_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_CRYPTOKEY_15_8_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_CRYPTOKEY_15_8_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_8_CRYPTOKEY_15_8_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_9                     */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_9                 */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_9.CRYPTOKEY_15_9       */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_CRYPTOKEY_15_9_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_CRYPTOKEY_15_9_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_CRYPTOKEY_15_9_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_CRYPTOKEY_15_9_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_CRYPTOKEY_15_9_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_CRYPTOKEY_15_9_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_CRYPTOKEY_15_9_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_CRYPTOKEY_15_9_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_CRYPTOKEY_15_9_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_9_CRYPTOKEY_15_9_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_10                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_10                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_10.CRYPTOKEY_15_10     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_CRYPTOKEY_15_10_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_CRYPTOKEY_15_10_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_CRYPTOKEY_15_10_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_CRYPTOKEY_15_10_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_CRYPTOKEY_15_10_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_CRYPTOKEY_15_10_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_CRYPTOKEY_15_10_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_CRYPTOKEY_15_10_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_CRYPTOKEY_15_10_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_10_CRYPTOKEY_15_10_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_11                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_11                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_11.CRYPTOKEY_15_11     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_CRYPTOKEY_15_11_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_CRYPTOKEY_15_11_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_CRYPTOKEY_15_11_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_CRYPTOKEY_15_11_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_CRYPTOKEY_15_11_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_CRYPTOKEY_15_11_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_CRYPTOKEY_15_11_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_CRYPTOKEY_15_11_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_CRYPTOKEY_15_11_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_11_CRYPTOKEY_15_11_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_12                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_12                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_12.CRYPTOKEY_15_12     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_CRYPTOKEY_15_12_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_CRYPTOKEY_15_12_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_CRYPTOKEY_15_12_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_CRYPTOKEY_15_12_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_CRYPTOKEY_15_12_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_CRYPTOKEY_15_12_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_CRYPTOKEY_15_12_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_CRYPTOKEY_15_12_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_CRYPTOKEY_15_12_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_12_CRYPTOKEY_15_12_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_13                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_13                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_13.CRYPTOKEY_15_13     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_CRYPTOKEY_15_13_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_CRYPTOKEY_15_13_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_CRYPTOKEY_15_13_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_CRYPTOKEY_15_13_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_CRYPTOKEY_15_13_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_CRYPTOKEY_15_13_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_CRYPTOKEY_15_13_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_CRYPTOKEY_15_13_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_CRYPTOKEY_15_13_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_13_CRYPTOKEY_15_13_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_14                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_14                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_14.CRYPTOKEY_15_14     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_CRYPTOKEY_15_14_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_CRYPTOKEY_15_14_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_CRYPTOKEY_15_14_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_CRYPTOKEY_15_14_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_CRYPTOKEY_15_14_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_CRYPTOKEY_15_14_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_CRYPTOKEY_15_14_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_CRYPTOKEY_15_14_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_CRYPTOKEY_15_14_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_14_CRYPTOKEY_15_14_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_15                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_15                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_15.CRYPTOKEY_15_15     */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_CRYPTOKEY_15_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_CRYPTOKEY_15_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_CRYPTOKEY_15_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_CRYPTOKEY_15_15_READ_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_CRYPTOKEY_15_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_CRYPTOKEY_15_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_CRYPTOKEY_15_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_CRYPTOKEY_15_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_CRYPTOKEY_15_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_15_CRYPTOKEY_15_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_16                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_16                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_16.CFGE_15             */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CFGE_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CFGE_15_LSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CFGE_15_WIDTH 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CFGE_15_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CFGE_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CFGE_15_RESET 0x0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CFGE_15_FIELD_MASK 0x80000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CFGE_15_GET(x) \
   (((x) & 0x80000000ul) >> 31)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CFGE_15_SET(x) \
   (((x) << 31) & 0x80000000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CFGE_15_MODIFY(r, x) \
   ((((x) << 31) & 0x80000000ul) | ((r) & 0x7ffffffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_16.CRYPTPCFG_RSVD_15   */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CRYPTPCFG_RSVD_15_MSB 30u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CRYPTPCFG_RSVD_15_LSB 16u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CRYPTPCFG_RSVD_15_WIDTH 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CRYPTPCFG_RSVD_15_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CRYPTPCFG_RSVD_15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CRYPTPCFG_RSVD_15_RESET 0x0000u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CRYPTPCFG_RSVD_15_FIELD_MASK 0x7fff0000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CRYPTPCFG_RSVD_15_GET(x) \
   (((x) & 0x7fff0000ul) >> 16)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CRYPTPCFG_RSVD_15_SET(x) \
   (((x) << 16) & 0x7fff0000ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CRYPTPCFG_RSVD_15_MODIFY(r, x) \
   ((((x) << 16) & 0x7fff0000ul) | ((r) & 0x8000fffful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_16.CAPIDX_15           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CAPIDX_15_MSB 15u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CAPIDX_15_LSB 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CAPIDX_15_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CAPIDX_15_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CAPIDX_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CAPIDX_15_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CAPIDX_15_FIELD_MASK 0x0000ff00ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CAPIDX_15_GET(x) \
   (((x) & 0x0000ff00ul) >> 8)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CAPIDX_15_SET(x) \
   (((x) << 8) & 0x0000ff00ul)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_CAPIDX_15_MODIFY(r, x) \
   ((((x) << 8) & 0x0000ff00ul) | ((r) & 0xffff00fful))
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_16.DUSIZE_15           */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_DUSIZE_15_MSB 7u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_DUSIZE_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_DUSIZE_15_WIDTH 8u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_DUSIZE_15_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_DUSIZE_15_WRITE_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_DUSIZE_15_RESET 0x00u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_DUSIZE_15_FIELD_MASK 0x000000fful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_DUSIZE_15_GET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_DUSIZE_15_SET(x) \
   ((x) & 0x000000fful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_16_DUSIZE_15_MODIFY(r, x) \
   (((x) & 0x000000fful) | ((r) & 0xffffff00ul))

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_17                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_17                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_17.RESERVED_15         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_RESERVED_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_RESERVED_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_RESERVED_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_RESERVED_15_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_RESERVED_15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_RESERVED_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_RESERVED_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_RESERVED_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_RESERVED_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_17_RESERVED_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_18                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_18                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_18.RESERVED_15         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_RESERVED_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_RESERVED_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_RESERVED_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_RESERVED_15_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_RESERVED_15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_RESERVED_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_RESERVED_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_RESERVED_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_RESERVED_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_18_RESERVED_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_19                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_19                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_19.RESERVED_15         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_RESERVED_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_RESERVED_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_RESERVED_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_RESERVED_15_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_RESERVED_15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_RESERVED_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_RESERVED_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_RESERVED_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_RESERVED_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_19_RESERVED_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_20                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_20                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_20.RESERVED_15         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_RESERVED_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_RESERVED_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_RESERVED_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_RESERVED_15_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_RESERVED_15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_RESERVED_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_RESERVED_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_RESERVED_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_RESERVED_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_20_RESERVED_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_21                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_21                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_21.RESERVED_15         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_RESERVED_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_RESERVED_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_RESERVED_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_RESERVED_15_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_RESERVED_15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_RESERVED_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_RESERVED_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_RESERVED_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_RESERVED_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_21_RESERVED_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_22                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_22                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_22.RESERVED_15         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_RESERVED_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_RESERVED_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_RESERVED_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_RESERVED_15_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_RESERVED_15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_RESERVED_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_RESERVED_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_RESERVED_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_RESERVED_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_22_RESERVED_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_23                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_23                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_23.RESERVED_15         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_RESERVED_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_RESERVED_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_RESERVED_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_RESERVED_15_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_RESERVED_15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_RESERVED_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_RESERVED_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_RESERVED_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_RESERVED_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_23_RESERVED_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_24                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_24                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_24.RESERVED_15         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_RESERVED_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_RESERVED_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_RESERVED_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_RESERVED_15_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_RESERVED_15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_RESERVED_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_RESERVED_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_RESERVED_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_RESERVED_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_24_RESERVED_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_25                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_25                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_25.RESERVED_15         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_RESERVED_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_RESERVED_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_RESERVED_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_RESERVED_15_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_RESERVED_15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_RESERVED_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_RESERVED_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_RESERVED_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_RESERVED_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_25_RESERVED_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_26                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_26                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_26.RESERVED_15         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_RESERVED_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_RESERVED_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_RESERVED_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_RESERVED_15_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_RESERVED_15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_RESERVED_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_RESERVED_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_RESERVED_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_RESERVED_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_26_RESERVED_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_27                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_27                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_27.RESERVED_15         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_RESERVED_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_RESERVED_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_RESERVED_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_RESERVED_15_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_RESERVED_15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_RESERVED_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_RESERVED_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_RESERVED_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_RESERVED_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_27_RESERVED_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_28                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_28                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_28.RESERVED_15         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_RESERVED_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_RESERVED_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_RESERVED_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_RESERVED_15_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_RESERVED_15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_RESERVED_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_RESERVED_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_RESERVED_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_RESERVED_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_28_RESERVED_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_29                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_29                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_29.RESERVED_15         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_RESERVED_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_RESERVED_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_RESERVED_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_RESERVED_15_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_RESERVED_15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_RESERVED_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_RESERVED_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_RESERVED_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_RESERVED_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_29_RESERVED_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_30                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_30                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_30.RESERVED_15         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_RESERVED_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_RESERVED_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_RESERVED_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_RESERVED_15_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_RESERVED_15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_RESERVED_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_RESERVED_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_RESERVED_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_RESERVED_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_30_RESERVED_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* Register type: emmc::crypto_vendor2::CRYPTOCFG_15_31                    */
/* Register template: emmc::crypto_vendor2::CRYPTOCFG_15_31                */
/* Field member: emmc::crypto_vendor2::CRYPTOCFG_15_31.RESERVED_15         */
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_RESERVED_15_MSB 31u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_RESERVED_15_LSB 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_RESERVED_15_WIDTH 32u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_RESERVED_15_READ_ACCESS 1u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_RESERVED_15_WRITE_ACCESS 0u
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_RESERVED_15_RESET 0x00000000ul
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_RESERVED_15_FIELD_MASK 0xfffffffful
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_RESERVED_15_GET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_RESERVED_15_SET(x) \
   ((x) & 0xfffffffful)
#define EMMC_CRYPTO_VENDOR2_CRYPTOCFG_15_31_RESERVED_15_MODIFY(r, x) \
   ((x) & 0xfffffffful)

/* ####################################################################### */
/*        TYPE DEFINITIONS                                                 */
/* ####################################################################### */

/* Typedef for Group: emmc::crypto                                         */
typedef struct {
   volatile uint32_t SDMASA_R; /**< Offset 0x0 (R/W) */
   volatile uint16_t BLOCKSIZE_R; /**< Offset 0x4 (R/W) */
   volatile uint16_t BLOCKCOUNT_R; /**< Offset 0x6 (R/W) */
   volatile uint32_t ARGUMENT_R; /**< Offset 0x8 (R/W) */
   volatile uint16_t XFER_MODE_R; /**< Offset 0xc (R/W) */
   volatile uint16_t CMD_R; /**< Offset 0xe (R/W) */
   uint32_t RESP01_R; /**< Offset 0x10 (R) */
   uint32_t RESP23_R; /**< Offset 0x14 (R) */
   uint32_t RESP45_R; /**< Offset 0x18 (R) */
   uint32_t RESP67_R; /**< Offset 0x1c (R) */
   volatile uint32_t BUF_DATA_R; /**< Offset 0x20 (R/W) */
   uint32_t PSTATE_REG; /**< Offset 0x24 (R) */
   volatile uint8_t HOST_CTRL1_R; /**< Offset 0x28 (R/W) */
   volatile uint8_t PWR_CTRL_R; /**< Offset 0x29 (R/W) */
   volatile uint8_t BGAP_CTRL_R; /**< Offset 0x2a (R/W) */
   volatile uint8_t WUP_CTRL_R; /**< Offset 0x2b (R/W) */
   volatile uint16_t CLK_CTRL_R; /**< Offset 0x2c (R/W) */
   volatile uint8_t TOUT_CTRL_R; /**< Offset 0x2e (R/W) */
   volatile uint8_t SW_RST_R; /**< Offset 0x2f (R/W) */
   volatile uint16_t NORMAL_INT_STAT_R; /**< Offset 0x30 (R/W) */
   volatile uint16_t ERROR_INT_STAT_R; /**< Offset 0x32 (R/W) */
   volatile uint16_t NORMAL_INT_STAT_EN_R; /**< Offset 0x34 (R/W) */
   volatile uint16_t ERROR_INT_STAT_EN_R; /**< Offset 0x36 (R/W) */
   volatile uint16_t NORMAL_INT_SIGNAL_EN_R; /**< Offset 0x38 (R/W) */
   volatile uint16_t ERROR_INT_SIGNAL_EN_R; /**< Offset 0x3a (R/W) */
   uint16_t AUTO_CMD_STAT_R; /**< Offset 0x3c (R) */
   volatile uint16_t HOST_CTRL2_R; /**< Offset 0x3e (R/W) */
   uint32_t CAPABILITIES1_R; /**< Offset 0x40 (R) */
   uint32_t CAPABILITIES2_R; /**< Offset 0x44 (R) */
   uint32_t CURR_CAPABILITIES1_R; /**< Offset 0x48 (R) */
   uint32_t CURR_CAPABILITIES2_R; /**< Offset 0x4c (R) */
   volatile uint16_t FORCE_AUTO_CMD_STAT_R; /**< Offset 0x50 (R/W) */
   volatile uint16_t FORCE_ERROR_INT_STAT_R; /**< Offset 0x52 (W) */
   uint8_t ADMA_ERR_STAT_R; /**< Offset 0x54 (R) */
   uint8_t _pad0[0x3];
   volatile uint32_t ADMA_SA_LOW_R; /**< Offset 0x58 (R/W) */
   volatile uint32_t ADMA_SA_HIGH_R; /**< Offset 0x5c (R/W) */
   uint16_t PRESET_INIT_R; /**< Offset 0x60 (R) */
   uint16_t PRESET_DS_R; /**< Offset 0x62 (R) */
   uint16_t PRESET_HS_R; /**< Offset 0x64 (R) */
   uint16_t PRESET_SDR12_R; /**< Offset 0x66 (R) */
   uint16_t PRESET_SDR25_R; /**< Offset 0x68 (R) */
   uint16_t PRESET_SDR50_R; /**< Offset 0x6a (R) */
   uint16_t PRESET_SDR104_R; /**< Offset 0x6c (R) */
   uint16_t PRESET_DDR50_R; /**< Offset 0x6e (R) */
   uint8_t _pad1[0x4];
   uint16_t PRESET_UHS2_R; /**< Offset 0x74 (R) */
   uint8_t _pad2[0x70];
   uint16_t P_EMBEDDED_CNTRL; /**< Offset 0xe6 (R) */
   uint16_t P_VENDOR_SPECIFIC_AREA; /**< Offset 0xe8 (R) */
   uint16_t P_VENDOR2_SPECIFIC_AREA; /**< Offset 0xea (R) */
   uint8_t _pad3[0x10];
   uint16_t SLOT_INTR_STATUS_R; /**< Offset 0xfc (R) */
   uint16_t HOST_CNTRL_VERS_R; /**< Offset 0xfe (R) */
} Emmc_crypto, *PTR_Emmc_crypto;

/* Typedef for Group: emmc::crypto_phy                                     */
typedef struct {
   volatile uint32_t PHY_CNFG; /**< Offset 0x0 (R/W) */
   volatile uint16_t CMDPAD_CNFG; /**< Offset 0x4 (R/W) */
   volatile uint16_t DATPAD_CNFG; /**< Offset 0x6 (R/W) */
   volatile uint16_t CLKPAD_CNFG; /**< Offset 0x8 (R/W) */
   volatile uint16_t STBPAD_CNFG; /**< Offset 0xa (R/W) */
   volatile uint16_t RSTNPAD_CNFG; /**< Offset 0xc (R/W) */
   volatile uint16_t PADTEST_CNFG; /**< Offset 0xe (R/W) */
   volatile uint16_t PADTEST_OUT; /**< Offset 0x10 (R/W) */
   volatile uint16_t PADTEST_IN; /**< Offset 0x12 (R/W) */
   uint8_t _pad0[0x4];
   volatile uint16_t PRBS_CNFG; /**< Offset 0x18 (R/W) */
   volatile uint8_t PHYLPBK_CNFG; /**< Offset 0x1a (R/W) */
   uint8_t _pad1;
   volatile uint8_t COMMDL_CNFG; /**< Offset 0x1c (R/W) */
   volatile uint8_t SDCLKDL_CNFG; /**< Offset 0x1d (R/W) */
   volatile uint8_t SDCLKDL_DC; /**< Offset 0x1e (R/W) */
   uint8_t _pad2;
   volatile uint8_t SMPLDL_CNFG; /**< Offset 0x20 (R/W) */
   volatile uint8_t ATDL_CNFG; /**< Offset 0x21 (R/W) */
   uint8_t _pad3[0x2];
   volatile uint8_t DLL_CTRL; /**< Offset 0x24 (R/W) */
   volatile uint8_t DLL_CNFG1; /**< Offset 0x25 (R/W) */
   volatile uint8_t DLL_CNFG2; /**< Offset 0x26 (R/W) */
   uint8_t _pad4;
   volatile uint8_t DLLDL_CNFG; /**< Offset 0x28 (R/W) */
   volatile uint8_t DLL_OFFST; /**< Offset 0x29 (R/W) */
   volatile uint8_t DLLMST_TSTDC; /**< Offset 0x2a (R/W) */
   uint8_t _pad5;
   volatile uint16_t DLLLBT_CNFG; /**< Offset 0x2c (R/W) */
   uint8_t DLL_STATUS; /**< Offset 0x2e (R) */
   uint8_t _pad6;
   uint8_t DLLDBG_MLKDC; /**< Offset 0x30 (R) */
   uint8_t _pad7;
   uint8_t DLLDBG_SLKDC; /**< Offset 0x32 (R) */
   uint8_t _pad8[0xd];
} Emmc_crypto_phy, *PTR_Emmc_crypto_phy;

/* Typedef for Group: emmc::crypto_vendor1                                 */
typedef struct {
   uint32_t MSHC_VER_ID_R; /**< Offset 0x0 (R) */
   uint32_t MSHC_VER_TYPE_R; /**< Offset 0x4 (R) */
   volatile uint8_t MSHC_CTRL_R; /**< Offset 0x8 (R/W) */
   uint8_t _pad0[0x7];
   volatile uint8_t MBIU_CTRL_R; /**< Offset 0x10 (R/W) */
   uint8_t _pad1[0x1b];
   volatile uint16_t EMMC_CTRL_R; /**< Offset 0x2c (R/W) */
   volatile uint16_t BOOT_CTRL_R; /**< Offset 0x2e (R/W) */
   uint32_t GP_IN_R; /**< Offset 0x30 (R) */
   volatile uint32_t GP_OUT_R; /**< Offset 0x34 (R/W) */
   uint8_t _pad2[0x8];
   volatile uint32_t AT_CTRL_R; /**< Offset 0x40 (R/W) */
   volatile uint32_t AT_STAT_R; /**< Offset 0x44 (R/W) */
   uint8_t _pad3[0x8];
} Emmc_crypto_vendor1, *PTR_Emmc_crypto_vendor1;

/* Typedef for Group: emmc::crypto_embedded_control                        */
typedef struct {
   volatile uint32_t EMBEDDED_CTRL_R; /**< Offset 0x0 (R/W) */
} Emmc_crypto_embedded_control, *PTR_Emmc_crypto_embedded_control;

/* Typedef for Group: emmc::crypto_vendor2                                 */
typedef struct {
   uint8_t _pad0[0x4];
   uint32_t CQCAP; /**< Offset 0x4 (R) */
   volatile uint32_t CQCFG; /**< Offset 0x8 (R/W) */
   uint8_t _pad1[0x64];
   volatile uint32_t CRNQP; /**< Offset 0x70 (R/W) */
   volatile uint32_t CRNQDUN; /**< Offset 0x74 (R/W) */
   volatile uint32_t CRNQIS; /**< Offset 0x78 (R/W) */
   volatile uint32_t CRNQIE; /**< Offset 0x7c (R/W) */
   uint8_t _pad2[0x80];
   uint32_t CRCAP; /**< Offset 0x100 (R) */
   uint32_t CRYPTOCAP_0; /**< Offset 0x104 (R) */
   uint32_t CRYPTOCAP_1; /**< Offset 0x108 (R) */
   uint32_t CRYPTOCAP_2; /**< Offset 0x10c (R) */
   uint32_t CRYPTOCAP_3; /**< Offset 0x110 (R) */
   uint8_t _pad3[0x6ec];
   volatile uint32_t CRYPTOCFG_0_0; /**< Offset 0x800 (W) */
   volatile uint32_t CRYPTOCFG_0_1; /**< Offset 0x804 (W) */
   volatile uint32_t CRYPTOCFG_0_2; /**< Offset 0x808 (W) */
   volatile uint32_t CRYPTOCFG_0_3; /**< Offset 0x80c (W) */
   volatile uint32_t CRYPTOCFG_0_4; /**< Offset 0x810 (W) */
   volatile uint32_t CRYPTOCFG_0_5; /**< Offset 0x814 (W) */
   volatile uint32_t CRYPTOCFG_0_6; /**< Offset 0x818 (W) */
   volatile uint32_t CRYPTOCFG_0_7; /**< Offset 0x81c (W) */
   volatile uint32_t CRYPTOCFG_0_8; /**< Offset 0x820 (W) */
   volatile uint32_t CRYPTOCFG_0_9; /**< Offset 0x824 (W) */
   volatile uint32_t CRYPTOCFG_0_10; /**< Offset 0x828 (W) */
   volatile uint32_t CRYPTOCFG_0_11; /**< Offset 0x82c (W) */
   volatile uint32_t CRYPTOCFG_0_12; /**< Offset 0x830 (W) */
   volatile uint32_t CRYPTOCFG_0_13; /**< Offset 0x834 (W) */
   volatile uint32_t CRYPTOCFG_0_14; /**< Offset 0x838 (W) */
   volatile uint32_t CRYPTOCFG_0_15; /**< Offset 0x83c (W) */
   volatile uint32_t CRYPTOCFG_0_16; /**< Offset 0x840 (R/W) */
   uint32_t CRYPTOCFG_0_17; /**< Offset 0x844 (R) */
   uint32_t CRYPTOCFG_0_18; /**< Offset 0x848 (R) */
   uint32_t CRYPTOCFG_0_19; /**< Offset 0x84c (R) */
   uint32_t CRYPTOCFG_0_20; /**< Offset 0x850 (R) */
   uint32_t CRYPTOCFG_0_21; /**< Offset 0x854 (R) */
   uint32_t CRYPTOCFG_0_22; /**< Offset 0x858 (R) */
   uint32_t CRYPTOCFG_0_23; /**< Offset 0x85c (R) */
   uint32_t CRYPTOCFG_0_24; /**< Offset 0x860 (R) */
   uint32_t CRYPTOCFG_0_25; /**< Offset 0x864 (R) */
   uint32_t CRYPTOCFG_0_26; /**< Offset 0x868 (R) */
   uint32_t CRYPTOCFG_0_27; /**< Offset 0x86c (R) */
   uint32_t CRYPTOCFG_0_28; /**< Offset 0x870 (R) */
   uint32_t CRYPTOCFG_0_29; /**< Offset 0x874 (R) */
   uint32_t CRYPTOCFG_0_30; /**< Offset 0x878 (R) */
   uint32_t CRYPTOCFG_0_31; /**< Offset 0x87c (R) */
   volatile uint32_t CRYPTOCFG_1_0; /**< Offset 0x880 (W) */
   volatile uint32_t CRYPTOCFG_1_1; /**< Offset 0x884 (W) */
   volatile uint32_t CRYPTOCFG_1_2; /**< Offset 0x888 (W) */
   volatile uint32_t CRYPTOCFG_1_3; /**< Offset 0x88c (W) */
   volatile uint32_t CRYPTOCFG_1_4; /**< Offset 0x890 (W) */
   volatile uint32_t CRYPTOCFG_1_5; /**< Offset 0x894 (W) */
   volatile uint32_t CRYPTOCFG_1_6; /**< Offset 0x898 (W) */
   volatile uint32_t CRYPTOCFG_1_7; /**< Offset 0x89c (W) */
   volatile uint32_t CRYPTOCFG_1_8; /**< Offset 0x8a0 (W) */
   volatile uint32_t CRYPTOCFG_1_9; /**< Offset 0x8a4 (W) */
   volatile uint32_t CRYPTOCFG_1_10; /**< Offset 0x8a8 (W) */
   volatile uint32_t CRYPTOCFG_1_11; /**< Offset 0x8ac (W) */
   volatile uint32_t CRYPTOCFG_1_12; /**< Offset 0x8b0 (W) */
   volatile uint32_t CRYPTOCFG_1_13; /**< Offset 0x8b4 (W) */
   volatile uint32_t CRYPTOCFG_1_14; /**< Offset 0x8b8 (W) */
   volatile uint32_t CRYPTOCFG_1_15; /**< Offset 0x8bc (W) */
   volatile uint32_t CRYPTOCFG_1_16; /**< Offset 0x8c0 (R/W) */
   uint32_t CRYPTOCFG_1_17; /**< Offset 0x8c4 (R) */
   uint32_t CRYPTOCFG_1_18; /**< Offset 0x8c8 (R) */
   uint32_t CRYPTOCFG_1_19; /**< Offset 0x8cc (R) */
   uint32_t CRYPTOCFG_1_20; /**< Offset 0x8d0 (R) */
   uint32_t CRYPTOCFG_1_21; /**< Offset 0x8d4 (R) */
   uint32_t CRYPTOCFG_1_22; /**< Offset 0x8d8 (R) */
   uint32_t CRYPTOCFG_1_23; /**< Offset 0x8dc (R) */
   uint32_t CRYPTOCFG_1_24; /**< Offset 0x8e0 (R) */
   uint32_t CRYPTOCFG_1_25; /**< Offset 0x8e4 (R) */
   uint32_t CRYPTOCFG_1_26; /**< Offset 0x8e8 (R) */
   uint32_t CRYPTOCFG_1_27; /**< Offset 0x8ec (R) */
   uint32_t CRYPTOCFG_1_28; /**< Offset 0x8f0 (R) */
   uint32_t CRYPTOCFG_1_29; /**< Offset 0x8f4 (R) */
   uint32_t CRYPTOCFG_1_30; /**< Offset 0x8f8 (R) */
   uint32_t CRYPTOCFG_1_31; /**< Offset 0x8fc (R) */
   volatile uint32_t CRYPTOCFG_2_0; /**< Offset 0x900 (W) */
   volatile uint32_t CRYPTOCFG_2_1; /**< Offset 0x904 (W) */
   volatile uint32_t CRYPTOCFG_2_2; /**< Offset 0x908 (W) */
   volatile uint32_t CRYPTOCFG_2_3; /**< Offset 0x90c (W) */
   volatile uint32_t CRYPTOCFG_2_4; /**< Offset 0x910 (W) */
   volatile uint32_t CRYPTOCFG_2_5; /**< Offset 0x914 (W) */
   volatile uint32_t CRYPTOCFG_2_6; /**< Offset 0x918 (W) */
   volatile uint32_t CRYPTOCFG_2_7; /**< Offset 0x91c (W) */
   volatile uint32_t CRYPTOCFG_2_8; /**< Offset 0x920 (W) */
   volatile uint32_t CRYPTOCFG_2_9; /**< Offset 0x924 (W) */
   volatile uint32_t CRYPTOCFG_2_10; /**< Offset 0x928 (W) */
   volatile uint32_t CRYPTOCFG_2_11; /**< Offset 0x92c (W) */
   volatile uint32_t CRYPTOCFG_2_12; /**< Offset 0x930 (W) */
   volatile uint32_t CRYPTOCFG_2_13; /**< Offset 0x934 (W) */
   volatile uint32_t CRYPTOCFG_2_14; /**< Offset 0x938 (W) */
   volatile uint32_t CRYPTOCFG_2_15; /**< Offset 0x93c (W) */
   volatile uint32_t CRYPTOCFG_2_16; /**< Offset 0x940 (R/W) */
   uint32_t CRYPTOCFG_2_17; /**< Offset 0x944 (R) */
   uint32_t CRYPTOCFG_2_18; /**< Offset 0x948 (R) */
   uint32_t CRYPTOCFG_2_19; /**< Offset 0x94c (R) */
   uint32_t CRYPTOCFG_2_20; /**< Offset 0x950 (R) */
   uint32_t CRYPTOCFG_2_21; /**< Offset 0x954 (R) */
   uint32_t CRYPTOCFG_2_22; /**< Offset 0x958 (R) */
   uint32_t CRYPTOCFG_2_23; /**< Offset 0x95c (R) */
   uint32_t CRYPTOCFG_2_24; /**< Offset 0x960 (R) */
   uint32_t CRYPTOCFG_2_25; /**< Offset 0x964 (R) */
   uint32_t CRYPTOCFG_2_26; /**< Offset 0x968 (R) */
   uint32_t CRYPTOCFG_2_27; /**< Offset 0x96c (R) */
   uint32_t CRYPTOCFG_2_28; /**< Offset 0x970 (R) */
   uint32_t CRYPTOCFG_2_29; /**< Offset 0x974 (R) */
   uint32_t CRYPTOCFG_2_30; /**< Offset 0x978 (R) */
   uint32_t CRYPTOCFG_2_31; /**< Offset 0x97c (R) */
   volatile uint32_t CRYPTOCFG_3_0; /**< Offset 0x980 (W) */
   volatile uint32_t CRYPTOCFG_3_1; /**< Offset 0x984 (W) */
   volatile uint32_t CRYPTOCFG_3_2; /**< Offset 0x988 (W) */
   volatile uint32_t CRYPTOCFG_3_3; /**< Offset 0x98c (W) */
   volatile uint32_t CRYPTOCFG_3_4; /**< Offset 0x990 (W) */
   volatile uint32_t CRYPTOCFG_3_5; /**< Offset 0x994 (W) */
   volatile uint32_t CRYPTOCFG_3_6; /**< Offset 0x998 (W) */
   volatile uint32_t CRYPTOCFG_3_7; /**< Offset 0x99c (W) */
   volatile uint32_t CRYPTOCFG_3_8; /**< Offset 0x9a0 (W) */
   volatile uint32_t CRYPTOCFG_3_9; /**< Offset 0x9a4 (W) */
   volatile uint32_t CRYPTOCFG_3_10; /**< Offset 0x9a8 (W) */
   volatile uint32_t CRYPTOCFG_3_11; /**< Offset 0x9ac (W) */
   volatile uint32_t CRYPTOCFG_3_12; /**< Offset 0x9b0 (W) */
   volatile uint32_t CRYPTOCFG_3_13; /**< Offset 0x9b4 (W) */
   volatile uint32_t CRYPTOCFG_3_14; /**< Offset 0x9b8 (W) */
   volatile uint32_t CRYPTOCFG_3_15; /**< Offset 0x9bc (W) */
   volatile uint32_t CRYPTOCFG_3_16; /**< Offset 0x9c0 (R/W) */
   uint32_t CRYPTOCFG_3_17; /**< Offset 0x9c4 (R) */
   uint32_t CRYPTOCFG_3_18; /**< Offset 0x9c8 (R) */
   uint32_t CRYPTOCFG_3_19; /**< Offset 0x9cc (R) */
   uint32_t CRYPTOCFG_3_20; /**< Offset 0x9d0 (R) */
   uint32_t CRYPTOCFG_3_21; /**< Offset 0x9d4 (R) */
   uint32_t CRYPTOCFG_3_22; /**< Offset 0x9d8 (R) */
   uint32_t CRYPTOCFG_3_23; /**< Offset 0x9dc (R) */
   uint32_t CRYPTOCFG_3_24; /**< Offset 0x9e0 (R) */
   uint32_t CRYPTOCFG_3_25; /**< Offset 0x9e4 (R) */
   uint32_t CRYPTOCFG_3_26; /**< Offset 0x9e8 (R) */
   uint32_t CRYPTOCFG_3_27; /**< Offset 0x9ec (R) */
   uint32_t CRYPTOCFG_3_28; /**< Offset 0x9f0 (R) */
   uint32_t CRYPTOCFG_3_29; /**< Offset 0x9f4 (R) */
   uint32_t CRYPTOCFG_3_30; /**< Offset 0x9f8 (R) */
   uint32_t CRYPTOCFG_3_31; /**< Offset 0x9fc (R) */
   volatile uint32_t CRYPTOCFG_4_0; /**< Offset 0xa00 (W) */
   volatile uint32_t CRYPTOCFG_4_1; /**< Offset 0xa04 (W) */
   volatile uint32_t CRYPTOCFG_4_2; /**< Offset 0xa08 (W) */
   volatile uint32_t CRYPTOCFG_4_3; /**< Offset 0xa0c (W) */
   volatile uint32_t CRYPTOCFG_4_4; /**< Offset 0xa10 (W) */
   volatile uint32_t CRYPTOCFG_4_5; /**< Offset 0xa14 (W) */
   volatile uint32_t CRYPTOCFG_4_6; /**< Offset 0xa18 (W) */
   volatile uint32_t CRYPTOCFG_4_7; /**< Offset 0xa1c (W) */
   volatile uint32_t CRYPTOCFG_4_8; /**< Offset 0xa20 (W) */
   volatile uint32_t CRYPTOCFG_4_9; /**< Offset 0xa24 (W) */
   volatile uint32_t CRYPTOCFG_4_10; /**< Offset 0xa28 (W) */
   volatile uint32_t CRYPTOCFG_4_11; /**< Offset 0xa2c (W) */
   volatile uint32_t CRYPTOCFG_4_12; /**< Offset 0xa30 (W) */
   volatile uint32_t CRYPTOCFG_4_13; /**< Offset 0xa34 (W) */
   volatile uint32_t CRYPTOCFG_4_14; /**< Offset 0xa38 (W) */
   volatile uint32_t CRYPTOCFG_4_15; /**< Offset 0xa3c (W) */
   volatile uint32_t CRYPTOCFG_4_16; /**< Offset 0xa40 (R/W) */
   uint32_t CRYPTOCFG_4_17; /**< Offset 0xa44 (R) */
   uint32_t CRYPTOCFG_4_18; /**< Offset 0xa48 (R) */
   uint32_t CRYPTOCFG_4_19; /**< Offset 0xa4c (R) */
   uint32_t CRYPTOCFG_4_20; /**< Offset 0xa50 (R) */
   uint32_t CRYPTOCFG_4_21; /**< Offset 0xa54 (R) */
   uint32_t CRYPTOCFG_4_22; /**< Offset 0xa58 (R) */
   uint32_t CRYPTOCFG_4_23; /**< Offset 0xa5c (R) */
   uint32_t CRYPTOCFG_4_24; /**< Offset 0xa60 (R) */
   uint32_t CRYPTOCFG_4_25; /**< Offset 0xa64 (R) */
   uint32_t CRYPTOCFG_4_26; /**< Offset 0xa68 (R) */
   uint32_t CRYPTOCFG_4_27; /**< Offset 0xa6c (R) */
   uint32_t CRYPTOCFG_4_28; /**< Offset 0xa70 (R) */
   uint32_t CRYPTOCFG_4_29; /**< Offset 0xa74 (R) */
   uint32_t CRYPTOCFG_4_30; /**< Offset 0xa78 (R) */
   uint32_t CRYPTOCFG_4_31; /**< Offset 0xa7c (R) */
   volatile uint32_t CRYPTOCFG_5_0; /**< Offset 0xa80 (W) */
   volatile uint32_t CRYPTOCFG_5_1; /**< Offset 0xa84 (W) */
   volatile uint32_t CRYPTOCFG_5_2; /**< Offset 0xa88 (W) */
   volatile uint32_t CRYPTOCFG_5_3; /**< Offset 0xa8c (W) */
   volatile uint32_t CRYPTOCFG_5_4; /**< Offset 0xa90 (W) */
   volatile uint32_t CRYPTOCFG_5_5; /**< Offset 0xa94 (W) */
   volatile uint32_t CRYPTOCFG_5_6; /**< Offset 0xa98 (W) */
   volatile uint32_t CRYPTOCFG_5_7; /**< Offset 0xa9c (W) */
   volatile uint32_t CRYPTOCFG_5_8; /**< Offset 0xaa0 (W) */
   volatile uint32_t CRYPTOCFG_5_9; /**< Offset 0xaa4 (W) */
   volatile uint32_t CRYPTOCFG_5_10; /**< Offset 0xaa8 (W) */
   volatile uint32_t CRYPTOCFG_5_11; /**< Offset 0xaac (W) */
   volatile uint32_t CRYPTOCFG_5_12; /**< Offset 0xab0 (W) */
   volatile uint32_t CRYPTOCFG_5_13; /**< Offset 0xab4 (W) */
   volatile uint32_t CRYPTOCFG_5_14; /**< Offset 0xab8 (W) */
   volatile uint32_t CRYPTOCFG_5_15; /**< Offset 0xabc (W) */
   volatile uint32_t CRYPTOCFG_5_16; /**< Offset 0xac0 (R/W) */
   uint32_t CRYPTOCFG_5_17; /**< Offset 0xac4 (R) */
   uint32_t CRYPTOCFG_5_18; /**< Offset 0xac8 (R) */
   uint32_t CRYPTOCFG_5_19; /**< Offset 0xacc (R) */
   uint32_t CRYPTOCFG_5_20; /**< Offset 0xad0 (R) */
   uint32_t CRYPTOCFG_5_21; /**< Offset 0xad4 (R) */
   uint32_t CRYPTOCFG_5_22; /**< Offset 0xad8 (R) */
   uint32_t CRYPTOCFG_5_23; /**< Offset 0xadc (R) */
   uint32_t CRYPTOCFG_5_24; /**< Offset 0xae0 (R) */
   uint32_t CRYPTOCFG_5_25; /**< Offset 0xae4 (R) */
   uint32_t CRYPTOCFG_5_26; /**< Offset 0xae8 (R) */
   uint32_t CRYPTOCFG_5_27; /**< Offset 0xaec (R) */
   uint32_t CRYPTOCFG_5_28; /**< Offset 0xaf0 (R) */
   uint32_t CRYPTOCFG_5_29; /**< Offset 0xaf4 (R) */
   uint32_t CRYPTOCFG_5_30; /**< Offset 0xaf8 (R) */
   uint32_t CRYPTOCFG_5_31; /**< Offset 0xafc (R) */
   volatile uint32_t CRYPTOCFG_6_0; /**< Offset 0xb00 (W) */
   volatile uint32_t CRYPTOCFG_6_1; /**< Offset 0xb04 (W) */
   volatile uint32_t CRYPTOCFG_6_2; /**< Offset 0xb08 (W) */
   volatile uint32_t CRYPTOCFG_6_3; /**< Offset 0xb0c (W) */
   volatile uint32_t CRYPTOCFG_6_4; /**< Offset 0xb10 (W) */
   volatile uint32_t CRYPTOCFG_6_5; /**< Offset 0xb14 (W) */
   volatile uint32_t CRYPTOCFG_6_6; /**< Offset 0xb18 (W) */
   volatile uint32_t CRYPTOCFG_6_7; /**< Offset 0xb1c (W) */
   volatile uint32_t CRYPTOCFG_6_8; /**< Offset 0xb20 (W) */
   volatile uint32_t CRYPTOCFG_6_9; /**< Offset 0xb24 (W) */
   volatile uint32_t CRYPTOCFG_6_10; /**< Offset 0xb28 (W) */
   volatile uint32_t CRYPTOCFG_6_11; /**< Offset 0xb2c (W) */
   volatile uint32_t CRYPTOCFG_6_12; /**< Offset 0xb30 (W) */
   volatile uint32_t CRYPTOCFG_6_13; /**< Offset 0xb34 (W) */
   volatile uint32_t CRYPTOCFG_6_14; /**< Offset 0xb38 (W) */
   volatile uint32_t CRYPTOCFG_6_15; /**< Offset 0xb3c (W) */
   volatile uint32_t CRYPTOCFG_6_16; /**< Offset 0xb40 (R/W) */
   uint32_t CRYPTOCFG_6_17; /**< Offset 0xb44 (R) */
   uint32_t CRYPTOCFG_6_18; /**< Offset 0xb48 (R) */
   uint32_t CRYPTOCFG_6_19; /**< Offset 0xb4c (R) */
   uint32_t CRYPTOCFG_6_20; /**< Offset 0xb50 (R) */
   uint32_t CRYPTOCFG_6_21; /**< Offset 0xb54 (R) */
   uint32_t CRYPTOCFG_6_22; /**< Offset 0xb58 (R) */
   uint32_t CRYPTOCFG_6_23; /**< Offset 0xb5c (R) */
   uint32_t CRYPTOCFG_6_24; /**< Offset 0xb60 (R) */
   uint32_t CRYPTOCFG_6_25; /**< Offset 0xb64 (R) */
   uint32_t CRYPTOCFG_6_26; /**< Offset 0xb68 (R) */
   uint32_t CRYPTOCFG_6_27; /**< Offset 0xb6c (R) */
   uint32_t CRYPTOCFG_6_28; /**< Offset 0xb70 (R) */
   uint32_t CRYPTOCFG_6_29; /**< Offset 0xb74 (R) */
   uint32_t CRYPTOCFG_6_30; /**< Offset 0xb78 (R) */
   uint32_t CRYPTOCFG_6_31; /**< Offset 0xb7c (R) */
   volatile uint32_t CRYPTOCFG_7_0; /**< Offset 0xb80 (W) */
   volatile uint32_t CRYPTOCFG_7_1; /**< Offset 0xb84 (W) */
   volatile uint32_t CRYPTOCFG_7_2; /**< Offset 0xb88 (W) */
   volatile uint32_t CRYPTOCFG_7_3; /**< Offset 0xb8c (W) */
   volatile uint32_t CRYPTOCFG_7_4; /**< Offset 0xb90 (W) */
   volatile uint32_t CRYPTOCFG_7_5; /**< Offset 0xb94 (W) */
   volatile uint32_t CRYPTOCFG_7_6; /**< Offset 0xb98 (W) */
   volatile uint32_t CRYPTOCFG_7_7; /**< Offset 0xb9c (W) */
   volatile uint32_t CRYPTOCFG_7_8; /**< Offset 0xba0 (W) */
   volatile uint32_t CRYPTOCFG_7_9; /**< Offset 0xba4 (W) */
   volatile uint32_t CRYPTOCFG_7_10; /**< Offset 0xba8 (W) */
   volatile uint32_t CRYPTOCFG_7_11; /**< Offset 0xbac (W) */
   volatile uint32_t CRYPTOCFG_7_12; /**< Offset 0xbb0 (W) */
   volatile uint32_t CRYPTOCFG_7_13; /**< Offset 0xbb4 (W) */
   volatile uint32_t CRYPTOCFG_7_14; /**< Offset 0xbb8 (W) */
   volatile uint32_t CRYPTOCFG_7_15; /**< Offset 0xbbc (W) */
   volatile uint32_t CRYPTOCFG_7_16; /**< Offset 0xbc0 (R/W) */
   uint32_t CRYPTOCFG_7_17; /**< Offset 0xbc4 (R) */
   uint32_t CRYPTOCFG_7_18; /**< Offset 0xbc8 (R) */
   uint32_t CRYPTOCFG_7_19; /**< Offset 0xbcc (R) */
   uint32_t CRYPTOCFG_7_20; /**< Offset 0xbd0 (R) */
   uint32_t CRYPTOCFG_7_21; /**< Offset 0xbd4 (R) */
   uint32_t CRYPTOCFG_7_22; /**< Offset 0xbd8 (R) */
   uint32_t CRYPTOCFG_7_23; /**< Offset 0xbdc (R) */
   uint32_t CRYPTOCFG_7_24; /**< Offset 0xbe0 (R) */
   uint32_t CRYPTOCFG_7_25; /**< Offset 0xbe4 (R) */
   uint32_t CRYPTOCFG_7_26; /**< Offset 0xbe8 (R) */
   uint32_t CRYPTOCFG_7_27; /**< Offset 0xbec (R) */
   uint32_t CRYPTOCFG_7_28; /**< Offset 0xbf0 (R) */
   uint32_t CRYPTOCFG_7_29; /**< Offset 0xbf4 (R) */
   uint32_t CRYPTOCFG_7_30; /**< Offset 0xbf8 (R) */
   uint32_t CRYPTOCFG_7_31; /**< Offset 0xbfc (R) */
   volatile uint32_t CRYPTOCFG_8_0; /**< Offset 0xc00 (W) */
   volatile uint32_t CRYPTOCFG_8_1; /**< Offset 0xc04 (W) */
   volatile uint32_t CRYPTOCFG_8_2; /**< Offset 0xc08 (W) */
   volatile uint32_t CRYPTOCFG_8_3; /**< Offset 0xc0c (W) */
   volatile uint32_t CRYPTOCFG_8_4; /**< Offset 0xc10 (W) */
   volatile uint32_t CRYPTOCFG_8_5; /**< Offset 0xc14 (W) */
   volatile uint32_t CRYPTOCFG_8_6; /**< Offset 0xc18 (W) */
   volatile uint32_t CRYPTOCFG_8_7; /**< Offset 0xc1c (W) */
   volatile uint32_t CRYPTOCFG_8_8; /**< Offset 0xc20 (W) */
   volatile uint32_t CRYPTOCFG_8_9; /**< Offset 0xc24 (W) */
   volatile uint32_t CRYPTOCFG_8_10; /**< Offset 0xc28 (W) */
   volatile uint32_t CRYPTOCFG_8_11; /**< Offset 0xc2c (W) */
   volatile uint32_t CRYPTOCFG_8_12; /**< Offset 0xc30 (W) */
   volatile uint32_t CRYPTOCFG_8_13; /**< Offset 0xc34 (W) */
   volatile uint32_t CRYPTOCFG_8_14; /**< Offset 0xc38 (W) */
   volatile uint32_t CRYPTOCFG_8_15; /**< Offset 0xc3c (W) */
   volatile uint32_t CRYPTOCFG_8_16; /**< Offset 0xc40 (R/W) */
   uint32_t CRYPTOCFG_8_17; /**< Offset 0xc44 (R) */
   uint32_t CRYPTOCFG_8_18; /**< Offset 0xc48 (R) */
   uint32_t CRYPTOCFG_8_19; /**< Offset 0xc4c (R) */
   uint32_t CRYPTOCFG_8_20; /**< Offset 0xc50 (R) */
   uint32_t CRYPTOCFG_8_21; /**< Offset 0xc54 (R) */
   uint32_t CRYPTOCFG_8_22; /**< Offset 0xc58 (R) */
   uint32_t CRYPTOCFG_8_23; /**< Offset 0xc5c (R) */
   uint32_t CRYPTOCFG_8_24; /**< Offset 0xc60 (R) */
   uint32_t CRYPTOCFG_8_25; /**< Offset 0xc64 (R) */
   uint32_t CRYPTOCFG_8_26; /**< Offset 0xc68 (R) */
   uint32_t CRYPTOCFG_8_27; /**< Offset 0xc6c (R) */
   uint32_t CRYPTOCFG_8_28; /**< Offset 0xc70 (R) */
   uint32_t CRYPTOCFG_8_29; /**< Offset 0xc74 (R) */
   uint32_t CRYPTOCFG_8_30; /**< Offset 0xc78 (R) */
   uint32_t CRYPTOCFG_8_31; /**< Offset 0xc7c (R) */
   volatile uint32_t CRYPTOCFG_9_0; /**< Offset 0xc80 (W) */
   volatile uint32_t CRYPTOCFG_9_1; /**< Offset 0xc84 (W) */
   volatile uint32_t CRYPTOCFG_9_2; /**< Offset 0xc88 (W) */
   volatile uint32_t CRYPTOCFG_9_3; /**< Offset 0xc8c (W) */
   volatile uint32_t CRYPTOCFG_9_4; /**< Offset 0xc90 (W) */
   volatile uint32_t CRYPTOCFG_9_5; /**< Offset 0xc94 (W) */
   volatile uint32_t CRYPTOCFG_9_6; /**< Offset 0xc98 (W) */
   volatile uint32_t CRYPTOCFG_9_7; /**< Offset 0xc9c (W) */
   volatile uint32_t CRYPTOCFG_9_8; /**< Offset 0xca0 (W) */
   volatile uint32_t CRYPTOCFG_9_9; /**< Offset 0xca4 (W) */
   volatile uint32_t CRYPTOCFG_9_10; /**< Offset 0xca8 (W) */
   volatile uint32_t CRYPTOCFG_9_11; /**< Offset 0xcac (W) */
   volatile uint32_t CRYPTOCFG_9_12; /**< Offset 0xcb0 (W) */
   volatile uint32_t CRYPTOCFG_9_13; /**< Offset 0xcb4 (W) */
   volatile uint32_t CRYPTOCFG_9_14; /**< Offset 0xcb8 (W) */
   volatile uint32_t CRYPTOCFG_9_15; /**< Offset 0xcbc (W) */
   volatile uint32_t CRYPTOCFG_9_16; /**< Offset 0xcc0 (R/W) */
   uint32_t CRYPTOCFG_9_17; /**< Offset 0xcc4 (R) */
   uint32_t CRYPTOCFG_9_18; /**< Offset 0xcc8 (R) */
   uint32_t CRYPTOCFG_9_19; /**< Offset 0xccc (R) */
   uint32_t CRYPTOCFG_9_20; /**< Offset 0xcd0 (R) */
   uint32_t CRYPTOCFG_9_21; /**< Offset 0xcd4 (R) */
   uint32_t CRYPTOCFG_9_22; /**< Offset 0xcd8 (R) */
   uint32_t CRYPTOCFG_9_23; /**< Offset 0xcdc (R) */
   uint32_t CRYPTOCFG_9_24; /**< Offset 0xce0 (R) */
   uint32_t CRYPTOCFG_9_25; /**< Offset 0xce4 (R) */
   uint32_t CRYPTOCFG_9_26; /**< Offset 0xce8 (R) */
   uint32_t CRYPTOCFG_9_27; /**< Offset 0xcec (R) */
   uint32_t CRYPTOCFG_9_28; /**< Offset 0xcf0 (R) */
   uint32_t CRYPTOCFG_9_29; /**< Offset 0xcf4 (R) */
   uint32_t CRYPTOCFG_9_30; /**< Offset 0xcf8 (R) */
   uint32_t CRYPTOCFG_9_31; /**< Offset 0xcfc (R) */
   volatile uint32_t CRYPTOCFG_10_0; /**< Offset 0xd00 (W) */
   volatile uint32_t CRYPTOCFG_10_1; /**< Offset 0xd04 (W) */
   volatile uint32_t CRYPTOCFG_10_2; /**< Offset 0xd08 (W) */
   volatile uint32_t CRYPTOCFG_10_3; /**< Offset 0xd0c (W) */
   volatile uint32_t CRYPTOCFG_10_4; /**< Offset 0xd10 (W) */
   volatile uint32_t CRYPTOCFG_10_5; /**< Offset 0xd14 (W) */
   volatile uint32_t CRYPTOCFG_10_6; /**< Offset 0xd18 (W) */
   volatile uint32_t CRYPTOCFG_10_7; /**< Offset 0xd1c (W) */
   volatile uint32_t CRYPTOCFG_10_8; /**< Offset 0xd20 (W) */
   volatile uint32_t CRYPTOCFG_10_9; /**< Offset 0xd24 (W) */
   volatile uint32_t CRYPTOCFG_10_10; /**< Offset 0xd28 (W) */
   volatile uint32_t CRYPTOCFG_10_11; /**< Offset 0xd2c (W) */
   volatile uint32_t CRYPTOCFG_10_12; /**< Offset 0xd30 (W) */
   volatile uint32_t CRYPTOCFG_10_13; /**< Offset 0xd34 (W) */
   volatile uint32_t CRYPTOCFG_10_14; /**< Offset 0xd38 (W) */
   volatile uint32_t CRYPTOCFG_10_15; /**< Offset 0xd3c (W) */
   volatile uint32_t CRYPTOCFG_10_16; /**< Offset 0xd40 (R/W) */
   uint32_t CRYPTOCFG_10_17; /**< Offset 0xd44 (R) */
   uint32_t CRYPTOCFG_10_18; /**< Offset 0xd48 (R) */
   uint32_t CRYPTOCFG_10_19; /**< Offset 0xd4c (R) */
   uint32_t CRYPTOCFG_10_20; /**< Offset 0xd50 (R) */
   uint32_t CRYPTOCFG_10_21; /**< Offset 0xd54 (R) */
   uint32_t CRYPTOCFG_10_22; /**< Offset 0xd58 (R) */
   uint32_t CRYPTOCFG_10_23; /**< Offset 0xd5c (R) */
   uint32_t CRYPTOCFG_10_24; /**< Offset 0xd60 (R) */
   uint32_t CRYPTOCFG_10_25; /**< Offset 0xd64 (R) */
   uint32_t CRYPTOCFG_10_26; /**< Offset 0xd68 (R) */
   uint32_t CRYPTOCFG_10_27; /**< Offset 0xd6c (R) */
   uint32_t CRYPTOCFG_10_28; /**< Offset 0xd70 (R) */
   uint32_t CRYPTOCFG_10_29; /**< Offset 0xd74 (R) */
   uint32_t CRYPTOCFG_10_30; /**< Offset 0xd78 (R) */
   uint32_t CRYPTOCFG_10_31; /**< Offset 0xd7c (R) */
   volatile uint32_t CRYPTOCFG_11_0; /**< Offset 0xd80 (W) */
   volatile uint32_t CRYPTOCFG_11_1; /**< Offset 0xd84 (W) */
   volatile uint32_t CRYPTOCFG_11_2; /**< Offset 0xd88 (W) */
   volatile uint32_t CRYPTOCFG_11_3; /**< Offset 0xd8c (W) */
   volatile uint32_t CRYPTOCFG_11_4; /**< Offset 0xd90 (W) */
   volatile uint32_t CRYPTOCFG_11_5; /**< Offset 0xd94 (W) */
   volatile uint32_t CRYPTOCFG_11_6; /**< Offset 0xd98 (W) */
   volatile uint32_t CRYPTOCFG_11_7; /**< Offset 0xd9c (W) */
   volatile uint32_t CRYPTOCFG_11_8; /**< Offset 0xda0 (W) */
   volatile uint32_t CRYPTOCFG_11_9; /**< Offset 0xda4 (W) */
   volatile uint32_t CRYPTOCFG_11_10; /**< Offset 0xda8 (W) */
   volatile uint32_t CRYPTOCFG_11_11; /**< Offset 0xdac (W) */
   volatile uint32_t CRYPTOCFG_11_12; /**< Offset 0xdb0 (W) */
   volatile uint32_t CRYPTOCFG_11_13; /**< Offset 0xdb4 (W) */
   volatile uint32_t CRYPTOCFG_11_14; /**< Offset 0xdb8 (W) */
   volatile uint32_t CRYPTOCFG_11_15; /**< Offset 0xdbc (W) */
   volatile uint32_t CRYPTOCFG_11_16; /**< Offset 0xdc0 (R/W) */
   uint32_t CRYPTOCFG_11_17; /**< Offset 0xdc4 (R) */
   uint32_t CRYPTOCFG_11_18; /**< Offset 0xdc8 (R) */
   uint32_t CRYPTOCFG_11_19; /**< Offset 0xdcc (R) */
   uint32_t CRYPTOCFG_11_20; /**< Offset 0xdd0 (R) */
   uint32_t CRYPTOCFG_11_21; /**< Offset 0xdd4 (R) */
   uint32_t CRYPTOCFG_11_22; /**< Offset 0xdd8 (R) */
   uint32_t CRYPTOCFG_11_23; /**< Offset 0xddc (R) */
   uint32_t CRYPTOCFG_11_24; /**< Offset 0xde0 (R) */
   uint32_t CRYPTOCFG_11_25; /**< Offset 0xde4 (R) */
   uint32_t CRYPTOCFG_11_26; /**< Offset 0xde8 (R) */
   uint32_t CRYPTOCFG_11_27; /**< Offset 0xdec (R) */
   uint32_t CRYPTOCFG_11_28; /**< Offset 0xdf0 (R) */
   uint32_t CRYPTOCFG_11_29; /**< Offset 0xdf4 (R) */
   uint32_t CRYPTOCFG_11_30; /**< Offset 0xdf8 (R) */
   uint32_t CRYPTOCFG_11_31; /**< Offset 0xdfc (R) */
   volatile uint32_t CRYPTOCFG_12_0; /**< Offset 0xe00 (W) */
   volatile uint32_t CRYPTOCFG_12_1; /**< Offset 0xe04 (W) */
   volatile uint32_t CRYPTOCFG_12_2; /**< Offset 0xe08 (W) */
   volatile uint32_t CRYPTOCFG_12_3; /**< Offset 0xe0c (W) */
   volatile uint32_t CRYPTOCFG_12_4; /**< Offset 0xe10 (W) */
   volatile uint32_t CRYPTOCFG_12_5; /**< Offset 0xe14 (W) */
   volatile uint32_t CRYPTOCFG_12_6; /**< Offset 0xe18 (W) */
   volatile uint32_t CRYPTOCFG_12_7; /**< Offset 0xe1c (W) */
   volatile uint32_t CRYPTOCFG_12_8; /**< Offset 0xe20 (W) */
   volatile uint32_t CRYPTOCFG_12_9; /**< Offset 0xe24 (W) */
   volatile uint32_t CRYPTOCFG_12_10; /**< Offset 0xe28 (W) */
   volatile uint32_t CRYPTOCFG_12_11; /**< Offset 0xe2c (W) */
   volatile uint32_t CRYPTOCFG_12_12; /**< Offset 0xe30 (W) */
   volatile uint32_t CRYPTOCFG_12_13; /**< Offset 0xe34 (W) */
   volatile uint32_t CRYPTOCFG_12_14; /**< Offset 0xe38 (W) */
   volatile uint32_t CRYPTOCFG_12_15; /**< Offset 0xe3c (W) */
   volatile uint32_t CRYPTOCFG_12_16; /**< Offset 0xe40 (R/W) */
   uint32_t CRYPTOCFG_12_17; /**< Offset 0xe44 (R) */
   uint32_t CRYPTOCFG_12_18; /**< Offset 0xe48 (R) */
   uint32_t CRYPTOCFG_12_19; /**< Offset 0xe4c (R) */
   uint32_t CRYPTOCFG_12_20; /**< Offset 0xe50 (R) */
   uint32_t CRYPTOCFG_12_21; /**< Offset 0xe54 (R) */
   uint32_t CRYPTOCFG_12_22; /**< Offset 0xe58 (R) */
   uint32_t CRYPTOCFG_12_23; /**< Offset 0xe5c (R) */
   uint32_t CRYPTOCFG_12_24; /**< Offset 0xe60 (R) */
   uint32_t CRYPTOCFG_12_25; /**< Offset 0xe64 (R) */
   uint32_t CRYPTOCFG_12_26; /**< Offset 0xe68 (R) */
   uint32_t CRYPTOCFG_12_27; /**< Offset 0xe6c (R) */
   uint32_t CRYPTOCFG_12_28; /**< Offset 0xe70 (R) */
   uint32_t CRYPTOCFG_12_29; /**< Offset 0xe74 (R) */
   uint32_t CRYPTOCFG_12_30; /**< Offset 0xe78 (R) */
   uint32_t CRYPTOCFG_12_31; /**< Offset 0xe7c (R) */
   volatile uint32_t CRYPTOCFG_13_0; /**< Offset 0xe80 (W) */
   volatile uint32_t CRYPTOCFG_13_1; /**< Offset 0xe84 (W) */
   volatile uint32_t CRYPTOCFG_13_2; /**< Offset 0xe88 (W) */
   volatile uint32_t CRYPTOCFG_13_3; /**< Offset 0xe8c (W) */
   volatile uint32_t CRYPTOCFG_13_4; /**< Offset 0xe90 (W) */
   volatile uint32_t CRYPTOCFG_13_5; /**< Offset 0xe94 (W) */
   volatile uint32_t CRYPTOCFG_13_6; /**< Offset 0xe98 (W) */
   volatile uint32_t CRYPTOCFG_13_7; /**< Offset 0xe9c (W) */
   volatile uint32_t CRYPTOCFG_13_8; /**< Offset 0xea0 (W) */
   volatile uint32_t CRYPTOCFG_13_9; /**< Offset 0xea4 (W) */
   volatile uint32_t CRYPTOCFG_13_10; /**< Offset 0xea8 (W) */
   volatile uint32_t CRYPTOCFG_13_11; /**< Offset 0xeac (W) */
   volatile uint32_t CRYPTOCFG_13_12; /**< Offset 0xeb0 (W) */
   volatile uint32_t CRYPTOCFG_13_13; /**< Offset 0xeb4 (W) */
   volatile uint32_t CRYPTOCFG_13_14; /**< Offset 0xeb8 (W) */
   volatile uint32_t CRYPTOCFG_13_15; /**< Offset 0xebc (W) */
   volatile uint32_t CRYPTOCFG_13_16; /**< Offset 0xec0 (R/W) */
   uint32_t CRYPTOCFG_13_17; /**< Offset 0xec4 (R) */
   uint32_t CRYPTOCFG_13_18; /**< Offset 0xec8 (R) */
   uint32_t CRYPTOCFG_13_19; /**< Offset 0xecc (R) */
   uint32_t CRYPTOCFG_13_20; /**< Offset 0xed0 (R) */
   uint32_t CRYPTOCFG_13_21; /**< Offset 0xed4 (R) */
   uint32_t CRYPTOCFG_13_22; /**< Offset 0xed8 (R) */
   uint32_t CRYPTOCFG_13_23; /**< Offset 0xedc (R) */
   uint32_t CRYPTOCFG_13_24; /**< Offset 0xee0 (R) */
   uint32_t CRYPTOCFG_13_25; /**< Offset 0xee4 (R) */
   uint32_t CRYPTOCFG_13_26; /**< Offset 0xee8 (R) */
   uint32_t CRYPTOCFG_13_27; /**< Offset 0xeec (R) */
   uint32_t CRYPTOCFG_13_28; /**< Offset 0xef0 (R) */
   uint32_t CRYPTOCFG_13_29; /**< Offset 0xef4 (R) */
   uint32_t CRYPTOCFG_13_30; /**< Offset 0xef8 (R) */
   uint32_t CRYPTOCFG_13_31; /**< Offset 0xefc (R) */
   volatile uint32_t CRYPTOCFG_14_0; /**< Offset 0xf00 (W) */
   volatile uint32_t CRYPTOCFG_14_1; /**< Offset 0xf04 (W) */
   volatile uint32_t CRYPTOCFG_14_2; /**< Offset 0xf08 (W) */
   volatile uint32_t CRYPTOCFG_14_3; /**< Offset 0xf0c (W) */
   volatile uint32_t CRYPTOCFG_14_4; /**< Offset 0xf10 (W) */
   volatile uint32_t CRYPTOCFG_14_5; /**< Offset 0xf14 (W) */
   volatile uint32_t CRYPTOCFG_14_6; /**< Offset 0xf18 (W) */
   volatile uint32_t CRYPTOCFG_14_7; /**< Offset 0xf1c (W) */
   volatile uint32_t CRYPTOCFG_14_8; /**< Offset 0xf20 (W) */
   volatile uint32_t CRYPTOCFG_14_9; /**< Offset 0xf24 (W) */
   volatile uint32_t CRYPTOCFG_14_10; /**< Offset 0xf28 (W) */
   volatile uint32_t CRYPTOCFG_14_11; /**< Offset 0xf2c (W) */
   volatile uint32_t CRYPTOCFG_14_12; /**< Offset 0xf30 (W) */
   volatile uint32_t CRYPTOCFG_14_13; /**< Offset 0xf34 (W) */
   volatile uint32_t CRYPTOCFG_14_14; /**< Offset 0xf38 (W) */
   volatile uint32_t CRYPTOCFG_14_15; /**< Offset 0xf3c (W) */
   volatile uint32_t CRYPTOCFG_14_16; /**< Offset 0xf40 (R/W) */
   uint32_t CRYPTOCFG_14_17; /**< Offset 0xf44 (R) */
   uint32_t CRYPTOCFG_14_18; /**< Offset 0xf48 (R) */
   uint32_t CRYPTOCFG_14_19; /**< Offset 0xf4c (R) */
   uint32_t CRYPTOCFG_14_20; /**< Offset 0xf50 (R) */
   uint32_t CRYPTOCFG_14_21; /**< Offset 0xf54 (R) */
   uint32_t CRYPTOCFG_14_22; /**< Offset 0xf58 (R) */
   uint32_t CRYPTOCFG_14_23; /**< Offset 0xf5c (R) */
   uint32_t CRYPTOCFG_14_24; /**< Offset 0xf60 (R) */
   uint32_t CRYPTOCFG_14_25; /**< Offset 0xf64 (R) */
   uint32_t CRYPTOCFG_14_26; /**< Offset 0xf68 (R) */
   uint32_t CRYPTOCFG_14_27; /**< Offset 0xf6c (R) */
   uint32_t CRYPTOCFG_14_28; /**< Offset 0xf70 (R) */
   uint32_t CRYPTOCFG_14_29; /**< Offset 0xf74 (R) */
   uint32_t CRYPTOCFG_14_30; /**< Offset 0xf78 (R) */
   uint32_t CRYPTOCFG_14_31; /**< Offset 0xf7c (R) */
   volatile uint32_t CRYPTOCFG_15_0; /**< Offset 0xf80 (W) */
   volatile uint32_t CRYPTOCFG_15_1; /**< Offset 0xf84 (W) */
   volatile uint32_t CRYPTOCFG_15_2; /**< Offset 0xf88 (W) */
   volatile uint32_t CRYPTOCFG_15_3; /**< Offset 0xf8c (W) */
   volatile uint32_t CRYPTOCFG_15_4; /**< Offset 0xf90 (W) */
   volatile uint32_t CRYPTOCFG_15_5; /**< Offset 0xf94 (W) */
   volatile uint32_t CRYPTOCFG_15_6; /**< Offset 0xf98 (W) */
   volatile uint32_t CRYPTOCFG_15_7; /**< Offset 0xf9c (W) */
   volatile uint32_t CRYPTOCFG_15_8; /**< Offset 0xfa0 (W) */
   volatile uint32_t CRYPTOCFG_15_9; /**< Offset 0xfa4 (W) */
   volatile uint32_t CRYPTOCFG_15_10; /**< Offset 0xfa8 (W) */
   volatile uint32_t CRYPTOCFG_15_11; /**< Offset 0xfac (W) */
   volatile uint32_t CRYPTOCFG_15_12; /**< Offset 0xfb0 (W) */
   volatile uint32_t CRYPTOCFG_15_13; /**< Offset 0xfb4 (W) */
   volatile uint32_t CRYPTOCFG_15_14; /**< Offset 0xfb8 (W) */
   volatile uint32_t CRYPTOCFG_15_15; /**< Offset 0xfbc (W) */
   volatile uint32_t CRYPTOCFG_15_16; /**< Offset 0xfc0 (R/W) */
   uint32_t CRYPTOCFG_15_17; /**< Offset 0xfc4 (R) */
   uint32_t CRYPTOCFG_15_18; /**< Offset 0xfc8 (R) */
   uint32_t CRYPTOCFG_15_19; /**< Offset 0xfcc (R) */
   uint32_t CRYPTOCFG_15_20; /**< Offset 0xfd0 (R) */
   uint32_t CRYPTOCFG_15_21; /**< Offset 0xfd4 (R) */
   uint32_t CRYPTOCFG_15_22; /**< Offset 0xfd8 (R) */
   uint32_t CRYPTOCFG_15_23; /**< Offset 0xfdc (R) */
   uint32_t CRYPTOCFG_15_24; /**< Offset 0xfe0 (R) */
   uint32_t CRYPTOCFG_15_25; /**< Offset 0xfe4 (R) */
   uint32_t CRYPTOCFG_15_26; /**< Offset 0xfe8 (R) */
   uint32_t CRYPTOCFG_15_27; /**< Offset 0xfec (R) */
   uint32_t CRYPTOCFG_15_28; /**< Offset 0xff0 (R) */
   uint32_t CRYPTOCFG_15_29; /**< Offset 0xff4 (R) */
   uint32_t CRYPTOCFG_15_30; /**< Offset 0xff8 (R) */
   uint32_t CRYPTOCFG_15_31; /**< Offset 0xffc (R) */
} Emmc_crypto_vendor2, *PTR_Emmc_crypto_vendor2;

/* Typedef for Addressmap: emmc                                            */
typedef struct {
   Emmc_crypto crypto; /**< Offset 0x0 (R/W) */
   uint8_t _pad0[0x200];
   Emmc_crypto_phy crypto_phy; /**< Offset 0x300 (R/W) */
   uint8_t _pad1[0x1c0];
   Emmc_crypto_vendor1 crypto_vendor1; /**< Offset 0x500 (R/W) */
   uint8_t _pad2[0xa1c];
   Emmc_crypto_embedded_control crypto_embedded_control; /**< Offset 0xf6c (R/W) */
   uint8_t _pad3[0x90];
   Emmc_crypto_vendor2 crypto_vendor2; /**< Offset 0x1000 (R/W) */
} Emmc, *PTR_Emmc;

#endif
