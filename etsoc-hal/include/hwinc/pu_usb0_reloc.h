/* Copyright (c) 2025 Ainekko, Co. */
/* SPDX-License-Identifier: Apache-2.0 */
/*                                                                         */
/*                                                                         */
/* Generated by Semifore, Inc. csrCompile                                  */
/*    C Header output                                                      */

#ifndef _PU_USB0_RELOC_H_
#define _PU_USB0_RELOC_H_



/* ####################################################################### */
/*        ADDRESS MACROS                                                   */
/* ####################################################################### */

/* Address Space for Addressmap: dma_reloc                                 */
/* Register: dma_reloc.reloc_addr                                          */
#define DMA_RELOC_RELOC_ADDR_ADDRESS 0x0u
#define DMA_RELOC_RELOC_ADDR_BYTE_ADDRESS 0x0u
#define DMA_RELOC_RELOC_ADDR_ARRAY_ELEMENT_SIZE 0x4ull
#define DMA_RELOC_RELOC_ADDR_ARRAY_COUNT 0x10ull
#define DMA_RELOC_RELOC_ADDR_ARRAY_INDEX_MAX 0xfull
#define DMA_RELOC_RELOC_ADDR_ARRAY_INDEX_MIN 0x0ull


/* ####################################################################### */
/*        TEMPLATE MACROS                                                  */
/* ####################################################################### */

/* Addressmap type: dma_reloc                                              */
/* Addressmap template: dma_reloc                                          */
#define DMA_RELOC_SIZE 0x40u
#define DMA_RELOC_BYTE_SIZE 0x40u
/* Register member: dma_reloc.reloc_addr                                   */
/* Register type referenced: dma_reloc::reloc_addr                         */
/* Register template referenced: dma_reloc::reloc_addr                     */
#define DMA_RELOC_RELOC_ADDR_OFFSET 0x0u
#define DMA_RELOC_RELOC_ADDR_BYTE_OFFSET 0x0u
#define DMA_RELOC_RELOC_ADDR_READ_ACCESS 1u
#define DMA_RELOC_RELOC_ADDR_WRITE_ACCESS 1u
#define DMA_RELOC_RELOC_ADDR_RESET_VALUE 0x00000000ul
#define DMA_RELOC_RELOC_ADDR_RESET_MASK 0xfffffffful
#define DMA_RELOC_RELOC_ADDR_READ_MASK 0xfffffffful
#define DMA_RELOC_RELOC_ADDR_WRITE_MASK 0x00000ffful

/* Register type: dma_reloc::reloc_addr                                    */
/* Register template: dma_reloc::reloc_addr                                */
/* Field member: dma_reloc::reloc_addr.addr                                */
#define DMA_RELOC_RELOC_ADDR_ADDR_MSB 11u
#define DMA_RELOC_RELOC_ADDR_ADDR_LSB 0u
#define DMA_RELOC_RELOC_ADDR_ADDR_WIDTH 12u
#define DMA_RELOC_RELOC_ADDR_ADDR_READ_ACCESS 1u
#define DMA_RELOC_RELOC_ADDR_ADDR_WRITE_ACCESS 1u
#define DMA_RELOC_RELOC_ADDR_ADDR_RESET 0x000u
#define DMA_RELOC_RELOC_ADDR_ADDR_FIELD_MASK 0x00000ffful
#define DMA_RELOC_RELOC_ADDR_ADDR_GET(x) ((x) & 0x00000ffful)
#define DMA_RELOC_RELOC_ADDR_ADDR_SET(x) ((x) & 0x00000ffful)
#define DMA_RELOC_RELOC_ADDR_ADDR_MODIFY(r, x) \
   (((x) & 0x00000ffful) | ((r) & 0xfffff000ul))

/* ####################################################################### */
/*        TYPE DEFINITIONS                                                 */
/* ####################################################################### */

/* Typedef for Addressmap: dma_reloc                                       */
typedef struct {
   volatile uint32_t reloc_addr[0x10]; /**< Offset 0x0 (R/W) */
} Dma_reloc, *PTR_Dma_reloc;

#endif
