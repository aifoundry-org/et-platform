/*                                                                         */
/* Generated by Semifore, Inc. csrCompile                                  */
/*    Version: 2018.12 Build: release Linux 64-bit                         */
/*    C Header output                                                      */
/*                                                                         */
/* Command Line:                                                           */
/*    /home/cad/tools/semifore/csrCompile/LATEST/bin/x64_re6/csrCompile -v */
/*    -c                                                                   */
/*    /data/ssmith/work/repos/soc3/dv/common/scripts/semifore_css/type.css */
/*    -t h spio_gpio.csr -o gen_dv/spio_gpio                               */
/*                                                                         */
/* Input files:                                                            */
/*    spio_gpio.csr                                                        */
/*                                                                         */
/* Configuration files:                                                    */
/*    /data/ssmith/work/repos/soc3/dv/common/scripts/semifore_css/type.css */
/*                                                                         */
/* Generated on: Wed Feb 20 23:24:47 2019                                  */
/*           by: ssmith                                                    */
/*                                                                         */

#ifndef _SPIO_GPIO_H_
#define _SPIO_GPIO_H_


/* ####################################################################### */
/*        TYPE DEFINITIONS                                                 */
/* ####################################################################### */

/* Typedef for Addressmap: spio_DW_apb_gpio                                */
/* Source filename: spio_gpio.csr, line: 790                               */
typedef struct {
   volatile uint32_t GPIO_SWPORTA_DR; /**< Offset 0x0 (R/W) */
   volatile uint32_t GPIO_SWPORTA_DDR; /**< Offset 0x4 (R/W) */
   uint8_t _pad0[0x28];
   volatile uint32_t GPIO_INTEN; /**< Offset 0x30 (R/W) */
   volatile uint32_t GPIO_INTMASK; /**< Offset 0x34 (R/W) */
   volatile uint32_t GPIO_INTTYPE_LEVEL; /**< Offset 0x38 (R/W) */
   volatile uint32_t GPIO_INT_POLARITY; /**< Offset 0x3c (R/W) */
   uint32_t GPIO_INTSTATUS; /**< Offset 0x40 (R) */
   uint32_t GPIO_RAW_INTSTATUS; /**< Offset 0x44 (R) */
   volatile uint32_t GPIO_DEBOUNCE; /**< Offset 0x48 (R/W) */
   volatile uint32_t GPIO_PORTA_EOI; /**< Offset 0x4c (W) */
   uint32_t GPIO_EXT_PORTA; /**< Offset 0x50 (R) */
   uint8_t _pad1[0xc];
   volatile uint32_t GPIO_LS_SYNC; /**< Offset 0x60 (R/W) */
   uint32_t GPIO_ID_CODE; /**< Offset 0x64 (R) */
   uint8_t _pad2[0x4];
   uint32_t GPIO_VER_ID_CODE; /**< Offset 0x6c (R) */
   uint32_t GPIO_CONFIG_REG2; /**< Offset 0x70 (R) */
   uint32_t GPIO_CONFIG_REG1; /**< Offset 0x74 (R) */
} Spio_DW_apb_gpio, *PTR_Spio_DW_apb_gpio;

#endif
