/*-------------------------------------------------------------------------
* Copyright (c) 2025 Ainekko, Co.
* SPDX-License-Identifier: Apache-2.0
*-------------------------------------------------------------------------
*/

/**
* @file dmac_regTest.h.py
* @version $Release$
* @date $Date$
* @author
*
* @brief
*
* Setup SoC to enable TC run
*/
/**
 *  @Component      HAL
 *
 *  @Filename       dmac_regTest.h
 *
 *  @Description    IPs register table
 *
 *//*======================================================================== */

#include "DW_ahb_dmac.h"


REGTEST_t dmacRegs[] =

{

/* regAddress                                                                                       regSize                 resetValue                                        bitMask                                           regName*/

{  DMAC_CHANNEL_0_REGISTERS_SAR0_OFFSET + DMAC_CHANNEL_0_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_0_REGISTERS_SAR0_RESET_VALUE,        DMAC_CHANNEL_0_REGISTERS_SAR0_WRITE_MASK,         "Channel_0_Registers",             },

{  DMAC_CHANNEL_0_REGISTERS_DAR0_OFFSET + DMAC_CHANNEL_0_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_0_REGISTERS_DAR0_RESET_VALUE,        DMAC_CHANNEL_0_REGISTERS_DAR0_WRITE_MASK,         "Channel_0_Registers",             },

{  DMAC_CHANNEL_0_REGISTERS_LLP0_OFFSET + DMAC_CHANNEL_0_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_0_REGISTERS_LLP0_RESET_VALUE,        DMAC_CHANNEL_0_REGISTERS_LLP0_WRITE_MASK,         "Channel_0_Registers",             },

{  DMAC_CHANNEL_0_REGISTERS_CTL0_OFFSET + DMAC_CHANNEL_0_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_0_REGISTERS_CTL0_RESET_VALUE,        DMAC_CHANNEL_0_REGISTERS_CTL0_WRITE_MASK,         "Channel_0_Registers",             },

{  DMAC_CHANNEL_0_REGISTERS_SSTAT0_OFFSET + DMAC_CHANNEL_0_REGISTERS_OFFSET,                        REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_0_REGISTERS_SSTAT0_RESET_VALUE,      DMAC_CHANNEL_0_REGISTERS_SSTAT0_WRITE_MASK,       "Channel_0_Registers",             },

{  DMAC_CHANNEL_0_REGISTERS_DSTAT0_OFFSET + DMAC_CHANNEL_0_REGISTERS_OFFSET,                        REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_0_REGISTERS_DSTAT0_RESET_VALUE,      DMAC_CHANNEL_0_REGISTERS_DSTAT0_WRITE_MASK,       "Channel_0_Registers",             },

{  DMAC_CHANNEL_0_REGISTERS_SSTATAR0_OFFSET + DMAC_CHANNEL_0_REGISTERS_OFFSET,                      REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_0_REGISTERS_SSTATAR0_RESET_VALUE,    DMAC_CHANNEL_0_REGISTERS_SSTATAR0_WRITE_MASK,     "Channel_0_Registers",             },

{  DMAC_CHANNEL_0_REGISTERS_DSTATAR0_OFFSET + DMAC_CHANNEL_0_REGISTERS_OFFSET,                      REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_0_REGISTERS_DSTATAR0_RESET_VALUE,    DMAC_CHANNEL_0_REGISTERS_DSTATAR0_WRITE_MASK,     "Channel_0_Registers",             },

{  DMAC_CHANNEL_0_REGISTERS_CFG0_OFFSET + DMAC_CHANNEL_0_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_0_REGISTERS_CFG0_RESET_VALUE,        DMAC_CHANNEL_0_REGISTERS_CFG0_WRITE_MASK,         "Channel_0_Registers",             },

{  DMAC_CHANNEL_0_REGISTERS_SGR0_OFFSET + DMAC_CHANNEL_0_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_0_REGISTERS_SGR0_RESET_VALUE,        DMAC_CHANNEL_0_REGISTERS_SGR0_WRITE_MASK,         "Channel_0_Registers",             },

{  DMAC_CHANNEL_0_REGISTERS_DSR0_OFFSET + DMAC_CHANNEL_0_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_0_REGISTERS_DSR0_RESET_VALUE,        DMAC_CHANNEL_0_REGISTERS_DSR0_WRITE_MASK,         "Channel_0_Registers",             },

{  DMAC_CHANNEL_1_REGISTERS_SAR1_OFFSET + DMAC_CHANNEL_1_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_1_REGISTERS_SAR1_RESET_VALUE,        DMAC_CHANNEL_1_REGISTERS_SAR1_WRITE_MASK,         "Channel_1_Registers",             },

{  DMAC_CHANNEL_1_REGISTERS_DAR1_OFFSET + DMAC_CHANNEL_1_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_1_REGISTERS_DAR1_RESET_VALUE,        DMAC_CHANNEL_1_REGISTERS_DAR1_WRITE_MASK,         "Channel_1_Registers",             },

{  DMAC_CHANNEL_1_REGISTERS_LLP1_OFFSET + DMAC_CHANNEL_1_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_1_REGISTERS_LLP1_RESET_VALUE,        DMAC_CHANNEL_1_REGISTERS_LLP1_WRITE_MASK,         "Channel_1_Registers",             },

{  DMAC_CHANNEL_1_REGISTERS_CTL1_OFFSET + DMAC_CHANNEL_1_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_1_REGISTERS_CTL1_RESET_VALUE,        DMAC_CHANNEL_1_REGISTERS_CTL1_WRITE_MASK,         "Channel_1_Registers",             },

{  DMAC_CHANNEL_1_REGISTERS_SSTAT1_OFFSET + DMAC_CHANNEL_1_REGISTERS_OFFSET,                        REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_1_REGISTERS_SSTAT1_RESET_VALUE,      DMAC_CHANNEL_1_REGISTERS_SSTAT1_WRITE_MASK,       "Channel_1_Registers",             },

{  DMAC_CHANNEL_1_REGISTERS_DSTAT1_OFFSET + DMAC_CHANNEL_1_REGISTERS_OFFSET,                        REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_1_REGISTERS_DSTAT1_RESET_VALUE,      DMAC_CHANNEL_1_REGISTERS_DSTAT1_WRITE_MASK,       "Channel_1_Registers",             },

{  DMAC_CHANNEL_1_REGISTERS_SSTATAR1_OFFSET + DMAC_CHANNEL_1_REGISTERS_OFFSET,                      REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_1_REGISTERS_SSTATAR1_RESET_VALUE,    DMAC_CHANNEL_1_REGISTERS_SSTATAR1_WRITE_MASK,     "Channel_1_Registers",             },

{  DMAC_CHANNEL_1_REGISTERS_DSTATAR1_OFFSET + DMAC_CHANNEL_1_REGISTERS_OFFSET,                      REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_1_REGISTERS_DSTATAR1_RESET_VALUE,    DMAC_CHANNEL_1_REGISTERS_DSTATAR1_WRITE_MASK,     "Channel_1_Registers",             },

{  DMAC_CHANNEL_1_REGISTERS_CFG1_OFFSET + DMAC_CHANNEL_1_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_1_REGISTERS_CFG1_RESET_VALUE,        DMAC_CHANNEL_1_REGISTERS_CFG1_WRITE_MASK,         "Channel_1_Registers",             },

{  DMAC_CHANNEL_1_REGISTERS_SGR1_OFFSET + DMAC_CHANNEL_1_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_1_REGISTERS_SGR1_RESET_VALUE,        DMAC_CHANNEL_1_REGISTERS_SGR1_WRITE_MASK,         "Channel_1_Registers",             },

{  DMAC_CHANNEL_1_REGISTERS_DSR1_OFFSET + DMAC_CHANNEL_1_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_1_REGISTERS_DSR1_RESET_VALUE,        DMAC_CHANNEL_1_REGISTERS_DSR1_WRITE_MASK,         "Channel_1_Registers",             },

{  DMAC_CHANNEL_2_REGISTERS_SAR2_OFFSET + DMAC_CHANNEL_2_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_2_REGISTERS_SAR2_RESET_VALUE,        DMAC_CHANNEL_2_REGISTERS_SAR2_WRITE_MASK,         "Channel_2_Registers",             },

{  DMAC_CHANNEL_2_REGISTERS_DAR2_OFFSET + DMAC_CHANNEL_2_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_2_REGISTERS_DAR2_RESET_VALUE,        DMAC_CHANNEL_2_REGISTERS_DAR2_WRITE_MASK,         "Channel_2_Registers",             },

{  DMAC_CHANNEL_2_REGISTERS_LLP2_OFFSET + DMAC_CHANNEL_2_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_2_REGISTERS_LLP2_RESET_VALUE,        DMAC_CHANNEL_2_REGISTERS_LLP2_WRITE_MASK,         "Channel_2_Registers",             },

{  DMAC_CHANNEL_2_REGISTERS_CTL2_OFFSET + DMAC_CHANNEL_2_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_2_REGISTERS_CTL2_RESET_VALUE,        DMAC_CHANNEL_2_REGISTERS_CTL2_WRITE_MASK,         "Channel_2_Registers",             },

{  DMAC_CHANNEL_2_REGISTERS_SSTAT2_OFFSET + DMAC_CHANNEL_2_REGISTERS_OFFSET,                        REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_2_REGISTERS_SSTAT2_RESET_VALUE,      DMAC_CHANNEL_2_REGISTERS_SSTAT2_WRITE_MASK,       "Channel_2_Registers",             },

{  DMAC_CHANNEL_2_REGISTERS_DSTAT2_OFFSET + DMAC_CHANNEL_2_REGISTERS_OFFSET,                        REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_2_REGISTERS_DSTAT2_RESET_VALUE,      DMAC_CHANNEL_2_REGISTERS_DSTAT2_WRITE_MASK,       "Channel_2_Registers",             },

{  DMAC_CHANNEL_2_REGISTERS_SSTATAR2_OFFSET + DMAC_CHANNEL_2_REGISTERS_OFFSET,                      REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_2_REGISTERS_SSTATAR2_RESET_VALUE,    DMAC_CHANNEL_2_REGISTERS_SSTATAR2_WRITE_MASK,     "Channel_2_Registers",             },

{  DMAC_CHANNEL_2_REGISTERS_DSTATAR2_OFFSET + DMAC_CHANNEL_2_REGISTERS_OFFSET,                      REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_2_REGISTERS_DSTATAR2_RESET_VALUE,    DMAC_CHANNEL_2_REGISTERS_DSTATAR2_WRITE_MASK,     "Channel_2_Registers",             },

{  DMAC_CHANNEL_2_REGISTERS_CFG2_OFFSET + DMAC_CHANNEL_2_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_2_REGISTERS_CFG2_RESET_VALUE,        DMAC_CHANNEL_2_REGISTERS_CFG2_WRITE_MASK,         "Channel_2_Registers",             },

{  DMAC_CHANNEL_2_REGISTERS_SGR2_OFFSET + DMAC_CHANNEL_2_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_2_REGISTERS_SGR2_RESET_VALUE,        DMAC_CHANNEL_2_REGISTERS_SGR2_WRITE_MASK,         "Channel_2_Registers",             },

{  DMAC_CHANNEL_2_REGISTERS_DSR2_OFFSET + DMAC_CHANNEL_2_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_2_REGISTERS_DSR2_RESET_VALUE,        DMAC_CHANNEL_2_REGISTERS_DSR2_WRITE_MASK,         "Channel_2_Registers",             },

{  DMAC_CHANNEL_3_REGISTERS_SAR3_OFFSET + DMAC_CHANNEL_3_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_3_REGISTERS_SAR3_RESET_VALUE,        DMAC_CHANNEL_3_REGISTERS_SAR3_WRITE_MASK,         "Channel_3_Registers",             },

{  DMAC_CHANNEL_3_REGISTERS_DAR3_OFFSET + DMAC_CHANNEL_3_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_3_REGISTERS_DAR3_RESET_VALUE,        DMAC_CHANNEL_3_REGISTERS_DAR3_WRITE_MASK,         "Channel_3_Registers",             },

{  DMAC_CHANNEL_3_REGISTERS_LLP3_OFFSET + DMAC_CHANNEL_3_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_3_REGISTERS_LLP3_RESET_VALUE,        DMAC_CHANNEL_3_REGISTERS_LLP3_WRITE_MASK,         "Channel_3_Registers",             },

{  DMAC_CHANNEL_3_REGISTERS_CTL3_OFFSET + DMAC_CHANNEL_3_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_3_REGISTERS_CTL3_RESET_VALUE,        DMAC_CHANNEL_3_REGISTERS_CTL3_WRITE_MASK,         "Channel_3_Registers",             },

{  DMAC_CHANNEL_3_REGISTERS_SSTAT3_OFFSET + DMAC_CHANNEL_3_REGISTERS_OFFSET,                        REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_3_REGISTERS_SSTAT3_RESET_VALUE,      DMAC_CHANNEL_3_REGISTERS_SSTAT3_WRITE_MASK,       "Channel_3_Registers",             },

{  DMAC_CHANNEL_3_REGISTERS_DSTAT3_OFFSET + DMAC_CHANNEL_3_REGISTERS_OFFSET,                        REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_3_REGISTERS_DSTAT3_RESET_VALUE,      DMAC_CHANNEL_3_REGISTERS_DSTAT3_WRITE_MASK,       "Channel_3_Registers",             },

{  DMAC_CHANNEL_3_REGISTERS_SSTATAR3_OFFSET + DMAC_CHANNEL_3_REGISTERS_OFFSET,                      REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_3_REGISTERS_SSTATAR3_RESET_VALUE,    DMAC_CHANNEL_3_REGISTERS_SSTATAR3_WRITE_MASK,     "Channel_3_Registers",             },

{  DMAC_CHANNEL_3_REGISTERS_DSTATAR3_OFFSET + DMAC_CHANNEL_3_REGISTERS_OFFSET,                      REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_3_REGISTERS_DSTATAR3_RESET_VALUE,    DMAC_CHANNEL_3_REGISTERS_DSTATAR3_WRITE_MASK,     "Channel_3_Registers",             },

{  DMAC_CHANNEL_3_REGISTERS_CFG3_OFFSET + DMAC_CHANNEL_3_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_3_REGISTERS_CFG3_RESET_VALUE,        DMAC_CHANNEL_3_REGISTERS_CFG3_WRITE_MASK,         "Channel_3_Registers",             },

{  DMAC_CHANNEL_3_REGISTERS_SGR3_OFFSET + DMAC_CHANNEL_3_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_3_REGISTERS_SGR3_RESET_VALUE,        DMAC_CHANNEL_3_REGISTERS_SGR3_WRITE_MASK,         "Channel_3_Registers",             },

{  DMAC_CHANNEL_3_REGISTERS_DSR3_OFFSET + DMAC_CHANNEL_3_REGISTERS_OFFSET,                          REGTEST_SIZE_64_BIT,    DMAC_CHANNEL_3_REGISTERS_DSR3_RESET_VALUE,        DMAC_CHANNEL_3_REGISTERS_DSR3_WRITE_MASK,         "Channel_3_Registers",             },

{  DMAC_INTERRUPT_REGISTERS_RAWTFR_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                        REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_RAWTFR_RESET_VALUE,      DMAC_INTERRUPT_REGISTERS_RAWTFR_WRITE_MASK,       "Interrupt_Registers",             },

{  DMAC_INTERRUPT_REGISTERS_RAWBLOCK_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                      REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_RAWBLOCK_RESET_VALUE,    DMAC_INTERRUPT_REGISTERS_RAWBLOCK_WRITE_MASK,     "Interrupt_Registers",             },

{  DMAC_INTERRUPT_REGISTERS_RAWSRCTRAN_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                    REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_RAWSRCTRAN_RESET_VALUE,  DMAC_INTERRUPT_REGISTERS_RAWSRCTRAN_WRITE_MASK,   "Interrupt_Registers",             },

{  DMAC_INTERRUPT_REGISTERS_RAWDSTTRAN_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                    REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_RAWDSTTRAN_RESET_VALUE,  DMAC_INTERRUPT_REGISTERS_RAWDSTTRAN_WRITE_MASK,   "Interrupt_Registers",             },

{  DMAC_INTERRUPT_REGISTERS_RAWERR_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                        REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_RAWERR_RESET_VALUE,      DMAC_INTERRUPT_REGISTERS_RAWERR_WRITE_MASK,       "Interrupt_Registers",             },

{  DMAC_INTERRUPT_REGISTERS_STATUSTFR_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                     REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_STATUSTFR_RESET_VALUE,   DMAC_INTERRUPT_REGISTERS_STATUSTFR_WRITE_MASK,    "Interrupt_Registers",             },

{  DMAC_INTERRUPT_REGISTERS_STATUSBLOCK_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                   REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_STATUSBLOCK_RESET_VALUE, DMAC_INTERRUPT_REGISTERS_STATUSBLOCK_WRITE_MASK,  "Interrupt_Registers",             },

{  DMAC_INTERRUPT_REGISTERS_STATUSSRCTRAN_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                 REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_STATUSSRCTRAN_RESET_VALUE,DMAC_INTERRUPT_REGISTERS_STATUSSRCTRAN_WRITE_MASK,"Interrupt_Registers",             },

{  DMAC_INTERRUPT_REGISTERS_STATUSDSTTRAN_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                 REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_STATUSDSTTRAN_RESET_VALUE,DMAC_INTERRUPT_REGISTERS_STATUSDSTTRAN_WRITE_MASK,"Interrupt_Registers",             },

{  DMAC_INTERRUPT_REGISTERS_STATUSERR_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                     REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_STATUSERR_RESET_VALUE,   DMAC_INTERRUPT_REGISTERS_STATUSERR_WRITE_MASK,    "Interrupt_Registers",             },
// These regs can only be written together with enable bits, not one bit at a time!
//{  DMAC_INTERRUPT_REGISTERS_MASKTFR_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                       REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_MASKTFR_RESET_VALUE,     //DMAC_INTERRUPT_REGISTERS_MASKTFR_WRITE_MASK,      "Interrupt_Registers",             },

//{  DMAC_INTERRUPT_REGISTERS_MASKBLOCK_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                     REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_MASKBLOCK_RESET_VALUE,   //DMAC_INTERRUPT_REGISTERS_MASKBLOCK_WRITE_MASK,    "Interrupt_Registers",             },

//{  DMAC_INTERRUPT_REGISTERS_MASKSRCTRAN_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                   REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_MASKSRCTRAN_RESET_VALUE, //DMAC_INTERRUPT_REGISTERS_MASKSRCTRAN_WRITE_MASK,  "Interrupt_Registers",             },

//{  DMAC_INTERRUPT_REGISTERS_MASKDSTTRAN_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                   REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_MASKDSTTRAN_RESET_VALUE, //DMAC_INTERRUPT_REGISTERS_MASKDSTTRAN_WRITE_MASK,  "Interrupt_Registers",             },

//{  DMAC_INTERRUPT_REGISTERS_MASKERR_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                       REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_MASKERR_RESET_VALUE,     //DMAC_INTERRUPT_REGISTERS_MASKERR_WRITE_MASK,      "Interrupt_Registers",             },
// These registers are not readable!
//{  DMAC_INTERRUPT_REGISTERS_CLEARTFR_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                      REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_CLEARTFR_RESET_VALUE,    DMAC_INTERRUPT_REGISTERS_CLEARTFR_WRITE_MASK,     "Interrupt_Registers",             },

//{  DMAC_INTERRUPT_REGISTERS_CLEARBLOCK_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                    REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_CLEARBLOCK_RESET_VALUE,  DMAC_INTERRUPT_REGISTERS_CLEARBLOCK_WRITE_MASK,   "Interrupt_Registers",             },

//{  DMAC_INTERRUPT_REGISTERS_CLEARSRCTRAN_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                  REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_CLEARSRCTRAN_RESET_VALUE,DMAC_INTERRUPT_REGISTERS_CLEARSRCTRAN_WRITE_MASK, "Interrupt_Registers",             },

//{  DMAC_INTERRUPT_REGISTERS_CLEARDSTTRAN_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                  REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_CLEARDSTTRAN_RESET_VALUE,DMAC_INTERRUPT_REGISTERS_CLEARDSTTRAN_WRITE_MASK, "Interrupt_Registers",             },

//{  DMAC_INTERRUPT_REGISTERS_CLEARERR_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                      REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_CLEARERR_RESET_VALUE,    DMAC_INTERRUPT_REGISTERS_CLEARERR_WRITE_MASK,     "Interrupt_Registers",             },

{  DMAC_INTERRUPT_REGISTERS_STATUSINT_OFFSET + DMAC_INTERRUPT_REGISTERS_OFFSET,                     REGTEST_SIZE_64_BIT,    DMAC_INTERRUPT_REGISTERS_STATUSINT_RESET_VALUE,   DMAC_INTERRUPT_REGISTERS_STATUSINT_WRITE_MASK,    "Interrupt_Registers",             },
// These regs can only be written together with enable bits, not one bit at a time!
//{  DMAC_SOFTWARE_HANDSHAKE_REGISTERS_REQSRCREG_OFFSET + DMAC_SOFTWARE_HANDSHAKE_REGISTERS_OFFSET,   REGTEST_SIZE_64_BIT,    //DMAC_SOFTWARE_HANDSHAKE_REGISTERS_REQSRCREG_RESET_VALUE,DMAC_SOFTWARE_HANDSHAKE_REGISTERS_REQSRCREG_WRITE_MASK,"Software_Handshake_Registers",    },

//{  DMAC_SOFTWARE_HANDSHAKE_REGISTERS_REQDSTREG_OFFSET + DMAC_SOFTWARE_HANDSHAKE_REGISTERS_OFFSET,   REGTEST_SIZE_64_BIT,    //DMAC_SOFTWARE_HANDSHAKE_REGISTERS_REQDSTREG_RESET_VALUE,DMAC_SOFTWARE_HANDSHAKE_REGISTERS_REQDSTREG_WRITE_MASK,"Software_Handshake_Registers",    },

//{  DMAC_SOFTWARE_HANDSHAKE_REGISTERS_SGLRQSRCREG_OFFSET + DMAC_SOFTWARE_HANDSHAKE_REGISTERS_OFFSET, REGTEST_SIZE_64_BIT,    //DMAC_SOFTWARE_HANDSHAKE_REGISTERS_SGLRQSRCREG_RESET_VALUE,DMAC_SOFTWARE_HANDSHAKE_REGISTERS_SGLRQSRCREG_WRITE_MASK,"Software_Handshake_Registers",    },

//{  DMAC_SOFTWARE_HANDSHAKE_REGISTERS_SGLRQDSTREG_OFFSET + DMAC_SOFTWARE_HANDSHAKE_REGISTERS_OFFSET, REGTEST_SIZE_64_BIT,    //DMAC_SOFTWARE_HANDSHAKE_REGISTERS_SGLRQDSTREG_RESET_VALUE,DMAC_SOFTWARE_HANDSHAKE_REGISTERS_SGLRQDSTREG_WRITE_MASK,"Software_Handshake_Registers",    },

//{  DMAC_SOFTWARE_HANDSHAKE_REGISTERS_LSTSRCREG_OFFSET + DMAC_SOFTWARE_HANDSHAKE_REGISTERS_OFFSET,   REGTEST_SIZE_64_BIT,    //DMAC_SOFTWARE_HANDSHAKE_REGISTERS_LSTSRCREG_RESET_VALUE,DMAC_SOFTWARE_HANDSHAKE_REGISTERS_LSTSRCREG_WRITE_MASK,"Software_Handshake_Registers",    },

//{  DMAC_SOFTWARE_HANDSHAKE_REGISTERS_LSTDSTREG_OFFSET + DMAC_SOFTWARE_HANDSHAKE_REGISTERS_OFFSET,   REGTEST_SIZE_64_BIT,    //DMAC_SOFTWARE_HANDSHAKE_REGISTERS_LSTDSTREG_RESET_VALUE,DMAC_SOFTWARE_HANDSHAKE_REGISTERS_LSTDSTREG_WRITE_MASK,"Software_Handshake_Registers",    },

{  DMAC_MISCELLANEOUS_REGISTERS_DMACFGREG_OFFSET + DMAC_MISCELLANEOUS_REGISTERS_OFFSET,             REGTEST_SIZE_64_BIT,    DMAC_MISCELLANEOUS_REGISTERS_DMACFGREG_RESET_VALUE,DMAC_MISCELLANEOUS_REGISTERS_DMACFGREG_WRITE_MASK,"Miscellaneous_Registers",         },
// Can only be written together with enable bits, not one bit at a time!
//{  DMAC_MISCELLANEOUS_REGISTERS_CHENREG_OFFSET + DMAC_MISCELLANEOUS_REGISTERS_OFFSET,               REGTEST_SIZE_64_BIT,    DMAC_MISCELLANEOUS_REGISTERS_CHENREG_RESET_VALUE, //DMAC_MISCELLANEOUS_REGISTERS_CHENREG_WRITE_MASK,  "Miscellaneous_Registers",         },

{  DMAC_MISCELLANEOUS_REGISTERS_DMAIDREG_OFFSET + DMAC_MISCELLANEOUS_REGISTERS_OFFSET,              REGTEST_SIZE_64_BIT,    DMAC_MISCELLANEOUS_REGISTERS_DMAIDREG_RESET_VALUE,DMAC_MISCELLANEOUS_REGISTERS_DMAIDREG_WRITE_MASK, "Miscellaneous_Registers",         },

{  DMAC_MISCELLANEOUS_REGISTERS_DMATESTREG_OFFSET + DMAC_MISCELLANEOUS_REGISTERS_OFFSET,            REGTEST_SIZE_64_BIT,    DMAC_MISCELLANEOUS_REGISTERS_DMATESTREG_RESET_VALUE,DMAC_MISCELLANEOUS_REGISTERS_DMATESTREG_WRITE_MASK,"Miscellaneous_Registers",         },

{  DMAC_MISCELLANEOUS_REGISTERS_DMA_COMP_PARAMS_6_OFFSET + DMAC_MISCELLANEOUS_REGISTERS_OFFSET,     REGTEST_SIZE_64_BIT,    DMAC_MISCELLANEOUS_REGISTERS_DMA_COMP_PARAMS_6_RESET_VALUE,DMAC_MISCELLANEOUS_REGISTERS_DMA_COMP_PARAMS_6_WRITE_MASK,"Miscellaneous_Registers",         },

{  DMAC_MISCELLANEOUS_REGISTERS_DMA_COMP_PARAMS_5_OFFSET + DMAC_MISCELLANEOUS_REGISTERS_OFFSET,     REGTEST_SIZE_64_BIT,    DMAC_MISCELLANEOUS_REGISTERS_DMA_COMP_PARAMS_5_RESET_VALUE,DMAC_MISCELLANEOUS_REGISTERS_DMA_COMP_PARAMS_5_WRITE_MASK,"Miscellaneous_Registers",         },

{  DMAC_MISCELLANEOUS_REGISTERS_DMA_COMP_PARAMS_4_OFFSET + DMAC_MISCELLANEOUS_REGISTERS_OFFSET,     REGTEST_SIZE_64_BIT,    DMAC_MISCELLANEOUS_REGISTERS_DMA_COMP_PARAMS_4_RESET_VALUE,DMAC_MISCELLANEOUS_REGISTERS_DMA_COMP_PARAMS_4_WRITE_MASK,"Miscellaneous_Registers",         },

{  DMAC_MISCELLANEOUS_REGISTERS_DMA_COMP_PARAMS_3_OFFSET + DMAC_MISCELLANEOUS_REGISTERS_OFFSET,     REGTEST_SIZE_64_BIT,    DMAC_MISCELLANEOUS_REGISTERS_DMA_COMP_PARAMS_3_RESET_VALUE,DMAC_MISCELLANEOUS_REGISTERS_DMA_COMP_PARAMS_3_WRITE_MASK,"Miscellaneous_Registers",         },

{  DMAC_MISCELLANEOUS_REGISTERS_DMA_COMP_PARAMS_2_OFFSET + DMAC_MISCELLANEOUS_REGISTERS_OFFSET,     REGTEST_SIZE_64_BIT,    DMAC_MISCELLANEOUS_REGISTERS_DMA_COMP_PARAMS_2_RESET_VALUE,DMAC_MISCELLANEOUS_REGISTERS_DMA_COMP_PARAMS_2_WRITE_MASK,"Miscellaneous_Registers",         },

{  DMAC_MISCELLANEOUS_REGISTERS_DMA_COMP_PARAMS_1_OFFSET + DMAC_MISCELLANEOUS_REGISTERS_OFFSET,     REGTEST_SIZE_64_BIT,    DMAC_MISCELLANEOUS_REGISTERS_DMA_COMP_PARAMS_1_RESET_VALUE,DMAC_MISCELLANEOUS_REGISTERS_DMA_COMP_PARAMS_1_WRITE_MASK,"Miscellaneous_Registers",         },

{  DMAC_MISCELLANEOUS_REGISTERS_DMACOMPSID_OFFSET + DMAC_MISCELLANEOUS_REGISTERS_OFFSET,            REGTEST_SIZE_64_BIT,    DMAC_MISCELLANEOUS_REGISTERS_DMACOMPSID_RESET_VALUE,DMAC_MISCELLANEOUS_REGISTERS_DMACOMPSID_WRITE_MASK,"Miscellaneous_Registers",         },

   /* End List Delimiter */

{  REGTEST_END_OF_LIST,                              0,                            0,                                          0,                                                0,                                 }

};

