/*                                                                         */
/* Generated by Semifore, Inc. csrCompile                                  */
/*    Version: 2018.12 Build: release Linux 64-bit                         */
/*    C Header output                                                      */
/*                                                                         */
/* Command Line:                                                           */
/*    /home/cad/tools/semifore/csrCompile/LATEST/bin/x64_re6/csrCompile -v */
/*    -c                                                                   */
/*    /data/ssmith/work/repos/soc3/dv/common/scripts/semifore_css/macro.css */
/*    -t h spio_gpio.csr -o gen_dv/spio_gpio_macro                         */
/*                                                                         */
/* Input files:                                                            */
/*    spio_gpio.csr                                                        */
/*                                                                         */
/* Configuration files:                                                    */
/*    /data/ssmith/work/repos/soc3/dv/common/scripts/semifore_css/macro.css */
/*                                                                         */
/* Generated on: Wed Feb 20 23:24:46 2019                                  */
/*           by: ssmith                                                    */
/*                                                                         */

#ifndef _SPIO_GPIO_MACRO_H_
#define _SPIO_GPIO_MACRO_H_



/* ####################################################################### */
/*        TEMPLATE MACROS                                                  */
/* ####################################################################### */

/* Addressmap type: spio_DW_apb_gpio                                       */
/* Addressmap template: spio_DW_apb_gpio                                   */
/* Source filename: spio_gpio.csr, line: 19                                */
/* Description:                                                            */
/*    DW_apb_gpio memory map                                               */
#define SPIO_DW_APB_GPIO_SIZE 0x78
#define SPIO_DW_APB_GPIO_BYTE_SIZE 0x78
/* Register member: spio_DW_apb_gpio.GPIO_SWPORTA_DR                       */
/* Register type referenced: spio_DW_apb_gpio::GPIO_SWPORTA_DR             */
/* Register template referenced: spio_DW_apb_gpio::GPIO_SWPORTA_DR         */
/* Register member: spio_DW_apb_gpio.GPIO_SWPORTA_DDR                      */
/* Register type referenced: spio_DW_apb_gpio::GPIO_SWPORTA_DDR            */
/* Register template referenced: spio_DW_apb_gpio::GPIO_SWPORTA_DDR        */
/* Register member: spio_DW_apb_gpio.GPIO_INTEN                            */
/* Register type referenced: spio_DW_apb_gpio::GPIO_INTEN                  */
/* Register template referenced: spio_DW_apb_gpio::GPIO_INTEN              */
/* Register member: spio_DW_apb_gpio.GPIO_INTMASK                          */
/* Register type referenced: spio_DW_apb_gpio::GPIO_INTMASK                */
/* Register template referenced: spio_DW_apb_gpio::GPIO_INTMASK            */
/* Register member: spio_DW_apb_gpio.GPIO_INTTYPE_LEVEL                    */
/* Register type referenced: spio_DW_apb_gpio::GPIO_INTTYPE_LEVEL          */
/* Register template referenced: spio_DW_apb_gpio::GPIO_INTTYPE_LEVEL      */
/* Register member: spio_DW_apb_gpio.GPIO_INT_POLARITY                     */
/* Register type referenced: spio_DW_apb_gpio::GPIO_INT_POLARITY           */
/* Register template referenced: spio_DW_apb_gpio::GPIO_INT_POLARITY       */
/* Register member: spio_DW_apb_gpio.GPIO_INTSTATUS                        */
/* Register type referenced: spio_DW_apb_gpio::GPIO_INTSTATUS              */
/* Register template referenced: spio_DW_apb_gpio::GPIO_INTSTATUS          */
/* Register member: spio_DW_apb_gpio.GPIO_RAW_INTSTATUS                    */
/* Register type referenced: spio_DW_apb_gpio::GPIO_RAW_INTSTATUS          */
/* Register template referenced: spio_DW_apb_gpio::GPIO_RAW_INTSTATUS      */
/* Register member: spio_DW_apb_gpio.GPIO_DEBOUNCE                         */
/* Register type referenced: spio_DW_apb_gpio::GPIO_DEBOUNCE               */
/* Register template referenced: spio_DW_apb_gpio::GPIO_DEBOUNCE           */
/* Register member: spio_DW_apb_gpio.GPIO_PORTA_EOI                        */
/* Register type referenced: spio_DW_apb_gpio::GPIO_PORTA_EOI              */
/* Register template referenced: spio_DW_apb_gpio::GPIO_PORTA_EOI          */
/* Register member: spio_DW_apb_gpio.GPIO_EXT_PORTA                        */
/* Register type referenced: spio_DW_apb_gpio::GPIO_EXT_PORTA              */
/* Register template referenced: spio_DW_apb_gpio::GPIO_EXT_PORTA          */
/* Register member: spio_DW_apb_gpio.GPIO_LS_SYNC                          */
/* Register type referenced: spio_DW_apb_gpio::GPIO_LS_SYNC                */
/* Register template referenced: spio_DW_apb_gpio::GPIO_LS_SYNC            */
/* Register member: spio_DW_apb_gpio.GPIO_ID_CODE                          */
/* Register type referenced: spio_DW_apb_gpio::GPIO_ID_CODE                */
/* Register template referenced: spio_DW_apb_gpio::GPIO_ID_CODE            */
/* Register member: spio_DW_apb_gpio.GPIO_VER_ID_CODE                      */
/* Register type referenced: spio_DW_apb_gpio::GPIO_VER_ID_CODE            */
/* Register template referenced: spio_DW_apb_gpio::GPIO_VER_ID_CODE        */
/* Register member: spio_DW_apb_gpio.GPIO_CONFIG_REG2                      */
/* Register type referenced: spio_DW_apb_gpio::GPIO_CONFIG_REG2            */
/* Register template referenced: spio_DW_apb_gpio::GPIO_CONFIG_REG2        */
/* Register member: spio_DW_apb_gpio.GPIO_CONFIG_REG1                      */
/* Register type referenced: spio_DW_apb_gpio::GPIO_CONFIG_REG1            */
/* Register template referenced: spio_DW_apb_gpio::GPIO_CONFIG_REG1        */

/* Register type: spio_DW_apb_gpio::GPIO_SWPORTA_DR                        */
/* Register template: spio_DW_apb_gpio::GPIO_SWPORTA_DR                    */
/* Source filename: spio_gpio.csr, line: 23                                */
/* Title: Port A data register                                             */
/* Description:                                                            */
/*    Port A data register                                                 */
/* Field member: spio_DW_apb_gpio::GPIO_SWPORTA_DR.GPIO_SWPORTA_DR         */
/* Source filename: spio_gpio.csr, line: 28                                */
/* Description:                                                            */
/*    Values written to this register are output on the I/O signals        */
/*    for Port A if the corresponding data direction bits for Port A       */
/*    are set to Output mode and the corresponding control bit for         */
/*    Port A is set to Software mode. The value read back is equal         */
/*    to the last value written to this register.                          */
#define SPIO_DW_APB_GPIO_GPIO_SWPORTA_DR_GPIO_SWPORTA_DR__SHIFT 0
#define SPIO_DW_APB_GPIO_GPIO_SWPORTA_DR_GPIO_SWPORTA_DR__WIDTH 32
#define SPIO_DW_APB_GPIO_GPIO_SWPORTA_DR_GPIO_SWPORTA_DR__MASK 0xffffffff

/* Register type: spio_DW_apb_gpio::GPIO_SWPORTA_DDR                       */
/* Register template: spio_DW_apb_gpio::GPIO_SWPORTA_DDR                   */
/* Source filename: spio_gpio.csr, line: 44                                */
/* Title: Port A Data Direction Register                                   */
/* Description:                                                            */
/*    Port A Data Direction Register                                       */
/* Field member: spio_DW_apb_gpio::GPIO_SWPORTA_DDR.GPIO_SWPORTA_DDR       */
/* Source filename: spio_gpio.csr, line: 49                                */
/* Description:                                                            */
/*    Values written to this register independently control the            */
/*    direction of the corresponding data bit in Port A. The               */
/*    default direction can be configured as input or output after         */
/*    system reset through the GPIO_DFLT_DIR_A parameter.                  */
#define SPIO_DW_APB_GPIO_GPIO_SWPORTA_DDR_GPIO_SWPORTA_DDR__SHIFT 0
#define SPIO_DW_APB_GPIO_GPIO_SWPORTA_DDR_GPIO_SWPORTA_DDR__WIDTH 32
#define SPIO_DW_APB_GPIO_GPIO_SWPORTA_DDR_GPIO_SWPORTA_DDR__MASK 0xffffffff

/* Register type: spio_DW_apb_gpio::GPIO_INTEN                             */
/* Register template: spio_DW_apb_gpio::GPIO_INTEN                         */
/* Source filename: spio_gpio.csr, line: 72                                */
/* Title: Interrupt enable register                                        */
/* Description:                                                            */
/*    Interrupt enable register                                            */
/*    Note:  This register is available only if Port A is configured to    */
/*    generate interrupts (GPIO_PORTA_INTR = Include (1)).                 */
/* Field member: spio_DW_apb_gpio::GPIO_INTEN.GPIO_INTEN                   */
/* Source filename: spio_gpio.csr, line: 80                                */
/* Description:                                                            */
/*    Allows each bit of Port A to be configured for interrupts. By        */
/*    default the generation of interrupts is disabled. Whenever a 1 is    */
/*    written to a bit of this register, it configures the                 */
/*    corresponding bit on Port A to become an interrupt; otherwise, Port  */
/*    A operates as a normal GPIO signal.                                  */
/*    Interrupts are disabled on the corresponding bits of Port A if the   */
/*    corresponding data direction register is set to Output or if         */
/*    Port A mode is set to Hardware.                                      */
#define SPIO_DW_APB_GPIO_GPIO_INTEN_GPIO_INTEN__SHIFT 0
#define SPIO_DW_APB_GPIO_GPIO_INTEN_GPIO_INTEN__WIDTH 32
#define SPIO_DW_APB_GPIO_GPIO_INTEN_GPIO_INTEN__MASK 0xffffffff

/* Register type: spio_DW_apb_gpio::GPIO_INTMASK                           */
/* Register template: spio_DW_apb_gpio::GPIO_INTMASK                       */
/* Source filename: spio_gpio.csr, line: 109                               */
/* Title: Interrupt mask register                                          */
/* Description:                                                            */
/*    Interrupt mask register                                              */
/*    Note:  This register is available only if Port A is configured to    */
/*    generate interrupts (GPIO_PORTA_INTR = Include (1)).                 */
/* Field member: spio_DW_apb_gpio::GPIO_INTMASK.GPIO_INTMASK               */
/* Source filename: spio_gpio.csr, line: 117                               */
/* Description:                                                            */
/*    Controls whether an interrupt on Port A can create an                */
/*    interrupt for the interrupt controller by not masking it. By         */
/*    default, all interrupts bits are unmasked. Whenever a 1 is           */
/*    written to a bit in this register, it masks the interrupt generation */
/*     capability for this signal; otherwise interrupts are                */
/*    allowed through. The unmasked status can be read as well as the      */
/*    resultant status after masking.                                      */
#define SPIO_DW_APB_GPIO_GPIO_INTMASK_GPIO_INTMASK__SHIFT 0
#define SPIO_DW_APB_GPIO_GPIO_INTMASK_GPIO_INTMASK__WIDTH 32
#define SPIO_DW_APB_GPIO_GPIO_INTMASK_GPIO_INTMASK__MASK 0xffffffff

/* Register type: spio_DW_apb_gpio::GPIO_INTTYPE_LEVEL                     */
/* Register template: spio_DW_apb_gpio::GPIO_INTTYPE_LEVEL                 */
/* Source filename: spio_gpio.csr, line: 144                               */
/* Title: Interrupt level                                                  */
/* Description:                                                            */
/*    Interrupt level                                                      */
/*    Note:  This register is available only if Port A is configured to    */
/*    generate interrupts (GPIO_PORTA_INTR = Include (1)).                 */
/* Field member: spio_DW_apb_gpio::GPIO_INTTYPE_LEVEL.GPIO_INTTYPE_LEVEL   */
/* Source filename: spio_gpio.csr, line: 152                               */
/* Description:                                                            */
/*    Controls the type of interrupt that can occur on Port A.             */
/*    Whenever a 0 is written to a bit of this register, it configures the */
/*     interrupt type to be level-sensitive; otherwise, it is              */
/*    edge-sensitive.                                                      */
#define SPIO_DW_APB_GPIO_GPIO_INTTYPE_LEVEL_GPIO_INTTYPE_LEVEL__SHIFT 0
#define SPIO_DW_APB_GPIO_GPIO_INTTYPE_LEVEL_GPIO_INTTYPE_LEVEL__WIDTH 32
#define SPIO_DW_APB_GPIO_GPIO_INTTYPE_LEVEL_GPIO_INTTYPE_LEVEL__MASK 0xffffffff

/* Register type: spio_DW_apb_gpio::GPIO_INT_POLARITY                      */
/* Register template: spio_DW_apb_gpio::GPIO_INT_POLARITY                  */
/* Source filename: spio_gpio.csr, line: 175                               */
/* Title: Interrupt polarity                                               */
/* Description:                                                            */
/*    Interrupt polarity                                                   */
/*    Note:  This register is available only if Port A is configured to    */
/*    generate interrupts (GPIO_PORTA_INTR = Include (1)).                 */
/* Field member: spio_DW_apb_gpio::GPIO_INT_POLARITY.GPIO_INT_POLARITY     */
/* Source filename: spio_gpio.csr, line: 183                               */
/* Description:                                                            */
/*    Controls the polarity of edge or level sensitivity that can          */
/*    occur on input of Port A. Whenever a 0 is written to a bit of this   */
/*    register, it configures the interrupt type to falling-edge or        */
/*    active-low sensitive; otherwise, it is rising-edge or active-high    */
/*    sensitive.                                                           */
#define SPIO_DW_APB_GPIO_GPIO_INT_POLARITY_GPIO_INT_POLARITY__SHIFT 0
#define SPIO_DW_APB_GPIO_GPIO_INT_POLARITY_GPIO_INT_POLARITY__WIDTH 32
#define SPIO_DW_APB_GPIO_GPIO_INT_POLARITY_GPIO_INT_POLARITY__MASK 0xffffffff

/* Register type: spio_DW_apb_gpio::GPIO_INTSTATUS                         */
/* Register template: spio_DW_apb_gpio::GPIO_INTSTATUS                     */
/* Source filename: spio_gpio.csr, line: 208                               */
/* Title: Interrupt status                                                 */
/* Description:                                                            */
/*    Interrupt status                                                     */
/*    Note:  This register is available only if Port A is configured to    */
/*    generate interrupts (GPIO_PORTA_INTR = Include (1)).                 */
/* Field member: spio_DW_apb_gpio::GPIO_INTSTATUS.GPIO_INTSTATUS           */
/* Source filename: spio_gpio.csr, line: 217                               */
/* Description:                                                            */
/*    Interrupt status of Port A.                                          */
#define SPIO_DW_APB_GPIO_GPIO_INTSTATUS_GPIO_INTSTATUS__SHIFT 0
#define SPIO_DW_APB_GPIO_GPIO_INTSTATUS_GPIO_INTSTATUS__WIDTH 32
#define SPIO_DW_APB_GPIO_GPIO_INTSTATUS_GPIO_INTSTATUS__MASK 0xffffffff

/* Register type: spio_DW_apb_gpio::GPIO_RAW_INTSTATUS                     */
/* Register template: spio_DW_apb_gpio::GPIO_RAW_INTSTATUS                 */
/* Source filename: spio_gpio.csr, line: 236                               */
/* Title: Raw interrupt status                                             */
/* Description:                                                            */
/*    Raw interrupt status                                                 */
/*    Note:  This register is available only if Port A is configured to    */
/*    generate interrupts (GPIO_PORTA_INTR = Include (1)).                 */
/* Field member: spio_DW_apb_gpio::GPIO_RAW_INTSTATUS.GPIO_RAW_INTSTATUS   */
/* Source filename: spio_gpio.csr, line: 245                               */
/* Description:                                                            */
/*    Raw interrupt of status of Port A (premasking bits)                  */
#define SPIO_DW_APB_GPIO_GPIO_RAW_INTSTATUS_GPIO_RAW_INTSTATUS__SHIFT 0
#define SPIO_DW_APB_GPIO_GPIO_RAW_INTSTATUS_GPIO_RAW_INTSTATUS__WIDTH 32
#define SPIO_DW_APB_GPIO_GPIO_RAW_INTSTATUS_GPIO_RAW_INTSTATUS__MASK 0xffffffff

/* Register type: spio_DW_apb_gpio::GPIO_DEBOUNCE                          */
/* Register template: spio_DW_apb_gpio::GPIO_DEBOUNCE                      */
/* Source filename: spio_gpio.csr, line: 264                               */
/* Title: Debounce enable                                                  */
/* Description:                                                            */
/*    Debounce enable                                                      */
/*    Note: This register is available only if Port A is configured to     */
/*    generate interrupts (GPIO_PORTA_INTR = Include (1)) and when the     */
/*    debounce logic is included (GPIO_DEBOUNCE = Include (1)).            */
/* Field member: spio_DW_apb_gpio::GPIO_DEBOUNCE.GPIO_DEBOUNCE             */
/* Source filename: spio_gpio.csr, line: 273                               */
/* Description:                                                            */
/*    Controls whether an external signal that is the source               */
/*    of an interrupt needs to be debounced to remove any spurious         */
/*    glitches. Writing a 1 to a bit in this register                      */
/*    enables the debouncing circuitry. A signal must be valid for two     */
/*    periods of an external clock before it is                            */
/*    internally processed.                                                */
#define SPIO_DW_APB_GPIO_GPIO_DEBOUNCE_GPIO_DEBOUNCE__SHIFT 0
#define SPIO_DW_APB_GPIO_GPIO_DEBOUNCE_GPIO_DEBOUNCE__WIDTH 32
#define SPIO_DW_APB_GPIO_GPIO_DEBOUNCE_GPIO_DEBOUNCE__MASK 0xffffffff

/* Register type: spio_DW_apb_gpio::GPIO_PORTA_EOI                         */
/* Register template: spio_DW_apb_gpio::GPIO_PORTA_EOI                     */
/* Source filename: spio_gpio.csr, line: 297                               */
/* Title: Port A clear interrupt register                                  */
/* Description:                                                            */
/*    Port A clear interrupt register                                      */
/*    Note: This register is available only if Port A is configured to     */
/*    generate interrupts (GPIO_PORTA_INTR = Include (1)) and when the     */
/*    debounce logic is included (GPIO_DEBOUNCE = Include (1)).            */
/* Field member: spio_DW_apb_gpio::GPIO_PORTA_EOI.GPIO_PORTA_EOI           */
/* Source filename: spio_gpio.csr, line: 307                               */
/* Description:                                                            */
/*    Controls the clearing of edge type interrupts from Port A.           */
/*    When a 1 is written into a corresponding bit of this register, the   */
/*    interrupt is cleared. All interrupts are cleared when                */
/*    Port A is not configured for interrupts.                             */
#define SPIO_DW_APB_GPIO_GPIO_PORTA_EOI_GPIO_PORTA_EOI__SHIFT 0
#define SPIO_DW_APB_GPIO_GPIO_PORTA_EOI_GPIO_PORTA_EOI__WIDTH 32
#define SPIO_DW_APB_GPIO_GPIO_PORTA_EOI_GPIO_PORTA_EOI__MASK 0xffffffff

/* Register type: spio_DW_apb_gpio::GPIO_EXT_PORTA                         */
/* Register template: spio_DW_apb_gpio::GPIO_EXT_PORTA                     */
/* Source filename: spio_gpio.csr, line: 330                               */
/* Title: External port A register                                         */
/* Description:                                                            */
/*    External port A register                                             */
/* Field member: spio_DW_apb_gpio::GPIO_EXT_PORTA.GPIO_EXT_PORTA           */
/* Source filename: spio_gpio.csr, line: 336                               */
/* Description:                                                            */
/*    This register always reflects the signals value on the External Port */
/*     A.                                                                  */
#define SPIO_DW_APB_GPIO_GPIO_EXT_PORTA_GPIO_EXT_PORTA__SHIFT 0
#define SPIO_DW_APB_GPIO_GPIO_EXT_PORTA_GPIO_EXT_PORTA__WIDTH 32
#define SPIO_DW_APB_GPIO_GPIO_EXT_PORTA_GPIO_EXT_PORTA__MASK 0xffffffff

/* Register type: spio_DW_apb_gpio::GPIO_LS_SYNC                           */
/* Register template: spio_DW_apb_gpio::GPIO_LS_SYNC                       */
/* Source filename: spio_gpio.csr, line: 345                               */
/* Title: Synchronization level                                            */
/* Description:                                                            */
/*    Synchronization level                                                */
/* Field member: spio_DW_apb_gpio::GPIO_LS_SYNC.RSVD_GPIO_LS_SYNC          */
/* Source filename: spio_gpio.csr, line: 370                               */
/* Description:                                                            */
/*    RSVD_GPIO_LS_SYNC Reserved bits - read as zero                       */
#define SPIO_DW_APB_GPIO_GPIO_LS_SYNC_RSVD_GPIO_LS_SYNC__SHIFT 1
#define SPIO_DW_APB_GPIO_GPIO_LS_SYNC_RSVD_GPIO_LS_SYNC__WIDTH 31
#define SPIO_DW_APB_GPIO_GPIO_LS_SYNC_RSVD_GPIO_LS_SYNC__MASK 0xfffffffe
/* Field member: spio_DW_apb_gpio::GPIO_LS_SYNC.GPIO_LS_SYNC               */
/* Source filename: spio_gpio.csr, line: 350                               */
/* Description:                                                            */
/*    Writing a 1 to this register results in all level-sensitive          */
/*    interrupts being                                                     */
/*    synchronized to pclk_intr.                                           */
#define SPIO_DW_APB_GPIO_GPIO_LS_SYNC_GPIO_LS_SYNC__SHIFT 0
#define SPIO_DW_APB_GPIO_GPIO_LS_SYNC_GPIO_LS_SYNC__WIDTH 1
#define SPIO_DW_APB_GPIO_GPIO_LS_SYNC_GPIO_LS_SYNC__MASK 0x00000001

/* Register type: spio_DW_apb_gpio::GPIO_ID_CODE                           */
/* Register template: spio_DW_apb_gpio::GPIO_ID_CODE                       */
/* Source filename: spio_gpio.csr, line: 379                               */
/* Title: GPIO ID code                                                     */
/* Description:                                                            */
/*    GPIO ID code                                                         */
/* Field member: spio_DW_apb_gpio::GPIO_ID_CODE.GPIO_ID_CODE               */
/* Source filename: spio_gpio.csr, line: 385                               */
/* Description:                                                            */
/*    This is a user-specified code that a system can read. It can         */
/*    be used for chip identification, and so on.                          */
#define SPIO_DW_APB_GPIO_GPIO_ID_CODE_GPIO_ID_CODE__SHIFT 0
#define SPIO_DW_APB_GPIO_GPIO_ID_CODE_GPIO_ID_CODE__WIDTH 32
#define SPIO_DW_APB_GPIO_GPIO_ID_CODE_GPIO_ID_CODE__MASK 0xffffffff

/* Register type: spio_DW_apb_gpio::GPIO_VER_ID_CODE                       */
/* Register template: spio_DW_apb_gpio::GPIO_VER_ID_CODE                   */
/* Source filename: spio_gpio.csr, line: 395                               */
/* Title: GPIO Component Version                                           */
/* Description:                                                            */
/*    GPIO Component Version                                               */
/* Field member: spio_DW_apb_gpio::GPIO_VER_ID_CODE.GPIO_VER_ID_CODE       */
/* Source filename: spio_gpio.csr, line: 401                               */
/* Description:                                                            */
/*    ASCII value for each number in the version, followed by *. For       */
/*    example                                                              */
/*    32_31_32_2A represents the version 2.12*.                            */
#define SPIO_DW_APB_GPIO_GPIO_VER_ID_CODE_GPIO_VER_ID_CODE__SHIFT 0
#define SPIO_DW_APB_GPIO_GPIO_VER_ID_CODE_GPIO_VER_ID_CODE__WIDTH 32
#define SPIO_DW_APB_GPIO_GPIO_VER_ID_CODE_GPIO_VER_ID_CODE__MASK 0xffffffff

/* Register type: spio_DW_apb_gpio::GPIO_CONFIG_REG2                       */
/* Register template: spio_DW_apb_gpio::GPIO_CONFIG_REG2                   */
/* Source filename: spio_gpio.csr, line: 411                               */
/* Title: GPIO Configuration Register 2                                    */
/* Description:                                                            */
/*    GPIO Configuration Register 2                                        */
/*     This register is a read-only register that is present when the      */
/*    configuration parameter GPIO_ADD_ENCODED_PARAMS is set to True. If   */
/*    this configuration is set to False, then this register reads back 0. */
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG2.RSVD_GPIO_CONFIG_REG2  */
/* Source filename: spio_gpio.csr, line: 449                               */
/* Description:                                                            */
/*    RSVD_GPIO_CONFIG_REG2 Reserved bits - read as zero                   */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG2_RSVD_GPIO_CONFIG_REG2__SHIFT 20
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG2_RSVD_GPIO_CONFIG_REG2__WIDTH 12
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG2_RSVD_GPIO_CONFIG_REG2__MASK 0xfff00000
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG2.ENCODED_ID_PWIDTH_D    */
/* Source filename: spio_gpio.csr, line: 442                               */
/* Description:                                                            */
/*    The value of this register is equal to GPIO_PWIDTH_D-1.              */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_D__SHIFT 15
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_D__WIDTH 5
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_D__MASK 0x000f8000
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG2.ENCODED_ID_PWIDTH_C    */
/* Source filename: spio_gpio.csr, line: 435                               */
/* Description:                                                            */
/*    The value of this register is equal to GPIO_PWIDTH_C-1.              */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_C__SHIFT 10
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_C__WIDTH 5
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_C__MASK 0x00007c00
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG2.ENCODED_ID_PWIDTH_B    */
/* Source filename: spio_gpio.csr, line: 428                               */
/* Description:                                                            */
/*    The value of this register is equal to GPIO_PWIDTH_B-1.              */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_B__SHIFT 5
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_B__WIDTH 5
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_B__MASK 0x000003e0
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG2.ENCODED_ID_PWIDTH_A    */
/* Source filename: spio_gpio.csr, line: 421                               */
/* Description:                                                            */
/*    The value of this register is equal to GPIO_PWIDTH_A-1.              */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_A__SHIFT 0
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_A__WIDTH 5
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG2_ENCODED_ID_PWIDTH_A__MASK 0x0000001f

/* Register type: spio_DW_apb_gpio::GPIO_CONFIG_REG1                       */
/* Register template: spio_DW_apb_gpio::GPIO_CONFIG_REG1                   */
/* Source filename: spio_gpio.csr, line: 457                               */
/* Title: GPIO Configuration Register 1                                    */
/* Description:                                                            */
/*    GPIO Configuration Register 1                                        */
/*     This register is present when the configuration parameter           */
/*    GPIO_ADD_ENCODED_PARAMS is set to True. If this parameter is set to  */
/*    False, this register reads back zero (0).                            */
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG1.RSVD_GPIO_CONFIG_REG1  */
/* Source filename: spio_gpio.csr, line: 782                               */
/* Description:                                                            */
/*    RSVD_GPIO_CONFIG_REG1 Reserved bits - read as zero                   */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_RSVD_GPIO_CONFIG_REG1__SHIFT 22
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_RSVD_GPIO_CONFIG_REG1__WIDTH 10
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_RSVD_GPIO_CONFIG_REG1__MASK 0xffc00000
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG1.INTERRUPT_BOTH_EDGE_TYPE */
/* Source filename: spio_gpio.csr, line: 763                               */
/* Description:                                                            */
/*    The value of this register is derived from the                       */
/*    GPIO_INT_BOTH_EDGE configuration parameter                           */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_INTERRUPT_BOTH_EDGE_TYPE__SHIFT 21
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_INTERRUPT_BOTH_EDGE_TYPE__WIDTH 1
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_INTERRUPT_BOTH_EDGE_TYPE__MASK 0x00200000
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG1.ENCODED_ID_WIDTH       */
/* Source filename: spio_gpio.csr, line: 755                               */
/* Description:                                                            */
/*    The value of this register is derived from the                       */
/*    GPIO_ID_WIDTH configuration parameter.                               */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_ENCODED_ID_WIDTH__SHIFT 16
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_ENCODED_ID_WIDTH__WIDTH 5
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_ENCODED_ID_WIDTH__MASK 0x001f0000
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG1.GPIO_ID                */
/* Source filename: spio_gpio.csr, line: 736                               */
/* Description:                                                            */
/*    The value of this register is derived from the                       */
/*    GPIO_ID configuration parameter.                                     */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_GPIO_ID__SHIFT 15
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_GPIO_ID__WIDTH 1
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_GPIO_ID__MASK 0x00008000
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG1.ADD_ENCODED_PARAMS     */
/* Source filename: spio_gpio.csr, line: 717                               */
/* Description:                                                            */
/*    The value of this register is derived from the                       */
/*    GPIO_ADD_ENCODED_PARAMS configuration parameter.                     */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_ADD_ENCODED_PARAMS__SHIFT 14
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_ADD_ENCODED_PARAMS__WIDTH 1
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_ADD_ENCODED_PARAMS__MASK 0x00004000
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG1.DEBOUNCE               */
/* Source filename: spio_gpio.csr, line: 698                               */
/* Description:                                                            */
/*    The value of this register is derived from the                       */
/*    GPIO_DEBOUNCE configuration parameter.                               */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_DEBOUNCE__SHIFT 13
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_DEBOUNCE__WIDTH 1
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_DEBOUNCE__MASK 0x00002000
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG1.PORTA_INTR             */
/* Source filename: spio_gpio.csr, line: 678                               */
/* Description:                                                            */
/*    The value of this register is derived from the                       */
/*    GPIO_PORTA_INTR configuration parameter.                             */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_PORTA_INTR__SHIFT 12
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_PORTA_INTR__WIDTH 1
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_PORTA_INTR__MASK 0x00001000
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG1.HW_PORTD               */
/* Source filename: spio_gpio.csr, line: 657                               */
/* Description:                                                            */
/*    The value of this register is derived from the                       */
/*    GPIO_HW_PORTD configuration parameter.                               */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_HW_PORTD__SHIFT 11
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_HW_PORTD__WIDTH 1
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_HW_PORTD__MASK 0x00000800
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG1.HW_PORTC               */
/* Source filename: spio_gpio.csr, line: 636                               */
/* Description:                                                            */
/*    The value of this register is derived from the                       */
/*    GPIO_HW_PORTC configuration parameter.                               */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_HW_PORTC__SHIFT 10
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_HW_PORTC__WIDTH 1
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_HW_PORTC__MASK 0x00000400
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG1.HW_PORTB               */
/* Source filename: spio_gpio.csr, line: 615                               */
/* Description:                                                            */
/*    The value of this register is derived from the                       */
/*    GPIO_HW_PORTB configuration parameter.                               */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_HW_PORTB__SHIFT 9
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_HW_PORTB__WIDTH 1
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_HW_PORTB__MASK 0x00000200
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG1.HW_PORTA               */
/* Source filename: spio_gpio.csr, line: 594                               */
/* Description:                                                            */
/*    The value of this register is derived from the                       */
/*    GPIO_HW_PORTA configuration parameter.                               */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_HW_PORTA__SHIFT 8
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_HW_PORTA__WIDTH 1
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_HW_PORTA__MASK 0x00000100
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG1.PORTD_SINGLE_CTL       */
/* Source filename: spio_gpio.csr, line: 575                               */
/* Description:                                                            */
/*    The value of this register is derived from the                       */
/*    GPIO_PORTD_SINGLE_CTL configuration parameter.                       */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_PORTD_SINGLE_CTL__SHIFT 7
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_PORTD_SINGLE_CTL__WIDTH 1
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_PORTD_SINGLE_CTL__MASK 0x00000080
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG1.PORTC_SINGLE_CTL       */
/* Source filename: spio_gpio.csr, line: 556                               */
/* Description:                                                            */
/*    The value of this register is derived from the                       */
/*    GPIO_PORTC_SINGLE_CTL configuration parameter.                       */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_PORTC_SINGLE_CTL__SHIFT 6
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_PORTC_SINGLE_CTL__WIDTH 1
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_PORTC_SINGLE_CTL__MASK 0x00000040
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG1.PORTB_SINGLE_CTL       */
/* Source filename: spio_gpio.csr, line: 537                               */
/* Description:                                                            */
/*    The value of this register is derived from the                       */
/*    GPIO_PORTB_SINGLE_CTL configuration parameter.                       */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_PORTB_SINGLE_CTL__SHIFT 5
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_PORTB_SINGLE_CTL__WIDTH 1
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_PORTB_SINGLE_CTL__MASK 0x00000020
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG1.PORTA_SINGLE_CTL       */
/* Source filename: spio_gpio.csr, line: 518                               */
/* Description:                                                            */
/*    The value of this register is derived from the                       */
/*    GPIO_PORTA_SINGLE_CTL configuration parameter.                       */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_PORTA_SINGLE_CTL__SHIFT 4
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_PORTA_SINGLE_CTL__WIDTH 1
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_PORTA_SINGLE_CTL__MASK 0x00000010
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG1.NUM_PORTS              */
/* Source filename: spio_gpio.csr, line: 491                               */
/* Description:                                                            */
/*    The value of this register is derived from the                       */
/*    GPIO_NUM_PORT configuration parameter.                               */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_NUM_PORTS__SHIFT 2
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_NUM_PORTS__WIDTH 2
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_NUM_PORTS__MASK 0x0000000c
/* Field member: spio_DW_apb_gpio::GPIO_CONFIG_REG1.APB_DATA_WIDTH         */
/* Source filename: spio_gpio.csr, line: 466                               */
/* Description:                                                            */
/*    The value of this register is derived from the                       */
/*    GPIO_APB_DATA_WIDTH configuration parameter.                         */
/*     Note:                                                               */
/*    0x3 = Reserved                                                       */
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_APB_DATA_WIDTH__SHIFT 0
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_APB_DATA_WIDTH__WIDTH 2
#define SPIO_DW_APB_GPIO_GPIO_CONFIG_REG1_APB_DATA_WIDTH__MASK 0x00000003

#endif
