#ifndef __ET_IOCTL_H
#define __ET_IOCTL_H

#include <linux/ioctl.h>
#include <linux/types.h>

#define ESPERANTO_PCIE_IOCTL_MAGIC 0xE7

#define ETSOC1_IOCTL_GET_DRAM_BASE	\
	_IOR(ESPERANTO_PCIE_IOCTL_MAGIC, 1, uint64_t)
#define ETSOC1_IOCTL_GET_DRAM_SIZE	\
	_IOR(ESPERANTO_PCIE_IOCTL_MAGIC, 2, uint64_t)
#define ETSOC1_IOCTL_SET_BULK_CFG	\
	_IOW(ESPERANTO_PCIE_IOCTL_MAGIC, 3, uint32_t)

#define ETSOC1_IOCTL_GET_MBOX_MAX_MSG	\
	_IOR(ESPERANTO_PCIE_IOCTL_MAGIC, 4, uint64_t)
#define ETSOC1_IOCTL_RESET_MBOX		\
	_IO(ESPERANTO_PCIE_IOCTL_MAGIC, 5)
#define ETSOC1_IOCTL_GET_MBOX_READY	\
	_IOR(ESPERANTO_PCIE_IOCTL_MAGIC, 6, uint64_t)
#define ETSOC1_IOCTL_PUSH_MBOX(N)	\
	_IOC(_IOC_WRITE, ESPERANTO_PCIE_IOCTL_MAGIC, 7, (N))
#define ETSOC1_IOCTL_POP_MBOX(N)	\
	_IOC(_IOC_READ, ESPERANTO_PCIE_IOCTL_MAGIC, 8, (N))
#define ETSOC1_IOCTL_GET_FW_UPDATE_REG_BASE	\
	_IOR(ESPERANTO_PCIE_IOCTL_MAGIC, 9, uint64_t)
#define ETSOC1_IOCTL_GET_FW_UPDATE_REG_SIZE	\
	_IOR(ESPERANTO_PCIE_IOCTL_MAGIC, 10, uint32_t)


#define BULK_CFG_AUT0 0
#define BULK_CFG_MMIO 1
#define BULK_CFG_DMA 2

#endif
