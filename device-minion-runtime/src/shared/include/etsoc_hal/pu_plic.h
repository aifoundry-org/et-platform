/*                                                                         */
/* Generated by Semifore, Inc. csrCompile                                  */
/*    Version: 2018.12 Build: release Linux 64-bit                         */
/*    C Header output                                                      */
/*                                                                         */
/* Command Line:                                                           */
/*    /home/cad/tools/semifore/csrCompile/LATEST/bin/x64_re6/csrCompile -v */
/*    -c                                                                   */
/*    /data/ssmith/work/repos/soc/dv/common/scripts/semifore_css/bitfield_enum_doc.css */
/*    -t h pu_plic.csr -o gen_sw/pu_plic                                   */
/*                                                                         */
/* Input files:                                                            */
/*    pu_plic.csr                                                          */
/*                                                                         */
/* Configuration files:                                                    */
/*    /data/ssmith/work/repos/soc/dv/common/scripts/semifore_css/bitfield_enum_doc.css */
/*                                                                         */
/* Generated on: Fri May  3 09:14:58 2019                                  */
/*           by: ssmith                                                    */
/*                                                                         */

#ifndef _PU_PLIC_H_
#define _PU_PLIC_H_

#include <stdint.h>

/* ####################################################################### */
/*        TYPE DEFINITIONS                                                 */
/* ####################################################################### */

/* Typedef for Register: pu_plic::priority_0                               */
/* Source filename: pu_plic.csr, line: 11                                  */
/* Title: Priority Source 0                                                */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 0 (no interrupt)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 14                         */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt. (hardwired to 0)
         */
         uint32_t priority : 3; /* bits 2 to 0; R; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_0_t;

/* Typedef for Register: pu_plic::priority_1                               */
/* Source filename: pu_plic.csr, line: 24                                  */
/* Title: Priority Source 1                                                */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 1
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 27                         */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_1_t;

/* Typedef for Register: pu_plic::priority_2                               */
/* Source filename: pu_plic.csr, line: 36                                  */
/* Title: Priority Source 2                                                */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 2
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 39                         */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_2_t;

/* Typedef for Register: pu_plic::priority_3                               */
/* Source filename: pu_plic.csr, line: 48                                  */
/* Title: Priority Source 3                                                */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 3
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 51                         */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_3_t;

/* Typedef for Register: pu_plic::priority_4                               */
/* Source filename: pu_plic.csr, line: 60                                  */
/* Title: Priority Source 4                                                */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 4
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 63                         */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_4_t;

/* Typedef for Register: pu_plic::priority_5                               */
/* Source filename: pu_plic.csr, line: 72                                  */
/* Title: Priority Source 5                                                */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 5
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 75                         */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_5_t;

/* Typedef for Register: pu_plic::priority_6                               */
/* Source filename: pu_plic.csr, line: 84                                  */
/* Title: Priority Source 6                                                */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 6
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 87                         */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_6_t;

/* Typedef for Register: pu_plic::priority_7                               */
/* Source filename: pu_plic.csr, line: 96                                  */
/* Title: Priority Source 7                                                */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 7
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 99                         */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_7_t;

/* Typedef for Register: pu_plic::priority_8                               */
/* Source filename: pu_plic.csr, line: 108                                 */
/* Title: Priority Source 8                                                */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 8
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 111                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_8_t;

/* Typedef for Register: pu_plic::priority_9                               */
/* Source filename: pu_plic.csr, line: 120                                 */
/* Title: Priority Source 9                                                */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 9
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 123                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_9_t;

/* Typedef for Register: pu_plic::priority_10                              */
/* Source filename: pu_plic.csr, line: 132                                 */
/* Title: Priority Source 10                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 10
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 135                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_10_t;

/* Typedef for Register: pu_plic::priority_11                              */
/* Source filename: pu_plic.csr, line: 144                                 */
/* Title: Priority Source 11                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 11
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 147                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_11_t;

/* Typedef for Register: pu_plic::priority_12                              */
/* Source filename: pu_plic.csr, line: 156                                 */
/* Title: Priority Source 12                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 12
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 159                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_12_t;

/* Typedef for Register: pu_plic::priority_13                              */
/* Source filename: pu_plic.csr, line: 168                                 */
/* Title: Priority Source 13                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 13
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 171                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_13_t;

/* Typedef for Register: pu_plic::priority_14                              */
/* Source filename: pu_plic.csr, line: 180                                 */
/* Title: Priority Source 14                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 14
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 183                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_14_t;

/* Typedef for Register: pu_plic::priority_15                              */
/* Source filename: pu_plic.csr, line: 192                                 */
/* Title: Priority Source 15                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 15
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 195                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_15_t;

/* Typedef for Register: pu_plic::priority_16                              */
/* Source filename: pu_plic.csr, line: 204                                 */
/* Title: Priority Source 16                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 16
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 207                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_16_t;

/* Typedef for Register: pu_plic::priority_17                              */
/* Source filename: pu_plic.csr, line: 216                                 */
/* Title: Priority Source 17                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 17
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 219                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_17_t;

/* Typedef for Register: pu_plic::priority_18                              */
/* Source filename: pu_plic.csr, line: 228                                 */
/* Title: Priority Source 18                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 18
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 231                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_18_t;

/* Typedef for Register: pu_plic::priority_19                              */
/* Source filename: pu_plic.csr, line: 240                                 */
/* Title: Priority Source 19                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 19
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 243                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_19_t;

/* Typedef for Register: pu_plic::priority_20                              */
/* Source filename: pu_plic.csr, line: 252                                 */
/* Title: Priority Source 20                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 20
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 255                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_20_t;

/* Typedef for Register: pu_plic::priority_21                              */
/* Source filename: pu_plic.csr, line: 264                                 */
/* Title: Priority Source 21                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 21
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 267                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_21_t;

/* Typedef for Register: pu_plic::priority_22                              */
/* Source filename: pu_plic.csr, line: 276                                 */
/* Title: Priority Source 22                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 22
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 279                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_22_t;

/* Typedef for Register: pu_plic::priority_23                              */
/* Source filename: pu_plic.csr, line: 288                                 */
/* Title: Priority Source 23                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 23
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 291                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_23_t;

/* Typedef for Register: pu_plic::priority_24                              */
/* Source filename: pu_plic.csr, line: 300                                 */
/* Title: Priority Source 24                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 24
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 303                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_24_t;

/* Typedef for Register: pu_plic::priority_25                              */
/* Source filename: pu_plic.csr, line: 312                                 */
/* Title: Priority Source 25                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 25
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 315                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_25_t;

/* Typedef for Register: pu_plic::priority_26                              */
/* Source filename: pu_plic.csr, line: 324                                 */
/* Title: Priority Source 26                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 26
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 327                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_26_t;

/* Typedef for Register: pu_plic::priority_27                              */
/* Source filename: pu_plic.csr, line: 336                                 */
/* Title: Priority Source 27                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 27
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 339                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_27_t;

/* Typedef for Register: pu_plic::priority_28                              */
/* Source filename: pu_plic.csr, line: 348                                 */
/* Title: Priority Source 28                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 28
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 351                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_28_t;

/* Typedef for Register: pu_plic::priority_29                              */
/* Source filename: pu_plic.csr, line: 360                                 */
/* Title: Priority Source 29                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 29
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 363                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_29_t;

/* Typedef for Register: pu_plic::priority_30                              */
/* Source filename: pu_plic.csr, line: 372                                 */
/* Title: Priority Source 30                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 30
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 375                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_30_t;

/* Typedef for Register: pu_plic::priority_31                              */
/* Source filename: pu_plic.csr, line: 384                                 */
/* Title: Priority Source 31                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 31
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 387                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_31_t;

/* Typedef for Register: pu_plic::priority_32                              */
/* Source filename: pu_plic.csr, line: 396                                 */
/* Title: Priority Source 32                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 32
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 399                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_32_t;

/* Typedef for Register: pu_plic::priority_33                              */
/* Source filename: pu_plic.csr, line: 408                                 */
/* Title: Priority Source 33                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 33
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 411                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_33_t;

/* Typedef for Register: pu_plic::priority_34                              */
/* Source filename: pu_plic.csr, line: 420                                 */
/* Title: Priority Source 34                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 34
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 423                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_34_t;

/* Typedef for Register: pu_plic::priority_35                              */
/* Source filename: pu_plic.csr, line: 432                                 */
/* Title: Priority Source 35                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 35
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 435                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_35_t;

/* Typedef for Register: pu_plic::priority_36                              */
/* Source filename: pu_plic.csr, line: 444                                 */
/* Title: Priority Source 36                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 36
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 447                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_36_t;

/* Typedef for Register: pu_plic::priority_37                              */
/* Source filename: pu_plic.csr, line: 456                                 */
/* Title: Priority Source 37                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 37
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 459                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_37_t;

/* Typedef for Register: pu_plic::priority_38                              */
/* Source filename: pu_plic.csr, line: 468                                 */
/* Title: Priority Source 38                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 38
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 471                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_38_t;

/* Typedef for Register: pu_plic::priority_39                              */
/* Source filename: pu_plic.csr, line: 480                                 */
/* Title: Priority Source 39                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 39
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 483                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_39_t;

/* Typedef for Register: pu_plic::priority_40                              */
/* Source filename: pu_plic.csr, line: 492                                 */
/* Title: Priority Source 40                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 40
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 495                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_40_t;

/* Typedef for Register: pu_plic::priority_41                              */
/* Source filename: pu_plic.csr, line: 504                                 */
/* Title: Priority Source 41                                               */
/* Description:                                                            */
/**
 *    Priority level for interrupt source 41
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 507                        */
         /* Title: Priority                                                */
         /* Description:                                                   */
         /**
          *    Specifies priority level of interrupt source.  Priority level 
          *    0 effectively disables interrupt.
         */
         uint32_t priority : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_priority_41_t;

/* Typedef for Register: pu_plic::pending_r0                               */
/* Source filename: pu_plic.csr, line: 516                                 */
/* Title: Pending R0                                                       */
/* Description:                                                            */
/**
 *    Pending status for interrupt sources 0-31
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 519                        */
         /* Title: Status 0                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 0 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status0 : 1; /* bit 0; R; 0 */

         /* Source filename: pu_plic.csr, line: 528                        */
         /* Title: Status 1                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 1 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status1 : 1; /* bit 1; R; 0 */

         /* Source filename: pu_plic.csr, line: 537                        */
         /* Title: Status 2                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 2 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status2 : 1; /* bit 2; R; 0 */

         /* Source filename: pu_plic.csr, line: 546                        */
         /* Title: Status 3                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 3 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status3 : 1; /* bit 3; R; 0 */

         /* Source filename: pu_plic.csr, line: 555                        */
         /* Title: Status 4                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 4 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status4 : 1; /* bit 4; R; 0 */

         /* Source filename: pu_plic.csr, line: 564                        */
         /* Title: Status 5                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 5 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status5 : 1; /* bit 5; R; 0 */

         /* Source filename: pu_plic.csr, line: 573                        */
         /* Title: Status 6                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 6 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status6 : 1; /* bit 6; R; 0 */

         /* Source filename: pu_plic.csr, line: 582                        */
         /* Title: Status 7                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 7 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status7 : 1; /* bit 7; R; 0 */

         /* Source filename: pu_plic.csr, line: 591                        */
         /* Title: Status 8                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 8 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status8 : 1; /* bit 8; R; 0 */

         /* Source filename: pu_plic.csr, line: 600                        */
         /* Title: Status 9                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 9 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status9 : 1; /* bit 9; R; 0 */

         /* Source filename: pu_plic.csr, line: 609                        */
         /* Title: Status 10                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 10 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status10 : 1; /* bit 10; R; 0 */

         /* Source filename: pu_plic.csr, line: 618                        */
         /* Title: Status 11                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 11 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status11 : 1; /* bit 11; R; 0 */

         /* Source filename: pu_plic.csr, line: 627                        */
         /* Title: Status 12                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 12 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status12 : 1; /* bit 12; R; 0 */

         /* Source filename: pu_plic.csr, line: 636                        */
         /* Title: Status 13                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 13 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status13 : 1; /* bit 13; R; 0 */

         /* Source filename: pu_plic.csr, line: 645                        */
         /* Title: Status 14                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 14 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status14 : 1; /* bit 14; R; 0 */

         /* Source filename: pu_plic.csr, line: 654                        */
         /* Title: Status 15                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 15 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status15 : 1; /* bit 15; R; 0 */

         /* Source filename: pu_plic.csr, line: 663                        */
         /* Title: Status 16                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 16 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status16 : 1; /* bit 16; R; 0 */

         /* Source filename: pu_plic.csr, line: 672                        */
         /* Title: Status 17                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 17 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status17 : 1; /* bit 17; R; 0 */

         /* Source filename: pu_plic.csr, line: 681                        */
         /* Title: Status 18                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 18 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status18 : 1; /* bit 18; R; 0 */

         /* Source filename: pu_plic.csr, line: 690                        */
         /* Title: Status 19                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 19 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status19 : 1; /* bit 19; R; 0 */

         /* Source filename: pu_plic.csr, line: 699                        */
         /* Title: Status 20                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 20 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status20 : 1; /* bit 20; R; 0 */

         /* Source filename: pu_plic.csr, line: 708                        */
         /* Title: Status 21                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 21 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status21 : 1; /* bit 21; R; 0 */

         /* Source filename: pu_plic.csr, line: 717                        */
         /* Title: Status 22                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 22 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status22 : 1; /* bit 22; R; 0 */

         /* Source filename: pu_plic.csr, line: 726                        */
         /* Title: Status 23                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 23 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status23 : 1; /* bit 23; R; 0 */

         /* Source filename: pu_plic.csr, line: 735                        */
         /* Title: Status 24                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 24 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status24 : 1; /* bit 24; R; 0 */

         /* Source filename: pu_plic.csr, line: 744                        */
         /* Title: Status 25                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 25 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status25 : 1; /* bit 25; R; 0 */

         /* Source filename: pu_plic.csr, line: 753                        */
         /* Title: Status 26                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 26 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status26 : 1; /* bit 26; R; 0 */

         /* Source filename: pu_plic.csr, line: 762                        */
         /* Title: Status 27                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 27 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status27 : 1; /* bit 27; R; 0 */

         /* Source filename: pu_plic.csr, line: 771                        */
         /* Title: Status 28                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 28 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status28 : 1; /* bit 28; R; 0 */

         /* Source filename: pu_plic.csr, line: 780                        */
         /* Title: Status 29                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 29 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status29 : 1; /* bit 29; R; 0 */

         /* Source filename: pu_plic.csr, line: 789                        */
         /* Title: Status 30                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 30 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status30 : 1; /* bit 30; R; 0 */

         /* Source filename: pu_plic.csr, line: 798                        */
         /* Title: Status 31                                               */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 31 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status31 : 1; /* bit 31; R; 0 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_pending_r0_t;

/* Typedef for Register: pu_plic::pending_r1                               */
/* Source filename: pu_plic.csr, line: 809                                 */
/* Title: Pending R1                                                       */
/* Description:                                                            */
/**
 *    Pending status for interrupt sources 32-41
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 812                        */
         /* Title: Status 0                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 32 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status0 : 1; /* bit 0; R; 0 */

         /* Source filename: pu_plic.csr, line: 821                        */
         /* Title: Status 1                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 33 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status1 : 1; /* bit 1; R; 0 */

         /* Source filename: pu_plic.csr, line: 830                        */
         /* Title: Status 2                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 34 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status2 : 1; /* bit 2; R; 0 */

         /* Source filename: pu_plic.csr, line: 839                        */
         /* Title: Status 3                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 35 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status3 : 1; /* bit 3; R; 0 */

         /* Source filename: pu_plic.csr, line: 848                        */
         /* Title: Status 4                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 36 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status4 : 1; /* bit 4; R; 0 */

         /* Source filename: pu_plic.csr, line: 857                        */
         /* Title: Status 5                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 37 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status5 : 1; /* bit 5; R; 0 */

         /* Source filename: pu_plic.csr, line: 866                        */
         /* Title: Status 6                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 38 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status6 : 1; /* bit 6; R; 0 */

         /* Source filename: pu_plic.csr, line: 875                        */
         /* Title: Status 7                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 39 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status7 : 1; /* bit 7; R; 0 */

         /* Source filename: pu_plic.csr, line: 884                        */
         /* Title: Status 8                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 40 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status8 : 1; /* bit 8; R; 0 */

         /* Source filename: pu_plic.csr, line: 893                        */
         /* Title: Status 9                                                */
         /* Description:                                                   */
         /**
          *    Pending status for interrupt source 41 (0: Not pending, 1: 
          *    Pending)
         */
         uint32_t status9 : 1; /* bit 9; R; 0 */
         uint32_t : 22; /* bits 31 to 10 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_pending_r1_t;

/* Typedef for Register: pu_plic::enable_t3_r0                             */
/* Source filename: pu_plic.csr, line: 1816                                */
/* Title: Enable Target3 R0                                                */
/* Description:                                                            */
/**
 *    Interrupt target 3 (Maxion core 0 supervisor) enables for interrupt 
 *    sources 0-31
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 1819                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 0 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1826                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 1 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1833                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 2 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1840                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 3 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1847                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 4 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1854                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 5 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1861                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 6 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1868                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 7 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1875                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 8 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1882                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 9 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1889                       */
         /* Title: Enable 10                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 10 (0: Disabled, 1: Enabled)
         */
         uint32_t enable10 : 1; /* bit 10; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1896                       */
         /* Title: Enable 11                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 11 (0: Disabled, 1: Enabled)
         */
         uint32_t enable11 : 1; /* bit 11; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1903                       */
         /* Title: Enable 12                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 12 (0: Disabled, 1: Enabled)
         */
         uint32_t enable12 : 1; /* bit 12; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1910                       */
         /* Title: Enable 13                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 13 (0: Disabled, 1: Enabled)
         */
         uint32_t enable13 : 1; /* bit 13; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1917                       */
         /* Title: Enable 14                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 14 (0: Disabled, 1: Enabled)
         */
         uint32_t enable14 : 1; /* bit 14; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1924                       */
         /* Title: Enable 15                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 15 (0: Disabled, 1: Enabled)
         */
         uint32_t enable15 : 1; /* bit 15; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1931                       */
         /* Title: Enable 16                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 16 (0: Disabled, 1: Enabled)
         */
         uint32_t enable16 : 1; /* bit 16; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1938                       */
         /* Title: Enable 17                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 17 (0: Disabled, 1: Enabled)
         */
         uint32_t enable17 : 1; /* bit 17; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1945                       */
         /* Title: Enable 18                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 18 (0: Disabled, 1: Enabled)
         */
         uint32_t enable18 : 1; /* bit 18; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1952                       */
         /* Title: Enable 19                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 19 (0: Disabled, 1: Enabled)
         */
         uint32_t enable19 : 1; /* bit 19; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1959                       */
         /* Title: Enable 20                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 20 (0: Disabled, 1: Enabled)
         */
         uint32_t enable20 : 1; /* bit 20; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1966                       */
         /* Title: Enable 21                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 21 (0: Disabled, 1: Enabled)
         */
         uint32_t enable21 : 1; /* bit 21; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1973                       */
         /* Title: Enable 22                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 22 (0: Disabled, 1: Enabled)
         */
         uint32_t enable22 : 1; /* bit 22; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1980                       */
         /* Title: Enable 23                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 23 (0: Disabled, 1: Enabled)
         */
         uint32_t enable23 : 1; /* bit 23; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1987                       */
         /* Title: Enable 24                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 24 (0: Disabled, 1: Enabled)
         */
         uint32_t enable24 : 1; /* bit 24; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1994                       */
         /* Title: Enable 25                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 25 (0: Disabled, 1: Enabled)
         */
         uint32_t enable25 : 1; /* bit 25; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2001                       */
         /* Title: Enable 26                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 26 (0: Disabled, 1: Enabled)
         */
         uint32_t enable26 : 1; /* bit 26; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2008                       */
         /* Title: Enable 27                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 27 (0: Disabled, 1: Enabled)
         */
         uint32_t enable27 : 1; /* bit 27; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2015                       */
         /* Title: Enable 28                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 28 (0: Disabled, 1: Enabled)
         */
         uint32_t enable28 : 1; /* bit 28; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2022                       */
         /* Title: Enable 29                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 29 (0: Disabled, 1: Enabled)
         */
         uint32_t enable29 : 1; /* bit 29; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2029                       */
         /* Title: Enable 30                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 30 (0: Disabled, 1: Enabled)
         */
         uint32_t enable30 : 1; /* bit 30; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2036                       */
         /* Title: Enable 31                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 31 (0: Disabled, 1: Enabled)
         */
         uint32_t enable31 : 1; /* bit 31; R/W; 0 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t3_r0_t;

/* Typedef for Register: pu_plic::enable_t3_r1                             */
/* Source filename: pu_plic.csr, line: 2045                                */
/* Title: Enable Target3 R1                                                */
/* Description:                                                            */
/**
 *    Interrupt target 3 (Maxion core 0 supervisor) enables for interrupt 
 *    sources 32-41
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 2048                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 32 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2055                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 33 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2062                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 34 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2069                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 35 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2076                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 36 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2083                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 37 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2090                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 38 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2097                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 39 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2104                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 40 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2111                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 41 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */
         uint32_t : 22; /* bits 31 to 10 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t3_r1_t;

/* Typedef for Register: pu_plic::enable_t2_r0                             */
/* Source filename: pu_plic.csr, line: 1512                                */
/* Title: Enable Target2 R0                                                */
/* Description:                                                            */
/**
 *    Interrupt target 2 (Maxion core 0 machine mode) enables for interrupt 
 *    sources 0-31
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 1515                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 0 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1522                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 1 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1529                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 2 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1536                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 3 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1543                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 4 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1550                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 5 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1557                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 6 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1564                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 7 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1571                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 8 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1578                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 9 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1585                       */
         /* Title: Enable 10                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 10 (0: Disabled, 1: Enabled)
         */
         uint32_t enable10 : 1; /* bit 10; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1592                       */
         /* Title: Enable 11                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 11 (0: Disabled, 1: Enabled)
         */
         uint32_t enable11 : 1; /* bit 11; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1599                       */
         /* Title: Enable 12                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 12 (0: Disabled, 1: Enabled)
         */
         uint32_t enable12 : 1; /* bit 12; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1606                       */
         /* Title: Enable 13                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 13 (0: Disabled, 1: Enabled)
         */
         uint32_t enable13 : 1; /* bit 13; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1613                       */
         /* Title: Enable 14                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 14 (0: Disabled, 1: Enabled)
         */
         uint32_t enable14 : 1; /* bit 14; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1620                       */
         /* Title: Enable 15                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 15 (0: Disabled, 1: Enabled)
         */
         uint32_t enable15 : 1; /* bit 15; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1627                       */
         /* Title: Enable 16                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 16 (0: Disabled, 1: Enabled)
         */
         uint32_t enable16 : 1; /* bit 16; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1634                       */
         /* Title: Enable 17                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 17 (0: Disabled, 1: Enabled)
         */
         uint32_t enable17 : 1; /* bit 17; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1641                       */
         /* Title: Enable 18                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 18 (0: Disabled, 1: Enabled)
         */
         uint32_t enable18 : 1; /* bit 18; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1648                       */
         /* Title: Enable 19                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 19 (0: Disabled, 1: Enabled)
         */
         uint32_t enable19 : 1; /* bit 19; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1655                       */
         /* Title: Enable 20                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 20 (0: Disabled, 1: Enabled)
         */
         uint32_t enable20 : 1; /* bit 20; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1662                       */
         /* Title: Enable 21                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 21 (0: Disabled, 1: Enabled)
         */
         uint32_t enable21 : 1; /* bit 21; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1669                       */
         /* Title: Enable 22                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 22 (0: Disabled, 1: Enabled)
         */
         uint32_t enable22 : 1; /* bit 22; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1676                       */
         /* Title: Enable 23                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 23 (0: Disabled, 1: Enabled)
         */
         uint32_t enable23 : 1; /* bit 23; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1683                       */
         /* Title: Enable 24                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 24 (0: Disabled, 1: Enabled)
         */
         uint32_t enable24 : 1; /* bit 24; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1690                       */
         /* Title: Enable 25                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 25 (0: Disabled, 1: Enabled)
         */
         uint32_t enable25 : 1; /* bit 25; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1697                       */
         /* Title: Enable 26                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 26 (0: Disabled, 1: Enabled)
         */
         uint32_t enable26 : 1; /* bit 26; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1704                       */
         /* Title: Enable 27                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 27 (0: Disabled, 1: Enabled)
         */
         uint32_t enable27 : 1; /* bit 27; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1711                       */
         /* Title: Enable 28                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 28 (0: Disabled, 1: Enabled)
         */
         uint32_t enable28 : 1; /* bit 28; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1718                       */
         /* Title: Enable 29                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 29 (0: Disabled, 1: Enabled)
         */
         uint32_t enable29 : 1; /* bit 29; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1725                       */
         /* Title: Enable 30                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 30 (0: Disabled, 1: Enabled)
         */
         uint32_t enable30 : 1; /* bit 30; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1732                       */
         /* Title: Enable 31                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 31 (0: Disabled, 1: Enabled)
         */
         uint32_t enable31 : 1; /* bit 31; R/W; 0 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t2_r0_t;

/* Typedef for Register: pu_plic::enable_t2_r1                             */
/* Source filename: pu_plic.csr, line: 1741                                */
/* Title: Enable Target2 R1                                                */
/* Description:                                                            */
/**
 *    Interrupt target 2 (Maxion core 0 machine mode) enables for interrupt 
 *    sources 32-41
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 1744                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 32 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1751                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 33 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1758                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 34 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1765                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 35 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1772                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 36 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1779                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 37 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1786                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 38 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1793                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 39 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1800                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 40 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1807                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 41 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */
         uint32_t : 22; /* bits 31 to 10 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t2_r1_t;

/* Typedef for Register: pu_plic::enable_t5_r0                             */
/* Source filename: pu_plic.csr, line: 2424                                */
/* Title: Enable Target5 R0                                                */
/* Description:                                                            */
/**
 *    Interrupt target 5 (Maxion core 1 supervisor) enables for interrupt 
 *    sources 0-31
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 2427                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 0 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2434                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 1 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2441                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 2 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2448                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 3 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2455                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 4 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2462                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 5 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2469                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 6 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2476                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 7 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2483                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 8 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2490                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 9 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2497                       */
         /* Title: Enable 10                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 10 (0: Disabled, 1: Enabled)
         */
         uint32_t enable10 : 1; /* bit 10; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2504                       */
         /* Title: Enable 11                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 11 (0: Disabled, 1: Enabled)
         */
         uint32_t enable11 : 1; /* bit 11; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2511                       */
         /* Title: Enable 12                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 12 (0: Disabled, 1: Enabled)
         */
         uint32_t enable12 : 1; /* bit 12; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2518                       */
         /* Title: Enable 13                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 13 (0: Disabled, 1: Enabled)
         */
         uint32_t enable13 : 1; /* bit 13; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2525                       */
         /* Title: Enable 14                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 14 (0: Disabled, 1: Enabled)
         */
         uint32_t enable14 : 1; /* bit 14; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2532                       */
         /* Title: Enable 15                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 15 (0: Disabled, 1: Enabled)
         */
         uint32_t enable15 : 1; /* bit 15; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2539                       */
         /* Title: Enable 16                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 16 (0: Disabled, 1: Enabled)
         */
         uint32_t enable16 : 1; /* bit 16; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2546                       */
         /* Title: Enable 17                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 17 (0: Disabled, 1: Enabled)
         */
         uint32_t enable17 : 1; /* bit 17; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2553                       */
         /* Title: Enable 18                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 18 (0: Disabled, 1: Enabled)
         */
         uint32_t enable18 : 1; /* bit 18; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2560                       */
         /* Title: Enable 19                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 19 (0: Disabled, 1: Enabled)
         */
         uint32_t enable19 : 1; /* bit 19; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2567                       */
         /* Title: Enable 20                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 20 (0: Disabled, 1: Enabled)
         */
         uint32_t enable20 : 1; /* bit 20; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2574                       */
         /* Title: Enable 21                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 21 (0: Disabled, 1: Enabled)
         */
         uint32_t enable21 : 1; /* bit 21; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2581                       */
         /* Title: Enable 22                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 22 (0: Disabled, 1: Enabled)
         */
         uint32_t enable22 : 1; /* bit 22; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2588                       */
         /* Title: Enable 23                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 23 (0: Disabled, 1: Enabled)
         */
         uint32_t enable23 : 1; /* bit 23; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2595                       */
         /* Title: Enable 24                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 24 (0: Disabled, 1: Enabled)
         */
         uint32_t enable24 : 1; /* bit 24; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2602                       */
         /* Title: Enable 25                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 25 (0: Disabled, 1: Enabled)
         */
         uint32_t enable25 : 1; /* bit 25; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2609                       */
         /* Title: Enable 26                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 26 (0: Disabled, 1: Enabled)
         */
         uint32_t enable26 : 1; /* bit 26; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2616                       */
         /* Title: Enable 27                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 27 (0: Disabled, 1: Enabled)
         */
         uint32_t enable27 : 1; /* bit 27; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2623                       */
         /* Title: Enable 28                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 28 (0: Disabled, 1: Enabled)
         */
         uint32_t enable28 : 1; /* bit 28; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2630                       */
         /* Title: Enable 29                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 29 (0: Disabled, 1: Enabled)
         */
         uint32_t enable29 : 1; /* bit 29; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2637                       */
         /* Title: Enable 30                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 30 (0: Disabled, 1: Enabled)
         */
         uint32_t enable30 : 1; /* bit 30; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2644                       */
         /* Title: Enable 31                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 31 (0: Disabled, 1: Enabled)
         */
         uint32_t enable31 : 1; /* bit 31; R/W; 0 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t5_r0_t;

/* Typedef for Register: pu_plic::enable_t5_r1                             */
/* Source filename: pu_plic.csr, line: 2653                                */
/* Title: Enable Target5 R1                                                */
/* Description:                                                            */
/**
 *    Interrupt target 5 (Maxion core 1 supervisor) enables for interrupt 
 *    sources 32-41
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 2656                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 32 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2663                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 33 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2670                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 34 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2677                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 35 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2684                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 36 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2691                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 37 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2698                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 38 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2705                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 39 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2712                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 40 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2719                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 41 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */
         uint32_t : 22; /* bits 31 to 10 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t5_r1_t;

/* Typedef for Register: pu_plic::enable_t4_r0                             */
/* Source filename: pu_plic.csr, line: 2120                                */
/* Title: Enable Target4 R0                                                */
/* Description:                                                            */
/**
 *    Interrupt target 4 (Maxion core 1 machine mode) enables for interrupt 
 *    sources 0-31
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 2123                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 0 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2130                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 1 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2137                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 2 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2144                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 3 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2151                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 4 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2158                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 5 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2165                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 6 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2172                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 7 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2179                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 8 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2186                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 9 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2193                       */
         /* Title: Enable 10                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 10 (0: Disabled, 1: Enabled)
         */
         uint32_t enable10 : 1; /* bit 10; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2200                       */
         /* Title: Enable 11                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 11 (0: Disabled, 1: Enabled)
         */
         uint32_t enable11 : 1; /* bit 11; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2207                       */
         /* Title: Enable 12                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 12 (0: Disabled, 1: Enabled)
         */
         uint32_t enable12 : 1; /* bit 12; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2214                       */
         /* Title: Enable 13                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 13 (0: Disabled, 1: Enabled)
         */
         uint32_t enable13 : 1; /* bit 13; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2221                       */
         /* Title: Enable 14                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 14 (0: Disabled, 1: Enabled)
         */
         uint32_t enable14 : 1; /* bit 14; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2228                       */
         /* Title: Enable 15                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 15 (0: Disabled, 1: Enabled)
         */
         uint32_t enable15 : 1; /* bit 15; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2235                       */
         /* Title: Enable 16                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 16 (0: Disabled, 1: Enabled)
         */
         uint32_t enable16 : 1; /* bit 16; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2242                       */
         /* Title: Enable 17                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 17 (0: Disabled, 1: Enabled)
         */
         uint32_t enable17 : 1; /* bit 17; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2249                       */
         /* Title: Enable 18                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 18 (0: Disabled, 1: Enabled)
         */
         uint32_t enable18 : 1; /* bit 18; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2256                       */
         /* Title: Enable 19                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 19 (0: Disabled, 1: Enabled)
         */
         uint32_t enable19 : 1; /* bit 19; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2263                       */
         /* Title: Enable 20                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 20 (0: Disabled, 1: Enabled)
         */
         uint32_t enable20 : 1; /* bit 20; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2270                       */
         /* Title: Enable 21                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 21 (0: Disabled, 1: Enabled)
         */
         uint32_t enable21 : 1; /* bit 21; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2277                       */
         /* Title: Enable 22                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 22 (0: Disabled, 1: Enabled)
         */
         uint32_t enable22 : 1; /* bit 22; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2284                       */
         /* Title: Enable 23                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 23 (0: Disabled, 1: Enabled)
         */
         uint32_t enable23 : 1; /* bit 23; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2291                       */
         /* Title: Enable 24                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 24 (0: Disabled, 1: Enabled)
         */
         uint32_t enable24 : 1; /* bit 24; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2298                       */
         /* Title: Enable 25                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 25 (0: Disabled, 1: Enabled)
         */
         uint32_t enable25 : 1; /* bit 25; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2305                       */
         /* Title: Enable 26                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 26 (0: Disabled, 1: Enabled)
         */
         uint32_t enable26 : 1; /* bit 26; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2312                       */
         /* Title: Enable 27                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 27 (0: Disabled, 1: Enabled)
         */
         uint32_t enable27 : 1; /* bit 27; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2319                       */
         /* Title: Enable 28                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 28 (0: Disabled, 1: Enabled)
         */
         uint32_t enable28 : 1; /* bit 28; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2326                       */
         /* Title: Enable 29                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 29 (0: Disabled, 1: Enabled)
         */
         uint32_t enable29 : 1; /* bit 29; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2333                       */
         /* Title: Enable 30                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 30 (0: Disabled, 1: Enabled)
         */
         uint32_t enable30 : 1; /* bit 30; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2340                       */
         /* Title: Enable 31                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 31 (0: Disabled, 1: Enabled)
         */
         uint32_t enable31 : 1; /* bit 31; R/W; 0 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t4_r0_t;

/* Typedef for Register: pu_plic::enable_t4_r1                             */
/* Source filename: pu_plic.csr, line: 2349                                */
/* Title: Enable Target4 R1                                                */
/* Description:                                                            */
/**
 *    Interrupt target 4 (Maxion core 1 machine mode) enables for interrupt 
 *    sources 32-41
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 2352                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 32 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2359                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 33 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2366                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 34 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2373                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 35 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2380                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 36 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2387                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 37 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2394                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 38 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2401                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 39 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2408                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 40 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2415                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 41 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */
         uint32_t : 22; /* bits 31 to 10 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t4_r1_t;

/* Typedef for Register: pu_plic::enable_t7_r0                             */
/* Source filename: pu_plic.csr, line: 3032                                */
/* Title: Enable Target7 R0                                                */
/* Description:                                                            */
/**
 *    Interrupt target 7 (Maxion core 2 supervisor) enables for interrupt 
 *    sources 0-31
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 3035                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 0 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3042                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 1 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3049                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 2 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3056                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 3 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3063                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 4 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3070                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 5 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3077                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 6 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3084                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 7 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3091                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 8 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3098                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 9 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3105                       */
         /* Title: Enable 10                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 10 (0: Disabled, 1: Enabled)
         */
         uint32_t enable10 : 1; /* bit 10; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3112                       */
         /* Title: Enable 11                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 11 (0: Disabled, 1: Enabled)
         */
         uint32_t enable11 : 1; /* bit 11; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3119                       */
         /* Title: Enable 12                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 12 (0: Disabled, 1: Enabled)
         */
         uint32_t enable12 : 1; /* bit 12; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3126                       */
         /* Title: Enable 13                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 13 (0: Disabled, 1: Enabled)
         */
         uint32_t enable13 : 1; /* bit 13; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3133                       */
         /* Title: Enable 14                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 14 (0: Disabled, 1: Enabled)
         */
         uint32_t enable14 : 1; /* bit 14; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3140                       */
         /* Title: Enable 15                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 15 (0: Disabled, 1: Enabled)
         */
         uint32_t enable15 : 1; /* bit 15; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3147                       */
         /* Title: Enable 16                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 16 (0: Disabled, 1: Enabled)
         */
         uint32_t enable16 : 1; /* bit 16; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3154                       */
         /* Title: Enable 17                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 17 (0: Disabled, 1: Enabled)
         */
         uint32_t enable17 : 1; /* bit 17; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3161                       */
         /* Title: Enable 18                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 18 (0: Disabled, 1: Enabled)
         */
         uint32_t enable18 : 1; /* bit 18; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3168                       */
         /* Title: Enable 19                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 19 (0: Disabled, 1: Enabled)
         */
         uint32_t enable19 : 1; /* bit 19; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3175                       */
         /* Title: Enable 20                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 20 (0: Disabled, 1: Enabled)
         */
         uint32_t enable20 : 1; /* bit 20; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3182                       */
         /* Title: Enable 21                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 21 (0: Disabled, 1: Enabled)
         */
         uint32_t enable21 : 1; /* bit 21; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3189                       */
         /* Title: Enable 22                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 22 (0: Disabled, 1: Enabled)
         */
         uint32_t enable22 : 1; /* bit 22; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3196                       */
         /* Title: Enable 23                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 23 (0: Disabled, 1: Enabled)
         */
         uint32_t enable23 : 1; /* bit 23; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3203                       */
         /* Title: Enable 24                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 24 (0: Disabled, 1: Enabled)
         */
         uint32_t enable24 : 1; /* bit 24; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3210                       */
         /* Title: Enable 25                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 25 (0: Disabled, 1: Enabled)
         */
         uint32_t enable25 : 1; /* bit 25; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3217                       */
         /* Title: Enable 26                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 26 (0: Disabled, 1: Enabled)
         */
         uint32_t enable26 : 1; /* bit 26; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3224                       */
         /* Title: Enable 27                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 27 (0: Disabled, 1: Enabled)
         */
         uint32_t enable27 : 1; /* bit 27; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3231                       */
         /* Title: Enable 28                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 28 (0: Disabled, 1: Enabled)
         */
         uint32_t enable28 : 1; /* bit 28; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3238                       */
         /* Title: Enable 29                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 29 (0: Disabled, 1: Enabled)
         */
         uint32_t enable29 : 1; /* bit 29; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3245                       */
         /* Title: Enable 30                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 30 (0: Disabled, 1: Enabled)
         */
         uint32_t enable30 : 1; /* bit 30; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3252                       */
         /* Title: Enable 31                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 31 (0: Disabled, 1: Enabled)
         */
         uint32_t enable31 : 1; /* bit 31; R/W; 0 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t7_r0_t;

/* Typedef for Register: pu_plic::enable_t7_r1                             */
/* Source filename: pu_plic.csr, line: 3261                                */
/* Title: Enable Target7 R1                                                */
/* Description:                                                            */
/**
 *    Interrupt target 7 (Maxion core 2 supervisor) enables for interrupt 
 *    sources 32-41
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 3264                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 32 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3271                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 33 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3278                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 34 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3285                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 35 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3292                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 36 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3299                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 37 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3306                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 38 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3313                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 39 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3320                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 40 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3327                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 41 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */
         uint32_t : 22; /* bits 31 to 10 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t7_r1_t;

/* Typedef for Register: pu_plic::enable_t6_r0                             */
/* Source filename: pu_plic.csr, line: 2728                                */
/* Title: Enable Target6 R0                                                */
/* Description:                                                            */
/**
 *    Interrupt target 6 (Maxion core 2 machine mode) enables for interrupt 
 *    sources 0-31
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 2731                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 0 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2738                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 1 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2745                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 2 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2752                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 3 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2759                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 4 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2766                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 5 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2773                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 6 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2780                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 7 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2787                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 8 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2794                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 9 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2801                       */
         /* Title: Enable 10                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 10 (0: Disabled, 1: Enabled)
         */
         uint32_t enable10 : 1; /* bit 10; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2808                       */
         /* Title: Enable 11                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 11 (0: Disabled, 1: Enabled)
         */
         uint32_t enable11 : 1; /* bit 11; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2815                       */
         /* Title: Enable 12                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 12 (0: Disabled, 1: Enabled)
         */
         uint32_t enable12 : 1; /* bit 12; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2822                       */
         /* Title: Enable 13                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 13 (0: Disabled, 1: Enabled)
         */
         uint32_t enable13 : 1; /* bit 13; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2829                       */
         /* Title: Enable 14                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 14 (0: Disabled, 1: Enabled)
         */
         uint32_t enable14 : 1; /* bit 14; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2836                       */
         /* Title: Enable 15                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 15 (0: Disabled, 1: Enabled)
         */
         uint32_t enable15 : 1; /* bit 15; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2843                       */
         /* Title: Enable 16                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 16 (0: Disabled, 1: Enabled)
         */
         uint32_t enable16 : 1; /* bit 16; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2850                       */
         /* Title: Enable 17                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 17 (0: Disabled, 1: Enabled)
         */
         uint32_t enable17 : 1; /* bit 17; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2857                       */
         /* Title: Enable 18                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 18 (0: Disabled, 1: Enabled)
         */
         uint32_t enable18 : 1; /* bit 18; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2864                       */
         /* Title: Enable 19                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 19 (0: Disabled, 1: Enabled)
         */
         uint32_t enable19 : 1; /* bit 19; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2871                       */
         /* Title: Enable 20                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 20 (0: Disabled, 1: Enabled)
         */
         uint32_t enable20 : 1; /* bit 20; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2878                       */
         /* Title: Enable 21                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 21 (0: Disabled, 1: Enabled)
         */
         uint32_t enable21 : 1; /* bit 21; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2885                       */
         /* Title: Enable 22                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 22 (0: Disabled, 1: Enabled)
         */
         uint32_t enable22 : 1; /* bit 22; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2892                       */
         /* Title: Enable 23                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 23 (0: Disabled, 1: Enabled)
         */
         uint32_t enable23 : 1; /* bit 23; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2899                       */
         /* Title: Enable 24                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 24 (0: Disabled, 1: Enabled)
         */
         uint32_t enable24 : 1; /* bit 24; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2906                       */
         /* Title: Enable 25                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 25 (0: Disabled, 1: Enabled)
         */
         uint32_t enable25 : 1; /* bit 25; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2913                       */
         /* Title: Enable 26                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 26 (0: Disabled, 1: Enabled)
         */
         uint32_t enable26 : 1; /* bit 26; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2920                       */
         /* Title: Enable 27                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 27 (0: Disabled, 1: Enabled)
         */
         uint32_t enable27 : 1; /* bit 27; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2927                       */
         /* Title: Enable 28                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 28 (0: Disabled, 1: Enabled)
         */
         uint32_t enable28 : 1; /* bit 28; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2934                       */
         /* Title: Enable 29                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 29 (0: Disabled, 1: Enabled)
         */
         uint32_t enable29 : 1; /* bit 29; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2941                       */
         /* Title: Enable 30                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 30 (0: Disabled, 1: Enabled)
         */
         uint32_t enable30 : 1; /* bit 30; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2948                       */
         /* Title: Enable 31                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 31 (0: Disabled, 1: Enabled)
         */
         uint32_t enable31 : 1; /* bit 31; R/W; 0 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t6_r0_t;

/* Typedef for Register: pu_plic::enable_t6_r1                             */
/* Source filename: pu_plic.csr, line: 2957                                */
/* Title: Enable Target6 R1                                                */
/* Description:                                                            */
/**
 *    Interrupt target 6 (Maxion core 2 machine mode) enables for interrupt 
 *    sources 32-41
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 2960                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 32 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2967                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 33 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2974                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 34 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2981                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 35 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2988                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 36 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 2995                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 37 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3002                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 38 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3009                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 39 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3016                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 40 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3023                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 41 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */
         uint32_t : 22; /* bits 31 to 10 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t6_r1_t;

/* Typedef for Register: pu_plic::enable_t9_r0                             */
/* Source filename: pu_plic.csr, line: 3640                                */
/* Title: Enable Target9 R0                                                */
/* Description:                                                            */
/**
 *    Interrupt target 9 (Maxion core 3 supervisor) enables for interrupt 
 *    sources 0-31
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 3643                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 0 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3650                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 1 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3657                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 2 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3664                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 3 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3671                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 4 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3678                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 5 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3685                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 6 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3692                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 7 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3699                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 8 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3706                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 9 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3713                       */
         /* Title: Enable 10                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 10 (0: Disabled, 1: Enabled)
         */
         uint32_t enable10 : 1; /* bit 10; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3720                       */
         /* Title: Enable 11                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 11 (0: Disabled, 1: Enabled)
         */
         uint32_t enable11 : 1; /* bit 11; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3727                       */
         /* Title: Enable 12                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 12 (0: Disabled, 1: Enabled)
         */
         uint32_t enable12 : 1; /* bit 12; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3734                       */
         /* Title: Enable 13                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 13 (0: Disabled, 1: Enabled)
         */
         uint32_t enable13 : 1; /* bit 13; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3741                       */
         /* Title: Enable 14                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 14 (0: Disabled, 1: Enabled)
         */
         uint32_t enable14 : 1; /* bit 14; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3748                       */
         /* Title: Enable 15                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 15 (0: Disabled, 1: Enabled)
         */
         uint32_t enable15 : 1; /* bit 15; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3755                       */
         /* Title: Enable 16                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 16 (0: Disabled, 1: Enabled)
         */
         uint32_t enable16 : 1; /* bit 16; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3762                       */
         /* Title: Enable 17                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 17 (0: Disabled, 1: Enabled)
         */
         uint32_t enable17 : 1; /* bit 17; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3769                       */
         /* Title: Enable 18                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 18 (0: Disabled, 1: Enabled)
         */
         uint32_t enable18 : 1; /* bit 18; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3776                       */
         /* Title: Enable 19                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 19 (0: Disabled, 1: Enabled)
         */
         uint32_t enable19 : 1; /* bit 19; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3783                       */
         /* Title: Enable 20                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 20 (0: Disabled, 1: Enabled)
         */
         uint32_t enable20 : 1; /* bit 20; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3790                       */
         /* Title: Enable 21                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 21 (0: Disabled, 1: Enabled)
         */
         uint32_t enable21 : 1; /* bit 21; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3797                       */
         /* Title: Enable 22                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 22 (0: Disabled, 1: Enabled)
         */
         uint32_t enable22 : 1; /* bit 22; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3804                       */
         /* Title: Enable 23                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 23 (0: Disabled, 1: Enabled)
         */
         uint32_t enable23 : 1; /* bit 23; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3811                       */
         /* Title: Enable 24                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 24 (0: Disabled, 1: Enabled)
         */
         uint32_t enable24 : 1; /* bit 24; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3818                       */
         /* Title: Enable 25                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 25 (0: Disabled, 1: Enabled)
         */
         uint32_t enable25 : 1; /* bit 25; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3825                       */
         /* Title: Enable 26                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 26 (0: Disabled, 1: Enabled)
         */
         uint32_t enable26 : 1; /* bit 26; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3832                       */
         /* Title: Enable 27                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 27 (0: Disabled, 1: Enabled)
         */
         uint32_t enable27 : 1; /* bit 27; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3839                       */
         /* Title: Enable 28                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 28 (0: Disabled, 1: Enabled)
         */
         uint32_t enable28 : 1; /* bit 28; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3846                       */
         /* Title: Enable 29                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 29 (0: Disabled, 1: Enabled)
         */
         uint32_t enable29 : 1; /* bit 29; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3853                       */
         /* Title: Enable 30                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 30 (0: Disabled, 1: Enabled)
         */
         uint32_t enable30 : 1; /* bit 30; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3860                       */
         /* Title: Enable 31                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 31 (0: Disabled, 1: Enabled)
         */
         uint32_t enable31 : 1; /* bit 31; R/W; 0 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t9_r0_t;

/* Typedef for Register: pu_plic::enable_t9_r1                             */
/* Source filename: pu_plic.csr, line: 3869                                */
/* Title: Enable Target9 R1                                                */
/* Description:                                                            */
/**
 *    Interrupt target 9 (Maxion core 3 supervisor) enables for interrupt 
 *    sources 32-41
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 3872                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 32 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3879                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 33 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3886                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 34 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3893                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 35 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3900                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 36 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3907                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 37 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3914                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 38 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3921                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 39 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3928                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 40 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3935                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 41 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */
         uint32_t : 22; /* bits 31 to 10 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t9_r1_t;

/* Typedef for Register: pu_plic::enable_t8_r0                             */
/* Source filename: pu_plic.csr, line: 3336                                */
/* Title: Enable Target8 R0                                                */
/* Description:                                                            */
/**
 *    Interrupt target 8 (Maxion core 3 machine mode) enables for interrupt 
 *    sources 0-31
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 3339                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 0 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3346                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 1 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3353                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 2 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3360                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 3 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3367                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 4 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3374                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 5 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3381                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 6 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3388                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 7 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3395                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 8 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3402                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 9 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3409                       */
         /* Title: Enable 10                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 10 (0: Disabled, 1: Enabled)
         */
         uint32_t enable10 : 1; /* bit 10; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3416                       */
         /* Title: Enable 11                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 11 (0: Disabled, 1: Enabled)
         */
         uint32_t enable11 : 1; /* bit 11; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3423                       */
         /* Title: Enable 12                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 12 (0: Disabled, 1: Enabled)
         */
         uint32_t enable12 : 1; /* bit 12; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3430                       */
         /* Title: Enable 13                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 13 (0: Disabled, 1: Enabled)
         */
         uint32_t enable13 : 1; /* bit 13; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3437                       */
         /* Title: Enable 14                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 14 (0: Disabled, 1: Enabled)
         */
         uint32_t enable14 : 1; /* bit 14; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3444                       */
         /* Title: Enable 15                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 15 (0: Disabled, 1: Enabled)
         */
         uint32_t enable15 : 1; /* bit 15; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3451                       */
         /* Title: Enable 16                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 16 (0: Disabled, 1: Enabled)
         */
         uint32_t enable16 : 1; /* bit 16; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3458                       */
         /* Title: Enable 17                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 17 (0: Disabled, 1: Enabled)
         */
         uint32_t enable17 : 1; /* bit 17; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3465                       */
         /* Title: Enable 18                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 18 (0: Disabled, 1: Enabled)
         */
         uint32_t enable18 : 1; /* bit 18; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3472                       */
         /* Title: Enable 19                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 19 (0: Disabled, 1: Enabled)
         */
         uint32_t enable19 : 1; /* bit 19; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3479                       */
         /* Title: Enable 20                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 20 (0: Disabled, 1: Enabled)
         */
         uint32_t enable20 : 1; /* bit 20; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3486                       */
         /* Title: Enable 21                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 21 (0: Disabled, 1: Enabled)
         */
         uint32_t enable21 : 1; /* bit 21; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3493                       */
         /* Title: Enable 22                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 22 (0: Disabled, 1: Enabled)
         */
         uint32_t enable22 : 1; /* bit 22; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3500                       */
         /* Title: Enable 23                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 23 (0: Disabled, 1: Enabled)
         */
         uint32_t enable23 : 1; /* bit 23; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3507                       */
         /* Title: Enable 24                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 24 (0: Disabled, 1: Enabled)
         */
         uint32_t enable24 : 1; /* bit 24; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3514                       */
         /* Title: Enable 25                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 25 (0: Disabled, 1: Enabled)
         */
         uint32_t enable25 : 1; /* bit 25; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3521                       */
         /* Title: Enable 26                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 26 (0: Disabled, 1: Enabled)
         */
         uint32_t enable26 : 1; /* bit 26; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3528                       */
         /* Title: Enable 27                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 27 (0: Disabled, 1: Enabled)
         */
         uint32_t enable27 : 1; /* bit 27; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3535                       */
         /* Title: Enable 28                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 28 (0: Disabled, 1: Enabled)
         */
         uint32_t enable28 : 1; /* bit 28; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3542                       */
         /* Title: Enable 29                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 29 (0: Disabled, 1: Enabled)
         */
         uint32_t enable29 : 1; /* bit 29; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3549                       */
         /* Title: Enable 30                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 30 (0: Disabled, 1: Enabled)
         */
         uint32_t enable30 : 1; /* bit 30; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3556                       */
         /* Title: Enable 31                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 31 (0: Disabled, 1: Enabled)
         */
         uint32_t enable31 : 1; /* bit 31; R/W; 0 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t8_r0_t;

/* Typedef for Register: pu_plic::enable_t8_r1                             */
/* Source filename: pu_plic.csr, line: 3565                                */
/* Title: Enable Target8 R1                                                */
/* Description:                                                            */
/**
 *    Interrupt target 8 (Maxion core 3 machine mode) enables for interrupt 
 *    sources 32-41
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 3568                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 32 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3575                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 33 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3582                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 34 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3589                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 35 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3596                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 36 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3603                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 37 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3610                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 38 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3617                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 39 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3624                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 40 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3631                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 41 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */
         uint32_t : 22; /* bits 31 to 10 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t8_r1_t;

/* Typedef for Register: pu_plic::enable_t11_r0                            */
/* Source filename: pu_plic.csr, line: 4248                                */
/* Title: Enable Target11 R0                                               */
/* Description:                                                            */
/**
 *    Interrupt target 11 (Minion supervisor) enables for interrupt sources 
 *    0-31
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4251                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 0 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4258                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 1 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4265                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 2 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4272                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 3 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4279                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 4 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4286                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 5 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4293                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 6 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4300                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 7 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4307                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 8 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4314                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 9 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4321                       */
         /* Title: Enable 10                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 10 (0: Disabled, 1: Enabled)
         */
         uint32_t enable10 : 1; /* bit 10; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4328                       */
         /* Title: Enable 11                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 11 (0: Disabled, 1: Enabled)
         */
         uint32_t enable11 : 1; /* bit 11; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4335                       */
         /* Title: Enable 12                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 12 (0: Disabled, 1: Enabled)
         */
         uint32_t enable12 : 1; /* bit 12; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4342                       */
         /* Title: Enable 13                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 13 (0: Disabled, 1: Enabled)
         */
         uint32_t enable13 : 1; /* bit 13; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4349                       */
         /* Title: Enable 14                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 14 (0: Disabled, 1: Enabled)
         */
         uint32_t enable14 : 1; /* bit 14; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4356                       */
         /* Title: Enable 15                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 15 (0: Disabled, 1: Enabled)
         */
         uint32_t enable15 : 1; /* bit 15; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4363                       */
         /* Title: Enable 16                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 16 (0: Disabled, 1: Enabled)
         */
         uint32_t enable16 : 1; /* bit 16; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4370                       */
         /* Title: Enable 17                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 17 (0: Disabled, 1: Enabled)
         */
         uint32_t enable17 : 1; /* bit 17; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4377                       */
         /* Title: Enable 18                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 18 (0: Disabled, 1: Enabled)
         */
         uint32_t enable18 : 1; /* bit 18; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4384                       */
         /* Title: Enable 19                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 19 (0: Disabled, 1: Enabled)
         */
         uint32_t enable19 : 1; /* bit 19; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4391                       */
         /* Title: Enable 20                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 20 (0: Disabled, 1: Enabled)
         */
         uint32_t enable20 : 1; /* bit 20; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4398                       */
         /* Title: Enable 21                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 21 (0: Disabled, 1: Enabled)
         */
         uint32_t enable21 : 1; /* bit 21; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4405                       */
         /* Title: Enable 22                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 22 (0: Disabled, 1: Enabled)
         */
         uint32_t enable22 : 1; /* bit 22; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4412                       */
         /* Title: Enable 23                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 23 (0: Disabled, 1: Enabled)
         */
         uint32_t enable23 : 1; /* bit 23; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4419                       */
         /* Title: Enable 24                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 24 (0: Disabled, 1: Enabled)
         */
         uint32_t enable24 : 1; /* bit 24; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4426                       */
         /* Title: Enable 25                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 25 (0: Disabled, 1: Enabled)
         */
         uint32_t enable25 : 1; /* bit 25; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4433                       */
         /* Title: Enable 26                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 26 (0: Disabled, 1: Enabled)
         */
         uint32_t enable26 : 1; /* bit 26; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4440                       */
         /* Title: Enable 27                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 27 (0: Disabled, 1: Enabled)
         */
         uint32_t enable27 : 1; /* bit 27; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4447                       */
         /* Title: Enable 28                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 28 (0: Disabled, 1: Enabled)
         */
         uint32_t enable28 : 1; /* bit 28; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4454                       */
         /* Title: Enable 29                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 29 (0: Disabled, 1: Enabled)
         */
         uint32_t enable29 : 1; /* bit 29; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4461                       */
         /* Title: Enable 30                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 30 (0: Disabled, 1: Enabled)
         */
         uint32_t enable30 : 1; /* bit 30; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4468                       */
         /* Title: Enable 31                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 31 (0: Disabled, 1: Enabled)
         */
         uint32_t enable31 : 1; /* bit 31; R/W; 0 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t11_r0_t;

/* Typedef for Register: pu_plic::enable_t11_r1                            */
/* Source filename: pu_plic.csr, line: 4477                                */
/* Title: Enable Target11 R1                                               */
/* Description:                                                            */
/**
 *    Interrupt target 11 (Minion supervisor) enables for interrupt sources 
 *    32-41
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4480                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 32 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4487                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 33 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4494                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 34 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4501                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 35 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4508                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 36 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4515                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 37 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4522                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 38 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4529                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 39 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4536                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 40 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4543                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 41 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */
         uint32_t : 22; /* bits 31 to 10 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t11_r1_t;

/* Typedef for Register: pu_plic::enable_t10_r0                            */
/* Source filename: pu_plic.csr, line: 3944                                */
/* Title: Enable Target10 R0                                               */
/* Description:                                                            */
/**
 *    Interrupt target 10 (Minion machine mode) enables for interrupt sources
 *     0-31
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 3947                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 0 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3954                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 1 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3961                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 2 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3968                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 3 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3975                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 4 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3982                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 5 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3989                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 6 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 3996                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 7 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4003                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 8 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4010                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 9 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4017                       */
         /* Title: Enable 10                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 10 (0: Disabled, 1: Enabled)
         */
         uint32_t enable10 : 1; /* bit 10; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4024                       */
         /* Title: Enable 11                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 11 (0: Disabled, 1: Enabled)
         */
         uint32_t enable11 : 1; /* bit 11; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4031                       */
         /* Title: Enable 12                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 12 (0: Disabled, 1: Enabled)
         */
         uint32_t enable12 : 1; /* bit 12; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4038                       */
         /* Title: Enable 13                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 13 (0: Disabled, 1: Enabled)
         */
         uint32_t enable13 : 1; /* bit 13; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4045                       */
         /* Title: Enable 14                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 14 (0: Disabled, 1: Enabled)
         */
         uint32_t enable14 : 1; /* bit 14; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4052                       */
         /* Title: Enable 15                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 15 (0: Disabled, 1: Enabled)
         */
         uint32_t enable15 : 1; /* bit 15; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4059                       */
         /* Title: Enable 16                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 16 (0: Disabled, 1: Enabled)
         */
         uint32_t enable16 : 1; /* bit 16; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4066                       */
         /* Title: Enable 17                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 17 (0: Disabled, 1: Enabled)
         */
         uint32_t enable17 : 1; /* bit 17; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4073                       */
         /* Title: Enable 18                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 18 (0: Disabled, 1: Enabled)
         */
         uint32_t enable18 : 1; /* bit 18; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4080                       */
         /* Title: Enable 19                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 19 (0: Disabled, 1: Enabled)
         */
         uint32_t enable19 : 1; /* bit 19; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4087                       */
         /* Title: Enable 20                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 20 (0: Disabled, 1: Enabled)
         */
         uint32_t enable20 : 1; /* bit 20; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4094                       */
         /* Title: Enable 21                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 21 (0: Disabled, 1: Enabled)
         */
         uint32_t enable21 : 1; /* bit 21; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4101                       */
         /* Title: Enable 22                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 22 (0: Disabled, 1: Enabled)
         */
         uint32_t enable22 : 1; /* bit 22; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4108                       */
         /* Title: Enable 23                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 23 (0: Disabled, 1: Enabled)
         */
         uint32_t enable23 : 1; /* bit 23; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4115                       */
         /* Title: Enable 24                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 24 (0: Disabled, 1: Enabled)
         */
         uint32_t enable24 : 1; /* bit 24; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4122                       */
         /* Title: Enable 25                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 25 (0: Disabled, 1: Enabled)
         */
         uint32_t enable25 : 1; /* bit 25; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4129                       */
         /* Title: Enable 26                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 26 (0: Disabled, 1: Enabled)
         */
         uint32_t enable26 : 1; /* bit 26; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4136                       */
         /* Title: Enable 27                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 27 (0: Disabled, 1: Enabled)
         */
         uint32_t enable27 : 1; /* bit 27; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4143                       */
         /* Title: Enable 28                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 28 (0: Disabled, 1: Enabled)
         */
         uint32_t enable28 : 1; /* bit 28; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4150                       */
         /* Title: Enable 29                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 29 (0: Disabled, 1: Enabled)
         */
         uint32_t enable29 : 1; /* bit 29; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4157                       */
         /* Title: Enable 30                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 30 (0: Disabled, 1: Enabled)
         */
         uint32_t enable30 : 1; /* bit 30; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4164                       */
         /* Title: Enable 31                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 31 (0: Disabled, 1: Enabled)
         */
         uint32_t enable31 : 1; /* bit 31; R/W; 0 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t10_r0_t;

/* Typedef for Register: pu_plic::enable_t10_r1                            */
/* Source filename: pu_plic.csr, line: 4173                                */
/* Title: Enable Target10 R1                                               */
/* Description:                                                            */
/**
 *    Interrupt target 10 (Minion machine mode) enables for interrupt sources
 *     32-41
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4176                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 32 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4183                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 33 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4190                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 34 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4197                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 35 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4204                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 36 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4211                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 37 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4218                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 38 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4225                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 39 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4232                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 40 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 4239                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 41 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */
         uint32_t : 22; /* bits 31 to 10 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t10_r1_t;

/* Typedef for Register: pu_plic::enable_t1_r0                             */
/* Source filename: pu_plic.csr, line: 1208                                */
/* Title: Enable Target1 R0                                                */
/* Description:                                                            */
/**
 *    Interrupt target 1 (SP PLIC 1) enables for interrupt sources 0-31
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 1211                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 0 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1218                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 1 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1225                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 2 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1232                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 3 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1239                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 4 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1246                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 5 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1253                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 6 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1260                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 7 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1267                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 8 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1274                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 9 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1281                       */
         /* Title: Enable 10                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 10 (0: Disabled, 1: Enabled)
         */
         uint32_t enable10 : 1; /* bit 10; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1288                       */
         /* Title: Enable 11                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 11 (0: Disabled, 1: Enabled)
         */
         uint32_t enable11 : 1; /* bit 11; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1295                       */
         /* Title: Enable 12                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 12 (0: Disabled, 1: Enabled)
         */
         uint32_t enable12 : 1; /* bit 12; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1302                       */
         /* Title: Enable 13                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 13 (0: Disabled, 1: Enabled)
         */
         uint32_t enable13 : 1; /* bit 13; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1309                       */
         /* Title: Enable 14                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 14 (0: Disabled, 1: Enabled)
         */
         uint32_t enable14 : 1; /* bit 14; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1316                       */
         /* Title: Enable 15                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 15 (0: Disabled, 1: Enabled)
         */
         uint32_t enable15 : 1; /* bit 15; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1323                       */
         /* Title: Enable 16                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 16 (0: Disabled, 1: Enabled)
         */
         uint32_t enable16 : 1; /* bit 16; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1330                       */
         /* Title: Enable 17                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 17 (0: Disabled, 1: Enabled)
         */
         uint32_t enable17 : 1; /* bit 17; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1337                       */
         /* Title: Enable 18                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 18 (0: Disabled, 1: Enabled)
         */
         uint32_t enable18 : 1; /* bit 18; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1344                       */
         /* Title: Enable 19                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 19 (0: Disabled, 1: Enabled)
         */
         uint32_t enable19 : 1; /* bit 19; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1351                       */
         /* Title: Enable 20                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 20 (0: Disabled, 1: Enabled)
         */
         uint32_t enable20 : 1; /* bit 20; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1358                       */
         /* Title: Enable 21                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 21 (0: Disabled, 1: Enabled)
         */
         uint32_t enable21 : 1; /* bit 21; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1365                       */
         /* Title: Enable 22                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 22 (0: Disabled, 1: Enabled)
         */
         uint32_t enable22 : 1; /* bit 22; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1372                       */
         /* Title: Enable 23                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 23 (0: Disabled, 1: Enabled)
         */
         uint32_t enable23 : 1; /* bit 23; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1379                       */
         /* Title: Enable 24                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 24 (0: Disabled, 1: Enabled)
         */
         uint32_t enable24 : 1; /* bit 24; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1386                       */
         /* Title: Enable 25                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 25 (0: Disabled, 1: Enabled)
         */
         uint32_t enable25 : 1; /* bit 25; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1393                       */
         /* Title: Enable 26                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 26 (0: Disabled, 1: Enabled)
         */
         uint32_t enable26 : 1; /* bit 26; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1400                       */
         /* Title: Enable 27                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 27 (0: Disabled, 1: Enabled)
         */
         uint32_t enable27 : 1; /* bit 27; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1407                       */
         /* Title: Enable 28                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 28 (0: Disabled, 1: Enabled)
         */
         uint32_t enable28 : 1; /* bit 28; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1414                       */
         /* Title: Enable 29                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 29 (0: Disabled, 1: Enabled)
         */
         uint32_t enable29 : 1; /* bit 29; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1421                       */
         /* Title: Enable 30                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 30 (0: Disabled, 1: Enabled)
         */
         uint32_t enable30 : 1; /* bit 30; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1428                       */
         /* Title: Enable 31                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 31 (0: Disabled, 1: Enabled)
         */
         uint32_t enable31 : 1; /* bit 31; R/W; 0 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t1_r0_t;

/* Typedef for Register: pu_plic::enable_t1_r1                             */
/* Source filename: pu_plic.csr, line: 1437                                */
/* Title: Enable Target1 R1                                                */
/* Description:                                                            */
/**
 *    Interrupt target 1 (SP PLIC 1) enables for interrupt sources 32-41
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 1440                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 32 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1447                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 33 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1454                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 34 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1461                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 35 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1468                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 36 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1475                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 37 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1482                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 38 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1489                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 39 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1496                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 40 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1503                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 41 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */
         uint32_t : 22; /* bits 31 to 10 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t1_r1_t;

/* Typedef for Register: pu_plic::enable_t0_r0                             */
/* Source filename: pu_plic.csr, line: 904                                 */
/* Title: Enable Target0 R0                                                */
/* Description:                                                            */
/**
 *    Interrupt target 0 (SP PLIC 0) enables for interrupt sources 0-31
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 907                        */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 0 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 914                        */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 1 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 921                        */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 2 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 928                        */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 3 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 935                        */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 4 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 942                        */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 5 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 949                        */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 6 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 956                        */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 7 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 963                        */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 8 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 970                        */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 9 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 977                        */
         /* Title: Enable 10                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 10 (0: Disabled, 1: Enabled)
         */
         uint32_t enable10 : 1; /* bit 10; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 984                        */
         /* Title: Enable 11                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 11 (0: Disabled, 1: Enabled)
         */
         uint32_t enable11 : 1; /* bit 11; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 991                        */
         /* Title: Enable 12                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 12 (0: Disabled, 1: Enabled)
         */
         uint32_t enable12 : 1; /* bit 12; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 998                        */
         /* Title: Enable 13                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 13 (0: Disabled, 1: Enabled)
         */
         uint32_t enable13 : 1; /* bit 13; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1005                       */
         /* Title: Enable 14                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 14 (0: Disabled, 1: Enabled)
         */
         uint32_t enable14 : 1; /* bit 14; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1012                       */
         /* Title: Enable 15                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 15 (0: Disabled, 1: Enabled)
         */
         uint32_t enable15 : 1; /* bit 15; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1019                       */
         /* Title: Enable 16                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 16 (0: Disabled, 1: Enabled)
         */
         uint32_t enable16 : 1; /* bit 16; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1026                       */
         /* Title: Enable 17                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 17 (0: Disabled, 1: Enabled)
         */
         uint32_t enable17 : 1; /* bit 17; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1033                       */
         /* Title: Enable 18                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 18 (0: Disabled, 1: Enabled)
         */
         uint32_t enable18 : 1; /* bit 18; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1040                       */
         /* Title: Enable 19                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 19 (0: Disabled, 1: Enabled)
         */
         uint32_t enable19 : 1; /* bit 19; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1047                       */
         /* Title: Enable 20                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 20 (0: Disabled, 1: Enabled)
         */
         uint32_t enable20 : 1; /* bit 20; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1054                       */
         /* Title: Enable 21                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 21 (0: Disabled, 1: Enabled)
         */
         uint32_t enable21 : 1; /* bit 21; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1061                       */
         /* Title: Enable 22                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 22 (0: Disabled, 1: Enabled)
         */
         uint32_t enable22 : 1; /* bit 22; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1068                       */
         /* Title: Enable 23                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 23 (0: Disabled, 1: Enabled)
         */
         uint32_t enable23 : 1; /* bit 23; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1075                       */
         /* Title: Enable 24                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 24 (0: Disabled, 1: Enabled)
         */
         uint32_t enable24 : 1; /* bit 24; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1082                       */
         /* Title: Enable 25                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 25 (0: Disabled, 1: Enabled)
         */
         uint32_t enable25 : 1; /* bit 25; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1089                       */
         /* Title: Enable 26                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 26 (0: Disabled, 1: Enabled)
         */
         uint32_t enable26 : 1; /* bit 26; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1096                       */
         /* Title: Enable 27                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 27 (0: Disabled, 1: Enabled)
         */
         uint32_t enable27 : 1; /* bit 27; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1103                       */
         /* Title: Enable 28                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 28 (0: Disabled, 1: Enabled)
         */
         uint32_t enable28 : 1; /* bit 28; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1110                       */
         /* Title: Enable 29                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 29 (0: Disabled, 1: Enabled)
         */
         uint32_t enable29 : 1; /* bit 29; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1117                       */
         /* Title: Enable 30                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 30 (0: Disabled, 1: Enabled)
         */
         uint32_t enable30 : 1; /* bit 30; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1124                       */
         /* Title: Enable 31                                               */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 31 (0: Disabled, 1: Enabled)
         */
         uint32_t enable31 : 1; /* bit 31; R/W; 0 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t0_r0_t;

/* Typedef for Register: pu_plic::enable_t0_r1                             */
/* Source filename: pu_plic.csr, line: 1133                                */
/* Title: Enable Target0 R1                                                */
/* Description:                                                            */
/**
 *    Interrupt target 0 (SP PLIC 0) enables for interrupt sources 32-41
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 1136                       */
         /* Title: Enable 0                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 32 (0: Disabled, 1: Enabled)
         */
         uint32_t enable0 : 1; /* bit 0; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1143                       */
         /* Title: Enable 1                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 33 (0: Disabled, 1: Enabled)
         */
         uint32_t enable1 : 1; /* bit 1; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1150                       */
         /* Title: Enable 2                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 34 (0: Disabled, 1: Enabled)
         */
         uint32_t enable2 : 1; /* bit 2; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1157                       */
         /* Title: Enable 3                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 35 (0: Disabled, 1: Enabled)
         */
         uint32_t enable3 : 1; /* bit 3; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1164                       */
         /* Title: Enable 4                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 36 (0: Disabled, 1: Enabled)
         */
         uint32_t enable4 : 1; /* bit 4; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1171                       */
         /* Title: Enable 5                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 37 (0: Disabled, 1: Enabled)
         */
         uint32_t enable5 : 1; /* bit 5; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1178                       */
         /* Title: Enable 6                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 38 (0: Disabled, 1: Enabled)
         */
         uint32_t enable6 : 1; /* bit 6; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1185                       */
         /* Title: Enable 7                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 39 (0: Disabled, 1: Enabled)
         */
         uint32_t enable7 : 1; /* bit 7; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1192                       */
         /* Title: Enable 8                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 40 (0: Disabled, 1: Enabled)
         */
         uint32_t enable8 : 1; /* bit 8; R/W; 0 */

         /* Source filename: pu_plic.csr, line: 1199                       */
         /* Title: Enable 9                                                */
         /* Description:                                                   */
         /**
          *    Enable for interrupt source 41 (0: Disabled, 1: Enabled)
         */
         uint32_t enable9 : 1; /* bit 9; R/W; 0 */
         uint32_t : 22; /* bits 31 to 10 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_enable_t0_r1_t;

/* Typedef for Register: pu_plic::threshold_t3                             */
/* Source filename: pu_plic.csr, line: 4588                                */
/* Title: Threshold Target 3                                               */
/* Description:                                                            */
/**
 *    Threshold priority level for interrupt target 3 (Maxion core 0 
 *    supervisor)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4591                       */
         /* Title: Threshold                                               */
         /* Description:                                                   */
         /**
          *    Source interrupt priority must exceed threshold to be sent to 
          *    target.  Threshold level 7 will filter out all interrupts.
         */
         uint32_t threshold : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_threshold_t3_t;

/* Typedef for Register: pu_plic::maxID_t3                                 */
/* Source filename: pu_plic.csr, line: 4735                                */
/* Title: Max ID Target 3                                                  */
/* Description:                                                            */
/**
 *    ID of highest priority interrupt pending for interrupt target 3 (Maxion
 *     core 0 supervisor)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4738                       */
         /* Title: MaxID                                                   */
         /* Description:                                                   */
         /**
          *    Interrupt ID
         */
         uint32_t maxID : 6; /* bits 5 to 0; R/W; 0 */
         uint32_t : 26; /* bits 31 to 6 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_maxID_t3_t;

/* Typedef for Register: pu_plic::threshold_t2                             */
/* Source filename: pu_plic.csr, line: 4576                                */
/* Title: Threshold Target 2                                               */
/* Description:                                                            */
/**
 *    Threshold priority level for interrupt target 2 (Maxion core 0 machine 
 *    mode)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4579                       */
         /* Title: Threshold                                               */
         /* Description:                                                   */
         /**
          *    Source interrupt priority must exceed threshold to be sent to 
          *    target.  Threshold level 7 will filter out all interrupts.
         */
         uint32_t threshold : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_threshold_t2_t;

/* Typedef for Register: pu_plic::maxID_t2                                 */
/* Source filename: pu_plic.csr, line: 4722                                */
/* Title: Max ID Target 2                                                  */
/* Description:                                                            */
/**
 *    ID of highest priority interrupt pending for interrupt target 2 (Maxion
 *     core 0 machine mode)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4725                       */
         /* Title: MaxID                                                   */
         /* Description:                                                   */
         /**
          *    Interrupt ID
         */
         uint32_t maxID : 6; /* bits 5 to 0; R/W; 0 */
         uint32_t : 26; /* bits 31 to 6 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_maxID_t2_t;

/* Typedef for Register: pu_plic::threshold_t5                             */
/* Source filename: pu_plic.csr, line: 4612                                */
/* Title: Threshold Target 5                                               */
/* Description:                                                            */
/**
 *    Threshold priority level for interrupt target 5 (Maxion core 1 
 *    supervisor)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4615                       */
         /* Title: Threshold                                               */
         /* Description:                                                   */
         /**
          *    Source interrupt priority must exceed threshold to be sent to 
          *    target.  Threshold level 7 will filter out all interrupts.
         */
         uint32_t threshold : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_threshold_t5_t;

/* Typedef for Register: pu_plic::maxID_t5                                 */
/* Source filename: pu_plic.csr, line: 4761                                */
/* Title: Max ID Target 5                                                  */
/* Description:                                                            */
/**
 *    ID of highest priority interrupt pending for interrupt target 5 (Maxion
 *     core 1 supervisor)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4764                       */
         /* Title: MaxID                                                   */
         /* Description:                                                   */
         /**
          *    Interrupt ID
         */
         uint32_t maxID : 6; /* bits 5 to 0; R/W; 0 */
         uint32_t : 26; /* bits 31 to 6 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_maxID_t5_t;

/* Typedef for Register: pu_plic::threshold_t4                             */
/* Source filename: pu_plic.csr, line: 4600                                */
/* Title: Threshold Target 4                                               */
/* Description:                                                            */
/**
 *    Threshold priority level for interrupt target 4 (Maxion core 1 machine 
 *    mode)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4603                       */
         /* Title: Threshold                                               */
         /* Description:                                                   */
         /**
          *    Source interrupt priority must exceed threshold to be sent to 
          *    target.  Threshold level 7 will filter out all interrupts.
         */
         uint32_t threshold : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_threshold_t4_t;

/* Typedef for Register: pu_plic::maxID_t4                                 */
/* Source filename: pu_plic.csr, line: 4748                                */
/* Title: Max ID Target 4                                                  */
/* Description:                                                            */
/**
 *    ID of highest priority interrupt pending for interrupt target 4 (Maxion
 *     core 1 machine mode)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4751                       */
         /* Title: MaxID                                                   */
         /* Description:                                                   */
         /**
          *    Interrupt ID
         */
         uint32_t maxID : 6; /* bits 5 to 0; R/W; 0 */
         uint32_t : 26; /* bits 31 to 6 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_maxID_t4_t;

/* Typedef for Register: pu_plic::threshold_t7                             */
/* Source filename: pu_plic.csr, line: 4636                                */
/* Title: Threshold Target 7                                               */
/* Description:                                                            */
/**
 *    Threshold priority level for interrupt target 7 (Maxion core 2 
 *    supervisor)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4639                       */
         /* Title: Threshold                                               */
         /* Description:                                                   */
         /**
          *    Source interrupt priority must exceed threshold to be sent to 
          *    target.  Threshold level 7 will filter out all interrupts.
         */
         uint32_t threshold : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_threshold_t7_t;

/* Typedef for Register: pu_plic::maxID_t7                                 */
/* Source filename: pu_plic.csr, line: 4787                                */
/* Title: Max ID Target 7                                                  */
/* Description:                                                            */
/**
 *    ID of highest priority interrupt pending for interrupt target 7 (Maxion
 *     core 2 supervisor)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4790                       */
         /* Title: MaxID                                                   */
         /* Description:                                                   */
         /**
          *    Interrupt ID
         */
         uint32_t maxID : 6; /* bits 5 to 0; R/W; 0 */
         uint32_t : 26; /* bits 31 to 6 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_maxID_t7_t;

/* Typedef for Register: pu_plic::threshold_t6                             */
/* Source filename: pu_plic.csr, line: 4624                                */
/* Title: Threshold Target 6                                               */
/* Description:                                                            */
/**
 *    Threshold priority level for interrupt target 6 (Maxion core 2 machine 
 *    mode)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4627                       */
         /* Title: Threshold                                               */
         /* Description:                                                   */
         /**
          *    Source interrupt priority must exceed threshold to be sent to 
          *    target.  Threshold level 7 will filter out all interrupts.
         */
         uint32_t threshold : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_threshold_t6_t;

/* Typedef for Register: pu_plic::maxID_t6                                 */
/* Source filename: pu_plic.csr, line: 4774                                */
/* Title: Max ID Target 6                                                  */
/* Description:                                                            */
/**
 *    ID of highest priority interrupt pending for interrupt target 6 (Maxion
 *     core 2 machine mode)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4777                       */
         /* Title: MaxID                                                   */
         /* Description:                                                   */
         /**
          *    Interrupt ID
         */
         uint32_t maxID : 6; /* bits 5 to 0; R/W; 0 */
         uint32_t : 26; /* bits 31 to 6 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_maxID_t6_t;

/* Typedef for Register: pu_plic::threshold_t9                             */
/* Source filename: pu_plic.csr, line: 4660                                */
/* Title: Threshold Target 9                                               */
/* Description:                                                            */
/**
 *    Threshold priority level for interrupt target 9 (Maxion core 3 
 *    supervisor)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4663                       */
         /* Title: Threshold                                               */
         /* Description:                                                   */
         /**
          *    Source interrupt priority must exceed threshold to be sent to 
          *    target.  Threshold level 7 will filter out all interrupts.
         */
         uint32_t threshold : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_threshold_t9_t;

/* Typedef for Register: pu_plic::maxID_t9                                 */
/* Source filename: pu_plic.csr, line: 4813                                */
/* Title: Max ID Target 9                                                  */
/* Description:                                                            */
/**
 *    ID of highest priority interrupt pending for interrupt target 9 (Maxion
 *     core 3 supervisor)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4816                       */
         /* Title: MaxID                                                   */
         /* Description:                                                   */
         /**
          *    Interrupt ID
         */
         uint32_t maxID : 6; /* bits 5 to 0; R/W; 0 */
         uint32_t : 26; /* bits 31 to 6 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_maxID_t9_t;

/* Typedef for Register: pu_plic::threshold_t8                             */
/* Source filename: pu_plic.csr, line: 4648                                */
/* Title: Threshold Target 8                                               */
/* Description:                                                            */
/**
 *    Threshold priority level for interrupt target 8 (Maxion core 3 machine 
 *    mode)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4651                       */
         /* Title: Threshold                                               */
         /* Description:                                                   */
         /**
          *    Source interrupt priority must exceed threshold to be sent to 
          *    target.  Threshold level 7 will filter out all interrupts.
         */
         uint32_t threshold : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_threshold_t8_t;

/* Typedef for Register: pu_plic::maxID_t8                                 */
/* Source filename: pu_plic.csr, line: 4800                                */
/* Title: Max ID Target 8                                                  */
/* Description:                                                            */
/**
 *    ID of highest priority interrupt pending for interrupt target 8 (Maxion
 *     core 3 machine mode)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4803                       */
         /* Title: MaxID                                                   */
         /* Description:                                                   */
         /**
          *    Interrupt ID
         */
         uint32_t maxID : 6; /* bits 5 to 0; R/W; 0 */
         uint32_t : 26; /* bits 31 to 6 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_maxID_t8_t;

/* Typedef for Register: pu_plic::threshold_t11                            */
/* Source filename: pu_plic.csr, line: 4684                                */
/* Title: Threshold Target 11                                              */
/* Description:                                                            */
/**
 *    Threshold priority level for interrupt target 11 (Minion supervisor)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4687                       */
         /* Title: Threshold                                               */
         /* Description:                                                   */
         /**
          *    Source interrupt priority must exceed threshold to be sent to 
          *    target.  Threshold level 7 will filter out all interrupts.
         */
         uint32_t threshold : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_threshold_t11_t;

/* Typedef for Register: pu_plic::maxID_t11                                */
/* Source filename: pu_plic.csr, line: 4839                                */
/* Title: Max ID Target 11                                                 */
/* Description:                                                            */
/**
 *    ID of highest priority interrupt pending for interrupt target 11 
 *    (Minion supervisor)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4842                       */
         /* Title: MaxID                                                   */
         /* Description:                                                   */
         /**
          *    Interrupt ID
         */
         uint32_t maxID : 6; /* bits 5 to 0; R/W; 0 */
         uint32_t : 26; /* bits 31 to 6 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_maxID_t11_t;

/* Typedef for Register: pu_plic::threshold_t10                            */
/* Source filename: pu_plic.csr, line: 4672                                */
/* Title: Threshold Target 10                                              */
/* Description:                                                            */
/**
 *    Threshold priority level for interrupt target 10 (Minion machine mode)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4675                       */
         /* Title: Threshold                                               */
         /* Description:                                                   */
         /**
          *    Source interrupt priority must exceed threshold to be sent to 
          *    target.  Threshold level 7 will filter out all interrupts.
         */
         uint32_t threshold : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_threshold_t10_t;

/* Typedef for Register: pu_plic::maxID_t10                                */
/* Source filename: pu_plic.csr, line: 4826                                */
/* Title: Max ID Target 10                                                 */
/* Description:                                                            */
/**
 *    ID of highest priority interrupt pending for interrupt target 10 
 *    (Minion machine mode)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4829                       */
         /* Title: MaxID                                                   */
         /* Description:                                                   */
         /**
          *    Interrupt ID
         */
         uint32_t maxID : 6; /* bits 5 to 0; R/W; 0 */
         uint32_t : 26; /* bits 31 to 6 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_maxID_t10_t;

/* Typedef for Register: pu_plic::threshold_t1                             */
/* Source filename: pu_plic.csr, line: 4564                                */
/* Title: Threshold Target 1                                               */
/* Description:                                                            */
/**
 *    Threshold priority level for interrupt target 1 (SP PLIC 1)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4567                       */
         /* Title: Threshold                                               */
         /* Description:                                                   */
         /**
          *    Source interrupt priority must exceed threshold to be sent to 
          *    target.  Threshold level 7 will filter out all interrupts.
         */
         uint32_t threshold : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_threshold_t1_t;

/* Typedef for Register: pu_plic::maxID_t1                                 */
/* Source filename: pu_plic.csr, line: 4709                                */
/* Title: Max ID Target 1                                                  */
/* Description:                                                            */
/**
 *    ID of highest priority interrupt pending for interrupt target 1 (SP 
 *    PLIC 1)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4712                       */
         /* Title: MaxID                                                   */
         /* Description:                                                   */
         /**
          *    Interrupt ID
         */
         uint32_t maxID : 6; /* bits 5 to 0; R/W; 0 */
         uint32_t : 26; /* bits 31 to 6 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_maxID_t1_t;

/* Typedef for Register: pu_plic::threshold_t0                             */
/* Source filename: pu_plic.csr, line: 4552                                */
/* Title: Threshold Target 0                                               */
/* Description:                                                            */
/**
 *    Threshold priority level for interrupt target 0 (SP PLIC 0)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4555                       */
         /* Title: Threshold                                               */
         /* Description:                                                   */
         /**
          *    Source interrupt priority must exceed threshold to be sent to 
          *    target.  Threshold level 7 will filter out all interrupts.
         */
         uint32_t threshold : 3; /* bits 2 to 0; R/W; 0 */
         uint32_t : 29; /* bits 31 to 3 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_threshold_t0_t;

/* Typedef for Register: pu_plic::maxID_t0                                 */
/* Source filename: pu_plic.csr, line: 4696                                */
/* Title: Max ID Target 0                                                  */
/* Description:                                                            */
/**
 *    ID of highest priority interrupt pending for interrupt target 0 (SP 
 *    PLIC 0)
*/
typedef struct {
   union {
      struct {

         /* Source filename: pu_plic.csr, line: 4699                       */
         /* Title: MaxID                                                   */
         /* Description:                                                   */
         /**
          *    Interrupt ID
         */
         uint32_t maxID : 6; /* bits 5 to 0; R/W; 0 */
         uint32_t : 26; /* bits 31 to 6 */
      } B;
      uint32_t R;
   } ;
} Pu_plic_maxID_t0_t;

/* Typedef for Addressmap: pu_plic                                         */
/* Source filename: pu_plic.csr, line: 4852                                */
typedef struct {
   Pu_plic_priority_0_t priority_0; /**< Offset 0x0 (R) */
   Pu_plic_priority_1_t priority_1; /**< Offset 0x4 (R/W) */
   Pu_plic_priority_2_t priority_2; /**< Offset 0x8 (R/W) */
   Pu_plic_priority_3_t priority_3; /**< Offset 0xc (R/W) */
   Pu_plic_priority_4_t priority_4; /**< Offset 0x10 (R/W) */
   Pu_plic_priority_5_t priority_5; /**< Offset 0x14 (R/W) */
   Pu_plic_priority_6_t priority_6; /**< Offset 0x18 (R/W) */
   Pu_plic_priority_7_t priority_7; /**< Offset 0x1c (R/W) */
   Pu_plic_priority_8_t priority_8; /**< Offset 0x20 (R/W) */
   Pu_plic_priority_9_t priority_9; /**< Offset 0x24 (R/W) */
   Pu_plic_priority_10_t priority_10; /**< Offset 0x28 (R/W) */
   Pu_plic_priority_11_t priority_11; /**< Offset 0x2c (R/W) */
   Pu_plic_priority_12_t priority_12; /**< Offset 0x30 (R/W) */
   Pu_plic_priority_13_t priority_13; /**< Offset 0x34 (R/W) */
   Pu_plic_priority_14_t priority_14; /**< Offset 0x38 (R/W) */
   Pu_plic_priority_15_t priority_15; /**< Offset 0x3c (R/W) */
   Pu_plic_priority_16_t priority_16; /**< Offset 0x40 (R/W) */
   Pu_plic_priority_17_t priority_17; /**< Offset 0x44 (R/W) */
   Pu_plic_priority_18_t priority_18; /**< Offset 0x48 (R/W) */
   Pu_plic_priority_19_t priority_19; /**< Offset 0x4c (R/W) */
   Pu_plic_priority_20_t priority_20; /**< Offset 0x50 (R/W) */
   Pu_plic_priority_21_t priority_21; /**< Offset 0x54 (R/W) */
   Pu_plic_priority_22_t priority_22; /**< Offset 0x58 (R/W) */
   Pu_plic_priority_23_t priority_23; /**< Offset 0x5c (R/W) */
   Pu_plic_priority_24_t priority_24; /**< Offset 0x60 (R/W) */
   Pu_plic_priority_25_t priority_25; /**< Offset 0x64 (R/W) */
   Pu_plic_priority_26_t priority_26; /**< Offset 0x68 (R/W) */
   Pu_plic_priority_27_t priority_27; /**< Offset 0x6c (R/W) */
   Pu_plic_priority_28_t priority_28; /**< Offset 0x70 (R/W) */
   Pu_plic_priority_29_t priority_29; /**< Offset 0x74 (R/W) */
   Pu_plic_priority_30_t priority_30; /**< Offset 0x78 (R/W) */
   Pu_plic_priority_31_t priority_31; /**< Offset 0x7c (R/W) */
   Pu_plic_priority_32_t priority_32; /**< Offset 0x80 (R/W) */
   Pu_plic_priority_33_t priority_33; /**< Offset 0x84 (R/W) */
   Pu_plic_priority_34_t priority_34; /**< Offset 0x88 (R/W) */
   Pu_plic_priority_35_t priority_35; /**< Offset 0x8c (R/W) */
   Pu_plic_priority_36_t priority_36; /**< Offset 0x90 (R/W) */
   Pu_plic_priority_37_t priority_37; /**< Offset 0x94 (R/W) */
   Pu_plic_priority_38_t priority_38; /**< Offset 0x98 (R/W) */
   Pu_plic_priority_39_t priority_39; /**< Offset 0x9c (R/W) */
   Pu_plic_priority_40_t priority_40; /**< Offset 0xa0 (R/W) */
   Pu_plic_priority_41_t priority_41; /**< Offset 0xa4 (R/W) */
   uint8_t _pad0[0xf58];
   Pu_plic_pending_r0_t pending_r0; /**< Offset 0x1000 (R) */
   Pu_plic_pending_r1_t pending_r1; /**< Offset 0x1004 (R) */
   uint8_t _pad1[0xff8];
   Pu_plic_enable_t3_r0_t enable_t3_r0; /**< Offset 0x2000 (R/W) */
   Pu_plic_enable_t3_r1_t enable_t3_r1; /**< Offset 0x2004 (R/W) */
   uint8_t _pad2[0x78];
   Pu_plic_enable_t2_r0_t enable_t2_r0; /**< Offset 0x2080 (R/W) */
   Pu_plic_enable_t2_r1_t enable_t2_r1; /**< Offset 0x2084 (R/W) */
   uint8_t _pad3[0x78];
   Pu_plic_enable_t5_r0_t enable_t5_r0; /**< Offset 0x2100 (R/W) */
   Pu_plic_enable_t5_r1_t enable_t5_r1; /**< Offset 0x2104 (R/W) */
   uint8_t _pad4[0x78];
   Pu_plic_enable_t4_r0_t enable_t4_r0; /**< Offset 0x2180 (R/W) */
   Pu_plic_enable_t4_r1_t enable_t4_r1; /**< Offset 0x2184 (R/W) */
   uint8_t _pad5[0x78];
   Pu_plic_enable_t7_r0_t enable_t7_r0; /**< Offset 0x2200 (R/W) */
   Pu_plic_enable_t7_r1_t enable_t7_r1; /**< Offset 0x2204 (R/W) */
   uint8_t _pad6[0x78];
   Pu_plic_enable_t6_r0_t enable_t6_r0; /**< Offset 0x2280 (R/W) */
   Pu_plic_enable_t6_r1_t enable_t6_r1; /**< Offset 0x2284 (R/W) */
   uint8_t _pad7[0x78];
   Pu_plic_enable_t9_r0_t enable_t9_r0; /**< Offset 0x2300 (R/W) */
   Pu_plic_enable_t9_r1_t enable_t9_r1; /**< Offset 0x2304 (R/W) */
   uint8_t _pad8[0x78];
   Pu_plic_enable_t8_r0_t enable_t8_r0; /**< Offset 0x2380 (R/W) */
   Pu_plic_enable_t8_r1_t enable_t8_r1; /**< Offset 0x2384 (R/W) */
   uint8_t _pad9[0xc78];
   Pu_plic_enable_t11_r0_t enable_t11_r0; /**< Offset 0x3000 (R/W) */
   Pu_plic_enable_t11_r1_t enable_t11_r1; /**< Offset 0x3004 (R/W) */
   uint8_t _pad10[0x78];
   Pu_plic_enable_t10_r0_t enable_t10_r0; /**< Offset 0x3080 (R/W) */
   Pu_plic_enable_t10_r1_t enable_t10_r1; /**< Offset 0x3084 (R/W) */
   uint8_t _pad11[0xf78];
   Pu_plic_enable_t1_r0_t enable_t1_r0; /**< Offset 0x4000 (R/W) */
   Pu_plic_enable_t1_r1_t enable_t1_r1; /**< Offset 0x4004 (R/W) */
   uint8_t _pad12[0x78];
   Pu_plic_enable_t0_r0_t enable_t0_r0; /**< Offset 0x4080 (R/W) */
   Pu_plic_enable_t0_r1_t enable_t0_r1; /**< Offset 0x4084 (R/W) */
   uint8_t _pad13[0x1fbf78];
   Pu_plic_threshold_t3_t threshold_t3; /**< Offset 0x200000 (R/W) */
   Pu_plic_maxID_t3_t maxID_t3; /**< Offset 0x200004 (R/W) */
   uint8_t _pad14[0xff8];
   Pu_plic_threshold_t2_t threshold_t2; /**< Offset 0x201000 (R/W) */
   Pu_plic_maxID_t2_t maxID_t2; /**< Offset 0x201004 (R/W) */
   uint8_t _pad15[0xff8];
   Pu_plic_threshold_t5_t threshold_t5; /**< Offset 0x202000 (R/W) */
   Pu_plic_maxID_t5_t maxID_t5; /**< Offset 0x202004 (R/W) */
   uint8_t _pad16[0xff8];
   Pu_plic_threshold_t4_t threshold_t4; /**< Offset 0x203000 (R/W) */
   Pu_plic_maxID_t4_t maxID_t4; /**< Offset 0x203004 (R/W) */
   uint8_t _pad17[0xff8];
   Pu_plic_threshold_t7_t threshold_t7; /**< Offset 0x204000 (R/W) */
   Pu_plic_maxID_t7_t maxID_t7; /**< Offset 0x204004 (R/W) */
   uint8_t _pad18[0xff8];
   Pu_plic_threshold_t6_t threshold_t6; /**< Offset 0x205000 (R/W) */
   Pu_plic_maxID_t6_t maxID_t6; /**< Offset 0x205004 (R/W) */
   uint8_t _pad19[0xff8];
   Pu_plic_threshold_t9_t threshold_t9; /**< Offset 0x206000 (R/W) */
   Pu_plic_maxID_t9_t maxID_t9; /**< Offset 0x206004 (R/W) */
   uint8_t _pad20[0xff8];
   Pu_plic_threshold_t8_t threshold_t8; /**< Offset 0x207000 (R/W) */
   Pu_plic_maxID_t8_t maxID_t8; /**< Offset 0x207004 (R/W) */
   uint8_t _pad21[0x18ff8];
   Pu_plic_threshold_t11_t threshold_t11; /**< Offset 0x220000 (R/W) */
   Pu_plic_maxID_t11_t maxID_t11; /**< Offset 0x220004 (R/W) */
   uint8_t _pad22[0xff8];
   Pu_plic_threshold_t10_t threshold_t10; /**< Offset 0x221000 (R/W) */
   Pu_plic_maxID_t10_t maxID_t10; /**< Offset 0x221004 (R/W) */
   uint8_t _pad23[0x1eff8];
   Pu_plic_threshold_t1_t threshold_t1; /**< Offset 0x240000 (R/W) */
   Pu_plic_maxID_t1_t maxID_t1; /**< Offset 0x240004 (R/W) */
   uint8_t _pad24[0xff8];
   Pu_plic_threshold_t0_t threshold_t0; /**< Offset 0x241000 (R/W) */
   Pu_plic_maxID_t0_t maxID_t0; /**< Offset 0x241004 (R/W) */
   uint8_t _pad25[0x1dbeff8];
} Pu_plic_t;

#endif
