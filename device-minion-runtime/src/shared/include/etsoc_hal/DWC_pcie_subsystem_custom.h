/*                                                                         */
/* Generated by Semifore, Inc. csrCompile                                  */
/*    Version: 2018.12 Build: release Linux 64-bit                         */
/*    C Header output                                                      */
/*                                                                         */
/* Command Line:                                                           */
/*    /home/cad/tools/semifore/csrCompile/LATEST/bin/x64_re6/csrCompile -v */
/*    -c                                                                   */
/*    /data/ssmith/work/repos/soc/dv/common/scripts/semifore_css/bitfield_enum_doc.css */
/*    -t h DWC_pcie_subsystem_custom.csr -o                                */
/*    gen_sw/DWC_pcie_subsystem_custom                                     */
/*                                                                         */
/* Input files:                                                            */
/*    DWC_pcie_subsystem_custom.csr                                        */
/*                                                                         */
/* Configuration files:                                                    */
/*    /data/ssmith/work/repos/soc/dv/common/scripts/semifore_css/bitfield_enum_doc.css */
/*                                                                         */
/* Generated on: Mon Apr 22 10:09:02 2019                                  */
/*           by: ssmith                                                    */
/*                                                                         */

#ifndef _DWC_PCIE_SUBSYSTEM_CUSTOM_H_
#define _DWC_PCIE_SUBSYSTEM_CUSTOM_H_

#include <stdint.h>

/* ####################################################################### */
/*        TYPE DEFINITIONS                                                 */
/* ####################################################################### */

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_GEN_CTRL_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 24                */
/* Description:                                                            */
/**
 *    PCIe Controller 0 General Control 1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 27       */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_7 : 8; /* bits 7 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 35       */
         /* Description:                                                   */
         /**
          *    SRIS operation mode. 
          *    0b: non-SRIS mode
          *    1b: SRIS mode
         */
         uint32_t SRIS_MODE : 1; /* bit 8; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 44       */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_15 : 7; /* bits 15 to 9; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 52       */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_21 : 6; /* bits 21 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 60       */
         /* Description:                                                   */
         /**
          *    Performs manual lane reversal for receive lanes in C-PCIe 
          *    mode. For use when automatic lane reversal does not occur 
          *    because lane 0 is not detected. It should be stable before 
          *    PCIe link establishment.
         */
         uint32_t RX_LANE_FLIP_EN : 1; /* bit 22; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 70       */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_23 : 1; /* bit 23; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 78       */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_29 : 6; /* bits 29 to 24; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 86       */
         /* Description:                                                   */
         /**
          *    Performs manual lane reversal for transmit lanes in C-PCIe 
          *    mode. For use when automatic lane reversal does not occur 
          *    because lane 0 is not detected. It should be stable before 
          *    PCIe link establishment.
         */
         uint32_t TX_LANE_FLIP_EN : 1; /* bit 30; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 96       */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_GEN_CTRL_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_GEN_CTRL_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 105               */
/* Description:                                                            */
/**
 *    PCIe Controller 0 General Control 2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 108      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_7 : 8; /* bits 7 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 116      */
         /* Description:                                                   */
         /**
          *    AXI Master Clock Un-gating control.
         */
         uint32_t MSTR_ACLK_UNGATE : 1; /* bit 8; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 123      */
         /* Description:                                                   */
         /**
          *    AXI Slave Cock Un-gating control.
         */
         uint32_t SLV_ACLK_UNGATE : 1; /* bit 9; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 130      */
         /* Description:                                                   */
         /**
          *    AXI DBI Clock Un-gating control.
         */
         uint32_t DBI_ACLK_UNGATE : 1; /* bit 10; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 137      */
         /* Description:                                                   */
         /**
          *    MISC Override bit
         */
         uint32_t PCIE0_MISC_OVERRIDE : 1; /* bit 11; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 144      */
         /* Description:                                                   */
         /**
          *    AXI Slave Read Request No Snoop.
         */
         uint32_t SLV_AR_NS : 1; /* bit 12; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 151      */
         /* Description:                                                   */
         /**
          *    AXI Slave Write Request No Snoop.
         */
         uint32_t SLV_AW_NS : 1; /* bit 13; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 158      */
         /* Description:                                                   */
         /**
          *    AXI Slave Read Request Relaxed Ordering.
         */
         uint32_t SLV_AR_RO : 1; /* bit 14; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 165      */
         /* Description:                                                   */
         /**
          *    AXI Slave Write Request Relaxed Ordering.
         */
         uint32_t SLV_AW_RO : 1; /* bit 15; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 172      */
         /* Description:                                                   */
         /**
          *    AXI Slave Write Request bypassing iATU.
         */
         uint32_t SLV_AR_ATU_BYPASS : 1; /* bit 16; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 179      */
         /* Description:                                                   */
         /**
          *    AXI Slave Read Request bypassing iATU.
         */
         uint32_t SLV_AW_ATU_BYPASS : 1; /* bit 17; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 186      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_31 : 14; /* bits 31 to 18; R; 0x0000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_GEN_CTRL_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_GEN_CTRL_3 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 195               */
/* Description:                                                            */
/**
 *    PCIe Controller 0 General Control 3
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 198      */
         /* Description:                                                   */
         /**
          *    LTSSM Enable. Active high. 
          *    Set it low to hold the LTSSM in the Detect state until your 
          *    application is ready. Set it high to allow the LTSSM to 
          *    continue link establishment.
         */
         uint32_t LTSSM_EN : 1; /* bit 0; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 208      */
         /* Description:                                                   */
         /**
          *    Configuration Request Retry Status (CRS) Enable. Active high.
          *    Provides a capability to defer incoming configuration requests
          *     until initialization is complete. When this bit is set, PCIe 
          *    controller completes incoming configuration requests with a 
          *    Configuration Request Retry Status. Other incoming requests 
          *    complete with unsupported request status.
         */
         uint32_t CRS_EN : 1; /* bit 1; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 222      */
         /* Description:                                                   */
         /**
          *    Hot Reset. A rising edge causes a hot reset. PCIe subsystem 
          *    generates a one-cycle pulse for app_init_rst to PCIe 
          *    controller in core_clk domain on this rising edge of this 
          *    register. To trigger a hot reset, you can write 1 to this bit.
          *     This read value of this bit is always 0.
         */
         uint32_t HOT_RESET : 1; /* bit 2; W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 234      */
         /* Description:                                                   */
         /**
          *    Hold and release LTSSM. As long as this signal is '1', the 
          *    controller stays in the current LTSSM.
         */
         uint32_t RAS_DES_SD_HOLD_LTSSM : 1; /* bit 3; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 242      */
         /* Description:                                                   */
         /**
          *    Select for 8-bit signals within 32-bit signals.
         */
         uint32_t DBG_SEL_BYTE : 2; /* bits 5 to 4; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 249      */
         /* Description:                                                   */
         /**
          *    Select for 32-bit signals within a 128-bit debug group.
         */
         uint32_t DBG_SEL_DWORD : 2; /* bits 7 to 6; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 256      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_11 : 4; /* bits 11 to 8; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 264      */
         /* Description:                                                   */
         /**
          *    DBI Read-only Write Disable.
         */
         uint32_t DBI_RO_WR_DISABLE : 1; /* bit 12; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 271      */
         /* Description:                                                   */
         /**
          *    Diagnostic Control Bus.
          *    Bit [2]: Select Fast Link Mode
          *    Bit [1]: Insert ECRC error by inverting the LSB of ECRC
          *    Bit [0]: Insert LCRC error by inverting the LSB of LCRC
         */
         uint32_t DIAG_CTRL_BUS : 3; /* bits 15 to 13; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 281      */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_23 : 8; /* bits 23 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 289      */
         /* Description:                                                   */
         /**
          *    Select for native core debug groups.
         */
         uint32_t DBG_SEL_GROUP : 2; /* bits 25 to 24; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 296      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_24 : 2; /* bits 27 to 26; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 304      */
         /* Description:                                                   */
         /**
          *    Select for PHY lane for debug.
         */
         uint32_t DBG_SEL_PHY_LANE : 2; /* bits 29 to 28; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 311      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_31 : 2; /* bits 31 to 30; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_GEN_CTRL_3_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_GEN_CTRL_4 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 320               */
/* Description:                                                            */
/**
 *    PCIe Controller 0 General Control 4
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 323      */
         /* Description:                                                   */
         /**
          *    app_pf_frs_ready Enable. Set the specific function to be ready
          *     for sending FRS message
         */
         uint32_t APP_PF_FRS_READY : 8; /* bits 7 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 331      */
         /* Description:                                                   */
         /**
          *    app_drs_ready Enable. Set the upstream port to be ready for 
          *    sending DRS message
         */
         uint32_t APP_DRS_READY : 1; /* bit 8; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 339      */
         /* Description:                                                   */
         /**
          *    Margining Ready. Indicates when the PHY or Margining software 
          *    is ready to accept margining commands. This signal is 
          *    reflected in Margining Ready field of Margining Port Status 
          *    register. If the PHY can accept margining commands when the 
          *    current link speed is 16GT/s, you can set this signal to a 
          *    fixed value of '1'. For Synopsys Gen4 PHYs, this signal should
          *     be tied to '1'.
         */
         uint32_t APP_MARGINING_READY : 1; /* bit 9; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 352      */
         /* Description:                                                   */
         /**
          *    Margining Software Ready. Indicates that the required 
          *    margining software has performed the required initialization 
          *    when margining is partially implemented using Device Driver 
          *    software. This signal is reflected in Margining Software Ready
          *     field of Margining Port Status register. If 
          *    MARGINING_USES_DRIVER_SOFTWARE field of Margining Port 
          *    Capabilities Register is '0', you can set this signal to a 
          *    fixed value of '0'. For Synopsys Gen4 PHYs, this signal should
          *     be tied to '0'.
         */
         uint32_t APP_MARGINING_SOFTWARE_READY : 1; /* bit 10; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 367      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_15 : 5; /* bits 15 to 11; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 375      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_25 : 10; /* bits 25 to 16; R; 0x000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 383      */
         /* Description:                                                   */
         /**
          *    MSIX Table RAM Debug Mode. Use this input to activate the 
          *    debug mode and allow direct read/write access to the Table.
         */
         uint32_t DBG_TABLE : 1; /* bit 26; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 392      */
         /* Description:                                                   */
         /**
          *    MSIX PBA RAM Debug Mode. Use this input to activate the debug 
          *    mode and allow direct read/write access to the PBA.
         */
         uint32_t DBG_PBA : 1; /* bit 27; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 400      */
         /* Description:                                                   */
         /**
          *    Controls the start/end of time based analysis. You must only 
          *    set the pins to the required value for the duration of one 
          *    clock cycle.
         */
         uint32_t RAS_DES_TBA_CTRL : 2; /* bits 29 to 28; W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 410      */
         /* Description:                                                   */
         /**
          *    When PCIe link goes down and  LTSSM_EN_CLR_MASK is 1, LTSSM_EN
          *     goes to its reset value.  When PCIe link goes down and  
          *    LTSSM_EN_CLR_MASK is 0, LTSSM_EN does not change.
         */
         uint32_t LTSSM_EN_CLR_MASK : 1; /* bit 30; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 420      */
         /* Description:                                                   */
         /**
          *    When PCIe link goes down and  CRS_EN_CLR_MASK is 1, CRS_EN 
          *    goes to its reset value.  When PCIe link goes down and  
          *    CRS_EN_CLR_MASK is 0, CRS_EN does not change.
         */
         uint32_t CRS_EN_CLR_MASK : 1; /* bit 31; R/W; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_GEN_CTRL_4_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_PM_CTRL */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 430               */
/* Description:                                                            */
/**
 *    PCIe Controller 0 PM Control
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 433      */
         /* Description:                                                   */
         /**
          *    PF Index of PM_PME request and PM status. Set the PF Index 
          *    before sending PM_PME message or accessing PCIe controller 0 
          *    PM Status register.
         */
         uint32_t PME_PF_INDEX : 5; /* bits 4 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 442      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_6 : 2; /* bits 6 to 5; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 450      */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_7 : 1; /* bit 7; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 458      */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_15 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 466      */
         /* Description:                                                   */
         /**
          *    PM_PME Message Request. The PF and VF indices are specified by
          *     PME_PF_INDEX, PME_VF_ACTIVE and PME_VF_INDEX. To send a 
          *    PM_Message, write 1 to this bit. The read value of this bit is
          *     always 0.
         */
         uint32_t PM_PME_REQ : 1; /* bit 16; W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 477      */
         /* Description:                                                   */
         /**
          *    Request from your application to enter ASPM state L1. It is 
          *    only effective when ASPM L1 is enabled. PCIe Controller 
          *    ignores the ASPM L1 entry request when it is busy processing a
          *     transaction.
         */
         uint32_t ENTER_ASPM_L1 : 1; /* bit 17; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 487      */
         /* Description:                                                   */
         /**
          *    Request from your application to exit ASPM state L1. It is 
          *    only effective when ASPM L1 is enabled.
         */
         uint32_t EXIT_ASPM_L1 : 1; /* bit 18; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 495      */
         /* Description:                                                   */
         /**
          *    Indication from your application that it is ready to enter the
          *     L23 state. The register is set for applications that must 
          *    control L23 entry (in case certain tasks must be performed 
          *    before going into L23). PCIe Controller delays sending 
          *    PM_Enter_L23 (in response to PM_Turn_Off) until this register 
          *    is set. Set it to 1 for applications that do not require this 
          *    feature.
         */
         uint32_t READY_ENTER_L23 : 1; /* bit 19; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 508      */
         /* Description:                                                   */
         /**
          *    Request from your application to wake up reference clock.
         */
         uint32_t APP_CLK_REQ : 1; /* bit 20; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 515      */
         /* Description:                                                   */
         /**
          *    Clock PM feature enabled by application. Used to inhibit the 
          *    programming of the Clock PM in Link Control Register.
         */
         uint32_t APP_CLK_PM_EN : 1; /* bit 21; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 523      */
         /* Description:                                                   */
         /**
          *    The application can set this input to 1'b1 to prevent entry to
          *     L1 Sub-states. This pin is used to gate the L1 sub-state 
          *    enable bits from the L1 PM Substates Control 1 Register.
         */
         uint32_t APP_L1SUB_DISABLE : 1; /* bit 22; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 533      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_30 : 8; /* bits 30 to 23; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 541      */
         /* Description:                                                   */
         /**
          *    Beacon Interrupt Enable. Active High. When SII controller 
          *    receives a beacon in L2 and Beacon Interrupt Enable is set, 
          *    SII controller asserts rx_beacon_int.
         */
         uint32_t BEACON_INT_EN : 1; /* bit 31; R/W; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_PM_CTRL_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_PM_STS */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 551               */
/* Description:                                                            */
/**
 *    PCIe Controller 0 PM Status
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 554      */
         /* Description:                                                   */
         /**
          *    The current power management D-state.
         */
         uint32_t PM_DSTATE : 3; /* bits 2 to 0; R; 0x4 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 562      */
         /* Description:                                                   */
         /**
          *    PME Enable bit in the PMCSR.
         */
         uint32_t PM_PME_EN : 1; /* bit 3; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 570      */
         /* Description:                                                   */
         /**
          *    PME Status bit from the PMCSR.
         */
         uint32_t PM_STATUS : 1; /* bit 4; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 578      */
         uint32_t PM_L1SUB_STATE : 3; /* bits 7 to 5; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 584      */
         /* Description:                                                   */
         /**
          *    The current power state of PM controller.
          *    *3’b001: L0s;
          *    *3’b010: L1;
          *    *3’b011: L2;
          *    *3’b100: L3;
          *    *3’b000: L0 and others.
         */
         uint32_t PM_CURNT_STATE : 3; /* bits 10 to 8; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 597      */
         /* Description:                                                   */
         /**
          *    Power management is in L0s state.
         */
         uint32_t PM_LINKST_IN_L0S : 1; /* bit 11; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 605      */
         /* Description:                                                   */
         /**
          *    Power management is in L1 state.
         */
         uint32_t PM_LINKST_IN_L1 : 1; /* bit 12; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 613      */
         /* Description:                                                   */
         /**
          *    Power management is in L1 substate.
         */
         uint32_t PM_LINKST_IN_L1SUB : 1; /* bit 13; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 621      */
         /* Description:                                                   */
         /**
          *    Power management is in L2 state.
         */
         uint32_t PM_LINKST_IN_L2 : 1; /* bit 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 629      */
         /* Description:                                                   */
         /**
          *    Power management is exiting L2 state. Not applicable for 
          *    downstream port.
         */
         uint32_t PM_LINKST_L2_EXIT : 1; /* bit 15; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 638      */
         /* Description:                                                   */
         /**
          *    REFCLK/PCLK removal request from controller to PHY.
         */
         uint32_t PCLKREQ_N : 2; /* bits 17 to 16; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 646      */
         /* Description:                                                   */
         /**
          *    REFCLK/PCLK removal acknowledge from PHY to controller.
         */
         uint32_t PCLKACK_N : 1; /* bit 18; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 654      */
         /* Description:                                                   */
         /**
          *    Controller instructs the PHY to disable the receiver 
          *    Electrical Idle detection logic.
         */
         uint32_t RXELECIDLE_DIS : 1; /* bit 19; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 663      */
         /* Description:                                                   */
         /**
          *    Controller instructs the PHY to disable the transmitter Common
          *     Mode logic.
         */
         uint32_t TXCOMMONMODE_DIS : 1; /* bit 20; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 672      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t PM_SLAVE_STATE : 5; /* bits 25 to 21; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 680      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t PM_MASTER_STATE : 5; /* bits 30 to 26; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 688      */
         /* Description:                                                   */
         /**
          *    Beacon Interrupt Status. Active High. When SII controller 
          *    receives a beacon in L2 and Beacon Interrupt Enable is set, 
          *    SII controller will set Beacon Interrupt Status. Write 1 to 
          *    this register will clear the status.
         */
         uint32_t BEACON_INT_STS : 1; /* bit 31; R/W1C; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_PM_STS_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_TX_MSG_HDR_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 700               */
/* Description:                                                            */
/**
 *    PCIe Controller 0 Transmit Message Header 1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 703      */
         /* Description:                                                   */
         /**
          *    Tied to 0.
         */
         uint32_t MSG_HDR_LENGTH : 10; /* bits 9 to 0; R; 0x000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 711      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_10 : 2; /* bits 11 to 10; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 719      */
         /* Description:                                                   */
         /**
          *    Attribute[1:0], Relaxing Ordering and No Snoop.
         */
         uint32_t MSG_HDR_ATTR : 2; /* bits 13 to 12; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 726      */
         /* Description:                                                   */
         /**
          *    Poisoned TLP (EP) bit.
         */
         uint32_t MSG_HDR_EP : 1; /* bit 14; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 733      */
         /* Description:                                                   */
         /**
          *    TLP Digest (TD) bit.
         */
         uint32_t MSG_HDR_TD : 1; /* bit 15; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 740      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_16 : 1; /* bit 16; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 748      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_17 : 1; /* bit 17; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 756      */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_18 : 1; /* bit 18; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 764      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_19 : 1; /* bit 19; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 772      */
         /* Description:                                                   */
         /**
          *    Traffic Class.
         */
         uint32_t MSG_HDR_TC : 3; /* bits 22 to 20; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 779      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_23 : 1; /* bit 23; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 787      */
         /* Description:                                                   */
         /**
          *    Type field.
         */
         uint32_t MSG_HDR_TYPE : 5; /* bits 28 to 24; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 794      */
         /* Description:                                                   */
         /**
          *    Format field
         */
         uint32_t MSG_HDR_FM : 2; /* bits 30 to 29; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 801      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_31 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_TX_MSG_HDR_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_TX_MSG_HDR_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 810               */
/* Description:                                                            */
/**
 *    PCIe Controller 0 Transmit Message Header 2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 813      */
         /* Description:                                                   */
         /**
          *    Message Code, Byte 7 of Controller 0 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE7 : 8; /* bits 7 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 821      */
         /* Description:                                                   */
         /**
          *    Message Tag, Byte 6 of Controller 0 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE6 : 8; /* bits 15 to 8; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 829      */
         /* Description:                                                   */
         /**
          *    Requester ID[7:0], Byte 5 of Controller 0 Transmit Message 
          *    Header
         */
         uint32_t MSG_HDR_BYTE5 : 8; /* bits 23 to 16; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 837      */
         /* Description:                                                   */
         /**
          *    Requeser ID[15:8], Byte 4 of Controller 0 Transmit Message 
          *    Header
         */
         uint32_t MSG_HDR_BYTE4 : 8; /* bits 31 to 24; R/W; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_TX_MSG_HDR_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_TX_MSG_HDR_3 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 846               */
/* Description:                                                            */
/**
 *    PCIe Controller 0 Transmit Message Header 3
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 849      */
         /* Description:                                                   */
         /**
          *    Byte 11 of Controller 0 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE11 : 8; /* bits 7 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 856      */
         /* Description:                                                   */
         /**
          *    Byte 10 of Controller 0 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE10 : 8; /* bits 15 to 8; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 863      */
         /* Description:                                                   */
         /**
          *    Byte 9 of Controller 0 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE9 : 8; /* bits 23 to 16; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 870      */
         /* Description:                                                   */
         /**
          *    Byte 8 of Controller 0 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE8 : 8; /* bits 31 to 24; R/W; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_TX_MSG_HDR_3_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_TX_MSG_HDR_4 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 878               */
/* Description:                                                            */
/**
 *    PCIe Controller 0 Transmit Message Header 4
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 881      */
         /* Description:                                                   */
         /**
          *    Byte 15 of Controller 0 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE15 : 8; /* bits 7 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 888      */
         /* Description:                                                   */
         /**
          *    Byte 14 of Controller 0 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE14 : 8; /* bits 15 to 8; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 895      */
         /* Description:                                                   */
         /**
          *    Byte 13 of Controller 0 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE13 : 8; /* bits 23 to 16; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 902      */
         /* Description:                                                   */
         /**
          *    Byte 12 of Controller 0 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE12 : 8; /* bits 31 to 24; R/W; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_TX_MSG_HDR_4_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_TX_MSG_REQ */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 910               */
/* Description:                                                            */
/**
 *    PCIe Controller 0 Transmit Message Request
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 913      */
         /* Description:                                                   */
         /**
          *    PF number of message requester.
         */
         uint32_t TX_MSG_PF_NUM : 5; /* bits 4 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 920      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_6 : 2; /* bits 6 to 5; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 928      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_7 : 1; /* bit 7; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 936      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_15 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 944      */
         /* Description:                                                   */
         /**
          *    LTR message request. A rising edge will trigger a message 
          *    request. Self-cleared when the message is granted.
         */
         uint32_t LTR_REQ : 1; /* bit 16; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 952      */
         /* Description:                                                   */
         /**
          *    Vendor-defined message request. A rising edge will trigger a 
          *    message request. Self-cleared when the message is granted.
         */
         uint32_t VEN_MSG_REQ : 1; /* bit 17; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 961      */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_18 : 1; /* bit 18; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 969      */
         /* Description:                                                   */
         /**
          *    PME_Turn_Off message request. A rising edge will trigger a 
          *    message request. Write a 1 to this bit to send a PME_Turn_Off 
          *    message. The read value of this bit is always 0. Valid in RC 
          *    mode.
         */
         uint32_t PME_TURN_OFF_REQ : 1; /* bit 19; W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 980      */
         /* Description:                                                   */
         /**
          *    Unlock message. A rising edge will trigger a message request. 
          *    Write a 1 to this bit to send an Unlock message. This read 
          *    value of this bit is always 0. Valid in RC mode.
         */
         uint32_t UNLOCK_REQ : 1; /* bit 20; W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 990      */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_21 : 1; /* bit 21; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 998      */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_22 : 1; /* bit 22; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1006     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_23 : 1; /* bit 23; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1014     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 8; /* bits 31 to 24; R; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_TX_MSG_REQ_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_RX_MSG_DATA_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 1023              */
/* Description:                                                            */
/**
 *    PCIe Controller 0 Receive Message Data 1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1027     */
         /* Description:                                                   */
         /**
          *    Byte 3 of controller 0 receive message data.
         */
         uint32_t MSG_DATA_BYTE3 : 8; /* bits 7 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1034     */
         /* Description:                                                   */
         /**
          *    Byte 2 of controller 0 receive message data.
         */
         uint32_t MSG_DATA_BYTE2 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1041     */
         /* Description:                                                   */
         /**
          *    Byte 1 of controller 0 receive message data.
         */
         uint32_t MSG_DATA_BYTE1 : 8; /* bits 23 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1048     */
         /* Description:                                                   */
         /**
          *    Byte 0 of controller 0 receive message data.
         */
         uint32_t MSG_DATA_BYTE0 : 8; /* bits 31 to 24; R; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_RX_MSG_DATA_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_RX_MSG_DATA_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 1056              */
/* Description:                                                            */
/**
 *    PCIe Controller 0 Receive Message Data 2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1060     */
         /* Description:                                                   */
         /**
          *    Byte 7 of controller 0 receive message data.
         */
         uint32_t MSG_DATA_BYTE7 : 8; /* bits 7 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1067     */
         /* Description:                                                   */
         /**
          *    Byte 6 of controller 0 receive message data.
         */
         uint32_t MSG_DATA_BYTE6 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1074     */
         /* Description:                                                   */
         /**
          *    Byte 5 of controller 0 receive message data.
         */
         uint32_t MSG_DATA_BYTE5 : 8; /* bits 23 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1081     */
         /* Description:                                                   */
         /**
          *    Byte 4 of controller 0 receive message data.
         */
         uint32_t MSG_DATA_BYTE4 : 8; /* bits 31 to 24; R; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_RX_MSG_DATA_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_RX_MSG_HDR_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 1089              */
/* Description:                                                            */
/**
 *    PCIe Controller 0 Receive Message Header 1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1093     */
         /* Description:                                                   */
         /**
          *    Byte 3 of controller 0 receive message header.
         */
         uint32_t MSG_HDR_BYTE3 : 8; /* bits 7 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1100     */
         /* Description:                                                   */
         /**
          *    Byte 2 of controller 0 receive message header.
         */
         uint32_t MSG_HDR_BYTE2 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1107     */
         /* Description:                                                   */
         /**
          *    Byte 1 of controller 0 receive message header.
         */
         uint32_t MSG_HDR_BYTE1 : 8; /* bits 23 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1114     */
         /* Description:                                                   */
         /**
          *    Byte 0 of controller 0 receive message header.
         */
         uint32_t MSG_HDR_BYTE0 : 8; /* bits 31 to 24; R; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_RX_MSG_HDR_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_RX_MSG_HDR_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 1122              */
/* Description:                                                            */
/**
 *    PCIe Controller 0 Receive Message Header 2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1126     */
         /* Description:                                                   */
         /**
          *    Byte 7 of controller 0 receive message header.
         */
         uint32_t MSG_HDR_BYTE7 : 8; /* bits 7 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1133     */
         /* Description:                                                   */
         /**
          *    Byte 6 of controller 0 receive message header.
         */
         uint32_t MSG_HDR_BYTE6 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1140     */
         /* Description:                                                   */
         /**
          *    Byte 5 of controller 0 receive message header.
         */
         uint32_t MSG_HDR_BYTE5 : 8; /* bits 23 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1147     */
         /* Description:                                                   */
         /**
          *    Byte 4 of controller 0 receive message header.
         */
         uint32_t MSG_HDR_BYTE4 : 8; /* bits 31 to 24; R; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_RX_MSG_HDR_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_RX_MSG_HDR_3 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 1155              */
/* Description:                                                            */
/**
 *    PCIe Controller 0 Receive Message Header 3
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1159     */
         /* Description:                                                   */
         /**
          *    Byte 11 of controller 0 receive message header.
         */
         uint32_t MSG_HDR_BYTE11 : 8; /* bits 7 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1166     */
         /* Description:                                                   */
         /**
          *    Byte 10 of controller 0 receive message header.
         */
         uint32_t MSG_HDR_BYTE10 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1173     */
         /* Description:                                                   */
         /**
          *    Byte 9 of controller 0 receive message header.
         */
         uint32_t MSG_HDR_BYTE9 : 8; /* bits 23 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1180     */
         /* Description:                                                   */
         /**
          *    Byte 8 of controller 0 receive message header.
         */
         uint32_t MSG_HDR_BYTE8 : 8; /* bits 31 to 24; R; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_RX_MSG_HDR_3_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_RX_MSG_HDR_4 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 1188              */
/* Description:                                                            */
/**
 *    PCIe Controller 0 Receive Message Header 4
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1192     */
         /* Description:                                                   */
         /**
          *    Byte 15 of controller 0 receive message header.
         */
         uint32_t MSG_HDR_BYTE15 : 8; /* bits 7 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1199     */
         /* Description:                                                   */
         /**
          *    Byte 14 of controller 0 receive message header.
         */
         uint32_t MSG_HDR_BYTE14 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1206     */
         /* Description:                                                   */
         /**
          *    Byte 13 of controller 0 receive message header.
         */
         uint32_t MSG_HDR_BYTE13 : 8; /* bits 23 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1213     */
         /* Description:                                                   */
         /**
          *    Byte 12 of controller 0 receive message header.
         */
         uint32_t MSG_HDR_BYTE12 : 8; /* bits 31 to 24; R; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_RX_MSG_HDR_4_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_RX_MSG_STS */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 1221              */
/* Description:                                                            */
/**
 *    PCIe Controller 0 Receive Message Status
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1224     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_10 : 11; /* bits 10 to 0; R; 0x000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1232     */
         /* Description:                                                   */
         /**
          *    PME_TO_Ack message status. Write 1 to this bit will clear the 
          *    status. Valid in RC mode.
         */
         uint32_t PME_TO_ACK_STS : 1; /* bit 11; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1241     */
         /* Description:                                                   */
         /**
          *    PM_PME message status. Write 1 to this bit will clear the 
          *    status. Valid in RC mode.
         */
         uint32_t PM_PME_STS : 1; /* bit 12; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1250     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_15 : 3; /* bits 15 to 13; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1258     */
         /* Description:                                                   */
         /**
          *    LTR message status. Write 1 to this bit will clear the status.
          *     Valid in RC mode.
         */
         uint32_t LTR_STS : 1; /* bit 16; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1267     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_17 : 1; /* bit 17; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1275     */
         /* Description:                                                   */
         /**
          *    Vendor-defined type 1 message status. Write 1 to this bit will
          *     clear the status.
         */
         uint32_t VDM_TYPE1_STS : 1; /* bit 18; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1284     */
         /* Description:                                                   */
         /**
          *    PME_Turn_Off message status. Write 1 to this bit will clear 
          *    the status. Valid in EP mode.
         */
         uint32_t PME_TURN_OFF_STS : 1; /* bit 19; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1293     */
         /* Description:                                                   */
         /**
          *    Unlock message status. Write 1 to this bit will clear the 
          *    status. Valid in EP mode.
         */
         uint32_t UNLOCK_STS : 1; /* bit 20; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1302     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_21 : 1; /* bit 21; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1310     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_22 : 1; /* bit 22; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1318     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_23 : 1; /* bit 23; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1326     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_30 : 7; /* bits 30 to 24; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1334     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_RX_MSG_STS_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_RX_MSG_CAP_CTRL */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 1343              */
/* Description:                                                            */
/**
 *    PCIe Controller 0 Receive Message Capture Control
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1347     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 32; /* bits 31 to 0; R; 0x00000000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_RX_MSG_CAP_CTRL_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_RX_MSG_INT_CTRL */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 1355              */
/* Description:                                                            */
/**
 *    PCIe Controller 0 Receive Message Interrupt Control
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1358     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_10 : 11; /* bits 10 to 0; R; 0x000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1366     */
         /* Description:                                                   */
         /**
          *    Interrupt enable when PME_TO_Ack message in received Message 
          *    Header register.
         */
         uint32_t PME_TO_ACK_INT_EN : 1; /* bit 11; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1374     */
         /* Description:                                                   */
         /**
          *    Interrupt enable when PM_PME message in received Message 
          *    Header register.
         */
         uint32_t PM_PME_INT_EN : 1; /* bit 12; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1382     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_15 : 3; /* bits 15 to 13; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1390     */
         /* Description:                                                   */
         /**
          *    Interrupt enable when LTR message in received Message Header 
          *    register.
         */
         uint32_t LTR_INT_EN : 1; /* bit 16; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1398     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_17 : 1; /* bit 17; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1406     */
         /* Description:                                                   */
         /**
          *    Interrupt enable when Vendor-defined type 1 message in 
          *    received Message Header register.
         */
         uint32_t VDM_TYPE1_INT_EN : 1; /* bit 18; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1414     */
         /* Description:                                                   */
         /**
          *    Interrupt enable when PME_Turn_Off message in received Message
          *     Header register.
         */
         uint32_t PME_TURN_OFF_INT_EN : 1; /* bit 19; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1422     */
         /* Description:                                                   */
         /**
          *    Interrupt enable when Unlock message in received Message 
          *    Header register.
         */
         uint32_t UNLOCK_INT_EN : 1; /* bit 20; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1430     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_21 : 1; /* bit 21; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1438     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_22 : 1; /* bit 22; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1446     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_23 : 1; /* bit 23; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1454     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_30 : 7; /* bits 30 to 24; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1462     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_RX_MSG_INT_CTRL_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_LINK_DBG_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 1471              */
/* Description:                                                            */
/**
 *    PCIe Controller 0 Link Debug 1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1475     */
         /* Description:                                                   */
         /**
          *    Receiver detected on lanes. 1-bit for each lane.
         */
         uint32_t RECEIVER_DETECTED : 8; /* bits 7 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1482     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_15 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1489     */
         /* Description:                                                   */
         /**
          *    Symbol lock. 1-bit for each lane.
         */
         uint32_t SYMBOL_LOCK : 8; /* bits 23 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1496     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 8; /* bits 31 to 24; R; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_LINK_DBG_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_LINK_DBG_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 1504              */
/* Description:                                                            */
/**
 *    PCIe Controller 0 Link Debug 2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1508     */
         /* Description:                                                   */
         /**
          *    LTSSM state.
         */
         uint32_t SMLH_LTSSM_STATE : 6; /* bits 5 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1515     */
         /* Description:                                                   */
         /**
          *    Physical layer is up or down.
         */
         uint32_t SMLH_LINK_UP : 1; /* bit 6; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1522     */
         /* Description:                                                   */
         /**
          *    Data link layer is up or down.
         */
         uint32_t RDLH_LINK_UP : 1; /* bit 7; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1529     */
         /* Description:                                                   */
         /**
          *    Link signaling rate.
         */
         uint32_t RATE : 2; /* bits 9 to 8; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1536     */
         /* Description:                                                   */
         /**
          *    PHY power state.
         */
         uint32_t PHY_POWRDOWN : 3; /* bits 12 to 10; R; 0x2 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1543     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_15 : 3; /* bits 15 to 13; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1550     */
         /* Description:                                                   */
         /**
          *    RADM VC0 queue is not empty.
         */
         uint32_t VC0_Q_NOT_EMPTY : 1; /* bit 16; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1557     */
         /* Description:                                                   */
         /**
          *    RADM VC1 queue is not empty.
         */
         uint32_t VC1_Q_NOT_EMPTY : 1; /* bit 17; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1564     */
         /* Description:                                                   */
         /**
          *    RADM VC2 queue is not empty.
         */
         uint32_t VC2_Q_NOT_EMPTY : 1; /* bit 18; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1571     */
         /* Description:                                                   */
         /**
          *    RADM VC3-7 queue is not empty.
         */
         uint32_t VCN_Q_NOT_EMPTY : 1; /* bit 19; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1578     */
         /* Description:                                                   */
         /**
          *    Receive request pending status.
         */
         uint32_t RADM_XFER_PENDING : 1; /* bit 20; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1585     */
         /* Description:                                                   */
         /**
          *    eDMA transfer pending status.
         */
         uint32_t EDMA_XFER_PENDING : 1; /* bit 21; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1592     */
         /* Description:                                                   */
         /**
          *    AXI Slave DBI transfer pending status.
         */
         uint32_t BRDG_DBI_XFER_PENDING : 1; /* bit 22; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1599     */
         /* Description:                                                   */
         /**
          *    AXI Slave non-DBI transfer pending status.
         */
         uint32_t BRDG_SLV_XFER_PENDING : 1; /* bit 23; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1606     */
         /* Description:                                                   */
         /**
          *    CDM register in reset
         */
         uint32_t CDM_IN_RESET : 1; /* bit 24; R; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1613     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_31 : 7; /* bits 31 to 25; R; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_LINK_DBG_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_ERR_STS */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 1621              */
/* Description:                                                            */
/**
 *    PCIe Controller 0 Error Status
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1624     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_4 : 5; /* bits 4 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1632     */
         /* Description:                                                   */
         /**
          *    Parity error at front end of the transmit datapath.
         */
         uint32_t TXDATA_PERR_FRONT : 1; /* bit 5; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1640     */
         /* Description:                                                   */
         /**
          *    Parity error at back end of the transmit datapath.
         */
         uint32_t TXDATA_PERR_BACK : 1; /* bit 6; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1648     */
         /* Description:                                                   */
         /**
          *    Parity error the receive datapath.
         */
         uint32_t RXDATA_PERR : 1; /* bit 7; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1656     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_15 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1664     */
         /* Description:                                                   */
         /**
          *    RADM queue once overflowed. One bit for each virtual channel.
         */
         uint32_t VC_QOVERFLOW : 8; /* bits 23 to 16; R/W1C; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1673     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_28 : 5; /* bits 28 to 24; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1681     */
         /* Description:                                                   */
         /**
          *    Surprised Link down error event.
         */
         uint32_t SURPRISE_DOWN_ERR_STS : 1; /* bit 29; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1689     */
         /* Description:                                                   */
         /**
          *    Link down event.
         */
         uint32_t LINK_DOWN_STS : 1; /* bit 30; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1697     */
         /* Description:                                                   */
         /**
          *    APB slave timeout error.
         */
         uint32_t APBSLV_TIMEOUT_STS : 1; /* bit 31; R/W1C; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_ERR_STS_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_ERR_INT_CTRL */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 1706              */
/* Description:                                                            */
/**
 *    PCIe Controller 0 Error Interrupt Control
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1709     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_4 : 5; /* bits 4 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1717     */
         /* Description:                                                   */
         /**
          *    Interrupt enable for parity error at front end of the transmit
          *     datapath.
         */
         uint32_t TXDATA_PERR_FRONT_INT_EN : 1; /* bit 5; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1725     */
         /* Description:                                                   */
         /**
          *    Interrupt enable for parity error at back end of the transmit 
          *    datapath.
         */
         uint32_t TXDATA_PERR_BACK_INT_EN : 1; /* bit 6; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1733     */
         /* Description:                                                   */
         /**
          *    Interrupt enable for parity error the receive datapath.
         */
         uint32_t RXDATA_PERR_INT_EN : 1; /* bit 7; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1740     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_15 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1748     */
         /* Description:                                                   */
         /**
          *    Interrupt enable for RADM queue once overflowed. One bit for 
          *    each virtual channel.
         */
         uint32_t VC_QOVERFLOW_INT_EN : 4; /* bits 19 to 16; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1756     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_28 : 9; /* bits 28 to 20; R; 0x000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1764     */
         /* Description:                                                   */
         /**
          *    Interrupt enable for surprised link down event.
         */
         uint32_t SURPRISE_DOWN_ERR_INT_EN : 1; /* bit 29; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1771     */
         /* Description:                                                   */
         /**
          *    Interrupt enable for link down event.
         */
         uint32_t LINK_DOWN_INT_EN : 1; /* bit 30; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1778     */
         /* Description:                                                   */
         /**
          *    Interrupt enable for APB slave timeout error.
         */
         uint32_t APBSLV_TIMEOUT_INT_EN : 1; /* bit 31; R/W; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_ERR_INT_CTRL_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_INT_STS */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 1786              */
/* Description:                                                            */
/**
 *    PCIe Controller 0 Interrupt Status
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1789     */
         /* Description:                                                   */
         /**
          *    Beacon interrupt status. See bit 31 of PM Control and PM 
          *    Status register.
         */
         uint32_t BEACON_INT_STS : 1; /* bit 0; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1798     */
         /* Description:                                                   */
         /**
          *    Receive Message interrupt status. See Receive Message Status, 
          *    Receive Message Capture Control and Receive Message Interrupt 
          *    Control register
         */
         uint32_t RX_MSG_INT_STS : 1; /* bit 1; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1808     */
         /* Description:                                                   */
         /**
          *    Internal Error interrupt status. See Error Interrupt Status 
          *    and Error Interrupt Control register.
         */
         uint32_t ERR_INT_STS : 1; /* bit 2; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1817     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_3 : 1; /* bit 3; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1825     */
         /* Description:                                                   */
         /**
          *    Asserted when a reported error condition causes a bit to be 
          *    set in the Root Error Status register and the associated error
          *     message reporting enable bit is set in the Root Error Command
          *     register.
         */
         uint32_t AER_RC_ERR_INT_STS : 1; /* bit 4; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1836     */
         /* Description:                                                   */
         /**
          *    Asserted when the PME Interrupt Enable bit in the Root Control
          *     register is set to 1 and The PME Status bit in the Root 
          *    Status register is set to 1.
         */
         uint32_t PME_INT_STS : 1; /* bit 5; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1846     */
         /* Description:                                                   */
         /**
          *    Asserted when Hot-Plug interrupts are enabled in the Slot 
          *    Control register and Any bit in the Slot Status register is 
          *    equal to 1 and the associated event notification is enabled in
          *     the Slot Control register.
         */
         uint32_t HP_INT_STS : 1; /* bit 6; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1857     */
         /* Description:                                                   */
         /**
          *    Asserted when any device in the hierarchy reports any of the 
          *    following errors and the 
          *    associated enable bit is set in the Root Control register, or 
          *    when an internal error is detected
         */
         uint32_t SYS_ERR_RC_STS : 1; /* bit 7; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1868     */
         /* Description:                                                   */
         /**
          *    Asserted when the Link Autonomous Bandwidth Status register 
          *    (Link Status register bit 15) is updated and the Link 
          *    Autonomous Bandwidth Interrupt Enable (Link Control register 
          *    bit 11) is set.
         */
         uint32_t LINK_AUTO_BW_INT_STS : 1; /* bit 8; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1879     */
         /* Description:                                                   */
         /**
          *    Asserted when the Link Bandwidth Management Status register 
          *    (Link Status register bit 14) is updated and the Link 
          *    Bandwidth Management Interrupt Enable (Link Control register 
          *    bit 10) is set.
         */
         uint32_t BW_MGT_INT_STS : 1; /* bit 9; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1890     */
         /* Description:                                                   */
         /**
          *    Asserted when the Link Equalization 
          *    Request bit in the Link Status 2 Register has been set and the
          *     Link Equalization Request Interrupt Enable (Link Control 3 
          *    Register bit 1) is set.
         */
         uint32_t LINK_EQ_REQ_INT_STS : 1; /* bit 10; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1901     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_11 : 1; /* bit 11; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1909     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 20; /* bits 31 to 12; R; 0x00000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_INT_STS_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_MSI_GEN_CTRL */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 1918              */
/* Description:                                                            */
/**
 *    PCIe Controller 0 MSI Generation Control
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1921     */
         /* Description:                                                   */
         /**
          *    MSI Vector. 1-bit per vector.
         */
         uint32_t MSI_INT : 32; /* bits 31 to 0; R/W; 0x00000000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_MSI_GEN_CTRL_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_FSM_TRACK_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 1929              */
/* Description:                                                            */
/**
 *    PCIe Controller 0 FSM Track 1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1932     */
         /* Description:                                                   */
         /**
          *    Trigger state of FSM track.
         */
         uint32_t FSM_TRIG : 6; /* bits 5 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1939     */
         /* Description:                                                   */
         /**
          *    FSM Selection. 1'b0: LTSSM; 1'b1: PM State.
         */
         uint32_t FSM_SEL : 1; /* bit 6; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1946     */
         /* Description:                                                   */
         /**
          *    FSM track enable.
         */
         uint32_t FSM_MON_EN : 1; /* bit 7; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1953     */
         /* Description:                                                   */
         /**
          *    FSM state 1. The 1st state since the trigger state.
         */
         uint32_t FSM_1 : 6; /* bits 13 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1961     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 1.
         */
         uint32_t EVENT_A_1 : 1; /* bit 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1969     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 1.
         */
         uint32_t EVENT_B_1 : 1; /* bit 15; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1977     */
         /* Description:                                                   */
         /**
          *    FSM state 2. The 1st state since the trigger state.
         */
         uint32_t FSM_2 : 6; /* bits 21 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1985     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 2.
         */
         uint32_t EVENT_A_2 : 1; /* bit 22; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 1993     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 2.
         */
         uint32_t EVENT_B_2 : 1; /* bit 23; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2001     */
         /* Description:                                                   */
         /**
          *    FSM state 3. The 1st state since the trigger state.
         */
         uint32_t FSM_3 : 6; /* bits 29 to 24; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2009     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 3.
         */
         uint32_t EVENT_A_3 : 1; /* bit 30; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2017     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 3.
         */
         uint32_t EVENT_B_3 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_FSM_TRACK_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_FSM_TRACK_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 2026              */
/* Description:                                                            */
/**
 *    PCIe Controller 0 FSM Track 2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2030     */
         /* Description:                                                   */
         /**
          *    FSM state 4. The 1st state since the trigger state.
         */
         uint32_t FSM_4 : 6; /* bits 5 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2037     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 4.
         */
         uint32_t EVENT_A_4 : 1; /* bit 6; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2044     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 4.
         */
         uint32_t EVENT_B_4 : 1; /* bit 7; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2051     */
         /* Description:                                                   */
         /**
          *    FSM state 5. The 1st state since the trigger state.
         */
         uint32_t FSM_5 : 6; /* bits 13 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2058     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 5.
         */
         uint32_t EVENT_A_5 : 1; /* bit 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2065     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 5.
         */
         uint32_t EVENT_B_5 : 1; /* bit 15; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2072     */
         /* Description:                                                   */
         /**
          *    FSM state 6. The 1st state since the trigger state.
         */
         uint32_t FSM_6 : 6; /* bits 21 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2079     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 6.
         */
         uint32_t EVENT_A_6 : 1; /* bit 22; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2086     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 6.
         */
         uint32_t EVENT_B_6 : 1; /* bit 23; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2093     */
         /* Description:                                                   */
         /**
          *    FSM state 7. The 1st state since the trigger state.
         */
         uint32_t FSM_7 : 6; /* bits 29 to 24; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2100     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 7.
         */
         uint32_t EVENT_A_7 : 1; /* bit 30; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2107     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 7.
         */
         uint32_t EVENT_B_7 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_FSM_TRACK_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE0_FSM_TRACK_3 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 2115              */
/* Description:                                                            */
/**
 *    PCIe Controller 0 FSM Track 3
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2119     */
         /* Description:                                                   */
         /**
          *    FSM state 8. The 1st state since the trigger state.
         */
         uint32_t FSM_8 : 6; /* bits 5 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2126     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 8.
         */
         uint32_t EVENT_A_8 : 1; /* bit 6; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2133     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 8.
         */
         uint32_t EVENT_B_8 : 1; /* bit 7; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2140     */
         /* Description:                                                   */
         /**
          *    FSM state 9. The 1st state since the trigger state.
         */
         uint32_t FSM_9 : 6; /* bits 13 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2147     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 9.
         */
         uint32_t EVENT_A_9 : 1; /* bit 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2154     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 9.
         */
         uint32_t EVENT_B_9 : 1; /* bit 15; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2161     */
         /* Description:                                                   */
         /**
          *    FSM state 10. The 1st state since the trigger state.
         */
         uint32_t FSM_10 : 6; /* bits 21 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2168     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 10.
         */
         uint32_t EVENT_A_10 : 1; /* bit 22; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2175     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 10.
         */
         uint32_t EVENT_B_10 : 1; /* bit 23; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2182     */
         /* Description:                                                   */
         /**
          *    FSM state 11. The 1st state since the trigger state.
         */
         uint32_t FSM_11 : 6; /* bits 29 to 24; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2189     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 11.
         */
         uint32_t EVENT_A_11 : 1; /* bit 30; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2196     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 11.
         */
         uint32_t EVENT_B_11 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_FSM_TRACK_3_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_GEN_CTRL_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 2204              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 General Control 1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2207     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_7 : 8; /* bits 7 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2215     */
         /* Description:                                                   */
         /**
          *    SRIS operation mode. 
          *    0b: non-SRIS mode
          *    1b: SRIS mode
         */
         uint32_t SRIS_MODE : 1; /* bit 8; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2224     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_15 : 7; /* bits 15 to 9; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2232     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_21 : 6; /* bits 21 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2240     */
         /* Description:                                                   */
         /**
          *    Performs manual lane reversal for receive lanes in C-PCIe 
          *    mode. For use when automatic lane reversal does not occur 
          *    because lane 0 is not detected. It should be stable before 
          *    PCIe link establishment.
         */
         uint32_t RX_LANE_FLIP_EN : 1; /* bit 22; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2250     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_23 : 1; /* bit 23; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2258     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_29 : 6; /* bits 29 to 24; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2266     */
         /* Description:                                                   */
         /**
          *    Performs manual lane reversal for transmit lanes in C-PCIe 
          *    mode. For use when automatic lane reversal does not occur 
          *    because lane 0 is not detected. It should be stable before 
          *    PCIe link establishment.
         */
         uint32_t TX_LANE_FLIP_EN : 1; /* bit 30; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2276     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_GEN_CTRL_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_GEN_CTRL_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 2285              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 General Control 2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2288     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_7 : 8; /* bits 7 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2296     */
         /* Description:                                                   */
         /**
          *    AXI Master Clock Un-gating control.
         */
         uint32_t MSTR_ACLK_UNGATE : 1; /* bit 8; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2303     */
         /* Description:                                                   */
         /**
          *    AXI Slave Cock Un-gating control.
         */
         uint32_t SLV_ACLK_UNGATE : 1; /* bit 9; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2310     */
         /* Description:                                                   */
         /**
          *    AXI DBI Clock Un-gating control.
         */
         uint32_t DBI_ACLK_UNGATE : 1; /* bit 10; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2317     */
         /* Description:                                                   */
         /**
          *    PCIE1 Misc Override bit
         */
         uint32_t PCIE1_MISC_OVERRIDE : 1; /* bit 11; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2324     */
         /* Description:                                                   */
         /**
          *    AXI Slave Read Request No Snoop.
         */
         uint32_t SLV_AR_NS : 1; /* bit 12; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2331     */
         /* Description:                                                   */
         /**
          *    AXI Slave Write Request No Snoop.
         */
         uint32_t SLV_AW_NS : 1; /* bit 13; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2338     */
         /* Description:                                                   */
         /**
          *    AXI Slave Read Request Relaxed Ordering.
         */
         uint32_t SLV_AR_RO : 1; /* bit 14; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2345     */
         /* Description:                                                   */
         /**
          *    AXI Slave Write Request Relaxed Ordering.
         */
         uint32_t SLV_AW_RO : 1; /* bit 15; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2352     */
         /* Description:                                                   */
         /**
          *    AXI Slave Write Request bypassing iATU.
         */
         uint32_t SLV_AR_ATU_BYPASS : 1; /* bit 16; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2359     */
         /* Description:                                                   */
         /**
          *    AXI Slave Read Request bypassing iATU.
         */
         uint32_t SLV_AW_ATU_BYPASS : 1; /* bit 17; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2366     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_31 : 14; /* bits 31 to 18; R; 0x0000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_GEN_CTRL_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_GEN_CTRL_3 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 2375              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 General Control 3
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2378     */
         /* Description:                                                   */
         /**
          *    LTSSM Enable. Active high. 
          *    Set it low to hold the LTSSM in the Detect state until your 
          *    application is ready. Set it high to allow the LTSSM to 
          *    continue link establishment.
         */
         uint32_t LTSSM_EN : 1; /* bit 0; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2388     */
         /* Description:                                                   */
         /**
          *    Configuration Request Retry Status (CRS) Enable. Active high.
          *    Provides a capability to defer incoming configuration requests
          *     until initialization is complete. When this bit is set, PCIe 
          *    controller completes incoming configuration requests with a 
          *    Configuration Request Retry Status. Other incoming requests 
          *    complete with unsupported request status.
         */
         uint32_t CRS_EN : 1; /* bit 1; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2402     */
         /* Description:                                                   */
         /**
          *    Hot Reset. A rising edge causes a hot reset. PCIe subsystem 
          *    generates a one-cycle pulse for app_init_rst to PCIe 
          *    controller in core_clk domain on this rising edge of this 
          *    register. To trigger a hot reset, you can write 1 to this bit.
          *     This read value of this bit is always 0.
         */
         uint32_t HOT_RESET : 1; /* bit 2; W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2414     */
         /* Description:                                                   */
         /**
          *    Hold and release LTSSM. As long as this signal is '1', the 
          *    controller stays in the current LTSSM.
         */
         uint32_t RAS_DES_SD_HOLD_LTSSM : 1; /* bit 3; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2422     */
         /* Description:                                                   */
         /**
          *    Select for 8-bit signals within 32-bit signals.
         */
         uint32_t DBG_SEL_BYTE : 2; /* bits 5 to 4; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2429     */
         /* Description:                                                   */
         /**
          *    Select for 32-bit signals within a 128-bit debug group.
         */
         uint32_t DBG_SEL_DWORD : 2; /* bits 7 to 6; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2436     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_11 : 4; /* bits 11 to 8; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2444     */
         /* Description:                                                   */
         /**
          *    DBI Read-only Write Disable.
         */
         uint32_t DBI_RO_WR_DISABLE : 1; /* bit 12; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2451     */
         /* Description:                                                   */
         /**
          *    Diagnostic Control Bus.
          *    Bit [2]: Select Fast Link Mode
          *    Bit [1]: Insert ECRC error by inverting the LSB of ECRC
          *    Bit [0]: Insert LCRC error by inverting the LSB of LCRC
         */
         uint32_t DIAG_CTRL_BUS : 3; /* bits 15 to 13; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2461     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_23 : 8; /* bits 23 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2469     */
         /* Description:                                                   */
         /**
          *    Select for native core debug groups.
         */
         uint32_t DBG_SEL_GROUP : 2; /* bits 25 to 24; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2476     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_24 : 2; /* bits 27 to 26; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2484     */
         /* Description:                                                   */
         /**
          *    Select for PHY lane for debug.
         */
         uint32_t DBG_SEL_PHY_LANE : 2; /* bits 29 to 28; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2491     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_31 : 2; /* bits 31 to 30; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_GEN_CTRL_3_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_GEN_CTRL_4 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 2500              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 General Control 4
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2503     */
         /* Description:                                                   */
         /**
          *    app_pf_frs_ready Enable. Set the specific function to be ready
          *     for sending FRS message
         */
         uint32_t APP_PF_FRS_READY : 8; /* bits 7 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2511     */
         /* Description:                                                   */
         /**
          *    app_drs_ready Enable. Set the upstream port to be ready for 
          *    sending DRS message
         */
         uint32_t APP_DRS_READY : 1; /* bit 8; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2519     */
         /* Description:                                                   */
         /**
          *    Margining Ready. Indicates when the PHY or Margining software 
          *    is ready to accept margining commands. This signal is 
          *    reflected in Margining Ready field of Margining Port Status 
          *    register. If the PHY can accept margining commands when the 
          *    current link speed is 16GT/s, you can set this signal to a 
          *    fixed value of '1'. For Synopsys Gen4 PHYs, this signal should
          *     be tied to '1'.
         */
         uint32_t APP_MARGINING_READY : 1; /* bit 9; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2532     */
         /* Description:                                                   */
         /**
          *    Margining Software Ready. Indicates that the required 
          *    margining software has performed the required initialization 
          *    when margining is partially implemented using Device Driver 
          *    software. This signal is reflected in Margining Software Ready
          *     field of Margining Port Status register. If 
          *    MARGINING_USES_DRIVER_SOFTWARE field of Margining Port 
          *    Capabilities Register is '0', you can set this signal to a 
          *    fixed value of '0'. For Synopsys Gen4 PHYs, this signal should
          *     be tied to '0'.
         */
         uint32_t APP_MARGINING_SOFTWARE_READY : 1; /* bit 10; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2547     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_15 : 5; /* bits 15 to 11; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2555     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_25 : 10; /* bits 25 to 16; R; 0x000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2563     */
         /* Description:                                                   */
         /**
          *    MSIX Table RAM Debug Mode. Use this input to activate the 
          *    debug mode and allow direct read/write access to the Table.
         */
         uint32_t DBG_TABLE : 1; /* bit 26; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2572     */
         /* Description:                                                   */
         /**
          *    MSIX PBA RAM Debug Mode. Use this input to activate the debug 
          *    mode and allow direct read/write access to the PBA.
         */
         uint32_t DBG_PBA : 1; /* bit 27; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2580     */
         /* Description:                                                   */
         /**
          *    Controls the start/end of time based analysis. You must only 
          *    set the pins to the required value for the duration of one 
          *    clock cycle.
         */
         uint32_t RAS_DES_TBA_CTRL : 2; /* bits 29 to 28; W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2590     */
         /* Description:                                                   */
         /**
          *    When PCIe link goes down and  LTSSM_EN_CLR_MASK is 1, LTSSM_EN
          *     goes to its reset value.  When PCIe link goes down and  
          *    LTSSM_EN_CLR_MASK is 0, LTSSM_EN does not change.
         */
         uint32_t LTSSM_EN_CLR_MASK : 1; /* bit 30; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2600     */
         /* Description:                                                   */
         /**
          *    When PCIe link goes down and  CRS_EN_CLR_MASK is 1, CRS_EN 
          *    goes to its reset value.  When PCIe link goes down and  
          *    CRS_EN_CLR_MASK is 0, CRS_EN does not change.
         */
         uint32_t CRS_EN_CLR_MASK : 1; /* bit 31; R/W; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_GEN_CTRL_4_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_PM_CTRL */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 2610              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 PM Control
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2613     */
         /* Description:                                                   */
         /**
          *    PF Index of PM_PME request and PM status. Set the PF Index 
          *    before sending PM_PME message or accessing PCIe Controller 1 
          *    PM Status register.
         */
         uint32_t PME_PF_INDEX : 5; /* bits 4 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2622     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_6 : 2; /* bits 6 to 5; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2630     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_7 : 1; /* bit 7; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2638     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_15 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2646     */
         /* Description:                                                   */
         /**
          *    PM_PME Message Request. The PF and VF indices are specified by
          *     PME_PF_INDEX, PME_VF_ACTIVE and PME_VF_INDEX. To send a 
          *    PM_Message, write 1 to this bit. The read value of this bit is
          *     always 0.
         */
         uint32_t PM_PME_REQ : 1; /* bit 16; W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2657     */
         /* Description:                                                   */
         /**
          *    Request from your application to enter ASPM state L1. It is 
          *    only effective when ASPM L1 is enabled. PCIe Controller 
          *    ignores the ASPM L1 entry request when it is busy processing a
          *     transaction.
         */
         uint32_t ENTER_ASPM_L1 : 1; /* bit 17; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2667     */
         /* Description:                                                   */
         /**
          *    Request from your application to exit ASPM state L1. It is 
          *    only effective when ASPM L1 is enabled.
         */
         uint32_t EXIT_ASPM_L1 : 1; /* bit 18; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2675     */
         /* Description:                                                   */
         /**
          *    Indication from your application that it is ready to enter the
          *     L23 state. The register is set for applications that must 
          *    control L23 entry (in case certain tasks must be performed 
          *    before going into L23). PCIe Controller delays sending 
          *    PM_Enter_L23 (in response to PM_Turn_Off) until this register 
          *    is set. Set it to 1 for applications that do not require this 
          *    feature.
         */
         uint32_t READY_ENTER_L23 : 1; /* bit 19; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2688     */
         /* Description:                                                   */
         /**
          *    Request from your application to wake up reference clock.
         */
         uint32_t APP_CLK_REQ : 1; /* bit 20; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2695     */
         /* Description:                                                   */
         /**
          *    Clock PM feature enabled by application. Used to inhibit the 
          *    programming of the Clock PM in Link Control Register.
         */
         uint32_t APP_CLK_PM_EN : 1; /* bit 21; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2703     */
         /* Description:                                                   */
         /**
          *    The application can set this input to 1'b1 to prevent entry to
          *     L1 Sub-states. This pin is used to gate the L1 sub-state 
          *    enable bits from the L1 PM Substates Control 1 Register.
         */
         uint32_t APP_L1SUB_DISABLE : 1; /* bit 22; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2713     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_30 : 8; /* bits 30 to 23; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2721     */
         /* Description:                                                   */
         /**
          *    Beacon Interrupt Enable. Active High. When SII controller 
          *    receives a beacon in L2 and Beacon Interrupt Enable is set, 
          *    SII controller asserts rx_beacon_int.
         */
         uint32_t BEACON_INT_EN : 1; /* bit 31; R/W; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_PM_CTRL_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_PM_STS */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 2731              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 PM Status
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2734     */
         /* Description:                                                   */
         /**
          *    The current power management D-state.
         */
         uint32_t PM_DSTATE : 3; /* bits 2 to 0; R; 0x4 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2742     */
         /* Description:                                                   */
         /**
          *    PME Enable bit in the PMCSR.
         */
         uint32_t PM_PME_EN : 1; /* bit 3; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2750     */
         /* Description:                                                   */
         /**
          *    PME Status bit from the PMCSR.
         */
         uint32_t PM_STATUS : 1; /* bit 4; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2758     */
         uint32_t PM_L1SUB_STATE : 3; /* bits 7 to 5; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2764     */
         /* Description:                                                   */
         /**
          *    The current power state of PM controller.
          *    *3’b001: L0s;
          *    *3’b010: L1;
          *    *3’b011: L2;
          *    *3’b100: L3;
          *    *3’b000: L0 and others.
         */
         uint32_t PM_CURNT_STATE : 3; /* bits 10 to 8; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2777     */
         /* Description:                                                   */
         /**
          *    Power management is in L0s state.
         */
         uint32_t PM_LINKST_IN_L0S : 1; /* bit 11; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2785     */
         /* Description:                                                   */
         /**
          *    Power management is in L1 state.
         */
         uint32_t PM_LINKST_IN_L1 : 1; /* bit 12; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2793     */
         /* Description:                                                   */
         /**
          *    Power management is in L1 substate.
         */
         uint32_t PM_LINKST_IN_L1SUB : 1; /* bit 13; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2801     */
         /* Description:                                                   */
         /**
          *    Power management is in L2 state.
         */
         uint32_t PM_LINKST_IN_L2 : 1; /* bit 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2809     */
         /* Description:                                                   */
         /**
          *    Power management is exiting L2 state. Not applicable for 
          *    downstream port.
         */
         uint32_t PM_LINKST_L2_EXIT : 1; /* bit 15; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2818     */
         /* Description:                                                   */
         /**
          *    REFCLK/PCLK removal request from controller to PHY.
         */
         uint32_t PCLKREQ_N : 2; /* bits 17 to 16; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2826     */
         /* Description:                                                   */
         /**
          *    REFCLK/PCLK removal acknowledge from PHY to controller.
         */
         uint32_t PCLKACK_N : 1; /* bit 18; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2834     */
         /* Description:                                                   */
         /**
          *    Controller instructs the PHY to disable the receiver 
          *    Electrical Idle detection logic.
         */
         uint32_t RXELECIDLE_DIS : 1; /* bit 19; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2843     */
         /* Description:                                                   */
         /**
          *    Controller instructs the PHY to disable the transmitter Common
          *     Mode logic.
         */
         uint32_t TXCOMMONMODE_DIS : 1; /* bit 20; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2852     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t PM_SLAVE_STATE : 5; /* bits 25 to 21; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2860     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t PM_MASTER_STATE : 5; /* bits 30 to 26; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2868     */
         /* Description:                                                   */
         /**
          *    Beacon Interrupt Status. Active High. When SII controller 
          *    receives a beacon in L2 and Beacon Interrupt Enable is set, 
          *    SII controller will set Beacon Interrupt Status. Write 1 to 
          *    this register will clear the status.
         */
         uint32_t BEACON_INT_STS : 1; /* bit 31; R/W1C; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_PM_STS_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_TX_MSG_HDR_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 2880              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 Transmit Message Header 1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2883     */
         /* Description:                                                   */
         /**
          *    Tied to 0.
         */
         uint32_t MSG_HDR_LENGTH : 10; /* bits 9 to 0; R; 0x000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2891     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_10 : 2; /* bits 11 to 10; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2899     */
         /* Description:                                                   */
         /**
          *    Attribute[1:0], Relaxing Ordering and No Snoop.
         */
         uint32_t MSG_HDR_ATTR : 2; /* bits 13 to 12; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2906     */
         /* Description:                                                   */
         /**
          *    Poisoned TLP (EP) bit.
         */
         uint32_t MSG_HDR_EP : 1; /* bit 14; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2913     */
         /* Description:                                                   */
         /**
          *    TLP Digest (TD) bit.
         */
         uint32_t MSG_HDR_TD : 1; /* bit 15; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2920     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_16 : 1; /* bit 16; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2928     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_17 : 1; /* bit 17; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2936     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_18 : 1; /* bit 18; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2944     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_19 : 1; /* bit 19; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2952     */
         /* Description:                                                   */
         /**
          *    Traffic Class.
         */
         uint32_t MSG_HDR_TC : 3; /* bits 22 to 20; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2959     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_23 : 1; /* bit 23; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2967     */
         /* Description:                                                   */
         /**
          *    Type field.
         */
         uint32_t MSG_HDR_TYPE : 5; /* bits 28 to 24; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2974     */
         /* Description:                                                   */
         /**
          *    Format field
         */
         uint32_t MSG_HDR_FM : 2; /* bits 30 to 29; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2981     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_31 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_TX_MSG_HDR_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_TX_MSG_HDR_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 2990              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 Transmit Message Header 2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 2993     */
         /* Description:                                                   */
         /**
          *    Message Code, Byte 7 of Controller 1 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE7 : 8; /* bits 7 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3001     */
         /* Description:                                                   */
         /**
          *    Message Tag, Byte 6 of Controller 1 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE6 : 8; /* bits 15 to 8; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3009     */
         /* Description:                                                   */
         /**
          *    Requester ID[7:0], Byte 5 of Controller 1 Transmit Message 
          *    Header
         */
         uint32_t MSG_HDR_BYTE5 : 8; /* bits 23 to 16; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3017     */
         /* Description:                                                   */
         /**
          *    Requeser ID[15:8], Byte 4 of Controller 1 Transmit Message 
          *    Header
         */
         uint32_t MSG_HDR_BYTE4 : 8; /* bits 31 to 24; R/W; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_TX_MSG_HDR_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_TX_MSG_HDR_3 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 3026              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 Transmit Message Header 3
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3029     */
         /* Description:                                                   */
         /**
          *    Byte 11 of Controller 1 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE11 : 8; /* bits 7 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3036     */
         /* Description:                                                   */
         /**
          *    Byte 10 of Controller 1 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE10 : 8; /* bits 15 to 8; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3043     */
         /* Description:                                                   */
         /**
          *    Byte 9 of Controller 1 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE9 : 8; /* bits 23 to 16; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3050     */
         /* Description:                                                   */
         /**
          *    Byte 8 of Controller 1 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE8 : 8; /* bits 31 to 24; R/W; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_TX_MSG_HDR_3_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_TX_MSG_HDR_4 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 3058              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 Transmit Message Header 4
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3061     */
         /* Description:                                                   */
         /**
          *    Byte 15 of Controller 1 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE15 : 8; /* bits 7 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3068     */
         /* Description:                                                   */
         /**
          *    Byte 14 of Controller 1 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE14 : 8; /* bits 15 to 8; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3075     */
         /* Description:                                                   */
         /**
          *    Byte 13 of Controller 1 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE13 : 8; /* bits 23 to 16; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3082     */
         /* Description:                                                   */
         /**
          *    Byte 12 of Controller 1 Transmit Message Header
         */
         uint32_t MSG_HDR_BYTE12 : 8; /* bits 31 to 24; R/W; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_TX_MSG_HDR_4_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_TX_MSG_REQ */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 3090              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 Transmit Message Request
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3093     */
         /* Description:                                                   */
         /**
          *    PF number of message requester.
         */
         uint32_t TX_MSG_PF_NUM : 5; /* bits 4 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3100     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_6 : 2; /* bits 6 to 5; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3108     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_7 : 1; /* bit 7; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3116     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_15 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3124     */
         /* Description:                                                   */
         /**
          *    LTR message request. A rising edge will trigger a message 
          *    request. Self-cleared when the message is granted.
         */
         uint32_t LTR_REQ : 1; /* bit 16; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3132     */
         /* Description:                                                   */
         /**
          *    Vendor-defined message request. A rising edge will trigger a 
          *    message request. Self-cleared when the message is granted.
         */
         uint32_t VEN_MSG_REQ : 1; /* bit 17; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3141     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_18 : 1; /* bit 18; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3149     */
         /* Description:                                                   */
         /**
          *    PME_Turn_Off message request. A rising edge will trigger a 
          *    message request. Write a 1 to this bit to send a PME_Turn_Off 
          *    message. The read value of this bit is always 0. Valid in RC 
          *    mode.
         */
         uint32_t PME_TURN_OFF_REQ : 1; /* bit 19; W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3160     */
         /* Description:                                                   */
         /**
          *    Unlock message. A rising edge will trigger a message request. 
          *    Write a 1 to this bit to send an Unlock message. This read 
          *    value of this bit is always 0. Valid in RC mode.
         */
         uint32_t UNLOCK_REQ : 1; /* bit 20; W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3170     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_21 : 1; /* bit 21; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3178     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_22 : 1; /* bit 22; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3186     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_23 : 1; /* bit 23; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3194     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 8; /* bits 31 to 24; R; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_TX_MSG_REQ_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_RX_MSG_DATA_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 3203              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 Receive Message Data 1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3207     */
         /* Description:                                                   */
         /**
          *    Byte 3 of Controller 1 receive message data.
         */
         uint32_t MSG_DATA_BYTE3 : 8; /* bits 7 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3214     */
         /* Description:                                                   */
         /**
          *    Byte 2 of Controller 1 receive message data.
         */
         uint32_t MSG_DATA_BYTE2 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3221     */
         /* Description:                                                   */
         /**
          *    Byte 1 of Controller 1 receive message data.
         */
         uint32_t MSG_DATA_BYTE1 : 8; /* bits 23 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3228     */
         /* Description:                                                   */
         /**
          *    Byte 0 of Controller 1 receive message data.
         */
         uint32_t MSG_DATA_BYTE0 : 8; /* bits 31 to 24; R; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_RX_MSG_DATA_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_RX_MSG_DATA_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 3236              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 Receive Message Data 2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3240     */
         /* Description:                                                   */
         /**
          *    Byte 7 of Controller 1 receive message data.
         */
         uint32_t MSG_DATA_BYTE7 : 8; /* bits 7 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3247     */
         /* Description:                                                   */
         /**
          *    Byte 6 of Controller 1 receive message data.
         */
         uint32_t MSG_DATA_BYTE6 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3254     */
         /* Description:                                                   */
         /**
          *    Byte 5 of Controller 1 receive message data.
         */
         uint32_t MSG_DATA_BYTE5 : 8; /* bits 23 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3261     */
         /* Description:                                                   */
         /**
          *    Byte 4 of Controller 1 receive message data.
         */
         uint32_t MSG_DATA_BYTE4 : 8; /* bits 31 to 24; R; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_RX_MSG_DATA_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_RX_MSG_HDR_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 3269              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 Receive Message Header 1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3273     */
         /* Description:                                                   */
         /**
          *    Byte 3 of Controller 1 receive message header.
         */
         uint32_t MSG_HDR_BYTE3 : 8; /* bits 7 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3280     */
         /* Description:                                                   */
         /**
          *    Byte 2 of Controller 1 receive message header.
         */
         uint32_t MSG_HDR_BYTE2 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3287     */
         /* Description:                                                   */
         /**
          *    Byte 1 of Controller 1 receive message header.
         */
         uint32_t MSG_HDR_BYTE1 : 8; /* bits 23 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3294     */
         /* Description:                                                   */
         /**
          *    Byte 0 of Controller 1 receive message header.
         */
         uint32_t MSG_HDR_BYTE0 : 8; /* bits 31 to 24; R; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_RX_MSG_HDR_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_RX_MSG_HDR_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 3302              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 Receive Message Header 2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3306     */
         /* Description:                                                   */
         /**
          *    Byte 7 of Controller 1 receive message header.
         */
         uint32_t MSG_HDR_BYTE7 : 8; /* bits 7 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3313     */
         /* Description:                                                   */
         /**
          *    Byte 6 of Controller 1 receive message header.
         */
         uint32_t MSG_HDR_BYTE6 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3320     */
         /* Description:                                                   */
         /**
          *    Byte 5 of Controller 1 receive message header.
         */
         uint32_t MSG_HDR_BYTE5 : 8; /* bits 23 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3327     */
         /* Description:                                                   */
         /**
          *    Byte 4 of Controller 1 receive message header.
         */
         uint32_t MSG_HDR_BYTE4 : 8; /* bits 31 to 24; R; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_RX_MSG_HDR_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_RX_MSG_HDR_3 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 3335              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 Receive Message Header 3
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3339     */
         /* Description:                                                   */
         /**
          *    Byte 11 of Controller 1 receive message header.
         */
         uint32_t MSG_HDR_BYTE11 : 8; /* bits 7 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3346     */
         /* Description:                                                   */
         /**
          *    Byte 10 of Controller 1 receive message header.
         */
         uint32_t MSG_HDR_BYTE10 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3353     */
         /* Description:                                                   */
         /**
          *    Byte 9 of Controller 1 receive message header.
         */
         uint32_t MSG_HDR_BYTE9 : 8; /* bits 23 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3360     */
         /* Description:                                                   */
         /**
          *    Byte 8 of Controller 1 receive message header.
         */
         uint32_t MSG_HDR_BYTE8 : 8; /* bits 31 to 24; R; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_RX_MSG_HDR_3_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_RX_MSG_HDR_4 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 3368              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 Receive Message Header 4
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3372     */
         /* Description:                                                   */
         /**
          *    Byte 15 of Controller 1 receive message header.
         */
         uint32_t MSG_HDR_BYTE15 : 8; /* bits 7 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3379     */
         /* Description:                                                   */
         /**
          *    Byte 14 of Controller 1 receive message header.
         */
         uint32_t MSG_HDR_BYTE14 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3386     */
         /* Description:                                                   */
         /**
          *    Byte 13 of Controller 1 receive message header.
         */
         uint32_t MSG_HDR_BYTE13 : 8; /* bits 23 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3393     */
         /* Description:                                                   */
         /**
          *    Byte 12 of Controller 1 receive message header.
         */
         uint32_t MSG_HDR_BYTE12 : 8; /* bits 31 to 24; R; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_RX_MSG_HDR_4_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_RX_MSG_STS */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 3401              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 Receive Message Status
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3404     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_10 : 11; /* bits 10 to 0; R; 0x000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3412     */
         /* Description:                                                   */
         /**
          *    PME_TO_Ack message status. Write 1 to this bit will clear the 
          *    status. Valid in RC mode.
         */
         uint32_t PME_TO_ACK_STS : 1; /* bit 11; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3421     */
         /* Description:                                                   */
         /**
          *    PM_PME message status. Write 1 to this bit will clear the 
          *    status. Valid in RC mode.
         */
         uint32_t PM_PME_STS : 1; /* bit 12; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3430     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_15 : 3; /* bits 15 to 13; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3438     */
         /* Description:                                                   */
         /**
          *    LTR message status. Write 1 to this bit will clear the status.
          *     Valid in RC mode.
         */
         uint32_t LTR_STS : 1; /* bit 16; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3447     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_17 : 1; /* bit 17; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3455     */
         /* Description:                                                   */
         /**
          *    Vendor-defined type 1 message status. Write 1 to this bit will
          *     clear the status.
         */
         uint32_t VDM_TYPE1_STS : 1; /* bit 18; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3464     */
         /* Description:                                                   */
         /**
          *    PME_Turn_Off message status. Write 1 to this bit will clear 
          *    the status. Valid in EP mode.
         */
         uint32_t PME_TURN_OFF_STS : 1; /* bit 19; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3473     */
         /* Description:                                                   */
         /**
          *    Unlock message status. Write 1 to this bit will clear the 
          *    status. Valid in EP mode.
         */
         uint32_t UNLOCK_STS : 1; /* bit 20; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3482     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_21 : 1; /* bit 21; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3490     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_22 : 1; /* bit 22; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3498     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_23 : 1; /* bit 23; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3506     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_30 : 7; /* bits 30 to 24; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3514     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_RX_MSG_STS_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_RX_MSG_CAP_CTRL */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 3523              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 Receive Message Capture Control
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3527     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 32; /* bits 31 to 0; R; 0x00000000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_RX_MSG_CAP_CTRL_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_RX_MSG_INT_CTRL */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 3535              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 Receive Message Interrupt Control
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3538     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_10 : 11; /* bits 10 to 0; R; 0x000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3546     */
         /* Description:                                                   */
         /**
          *    Interrupt enable when PME_TO_Ack message in received Message 
          *    Header register.
         */
         uint32_t PME_TO_ACK_INT_EN : 1; /* bit 11; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3554     */
         /* Description:                                                   */
         /**
          *    Interrupt enable when PM_PME message in received Message 
          *    Header register.
         */
         uint32_t PM_PME_INT_EN : 1; /* bit 12; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3562     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_15 : 3; /* bits 15 to 13; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3570     */
         /* Description:                                                   */
         /**
          *    Interrupt enable when LTR message in received Message Header 
          *    register.
         */
         uint32_t LTR_INT_EN : 1; /* bit 16; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3578     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_17 : 1; /* bit 17; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3586     */
         /* Description:                                                   */
         /**
          *    Interrupt enable when Vendor-defined type 1 message in 
          *    received Message Header register.
         */
         uint32_t VDM_TYPE1_INT_EN : 1; /* bit 18; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3594     */
         /* Description:                                                   */
         /**
          *    Interrupt enable when PME_Turn_Off message in received Message
          *     Header register.
         */
         uint32_t PME_TURN_OFF_INT_EN : 1; /* bit 19; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3602     */
         /* Description:                                                   */
         /**
          *    Interrupt enable when Unlock message in received Message 
          *    Header register.
         */
         uint32_t UNLOCK_INT_EN : 1; /* bit 20; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3610     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_21 : 1; /* bit 21; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3618     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_22 : 1; /* bit 22; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3626     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_23 : 1; /* bit 23; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3634     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_30 : 7; /* bits 30 to 24; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3642     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_RX_MSG_INT_CTRL_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_LINK_DBG_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 3651              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 Link Debug 1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3655     */
         /* Description:                                                   */
         /**
          *    Receiver detected on lanes. 1-bit for each lane.
         */
         uint32_t RECEIVER_DETECTED : 4; /* bits 3 to 0; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3662     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_15 : 12; /* bits 15 to 4; R; 0x000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3669     */
         /* Description:                                                   */
         /**
          *    Symbol lock. 1-bit for each lane.
         */
         uint32_t SYMBOL_LOCK : 4; /* bits 19 to 16; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3676     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 12; /* bits 31 to 20; R; 0x000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_LINK_DBG_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_LINK_DBG_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 3684              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 Link Debug 2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3688     */
         /* Description:                                                   */
         /**
          *    LTSSM state.
         */
         uint32_t SMLH_LTSSM_STATE : 6; /* bits 5 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3695     */
         /* Description:                                                   */
         /**
          *    Physical layer is up or down.
         */
         uint32_t SMLH_LINK_UP : 1; /* bit 6; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3702     */
         /* Description:                                                   */
         /**
          *    Data link layer is up or down.
         */
         uint32_t RDLH_LINK_UP : 1; /* bit 7; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3709     */
         /* Description:                                                   */
         /**
          *    Link signaling rate.
         */
         uint32_t RATE : 2; /* bits 9 to 8; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3716     */
         /* Description:                                                   */
         /**
          *    PHY power state.
         */
         uint32_t PHY_POWRDOWN : 3; /* bits 12 to 10; R; 0x2 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3723     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_15 : 3; /* bits 15 to 13; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3730     */
         /* Description:                                                   */
         /**
          *    RADM VC0 queue is not empty.
         */
         uint32_t VC0_Q_NOT_EMPTY : 1; /* bit 16; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3737     */
         /* Description:                                                   */
         /**
          *    RADM VC1 queue is not empty.
         */
         uint32_t VC1_Q_NOT_EMPTY : 1; /* bit 17; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3744     */
         /* Description:                                                   */
         /**
          *    RADM VC2 queue is not empty.
         */
         uint32_t VC2_Q_NOT_EMPTY : 1; /* bit 18; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3751     */
         /* Description:                                                   */
         /**
          *    RADM VC3-7 queue is not empty.
         */
         uint32_t VCN_Q_NOT_EMPTY : 1; /* bit 19; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3758     */
         /* Description:                                                   */
         /**
          *    Receive request pending status.
         */
         uint32_t RADM_XFER_PENDING : 1; /* bit 20; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3765     */
         /* Description:                                                   */
         /**
          *    eDMA transfer pending status.
         */
         uint32_t EDMA_XFER_PENDING : 1; /* bit 21; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3772     */
         /* Description:                                                   */
         /**
          *    AXI Slave DBI transfer pending status.
         */
         uint32_t BRDG_DBI_XFER_PENDING : 1; /* bit 22; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3779     */
         /* Description:                                                   */
         /**
          *    AXI Slave non-DBI transfer pending status.
         */
         uint32_t BRDG_SLV_XFER_PENDING : 1; /* bit 23; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3786     */
         /* Description:                                                   */
         /**
          *    CDM register in reset
         */
         uint32_t CDM_IN_RESET : 1; /* bit 24; R; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3793     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_31 : 7; /* bits 31 to 25; R; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_LINK_DBG_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_ERR_STS */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 3801              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 Error Status
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3804     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_4 : 5; /* bits 4 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3812     */
         /* Description:                                                   */
         /**
          *    Parity error at front end of the transmit datapath.
         */
         uint32_t TXDATA_PERR_FRONT : 1; /* bit 5; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3820     */
         /* Description:                                                   */
         /**
          *    Parity error at back end of the transmit datapath.
         */
         uint32_t TXDATA_PERR_BACK : 1; /* bit 6; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3828     */
         /* Description:                                                   */
         /**
          *    Parity error the receive datapath.
         */
         uint32_t RXDATA_PERR : 1; /* bit 7; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3836     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_15 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3844     */
         /* Description:                                                   */
         /**
          *    RADM queue once overflowed. One bit for each virtual channel.
         */
         uint32_t VC_QOVERFLOW : 8; /* bits 23 to 16; R/W1C; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3853     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_28 : 5; /* bits 28 to 24; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3861     */
         /* Description:                                                   */
         /**
          *    Surprised Link down error event.
         */
         uint32_t SURPRISE_DOWN_ERR_STS : 1; /* bit 29; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3869     */
         /* Description:                                                   */
         /**
          *    Link down event.
         */
         uint32_t LINK_DOWN_STS : 1; /* bit 30; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3877     */
         /* Description:                                                   */
         /**
          *    APB slave timeout error.
         */
         uint32_t APBSLV_TIMEOUT_STS : 1; /* bit 31; R/W1C; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_ERR_STS_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_ERR_INT_CTRL */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 3886              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 Error Interrupt Control
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3889     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_4 : 5; /* bits 4 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3897     */
         /* Description:                                                   */
         /**
          *    Interrupt enable for parity error at front end of the transmit
          *     datapath.
         */
         uint32_t TXDATA_PERR_FRONT_INT_EN : 1; /* bit 5; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3905     */
         /* Description:                                                   */
         /**
          *    Interrupt enable for parity error at back end of the transmit 
          *    datapath.
         */
         uint32_t TXDATA_PERR_BACK_INT_EN : 1; /* bit 6; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3913     */
         /* Description:                                                   */
         /**
          *    Interrupt enable for parity error the receive datapath.
         */
         uint32_t RXDATA_PERR_INT_EN : 1; /* bit 7; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3920     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_15 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3928     */
         /* Description:                                                   */
         /**
          *    Interrupt enable for RADM queue once overflowed. One bit for 
          *    each virtual channel.
         */
         uint32_t VC_QOVERFLOW_INT_EN : 4; /* bits 19 to 16; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3936     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_28 : 9; /* bits 28 to 20; R; 0x000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3944     */
         /* Description:                                                   */
         /**
          *    Interrupt enable for surprised link down event.
         */
         uint32_t SURPRISE_DOWN_ERR_INT_EN : 1; /* bit 29; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3951     */
         /* Description:                                                   */
         /**
          *    Interrupt enable for link down event.
         */
         uint32_t LINK_DOWN_INT_EN : 1; /* bit 30; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3958     */
         /* Description:                                                   */
         /**
          *    Interrupt enable for APB slave timeout error.
         */
         uint32_t APBSLV_TIMEOUT_INT_EN : 1; /* bit 31; R/W; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_ERR_INT_CTRL_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_INT_STS */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 3966              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 Interrupt Status
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3969     */
         /* Description:                                                   */
         /**
          *    Beacon interrupt status. See bit 31 of PM Control and PM 
          *    Status register.
         */
         uint32_t BEACON_INT_STS : 1; /* bit 0; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3978     */
         /* Description:                                                   */
         /**
          *    Receive Message interrupt status. See Receive Message Status, 
          *    Receive Message Capture Control and Receive Message Interrupt 
          *    Control register
         */
         uint32_t RX_MSG_INT_STS : 1; /* bit 1; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3988     */
         /* Description:                                                   */
         /**
          *    Internal Error interrupt status. See Error Interrupt Status 
          *    and Error Interrupt Control register.
         */
         uint32_t ERR_INT_STS : 1; /* bit 2; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 3997     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_3 : 1; /* bit 3; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4005     */
         /* Description:                                                   */
         /**
          *    Asserted when a reported error condition causes a bit to be 
          *    set in the Root Error Status register and the associated error
          *     message reporting enable bit is set in the Root Error Command
          *     register.
         */
         uint32_t AER_RC_ERR_INT_STS : 1; /* bit 4; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4016     */
         /* Description:                                                   */
         /**
          *    Asserted when the PME Interrupt Enable bit in the Root Control
          *     register is set to 1 and The PME Status bit in the Root 
          *    Status register is set to 1.
         */
         uint32_t PME_INT_STS : 1; /* bit 5; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4026     */
         /* Description:                                                   */
         /**
          *    Asserted when Hot-Plug interrupts are enabled in the Slot 
          *    Control register and Any bit in the Slot Status register is 
          *    equal to 1 and the associated event notification is enabled in
          *     the Slot Control register.
         */
         uint32_t HP_INT_STS : 1; /* bit 6; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4037     */
         /* Description:                                                   */
         /**
          *    Asserted when any device in the hierarchy reports any of the 
          *    following errors and the 
          *    associated enable bit is set in the Root Control register, or 
          *    when an internal error is detected
         */
         uint32_t SYS_ERR_RC_STS : 1; /* bit 7; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4048     */
         /* Description:                                                   */
         /**
          *    Asserted when the Link Autonomous Bandwidth Status register 
          *    (Link Status register bit 15) is updated and the Link 
          *    Autonomous Bandwidth Interrupt Enable (Link Control register 
          *    bit 11) is set.
         */
         uint32_t LINK_AUTO_BW_INT_STS : 1; /* bit 8; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4059     */
         /* Description:                                                   */
         /**
          *    Asserted when the Link Bandwidth Management Status register 
          *    (Link Status register bit 14) is updated and the Link 
          *    Bandwidth Management Interrupt Enable (Link Control register 
          *    bit 10) is set.
         */
         uint32_t BW_MGT_INT_STS : 1; /* bit 9; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4070     */
         /* Description:                                                   */
         /**
          *    Asserted when the Link Equalization 
          *    Request bit in the Link Status 2 Register has been set and the
          *     Link Equalization Request Interrupt Enable (Link Control 3 
          *    Register bit 1) is set.
         */
         uint32_t LINK_EQ_REQ_INT_STS : 1; /* bit 10; R/W1C; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4081     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_11 : 1; /* bit 11; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4089     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 20; /* bits 31 to 12; R; 0x00000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_INT_STS_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_MSI_GEN_CTRL */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 4098              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 MSI Generation Control
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4101     */
         /* Description:                                                   */
         /**
          *    MSI Vector. 1-bit per vector.
         */
         uint32_t MSI_INT : 32; /* bits 31 to 0; R/W; 0x00000000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_MSI_GEN_CTRL_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_FSM_TRACK_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 4109              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 FSM Track 1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4112     */
         /* Description:                                                   */
         /**
          *    Trigger state of FSM track.
         */
         uint32_t FSM_TRIG : 6; /* bits 5 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4119     */
         /* Description:                                                   */
         /**
          *    FSM Selection. 1'b0: LTSSM; 1'b1: PM State.
         */
         uint32_t FSM_SEL : 1; /* bit 6; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4126     */
         /* Description:                                                   */
         /**
          *    FSM track enable.
         */
         uint32_t FSM_MON_EN : 1; /* bit 7; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4133     */
         /* Description:                                                   */
         /**
          *    FSM state 1. The 1st state since the trigger state.
         */
         uint32_t FSM_1 : 6; /* bits 13 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4141     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 1.
         */
         uint32_t EVENT_A_1 : 1; /* bit 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4149     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 1.
         */
         uint32_t EVENT_B_1 : 1; /* bit 15; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4157     */
         /* Description:                                                   */
         /**
          *    FSM state 2. The 1st state since the trigger state.
         */
         uint32_t FSM_2 : 6; /* bits 21 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4165     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 2.
         */
         uint32_t EVENT_A_2 : 1; /* bit 22; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4173     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 2.
         */
         uint32_t EVENT_B_2 : 1; /* bit 23; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4181     */
         /* Description:                                                   */
         /**
          *    FSM state 3. The 1st state since the trigger state.
         */
         uint32_t FSM_3 : 6; /* bits 29 to 24; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4189     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 3.
         */
         uint32_t EVENT_A_3 : 1; /* bit 30; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4197     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 3.
         */
         uint32_t EVENT_B_3 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_FSM_TRACK_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_FSM_TRACK_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 4206              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 FSM Track 2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4210     */
         /* Description:                                                   */
         /**
          *    FSM state 4. The 1st state since the trigger state.
         */
         uint32_t FSM_4 : 6; /* bits 5 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4217     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 4.
         */
         uint32_t EVENT_A_4 : 1; /* bit 6; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4224     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 4.
         */
         uint32_t EVENT_B_4 : 1; /* bit 7; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4231     */
         /* Description:                                                   */
         /**
          *    FSM state 5. The 1st state since the trigger state.
         */
         uint32_t FSM_5 : 6; /* bits 13 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4238     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 5.
         */
         uint32_t EVENT_A_5 : 1; /* bit 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4245     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 5.
         */
         uint32_t EVENT_B_5 : 1; /* bit 15; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4252     */
         /* Description:                                                   */
         /**
          *    FSM state 6. The 1st state since the trigger state.
         */
         uint32_t FSM_6 : 6; /* bits 21 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4259     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 6.
         */
         uint32_t EVENT_A_6 : 1; /* bit 22; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4266     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 6.
         */
         uint32_t EVENT_B_6 : 1; /* bit 23; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4273     */
         /* Description:                                                   */
         /**
          *    FSM state 7. The 1st state since the trigger state.
         */
         uint32_t FSM_7 : 6; /* bits 29 to 24; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4280     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 7.
         */
         uint32_t EVENT_A_7 : 1; /* bit 30; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4287     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 7.
         */
         uint32_t EVENT_B_7 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_FSM_TRACK_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PE1_FSM_TRACK_3 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 4295              */
/* Description:                                                            */
/**
 *    PCIe Controller 1 FSM Track 3
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4299     */
         /* Description:                                                   */
         /**
          *    FSM state 8. The 1st state since the trigger state.
         */
         uint32_t FSM_8 : 6; /* bits 5 to 0; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4306     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 8.
         */
         uint32_t EVENT_A_8 : 1; /* bit 6; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4313     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 8.
         */
         uint32_t EVENT_B_8 : 1; /* bit 7; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4320     */
         /* Description:                                                   */
         /**
          *    FSM state 9. The 1st state since the trigger state.
         */
         uint32_t FSM_9 : 6; /* bits 13 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4327     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 9.
         */
         uint32_t EVENT_A_9 : 1; /* bit 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4334     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 9.
         */
         uint32_t EVENT_B_9 : 1; /* bit 15; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4341     */
         /* Description:                                                   */
         /**
          *    FSM state 10. The 1st state since the trigger state.
         */
         uint32_t FSM_10 : 6; /* bits 21 to 16; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4348     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 10.
         */
         uint32_t EVENT_A_10 : 1; /* bit 22; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4355     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 10.
         */
         uint32_t EVENT_B_10 : 1; /* bit 23; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4362     */
         /* Description:                                                   */
         /**
          *    FSM state 11. The 1st state since the trigger state.
         */
         uint32_t FSM_11 : 6; /* bits 29 to 24; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4369     */
         /* Description:                                                   */
         /**
          *    Event A status in FSM state 11.
         */
         uint32_t EVENT_A_11 : 1; /* bit 30; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4376     */
         /* Description:                                                   */
         /**
          *    Event B status in FSM state 11.
         */
         uint32_t EVENT_B_11 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_FSM_TRACK_3_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_SUBSYSTEM_VERSION */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 4384              */
/* Description:                                                            */
/**
 *    PCIe Subsystem Version
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4388     */
         /* Description:                                                   */
         /**
          *    PCIe Subsystem Version
         */
         uint32_t PCIE_SUBSYSTEM_VERSION : 32; /* bits 31 to 0; R; 0x530a0000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_SUBSYSTEM_VERSION_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::APB_CLKFREQ_TIMEOUT */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 4396              */
/* Description:                                                            */
/**
 *    APB Clock Frequency and Timeout Threshold
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4399     */
         /* Description:                                                   */
         /**
          *    APB Clock Frequency (MHz). It is used to generate a one-cycle 
          *    pulse at every 1us.
         */
         uint32_t APB_CLKFREQ : 10; /* bits 9 to 0; R/W; 0x0ff */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4407     */
         /* Description:                                                   */
         /**
          *    APB Timer Disable. When it is set to 1, the 1us timer is 
          *    disabled.
         */
         uint32_t APB_TIMER_DIS : 1; /* bit 10; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4415     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_11 : 1; /* bit 11; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4423     */
         /* Description:                                                   */
         /**
          *    APB Clock divider control for PHY CR register clock. PHY CR 
          *    register clock is a divided clock from APB clock. PHY CR 
          *    register clock is devided by "PHY_CR_CLK_DIV+1".
         */
         uint32_t PHY_CR_CLK_DIV : 4; /* bits 15 to 12; R/W; 0x2 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4432     */
         /* Description:                                                   */
         /**
          *    APB timeout threshold (us).
         */
         uint32_t APB_TIMER_LIMIT : 16; /* bits 31 to 16; R/W; 0x0064 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_APB_CLKFREQ_TIMEOUT_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::SS_RST_CTRL_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 4440              */
/* Description:                                                            */
/**
 *    Subsystem Reset Control 3
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4443     */
         /* Description:                                                   */
         /**
          *    Soft Cold Reset. A soft cold reset will assert all resets 
          *    including the pwr_rst_n to PM controller in the PCIe 
          *    controller. The link partner is not directly reset by this 
          *    reset. To trigger a soft cold reset, you can write 1 to this 
          *    bit and then write 0 to this bit after a user defined period.
         */
         uint32_t SOFT_COLD_RESET_0 : 1; /* bit 0; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4455     */
         /* Description:                                                   */
         /**
          *    Soft Warm Reset. A soft warm reset will assert all resets 
          *    except the pwr_rst_n to PM controller in the PCIe controller. 
          *    The link partner is not directly reset by this reset. To 
          *    trigger a soft warm reset, you can write 1 to this bit and 
          *    then write 0 to this bit after a user defined period.
         */
         uint32_t SOFT_WARM_RESET_0 : 1; /* bit 1; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4467     */
         /* Description:                                                   */
         /**
          *    Soft PHY Reset. A soft PHY reset will assert phy_reset to PMA 
          *    of PHY. The PCIe controller, PHY MAC and link partner is not 
          *    directly reset by this reset. To trigger a PHY reset, you can 
          *    write 1 to this bit and then write 0 to this bit after a user 
          *    defined period.
         */
         uint32_t SOFT_PHY_RESET_0 : 1; /* bit 2; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4478     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_7 : 5; /* bits 7 to 3; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4486     */
         /* Description:                                                   */
         /**
          *    Soft Cold Reset. A soft cold reset will assert all resets 
          *    including the pwr_rst_n to PM controller in the PCIe 
          *    controller. The link partner is not directly reset by this 
          *    reset. To trigger a soft cold reset, you can write 1 to this 
          *    bit and then write 0 to this bit after a user defined period.
         */
         uint32_t SOFT_COLD_RESET_1 : 1; /* bit 8; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4498     */
         /* Description:                                                   */
         /**
          *    Soft Warm Reset. A soft warm reset will assert all resets 
          *    except the pwr_rst_n to PM controller in the PCIe controller. 
          *    The link partner is not directly reset by this reset. To 
          *    trigger a soft warm reset, you can write 1 to this bit and 
          *    then write 0 to this bit after a user defined period.
         */
         uint32_t SOFT_WARM_RESET_1 : 1; /* bit 9; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4510     */
         /* Description:                                                   */
         /**
          *    Soft PHY Reset. A soft PHY reset will assert phy_reset to PMA 
          *    of PHY. The PCIe controller, PHY MAC and link partner is not 
          *    directly reset by this reset. To trigger a PHY reset, you can 
          *    write 1 to this bit and then write 0 to this bit after a user 
          *    defined period.
         */
         uint32_t SOFT_PHY_RESET_1 : 1; /* bit 10; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4521     */
         /* Description:                                                   */
         /**
          *    Reserved.
         */
         uint32_t RSVDP_31 : 21; /* bits 31 to 11; R; 0x000000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_SS_RST_CTRL_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_COMMON_CTRL */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 4530              */
/* Description:                                                            */
/**
 *    PCIe PHY Common Control
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4533     */
         /* Description:                                                   */
         /**
          *    Resistor Tune Request
         */
         uint32_t PHY_RTUNE_REQ : 1; /* bit 0; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4540     */
         /* Description:                                                   */
         /**
          *    Selection of external control of PHY setting
         */
         uint32_t PHY_EXT_CTRL_SEL : 1; /* bit 1; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4547     */
         /* Description:                                                   */
         /**
          *    pipeP_pclk required by external logic
         */
         uint32_t EXT_PCLK_REQ : 1; /* bit 2; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4554     */
         /* Description:                                                   */
         /**
          *    Resistor Tune Status
         */
         uint32_t PHY_RTUNE_STS : 1; /* bit 3; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4562     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 28; /* bits 31 to 4; R; 0x0000000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_COMMON_CTRL_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY0_GEN_CTRL_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 4571              */
/* Description:                                                            */
/**
 *    PCIe PHY0 General Control 1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4574     */
         /* Description:                                                   */
         /**
          *    PHY source select for lane X
         */
         uint32_t PHY0_LANE_SRC_SEL : 2; /* bits 1 to 0; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4581     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_3 : 2; /* bits 3 to 2; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4589     */
         /* Description:                                                   */
         /**
          *    Repeat Reference Clock Enable
         */
         uint32_t PHY0_REF_REPEAT_CLK_EN : 1; /* bit 4; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4597     */
         /* Description:                                                   */
         /**
          *    Reference is from external PAD
         */
         uint32_t PHY0_REF_USE_PAD : 1; /* bit 5; R; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4605     */
         /* Description:                                                   */
         /**
          *    Enable Reference Clock Detection
         */
         uint32_t PHY0_REF_CLKDET_EN : 1; /* bit 6; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4612     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_7 : 1; /* bit 7; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4620     */
         /* Description:                                                   */
         /**
          *    lane Analog serial loopback control
         */
         uint32_t PHY0_LANE_TX2RX_LOOPBK : 1; /* bit 8; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4627     */
         /* Description:                                                   */
         /**
          *    lane Parallel (RX to TX) Loopback Enable
         */
         uint32_t PHY0_LANE_RX2TX_PAR_LB_EN : 1; /* bit 9; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4634     */
         /* Description:                                                   */
         /**
          *    SRAM bypass
         */
         uint32_t PHY0_SRAM_BYPASS : 1; /* bit 10; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4641     */
         /* Description:                                                   */
         /**
          *    SRAM external load done
         */
         uint32_t PHY0_SRAM_EXT_LD_DONE : 1; /* bit 11; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4648     */
         /* Description:                                                   */
         /**
          *    SRAM bootload bypass
         */
         uint32_t PHY0_SRAM_BOOTLOAD_BYPASS : 1; /* bit 12; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4655     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_28 : 16; /* bits 28 to 13; R; 0x0000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4663     */
         /* Description:                                                   */
         /**
          *    Reference Clock Detection result
         */
         uint32_t PHY0_REF_CLKDET_RESULT : 1; /* bit 29; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4671     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_30 : 1; /* bit 30; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4679     */
         /* Description:                                                   */
         /**
          *    SRAM Initialization done
         */
         uint32_t PHY0_SRAM_INIT_DONE : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY0_GEN_CTRL_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY0_GEN_CTRL_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 4688              */
/* Description:                                                            */
/**
 *    PCIe PHY0 General Control 2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4691     */
         /* Description:                                                   */
         /**
          *    Offset for TX Down Termination
         */
         uint32_t PHY0_TXDN_TERM_OFFSET : 9; /* bits 8 to 0; R/W; 0x000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4698     */
         /* Description:                                                   */
         /**
          *    Offset for TX Up Termination
         */
         uint32_t PHY0_TXUP_TERM_OFFSET : 9; /* bits 17 to 9; R/W; 0x000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4705     */
         /* Description:                                                   */
         /**
          *    Offset for RX Termination
         */
         uint32_t PHY0_RX_TERM_OFFSET : 5; /* bits 22 to 18; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4712     */
         /* Description:                                                   */
         /**
          *    Receiver termination control
         */
         uint32_t PHY0_RX_TERM_ACDC : 1; /* bit 23; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4719     */
         /* Description:                                                   */
         /**
          *    VPH Nominal Selection, Indicates the VPH voltage level 
          *    supplied.
         */
         uint32_t PHY0_NOMINAL_VPH_SEL : 2; /* bits 25 to 24; R/W; 0x3 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4727     */
         /* Description:                                                   */
         /**
          *    VP Nominal Selection, Indicates the VP voltage level supplied.
         */
         uint32_t PHY0_NOMINAL_VP_SEL : 2; /* bits 27 to 26; R/W; 0x3 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4735     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 4; /* bits 31 to 28; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY0_GEN_CTRL_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY0_MPLLA_CTRL */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 4744              */
/* Description:                                                            */
/**
 *    PCIe PHY0 MPLLA Control
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4747     */
         /* Description:                                                   */
         /**
          *    MPLLA Force Enable
         */
         uint32_t MPLLA_FORCE_EN : 1; /* bit 0; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4754     */
         /* Description:                                                   */
         /**
          *    MPLLA Spread Spectrum Enable
         */
         uint32_t MPLLA_SSC_EN : 1; /* bit 1; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4761     */
         uint32_t MPLLA_RECAL_BANK_SEL : 2; /* bits 3 to 2; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4766     */
         uint32_t MPLLA_SHORT_LOCK_EN : 1; /* bit 4; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4771     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_12 : 8; /* bits 12 to 5; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4779     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_13 : 1; /* bit 13; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4787     */
         /* Description:                                                   */
         /**
          *    MPLL  State Indicator
         */
         uint32_t MPLL_STATE : 1; /* bit 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4795     */
         /* Description:                                                   */
         /**
          *    MPLLA State Indicator
         */
         uint32_t MPLLA_STATE_SYNC : 1; /* bit 15; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4803     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 16; /* bits 31 to 16; R; 0x0000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY0_MPLLA_CTRL_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY0_MPLLB_CTRL */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 4812              */
/* Description:                                                            */
/**
 *    PCIe PHY0 MPLLB Control
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4815     */
         /* Description:                                                   */
         /**
          *    MPLLB Force Enable
         */
         uint32_t MPLLB_FORCE_EN : 1; /* bit 0; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4822     */
         /* Description:                                                   */
         /**
          *    MPLLB Spread Spectrum Enable
         */
         uint32_t MPLLB_SSC_EN : 1; /* bit 1; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4829     */
         uint32_t MPLLB_RECAL_BANK_SEL : 2; /* bits 3 to 2; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4834     */
         uint32_t MPLLB_SHORT_LOCK_EN : 1; /* bit 4; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4839     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_12 : 8; /* bits 12 to 5; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4847     */
         /* Description:                                                   */
         /**
          *    MPLLB_FORCE_ACK
         */
         uint32_t MPLLB_FORCE_ACK : 1; /* bit 13; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4855     */
         /* Description:                                                   */
         /**
          *    MPLL  State Indicator
         */
         uint32_t MPLL_STATE : 1; /* bit 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4863     */
         /* Description:                                                   */
         /**
          *    MPLLB State Indicator
         */
         uint32_t MPLLB_STATE_SYNC : 1; /* bit 15; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4871     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 16; /* bits 31 to 16; R; 0x0000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY0_MPLLB_CTRL_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY1_GEN_CTRL_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 4880              */
/* Description:                                                            */
/**
 *    PCIe PHY1 General Control 1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4883     */
         /* Description:                                                   */
         /**
          *    PHY source select for lane X
         */
         uint32_t PHY1_LANE_SRC_SEL : 2; /* bits 1 to 0; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4890     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_3 : 2; /* bits 3 to 2; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4898     */
         /* Description:                                                   */
         /**
          *    Repeat Reference Clock Enable
         */
         uint32_t PHY1_REF_REPEAT_CLK_EN : 1; /* bit 4; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4906     */
         /* Description:                                                   */
         /**
          *    Reference is from external PAD
         */
         uint32_t PHY1_REF_USE_PAD : 1; /* bit 5; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4914     */
         /* Description:                                                   */
         /**
          *    Enable Reference Clock Detection
         */
         uint32_t PHY1_REF_CLKDET_EN : 1; /* bit 6; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4921     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_7 : 1; /* bit 7; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4929     */
         /* Description:                                                   */
         /**
          *    lane Analog serial loopback control
         */
         uint32_t PHY1_LANE_TX2RX_LOOPBK : 1; /* bit 8; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4936     */
         /* Description:                                                   */
         /**
          *    lane Parallel (RX to TX) Loopback Enable
         */
         uint32_t PHY1_LANE_RX2TX_PAR_LB_EN : 1; /* bit 9; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4943     */
         /* Description:                                                   */
         /**
          *    SRAM bypass
         */
         uint32_t PHY1_SRAM_BYPASS : 1; /* bit 10; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4950     */
         /* Description:                                                   */
         /**
          *    SRAM external load done
         */
         uint32_t PHY1_SRAM_EXT_LD_DONE : 1; /* bit 11; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4957     */
         /* Description:                                                   */
         /**
          *    SRAM bootload bypass
         */
         uint32_t PHY1_SRAM_BOOTLOAD_BYPASS : 1; /* bit 12; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4964     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_28 : 16; /* bits 28 to 13; R; 0x0000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4972     */
         /* Description:                                                   */
         /**
          *    Reference Clock Detection result
         */
         uint32_t PHY1_REF_CLKDET_RESULT : 1; /* bit 29; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4980     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_30 : 1; /* bit 30; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 4988     */
         /* Description:                                                   */
         /**
          *    SRAM Initialization done
         */
         uint32_t PHY1_SRAM_INIT_DONE : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY1_GEN_CTRL_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY1_GEN_CTRL_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 4997              */
/* Description:                                                            */
/**
 *    PCIe PHY1 General Control 2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5000     */
         /* Description:                                                   */
         /**
          *    Offset for TX Down Termination
         */
         uint32_t PHY1_TXDN_TERM_OFFSET : 9; /* bits 8 to 0; R/W; 0x000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5007     */
         /* Description:                                                   */
         /**
          *    Offset for TX Up Termination
         */
         uint32_t PHY1_TXUP_TERM_OFFSET : 9; /* bits 17 to 9; R/W; 0x000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5014     */
         /* Description:                                                   */
         /**
          *    Offset for RX Termination
         */
         uint32_t PHY1_RX_TERM_OFFSET : 5; /* bits 22 to 18; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5021     */
         /* Description:                                                   */
         /**
          *    Receiver termination control
         */
         uint32_t PHY1_RX_TERM_ACDC : 1; /* bit 23; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5028     */
         /* Description:                                                   */
         /**
          *    VPH Nominal Selection, Indicates the VPH voltage level 
          *    supplied.
         */
         uint32_t PHY1_NOMINAL_VPH_SEL : 2; /* bits 25 to 24; R/W; 0x3 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5036     */
         /* Description:                                                   */
         /**
          *    VP Nominal Selection, Indicates the VP voltage level supplied.
         */
         uint32_t PHY1_NOMINAL_VP_SEL : 2; /* bits 27 to 26; R/W; 0x3 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5044     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 4; /* bits 31 to 28; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY1_GEN_CTRL_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY1_MPLLA_CTRL */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5053              */
/* Description:                                                            */
/**
 *    PCIe PHY1 MPLLA Control
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5056     */
         /* Description:                                                   */
         /**
          *    MPLLA Force Enable
         */
         uint32_t MPLLA_FORCE_EN : 1; /* bit 0; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5063     */
         /* Description:                                                   */
         /**
          *    MPLLA Spread Spectrum Enable
         */
         uint32_t MPLLA_SSC_EN : 1; /* bit 1; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5070     */
         uint32_t MPLLA_RECAL_BANK_SEL : 2; /* bits 3 to 2; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5075     */
         uint32_t MPLLA_SHORT_LOCK_EN : 1; /* bit 4; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5080     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_12 : 8; /* bits 12 to 5; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5088     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_13 : 1; /* bit 13; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5096     */
         /* Description:                                                   */
         /**
          *    MPLL  State Indicator
         */
         uint32_t MPLL_STATE : 1; /* bit 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5104     */
         /* Description:                                                   */
         /**
          *    MPLLA State Indicator
         */
         uint32_t MPLLA_STATE_SYNC : 1; /* bit 15; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5112     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 16; /* bits 31 to 16; R; 0x0000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY1_MPLLA_CTRL_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY1_MPLLB_CTRL */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5121              */
/* Description:                                                            */
/**
 *    PCIe PHY1 MPLLB Control
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5124     */
         /* Description:                                                   */
         /**
          *    MPLLB Force Enable
         */
         uint32_t MPLLB_FORCE_EN : 1; /* bit 0; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5131     */
         /* Description:                                                   */
         /**
          *    MPLLB Spread Spectrum Enable
         */
         uint32_t MPLLB_SSC_EN : 1; /* bit 1; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5138     */
         uint32_t MPLLB_RECAL_BANK_SEL : 2; /* bits 3 to 2; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5143     */
         uint32_t MPLLB_SHORT_LOCK_EN : 1; /* bit 4; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5148     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_12 : 8; /* bits 12 to 5; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5156     */
         /* Description:                                                   */
         /**
          *    MPLLB_FORCE_ACK
         */
         uint32_t MPLLB_FORCE_ACK : 1; /* bit 13; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5164     */
         /* Description:                                                   */
         /**
          *    MPLL  State Indicator
         */
         uint32_t MPLL_STATE : 1; /* bit 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5172     */
         /* Description:                                                   */
         /**
          *    MPLLB State Indicator
         */
         uint32_t MPLLB_STATE_SYNC : 1; /* bit 15; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5180     */
         /* Description:                                                   */
         /**
          *    Reserved
         */
         uint32_t RSVDP_31 : 16; /* bits 31 to 16; R; 0x0000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY1_MPLLB_CTRL_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_MPLLA_CTRL_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5189              */
/* Description:                                                            */
/**
 *    PCIe PHY MPLLA Control 1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5192     */
         uint32_t MPLLA_RECAL_BANK_SEL : 2; /* bits 1 to 0; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5197     */
         uint32_t MPLLA_RECAL_BANK_SEL_OVER_EN : 1; /* bit 2; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5202     */
         uint32_t RSVDP_3 : 1; /* bit 3; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5208     */
         uint32_t MPLLA_FRAC_EN : 1; /* bit 4; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5213     */
         uint32_t MPLLA_SSC_UP_SPREAD : 1; /* bit 5; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5218     */
         uint32_t MPLLA_BW_THRESHOLD : 2; /* bits 7 to 6; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5223     */
         uint32_t RSVDP_15 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5229     */
         uint32_t MPLLA_DIV16P5_CLK_EN : 1; /* bit 16; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5234     */
         uint32_t MPLLA_DIV_CLK_EN : 1; /* bit 17; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5239     */
         uint32_t MPLLA_FB_CLK_DIV4_EN : 1; /* bit 18; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5244     */
         uint32_t RSVDP_23 : 5; /* bits 23 to 19; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5250     */
         uint32_t MPLLA_TX_CLK_DIV : 3; /* bits 26 to 24; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5255     */
         uint32_t RSVDP_27 : 1; /* bit 27; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5261     */
         uint32_t MPLLA_WORD_CLK_DIV : 2; /* bits 29 to 28; R/W; 0x2 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5266     */
         uint32_t RSVDP_31 : 2; /* bits 31 to 30; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLA_CTRL_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_MPLLA_CTRL_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5273              */
/* Description:                                                            */
/**
 *    PCIe PHY MPLLA Control 2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5276     */
         uint32_t MPLLA_BW_LOW : 16; /* bits 15 to 0; R/W; 0x0025 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5281     */
         uint32_t MPLLA_BW_HIGH : 16; /* bits 31 to 16; R/W; 0x0025 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLA_CTRL_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_MPLLA_CTRL_3 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5287              */
/* Description:                                                            */
/**
 *    PCIe PHY MPLLA Control 3
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5290     */
         uint32_t MPLLA_MULTIPLIER : 12; /* bits 11 to 0; R/W; 0x0a0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5295     */
         uint32_t RSVDP_15 : 4; /* bits 15 to 12; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5301     */
         uint32_t MPLLA_DIV_MULTIPLIER : 8; /* bits 23 to 16; R/W; 0x08 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5306     */
         uint32_t RSVDP_31 : 8; /* bits 31 to 24; R; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLA_CTRL_3_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_MPLLA_CTRL_4 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5313              */
/* Description:                                                            */
/**
 *    PCIe PHY MPLLA Control 4
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5316     */
         uint32_t MPLLA_FRAC_DEN : 16; /* bits 15 to 0; R/W; 0x0000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5321     */
         uint32_t MPLLA_FRAC_QUOT : 16; /* bits 31 to 16; R/W; 0x0000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLA_CTRL_4_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_MPLLA_CTRL_5 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5327              */
/* Description:                                                            */
/**
 *    PCIe PHY MPLLA control 5
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5330     */
         uint32_t MPLLA_FRAC_REM : 16; /* bits 15 to 0; R/W; 0x0000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5335     */
         uint32_t RSVDP_31 : 16; /* bits 31 to 16; R; 0x0000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLA_CTRL_5_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_MPLLA_CTRL_6 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5342              */
/* Description:                                                            */
/**
 *    PCIe PHY MPLLA control 6
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5345     */
         uint32_t MPLLA_SSC_PEAK : 20; /* bits 19 to 0; R/W; 0x06666 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5350     */
         uint32_t RSVDP_31 : 12; /* bits 31 to 20; R; 0x000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLA_CTRL_6_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_MPLLA_CTRL_7 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5357              */
/* Description:                                                            */
/**
 *    PCIe PHY MPLLA control 7
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5360     */
         uint32_t MPLLA_SSC_STEP_SIZE : 21; /* bits 20 to 0; R/W; 0x002108 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5365     */
         uint32_t RSVDP_31 : 11; /* bits 31 to 21; R; 0x000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLA_CTRL_7_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_MPLLB_CTRL_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5372              */
/* Description:                                                            */
/**
 *    PCIe PHY MPLLB Control 1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5375     */
         uint32_t MPLLB_RECAL_BANK_SEL : 2; /* bits 1 to 0; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5380     */
         uint32_t MPLLB_RECAL_BANK_SEL_OVER_EN : 1; /* bit 2; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5385     */
         uint32_t RSVDP_3 : 1; /* bit 3; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5391     */
         uint32_t MPLLB_FRAC_EN : 1; /* bit 4; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5396     */
         uint32_t MPLLB_SSC_UP_SPREAD : 1; /* bit 5; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5401     */
         uint32_t MPLLB_BW_THRESHOLD : 2; /* bits 7 to 6; R/W; 0x3 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5406     */
         uint32_t RSVDP_15 : 8; /* bits 15 to 8; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5412     */
         uint32_t MPLLB_DIV16P5_CLK_EN : 1; /* bit 16; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5417     */
         uint32_t MPLLB_DIV_CLK_EN : 1; /* bit 17; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5422     */
         uint32_t MPLLB_FB_CLK_DIV4_EN : 1; /* bit 18; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5427     */
         uint32_t RSVDP_23 : 5; /* bits 23 to 19; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5433     */
         uint32_t MPLLB_TX_CLK_DIV : 3; /* bits 26 to 24; R/W; 0x5 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5438     */
         uint32_t RSVDP_27 : 1; /* bit 27; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5444     */
         uint32_t MPLLB_WORD_CLK_DIV : 2; /* bits 29 to 28; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5449     */
         uint32_t RSVDP_31 : 2; /* bits 31 to 30; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLB_CTRL_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_MPLLB_CTRL_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5456              */
/* Description:                                                            */
/**
 *    PCIe PHY MPLLB Control 2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5459     */
         uint32_t MPLLB_BW_LOW : 16; /* bits 15 to 0; R/W; 0x0025 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5464     */
         uint32_t MPLLB_BW_HIGH : 16; /* bits 31 to 16; R/W; 0x0025 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLB_CTRL_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_MPLLB_CTRL_3 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5470              */
/* Description:                                                            */
/**
 *    PCIe PHY MPLLB Control 3
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5473     */
         uint32_t MPLLB_MULTIPLIER : 12; /* bits 11 to 0; R/W; 0x07d */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5478     */
         uint32_t RSVDP_15 : 4; /* bits 15 to 12; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5484     */
         uint32_t MPLLB_DIV_MULTIPLIER : 8; /* bits 23 to 16; R/W; 0x19 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5489     */
         uint32_t RSVDP_31 : 8; /* bits 31 to 24; R; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLB_CTRL_3_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_MPLLB_CTRL_4 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5496              */
/* Description:                                                            */
/**
 *    PCIe PHY MPLLB Control 4
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5499     */
         uint32_t MPLLB_FRAC_DEN : 16; /* bits 15 to 0; R/W; 0x0000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5504     */
         uint32_t MPLLB_FRAC_QUOT : 16; /* bits 31 to 16; R/W; 0x0000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLB_CTRL_4_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_MPLLB_CTRL_5 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5510              */
/* Description:                                                            */
/**
 *    PCIe PHY MPLLB control 5
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5513     */
         uint32_t MPLLB_FRAC_REM : 16; /* bits 15 to 0; R/W; 0x0000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5518     */
         uint32_t RSVDP_31 : 16; /* bits 31 to 16; R; 0x0000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLB_CTRL_5_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_MPLLB_CTRL_6 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5525              */
/* Description:                                                            */
/**
 *    PCIe PHY MPLLB control 6
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5528     */
         uint32_t MPLLB_SSC_PEAK : 20; /* bits 19 to 0; R/W; 0x05000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5533     */
         uint32_t RSVDP_31 : 12; /* bits 31 to 20; R; 0x000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLB_CTRL_6_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_MPLLB_CTRL_7 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5540              */
/* Description:                                                            */
/**
 *    PCIe PHY MPLLB control 7
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5543     */
         uint32_t MPLLB_SSC_STEP_SIZE : 21; /* bits 20 to 0; R/W; 0x0019ce */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5548     */
         uint32_t RSVDP_31 : 11; /* bits 31 to 21; R; 0x000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLB_CTRL_7_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_GEN_CTRL_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5555              */
/* Description:                                                            */
/**
 *    PCIe PHY External General Control 1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5558     */
         uint32_t BS_RX_BIGSWING : 1; /* bit 0; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5563     */
         uint32_t RSVDP_3 : 3; /* bits 3 to 1; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5569     */
         uint32_t BS_TX_LOWSWING : 1; /* bit 4; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5574     */
         uint32_t RSVDP_7 : 3; /* bits 7 to 5; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5580     */
         uint32_t BS_RX_LEVEL : 5; /* bits 12 to 8; R/W; 0x0b */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5585     */
         uint32_t RSVDP_15 : 3; /* bits 15 to 13; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5591     */
         uint32_t REF_CLK_MPLLA_DIV : 3; /* bits 18 to 16; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5596     */
         uint32_t RSVDP_18 : 1; /* bit 19; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5602     */
         uint32_t REF_CLK_MPLLB_DIV : 3; /* bits 22 to 20; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5607     */
         uint32_t RSVDP_22 : 1; /* bit 23; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5613     */
         uint32_t REF_CLK_DIV2_EN : 1; /* bit 24; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5618     */
         uint32_t REF_RANGE : 3; /* bits 27 to 25; R/W; 0x3 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5623     */
         uint32_t RSVDP_31 : 4; /* bits 31 to 28; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_GEN_CTRL_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_GEN_CTRL_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5630              */
/* Description:                                                            */
/**
 *    PCIe PHY External General Control 2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5633     */
         uint32_t RX_LOS_PWR_UP_CNT : 11; /* bits 10 to 0; R/W; 0x000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5638     */
         uint32_t RSVDP_15 : 5; /* bits 15 to 11; R; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5644     */
         uint32_t RX_VREF_CTRL : 5; /* bits 20 to 16; R/W; 0x05 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5649     */
         uint32_t RSVDP_23 : 3; /* bits 23 to 21; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5655     */
         uint32_t TX_IBOOST_LVL : 4; /* bits 27 to 24; R/W; 0xf */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5660     */
         uint32_t TX_VBOOST_LVL : 3; /* bits 30 to 28; R/W; 0x7 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5665     */
         uint32_t SUP_MISC_OVRD_EN : 1; /* bit 31; R/W; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_GEN_CTRL_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY1_MODE1_LANE_CTRL */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5671              */
/* Description:                                                            */
/**
 *    PCIe PHY1 Mode1 Lane Control
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5674     */
         uint32_t PHY1_PIPE_LANEX_POWERDOWN : 16; /* bits 15 to 0; R/W; 0x4444 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5679     */
         uint32_t PHY1_PIPE_TXX_DISABLE : 4; /* bits 19 to 16; R/W; 0xf */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5684     */
         uint32_t PHY1_PIPE_RXX_DISABLE : 4; /* bits 23 to 20; R/W; 0xf */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5689     */
         uint32_t PHY1_PIPE_TXX_ELECIDLE : 4; /* bits 27 to 24; R/W; 0xf */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5694     */
         uint32_t PHY1_PIPE_TXX_COMPLIANCE : 4; /* bits 31 to 28; R/W; 0xf */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY1_MODE1_LANE_CTRL_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_RX_CTRL_GEN1_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5700              */
/* Description:                                                            */
/**
 *    PCIe PHY External RX Control Gen1_1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5703     */
         uint32_t RX_ADAPT_MODE_G1 : 2; /* bits 1 to 0; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5708     */
         uint32_t RX_ADAPT_SEL_G1 : 1; /* bit 2; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5713     */
         uint32_t RX_CDR_PPM_MAX_G1 : 5; /* bits 7 to 3; R/W; 0x13 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5718     */
         uint32_t RSVDP_10 : 3; /* bits 10 to 8; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5724     */
         uint32_t RX_DELTA_IQ_G1 : 4; /* bits 14 to 11; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5729     */
         uint32_t RX_DFE_BYPASS_G1 : 1; /* bit 15; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5734     */
         uint32_t RX_EQ_AFE_RATE_G1 : 3; /* bits 18 to 16; R/W; 0x7 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5739     */
         uint32_t RX_EQ_ATT_LVL_G1 : 3; /* bits 21 to 19; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5744     */
         uint32_t RSVDP_23 : 2; /* bits 23 to 22; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5750     */
         uint32_t RX_EQ_CTLE_BOOT_G1 : 5; /* bits 28 to 24; R/W; 0x0f */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5755     */
         uint32_t RX_EQ_CTLE_POLE_G1 : 2; /* bits 30 to 29; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5760     */
         uint32_t RSVDP_31 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN1_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_RX_CTRL_GEN1_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5767              */
/* Description:                                                            */
/**
 *    PCIe PHY External RX Control Gen1_2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5770     */
         uint32_t RX_EQ_DFE_TAP1_G1 : 8; /* bits 7 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5775     */
         uint32_t RX_EQ_VGA1_GAIN_G1 : 3; /* bits 10 to 8; R/W; 0x4 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5780     */
         uint32_t RX_EQ_VGA2_GAIN_G1 : 3; /* bits 13 to 11; R/W; 0x4 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5785     */
         uint32_t RSVDP_15 : 2; /* bits 15 to 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5791     */
         uint32_t RX_MISC_G1 : 8; /* bits 23 to 16; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5796     */
         uint32_t RX_REF_LD_VAL_G1 : 7; /* bits 30 to 24; R/W; 0x0e */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5801     */
         uint32_t RSVDP_31 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN1_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_RX_CTRL_GEN1_4 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5808              */
/* Description:                                                            */
/**
 *    PCIe PHY External RX Control Gen1_4
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5811     */
         uint32_t TX_MISC_G1 : 8; /* bits 7 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5816     */
         uint32_t TX_EQ_MAIN_G1 : 6; /* bits 13 to 8; R/W; 0x14 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5821     */
         uint32_t RSVDP_14 : 1; /* bit 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5827     */
         uint32_t TX_EQ_OVER_G1 : 1; /* bit 15; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5832     */
         uint32_t TX_EQ_POST_G1 : 5; /* bits 20 to 16; R/W; 0x04 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5837     */
         uint32_t RSVDP_23 : 3; /* bits 23 to 21; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5843     */
         uint32_t TX_EQ_PRE_G1 : 5; /* bits 28 to 24; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5848     */
         uint32_t RSVDP_31 : 3; /* bits 31 to 29; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN1_4_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_RX_CTRL_GEN2_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5855              */
/* Description:                                                            */
/**
 *    PCIe PHY External RX Control Gen2_1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5858     */
         uint32_t RX_ADAPT_MODE_G2 : 2; /* bits 1 to 0; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5863     */
         uint32_t RX_ADAPT_SEL_G2 : 1; /* bit 2; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5868     */
         uint32_t RX_CDR_PPM_MAX_G2 : 5; /* bits 7 to 3; R/W; 0x13 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5873     */
         uint32_t RSVDP_10 : 3; /* bits 10 to 8; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5879     */
         uint32_t RX_DELTA_IQ_G2 : 4; /* bits 14 to 11; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5884     */
         uint32_t RX_DFE_BYPASS_G2 : 1; /* bit 15; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5889     */
         uint32_t RX_EQ_AFE_RATE_G2 : 3; /* bits 18 to 16; R/W; 0x6 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5894     */
         uint32_t RX_EQ_ATT_LVL_G2 : 3; /* bits 21 to 19; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5899     */
         uint32_t RSVDP_23 : 2; /* bits 23 to 22; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5905     */
         uint32_t RX_EQ_CTLE_BOOT_G2 : 5; /* bits 28 to 24; R/W; 0x14 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5910     */
         uint32_t RX_EQ_CTLE_POLE_G2 : 2; /* bits 30 to 29; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5915     */
         uint32_t RSVDP_31 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN2_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_RX_CTRL_GEN2_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5922              */
/* Description:                                                            */
/**
 *    PCIe PHY External RX Control Gen2_2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5925     */
         uint32_t RX_EQ_DFE_TAP1_G2 : 8; /* bits 7 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5930     */
         uint32_t RX_EQ_VGA1_GAIN_G2 : 3; /* bits 10 to 8; R/W; 0x7 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5935     */
         uint32_t RX_EQ_VGA2_GAIN_G2 : 3; /* bits 13 to 11; R/W; 0x7 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5940     */
         uint32_t RSVDP_15 : 2; /* bits 15 to 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5946     */
         uint32_t RX_MISC_G2 : 8; /* bits 23 to 16; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5951     */
         uint32_t RX_REF_LD_VAL_G2 : 7; /* bits 30 to 24; R/W; 0x0e */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5956     */
         uint32_t RSVDP_31 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN2_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_RX_CTRL_GEN2_3 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5963              */
/* Description:                                                            */
/**
 *    PCIe PHY External RX Control Gen2_3
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5966     */
         uint32_t RX_SIGDET_LF_THRESHOLD_G2 : 3; /* bits 2 to 0; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5971     */
         uint32_t RX_SIGDET_LFPS_FILTER_EN_G2 : 1; /* bit 3; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5976     */
         uint32_t RSVDP_7 : 4; /* bits 7 to 4; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5982     */
         uint32_t RX_VCO_LD_VAL_G2 : 13; /* bits 20 to 8; R/W; 0x0578 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5987     */
         uint32_t RSVDP_23 : 3; /* bits 23 to 21; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 5993     */
         uint32_t EXT_SUP_MISC_G2 : 8; /* bits 31 to 24; R/W; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN2_3_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_RX_CTRL_GEN2_4 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 5999              */
/* Description:                                                            */
/**
 *    PCIe PHY External RX Control Gen2_4
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6002     */
         uint32_t TX_MISC_G2 : 8; /* bits 7 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6007     */
         uint32_t TX_EQ_MAIN_G2 : 6; /* bits 13 to 8; R/W; 0x14 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6012     */
         uint32_t RSVDP_14 : 1; /* bit 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6018     */
         uint32_t TX_EQ_OVER_G2 : 1; /* bit 15; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6023     */
         uint32_t TX_EQ_POST_G2 : 5; /* bits 20 to 16; R/W; 0x04 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6028     */
         uint32_t RSVDP_23 : 3; /* bits 23 to 21; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6034     */
         uint32_t TX_EQ_PRE_G2 : 5; /* bits 28 to 24; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6039     */
         uint32_t RSVDP_31 : 3; /* bits 31 to 29; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN2_4_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_RX_CTRL_GEN3_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 6046              */
/* Description:                                                            */
/**
 *    PCIe PHY External RX Control Gen3_1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6049     */
         uint32_t RX_ADAPT_MODE_G3 : 2; /* bits 1 to 0; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6054     */
         uint32_t RX_ADAPT_SEL_G3 : 1; /* bit 2; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6059     */
         uint32_t RX_CDR_PPM_MAX_G3 : 5; /* bits 7 to 3; R/W; 0x12 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6064     */
         uint32_t RSVDP_10 : 3; /* bits 10 to 8; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6070     */
         uint32_t RX_DELTA_IQ_G3 : 4; /* bits 14 to 11; R/W; 0x5 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6075     */
         uint32_t RX_DFE_BYPASS_G3 : 1; /* bit 15; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6080     */
         uint32_t RX_EQ_AFE_RATE_G3 : 3; /* bits 18 to 16; R/W; 0x5 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6085     */
         uint32_t RX_EQ_ATT_LVL_G3 : 3; /* bits 21 to 19; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6090     */
         uint32_t RSVDP_23 : 2; /* bits 23 to 22; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6096     */
         uint32_t RX_EQ_CTLE_BOOT_G3 : 5; /* bits 28 to 24; R/W; 0x14 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6101     */
         uint32_t RX_EQ_CTLE_POLE_G3 : 2; /* bits 30 to 29; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6106     */
         uint32_t RSVDP_31 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN3_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_RX_CTRL_GEN3_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 6113              */
/* Description:                                                            */
/**
 *    PCIe PHY External RX Control Gen3_2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6116     */
         uint32_t RX_EQ_DFE_TAP1_G3 : 8; /* bits 7 to 0; R/W; 0x0f */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6121     */
         uint32_t RX_EQ_VGA1_GAIN_G3 : 3; /* bits 10 to 8; R/W; 0x6 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6126     */
         uint32_t RX_EQ_VGA2_GAIN_G3 : 3; /* bits 13 to 11; R/W; 0x6 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6131     */
         uint32_t RSVDP_15 : 2; /* bits 15 to 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6137     */
         uint32_t RX_MISC_G3 : 8; /* bits 23 to 16; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6142     */
         uint32_t RX_REF_LD_VAL_G3 : 7; /* bits 30 to 24; R/W; 0x11 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6147     */
         uint32_t RSVDP_31 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN3_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_RX_CTRL_GEN3_3 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 6154              */
/* Description:                                                            */
/**
 *    PCIe PHY External RX Control Gen3_3
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6157     */
         uint32_t RX_SIGDET_LF_THRESHOLD_G3 : 3; /* bits 2 to 0; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6162     */
         uint32_t RX_SIGDET_LFPS_FILTER_EN_G3 : 1; /* bit 3; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6167     */
         uint32_t RSVDP_7 : 4; /* bits 7 to 4; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6173     */
         uint32_t RX_VCO_LD_VAL_G3 : 13; /* bits 20 to 8; R/W; 0x0550 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6178     */
         uint32_t RSVDP_23 : 3; /* bits 23 to 21; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6184     */
         uint32_t EXT_SUP_MISC_G3 : 8; /* bits 31 to 24; R/W; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN3_3_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_RX_CTRL_GEN3_4 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 6190              */
/* Description:                                                            */
/**
 *    PCIe PHY External RX Control Gen2_4
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6193     */
         uint32_t TX_MISC_G3 : 8; /* bits 7 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6198     */
         uint32_t TX_EQ_MAIN_G3 : 6; /* bits 13 to 8; R/W; 0x14 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6203     */
         uint32_t RSVDP_14 : 1; /* bit 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6209     */
         uint32_t TX_EQ_OVER_G3 : 1; /* bit 15; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6214     */
         uint32_t TX_EQ_POST_G3 : 5; /* bits 20 to 16; R/W; 0x04 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6219     */
         uint32_t RSVDP_23 : 3; /* bits 23 to 21; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6225     */
         uint32_t TX_EQ_PRE_G3 : 5; /* bits 28 to 24; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6230     */
         uint32_t RSVDP_31 : 3; /* bits 31 to 29; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN3_4_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_RX_CTRL_GEN4_1 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 6237              */
/* Description:                                                            */
/**
 *    PCIe PHY External RX Control Gen4_1
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6240     */
         uint32_t RX_ADAPT_MODE_G4 : 2; /* bits 1 to 0; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6245     */
         uint32_t RX_ADAPT_SEL_G4 : 1; /* bit 2; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6250     */
         uint32_t RX_CDR_PPM_MAX_G4 : 5; /* bits 7 to 3; R/W; 0x12 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6255     */
         uint32_t RSVDP_10 : 3; /* bits 10 to 8; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6261     */
         uint32_t RX_DELTA_IQ_G4 : 4; /* bits 14 to 11; R/W; 0x6 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6266     */
         uint32_t RX_DFE_BYPASS_G4 : 1; /* bit 15; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6271     */
         uint32_t RX_EQ_AFE_RATE_G4 : 3; /* bits 18 to 16; R/W; 0x3 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6276     */
         uint32_t RX_EQ_ATT_LVL_G4 : 3; /* bits 21 to 19; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6281     */
         uint32_t RSVDP_23 : 2; /* bits 23 to 22; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6287     */
         uint32_t RX_EQ_CTLE_BOOT_G4 : 5; /* bits 28 to 24; R/W; 0x0b */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6292     */
         uint32_t RX_EQ_CTLE_POLE_G4 : 2; /* bits 30 to 29; R/W; 0x2 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6297     */
         uint32_t RSVDP_31 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN4_1_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_RX_CTRL_GEN4_2 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 6304              */
/* Description:                                                            */
/**
 *    PCIe PHY External RX Control Gen4_2
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6307     */
         uint32_t RX_EQ_DFE_TAP1_G4 : 8; /* bits 7 to 0; R/W; 0x14 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6312     */
         uint32_t RX_EQ_VGA1_GAIN_G4 : 3; /* bits 10 to 8; R/W; 0x7 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6317     */
         uint32_t RX_EQ_VGA2_GAIN_G4 : 3; /* bits 13 to 11; R/W; 0x7 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6322     */
         uint32_t RSVDP_15 : 2; /* bits 15 to 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6328     */
         uint32_t RX_MISC_G4 : 8; /* bits 23 to 16; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6333     */
         uint32_t RX_REF_LD_VAL_G4 : 7; /* bits 30 to 24; R/W; 0x11 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6338     */
         uint32_t RSVDP_31 : 1; /* bit 31; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN4_2_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_RX_CTRL_GEN4_3 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 6345              */
/* Description:                                                            */
/**
 *    PCIe PHY External RX Control Gen4_3
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6348     */
         uint32_t RX_SIGDET_LF_THRESHOLD_G4 : 3; /* bits 2 to 0; R/W; 0x1 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6353     */
         uint32_t RX_SIGDET_LFPS_FILTER_EN_G4 : 1; /* bit 3; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6358     */
         uint32_t RSVDP_7 : 4; /* bits 7 to 4; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6364     */
         uint32_t RX_VCO_LD_VAL_G4 : 13; /* bits 20 to 8; R/W; 0x0550 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6369     */
         uint32_t RSVDP_23 : 3; /* bits 23 to 21; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6375     */
         uint32_t EXT_SUP_MISC_G4 : 8; /* bits 31 to 24; R/W; 0x00 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN4_3_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_RX_CTRL_GEN4_4 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 6381              */
/* Description:                                                            */
/**
 *    PCIe PHY External RX Control Gen2_4
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6384     */
         uint32_t TX_MISC_G4 : 8; /* bits 7 to 0; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6389     */
         uint32_t TX_EQ_MAIN_G4 : 6; /* bits 13 to 8; R/W; 0x14 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6394     */
         uint32_t RSVDP_14 : 1; /* bit 14; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6400     */
         uint32_t TX_EQ_OVER_G4 : 1; /* bit 15; R/W; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6405     */
         uint32_t TX_EQ_POST_G4 : 5; /* bits 20 to 16; R/W; 0x04 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6410     */
         uint32_t RSVDP_23 : 3; /* bits 23 to 21; R; 0x0 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6416     */
         uint32_t TX_EQ_PRE_G4 : 5; /* bits 28 to 24; R/W; 0x00 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6421     */
         uint32_t RSVDP_31 : 3; /* bits 31 to 29; R; 0x0 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN4_4_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_RX_CTRL_GEN1_5 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 6428              */
/* Description:                                                            */
/**
 *    PCIe PHY External RX Control Gen1_5
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6431     */
         uint32_t RX_CDR_VCO_CONFIG_G1 : 12; /* bits 11 to 0; R/W; 0x000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6436     */
         uint32_t RSVDP_31 : 20; /* bits 31 to 12; R; 0x00000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN1_5_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_RX_CTRL_GEN2_5 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 6443              */
/* Description:                                                            */
/**
 *    PCIe PHY External RX Control Gen2_5
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6446     */
         uint32_t RX_CDR_VCO_CONFIG_G2 : 12; /* bits 11 to 0; R/W; 0x000 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6451     */
         uint32_t RSVDP_31 : 20; /* bits 31 to 12; R; 0x00000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN2_5_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_RX_CTRL_GEN3_5 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 6458              */
/* Description:                                                            */
/**
 *    PCIe PHY External RX Control Gen3_5
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6461     */
         uint32_t RX_CDR_VCO_CONFIG_G3 : 12; /* bits 11 to 0; R/W; 0x003 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6466     */
         uint32_t RSVDP_31 : 20; /* bits 31 to 12; R; 0x00000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN3_5_t;

/* Typedef for Register: DWC_pcie_subsystem_custom_APB_Slave::subsystem::PCIE_PHY_EXT_RX_CTRL_GEN4_5 */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 6473              */
/* Description:                                                            */
/**
 *    PCIe PHY External RX Control Gen4_5
*/
typedef struct {
   union {
      struct {

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6476     */
         uint32_t RX_CDR_VCO_CONFIG_G4 : 12; /* bits 11 to 0; R/W; 0x003 */

         /* Source filename: DWC_pcie_subsystem_custom.csr, line: 6481     */
         uint32_t RSVDP_31 : 20; /* bits 31 to 12; R; 0x00000 */
      } B;
      uint32_t R;
   } ;
} DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN4_5_t;

/* Typedef for Group: DWC_pcie_subsystem_custom_APB_Slave::subsystem       */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 22                */
typedef struct {
   uint8_t _pad0[0x50];
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_GEN_CTRL_1_t PE0_GEN_CTRL_1; /**< Offset 0x50 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_GEN_CTRL_2_t PE0_GEN_CTRL_2; /**< Offset 0x54 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_GEN_CTRL_3_t PE0_GEN_CTRL_3; /**< Offset 0x58 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_GEN_CTRL_4_t PE0_GEN_CTRL_4; /**< Offset 0x5c (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_PM_CTRL_t PE0_PM_CTRL; /**< Offset 0x60 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_PM_STS_t PE0_PM_STS; /**< Offset 0x64 (R/W) */
   uint8_t _pad1[0x8];
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_TX_MSG_HDR_1_t PE0_TX_MSG_HDR_1; /**< Offset 0x70 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_TX_MSG_HDR_2_t PE0_TX_MSG_HDR_2; /**< Offset 0x74 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_TX_MSG_HDR_3_t PE0_TX_MSG_HDR_3; /**< Offset 0x78 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_TX_MSG_HDR_4_t PE0_TX_MSG_HDR_4; /**< Offset 0x7c (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_TX_MSG_REQ_t PE0_TX_MSG_REQ; /**< Offset 0x80 (R/W) */
   uint8_t _pad2[0x4];
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_RX_MSG_DATA_1_t PE0_RX_MSG_DATA_1; /**< Offset 0x88 (R) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_RX_MSG_DATA_2_t PE0_RX_MSG_DATA_2; /**< Offset 0x8c (R) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_RX_MSG_HDR_1_t PE0_RX_MSG_HDR_1; /**< Offset 0x90 (R) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_RX_MSG_HDR_2_t PE0_RX_MSG_HDR_2; /**< Offset 0x94 (R) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_RX_MSG_HDR_3_t PE0_RX_MSG_HDR_3; /**< Offset 0x98 (R) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_RX_MSG_HDR_4_t PE0_RX_MSG_HDR_4; /**< Offset 0x9c (R) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_RX_MSG_STS_t PE0_RX_MSG_STS; /**< Offset 0xa0 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_RX_MSG_CAP_CTRL_t PE0_RX_MSG_CAP_CTRL; /**< Offset 0xa4 (R) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_RX_MSG_INT_CTRL_t PE0_RX_MSG_INT_CTRL; /**< Offset 0xa8 (R/W) */
   uint8_t _pad3[0x4];
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_LINK_DBG_1_t PE0_LINK_DBG_1; /**< Offset 0xb0 (R) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_LINK_DBG_2_t PE0_LINK_DBG_2; /**< Offset 0xb4 (R) */
   uint8_t _pad4[0x28];
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_ERR_STS_t PE0_ERR_STS; /**< Offset 0xe0 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_ERR_INT_CTRL_t PE0_ERR_INT_CTRL; /**< Offset 0xe4 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_INT_STS_t PE0_INT_STS; /**< Offset 0xe8 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_MSI_GEN_CTRL_t PE0_MSI_GEN_CTRL; /**< Offset 0xec (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_FSM_TRACK_1_t PE0_FSM_TRACK_1; /**< Offset 0xf0 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_FSM_TRACK_2_t PE0_FSM_TRACK_2; /**< Offset 0xf4 (R) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE0_FSM_TRACK_3_t PE0_FSM_TRACK_3; /**< Offset 0xf8 (R) */
   uint8_t _pad5[0x154];
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_GEN_CTRL_1_t PE1_GEN_CTRL_1; /**< Offset 0x250 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_GEN_CTRL_2_t PE1_GEN_CTRL_2; /**< Offset 0x254 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_GEN_CTRL_3_t PE1_GEN_CTRL_3; /**< Offset 0x258 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_GEN_CTRL_4_t PE1_GEN_CTRL_4; /**< Offset 0x25c (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_PM_CTRL_t PE1_PM_CTRL; /**< Offset 0x260 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_PM_STS_t PE1_PM_STS; /**< Offset 0x264 (R/W) */
   uint8_t _pad6[0x8];
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_TX_MSG_HDR_1_t PE1_TX_MSG_HDR_1; /**< Offset 0x270 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_TX_MSG_HDR_2_t PE1_TX_MSG_HDR_2; /**< Offset 0x274 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_TX_MSG_HDR_3_t PE1_TX_MSG_HDR_3; /**< Offset 0x278 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_TX_MSG_HDR_4_t PE1_TX_MSG_HDR_4; /**< Offset 0x27c (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_TX_MSG_REQ_t PE1_TX_MSG_REQ; /**< Offset 0x280 (R/W) */
   uint8_t _pad7[0x4];
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_RX_MSG_DATA_1_t PE1_RX_MSG_DATA_1; /**< Offset 0x288 (R) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_RX_MSG_DATA_2_t PE1_RX_MSG_DATA_2; /**< Offset 0x28c (R) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_RX_MSG_HDR_1_t PE1_RX_MSG_HDR_1; /**< Offset 0x290 (R) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_RX_MSG_HDR_2_t PE1_RX_MSG_HDR_2; /**< Offset 0x294 (R) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_RX_MSG_HDR_3_t PE1_RX_MSG_HDR_3; /**< Offset 0x298 (R) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_RX_MSG_HDR_4_t PE1_RX_MSG_HDR_4; /**< Offset 0x29c (R) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_RX_MSG_STS_t PE1_RX_MSG_STS; /**< Offset 0x2a0 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_RX_MSG_CAP_CTRL_t PE1_RX_MSG_CAP_CTRL; /**< Offset 0x2a4 (R) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_RX_MSG_INT_CTRL_t PE1_RX_MSG_INT_CTRL; /**< Offset 0x2a8 (R/W) */
   uint8_t _pad8[0x4];
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_LINK_DBG_1_t PE1_LINK_DBG_1; /**< Offset 0x2b0 (R) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_LINK_DBG_2_t PE1_LINK_DBG_2; /**< Offset 0x2b4 (R) */
   uint8_t _pad9[0x28];
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_ERR_STS_t PE1_ERR_STS; /**< Offset 0x2e0 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_ERR_INT_CTRL_t PE1_ERR_INT_CTRL; /**< Offset 0x2e4 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_INT_STS_t PE1_INT_STS; /**< Offset 0x2e8 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_MSI_GEN_CTRL_t PE1_MSI_GEN_CTRL; /**< Offset 0x2ec (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_FSM_TRACK_1_t PE1_FSM_TRACK_1; /**< Offset 0x2f0 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_FSM_TRACK_2_t PE1_FSM_TRACK_2; /**< Offset 0x2f4 (R) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PE1_FSM_TRACK_3_t PE1_FSM_TRACK_3; /**< Offset 0x2f8 (R) */
   uint8_t _pad10[0xb04];
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_SUBSYSTEM_VERSION_t PCIE_SUBSYSTEM_VERSION; /**< Offset 0xe00 (R) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_APB_CLKFREQ_TIMEOUT_t APB_CLKFREQ_TIMEOUT; /**< Offset 0xe04 (R/W) */
   uint8_t _pad11[0x44];
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_SS_RST_CTRL_1_t SS_RST_CTRL_1; /**< Offset 0xe4c (R/W) */
   uint8_t _pad12[0x1b0];
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_COMMON_CTRL_t PCIE_PHY_COMMON_CTRL; /**< Offset 0x1000 (R/W) */
   uint8_t _pad13[0xc];
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY0_GEN_CTRL_1_t PCIE_PHY0_GEN_CTRL_1; /**< Offset 0x1010 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY0_GEN_CTRL_2_t PCIE_PHY0_GEN_CTRL_2; /**< Offset 0x1014 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY0_MPLLA_CTRL_t PCIE_PHY0_MPLLA_CTRL; /**< Offset 0x1018 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY0_MPLLB_CTRL_t PCIE_PHY0_MPLLB_CTRL; /**< Offset 0x101c (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY1_GEN_CTRL_1_t PCIE_PHY1_GEN_CTRL_1; /**< Offset 0x1020 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY1_GEN_CTRL_2_t PCIE_PHY1_GEN_CTRL_2; /**< Offset 0x1024 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY1_MPLLA_CTRL_t PCIE_PHY1_MPLLA_CTRL; /**< Offset 0x1028 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY1_MPLLB_CTRL_t PCIE_PHY1_MPLLB_CTRL; /**< Offset 0x102c (R/W) */
   uint8_t _pad14[0x60];
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLA_CTRL_1_t PCIE_PHY_MPLLA_CTRL_1; /**< Offset 0x1090 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLA_CTRL_2_t PCIE_PHY_MPLLA_CTRL_2; /**< Offset 0x1094 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLA_CTRL_3_t PCIE_PHY_MPLLA_CTRL_3; /**< Offset 0x1098 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLA_CTRL_4_t PCIE_PHY_MPLLA_CTRL_4; /**< Offset 0x109c (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLA_CTRL_5_t PCIE_PHY_MPLLA_CTRL_5; /**< Offset 0x10a0 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLA_CTRL_6_t PCIE_PHY_MPLLA_CTRL_6; /**< Offset 0x10a4 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLA_CTRL_7_t PCIE_PHY_MPLLA_CTRL_7; /**< Offset 0x10a8 (R/W) */
   uint8_t _pad15[0x4];
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLB_CTRL_1_t PCIE_PHY_MPLLB_CTRL_1; /**< Offset 0x10b0 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLB_CTRL_2_t PCIE_PHY_MPLLB_CTRL_2; /**< Offset 0x10b4 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLB_CTRL_3_t PCIE_PHY_MPLLB_CTRL_3; /**< Offset 0x10b8 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLB_CTRL_4_t PCIE_PHY_MPLLB_CTRL_4; /**< Offset 0x10bc (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLB_CTRL_5_t PCIE_PHY_MPLLB_CTRL_5; /**< Offset 0x10c0 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLB_CTRL_6_t PCIE_PHY_MPLLB_CTRL_6; /**< Offset 0x10c4 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_MPLLB_CTRL_7_t PCIE_PHY_MPLLB_CTRL_7; /**< Offset 0x10c8 (R/W) */
   uint8_t _pad16[0x4];
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_GEN_CTRL_1_t PCIE_PHY_EXT_GEN_CTRL_1; /**< Offset 0x10d0 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_GEN_CTRL_2_t PCIE_PHY_EXT_GEN_CTRL_2; /**< Offset 0x10d4 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY1_MODE1_LANE_CTRL_t PCIE_PHY1_MODE1_LANE_CTRL; /**< Offset 0x10d8 (R/W) */
   uint8_t _pad17[0x4];
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN1_1_t PCIE_PHY_EXT_RX_CTRL_GEN1_1; /**< Offset 0x10e0 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN1_2_t PCIE_PHY_EXT_RX_CTRL_GEN1_2; /**< Offset 0x10e4 (R/W) */
   uint8_t _pad18[0x4];
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN1_4_t PCIE_PHY_EXT_RX_CTRL_GEN1_4; /**< Offset 0x10ec (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN2_1_t PCIE_PHY_EXT_RX_CTRL_GEN2_1; /**< Offset 0x10f0 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN2_2_t PCIE_PHY_EXT_RX_CTRL_GEN2_2; /**< Offset 0x10f4 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN2_3_t PCIE_PHY_EXT_RX_CTRL_GEN2_3; /**< Offset 0x10f8 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN2_4_t PCIE_PHY_EXT_RX_CTRL_GEN2_4; /**< Offset 0x10fc (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN3_1_t PCIE_PHY_EXT_RX_CTRL_GEN3_1; /**< Offset 0x1100 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN3_2_t PCIE_PHY_EXT_RX_CTRL_GEN3_2; /**< Offset 0x1104 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN3_3_t PCIE_PHY_EXT_RX_CTRL_GEN3_3; /**< Offset 0x1108 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN3_4_t PCIE_PHY_EXT_RX_CTRL_GEN3_4; /**< Offset 0x110c (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN4_1_t PCIE_PHY_EXT_RX_CTRL_GEN4_1; /**< Offset 0x1110 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN4_2_t PCIE_PHY_EXT_RX_CTRL_GEN4_2; /**< Offset 0x1114 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN4_3_t PCIE_PHY_EXT_RX_CTRL_GEN4_3; /**< Offset 0x1118 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN4_4_t PCIE_PHY_EXT_RX_CTRL_GEN4_4; /**< Offset 0x111c (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN1_5_t PCIE_PHY_EXT_RX_CTRL_GEN1_5; /**< Offset 0x1120 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN2_5_t PCIE_PHY_EXT_RX_CTRL_GEN2_5; /**< Offset 0x1124 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN3_5_t PCIE_PHY_EXT_RX_CTRL_GEN3_5; /**< Offset 0x1128 (R/W) */
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_PCIE_PHY_EXT_RX_CTRL_GEN4_5_t PCIE_PHY_EXT_RX_CTRL_GEN4_5; /**< Offset 0x112c (R/W) */
   uint8_t _pad19[0xd0];
} __attribute__ ((__packed__)) DWC_pcie_subsystem_custom_APB_Slave_subsystem_t;

/* Typedef for Addressmap: DWC_pcie_subsystem_custom_APB_Slave             */
/* Source filename: DWC_pcie_subsystem_custom.csr, line: 6489              */
typedef struct {
   DWC_pcie_subsystem_custom_APB_Slave_subsystem_t subsystem; /**< Offset 0x0 (R/W) */
} DWC_pcie_subsystem_custom_APB_Slave_t;

#endif
