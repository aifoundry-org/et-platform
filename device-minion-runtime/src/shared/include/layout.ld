/* Hardware memory region layout */
M_CODE_REGION_BASE = 0x8000000000; /* MCODE region is  2M from 0x8000000000 to 0x80001FFFFF */
M_CODE_REGION_SIZE = 0x0000200000;

M_DATA_REGION_BASE = 0x8000200000; /* MDATA region is  6M from 0x8000200000 to 0x80007FFFFF */
M_DATA_REGION_SIZE = 0x0000600000;

S_CODE_REGION_BASE = 0x8000800000; /* SCODE region is  8M from 0x8000800000 to 0x8000FFFFFF */
S_CODE_REGION_SIZE = 0x0000800000;

S_DATA_REGION_BASE = 0x8001000000; /* SDATA region is 48M from 0x8001000000 to 0x8003FFFFFF */
S_DATA_REGION_SIZE = 0x0003000000;

U_CODE_REGION_BASE = 0x8004000000; /* UCODE region is  4K from 0x8004000000 to 0x8004001000 */
U_CODE_REGION_SIZE = 0x0000001000;

/* Software layout */
FW_MACHINE_MMODE_ENTRY = M_CODE_REGION_BASE + 0x1000; /* Default reset vector */

/* Master and worker firmware split the SCODE region 50/50 */
FW_MASTER_SCODE_BASE = S_CODE_REGION_BASE;
FW_MASTER_SCODE_SIZE = 0x400000; /* 4M */

FW_WORKER_SCODE_BASE = S_CODE_REGION_BASE + FW_MASTER_SCODE_SIZE;
FW_WORKER_SCODE_SIZE = 0x400000;  /* 4M */

FW_WORKER_UCODE_BASE = U_CODE_REGION_BASE;
FW_WORKER_UCODE_SIZE = U_CODE_REGION_SIZE;

/* Master and worker firmware split the SDATA region 16M each, last 16M for shared message buffers + S-stacks */
FW_MASTER_SDATA_BASE = S_DATA_REGION_BASE;
FW_MASTER_SDATA_SIZE = 0x1000000; /* 16M */

FW_WORKER_SDATA_BASE = S_DATA_REGION_BASE + FW_MASTER_SDATA_SIZE;
FW_WORKER_SDATA_SIZE = 0x1000000; /* 16M */

/* All S-mode stacks are laid out at the end of the SDATA region */
FW_SMODE_STACK_BASE  = S_DATA_REGION_BASE + S_DATA_REGION_SIZE;
FW_SMODE_STACK_SIZE  = 4096 + 64; /* (4K + 64B) stack * 2112 stacks = 8580KB. 64B is the scratch space. */

KERNEL_UMODE_ENTRY   = 0x8005000000;
