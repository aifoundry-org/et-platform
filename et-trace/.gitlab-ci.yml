include:
  - project: 'software/conan/conan-ci-pipelines-common'
    ref: master
    file: 'mr/common.yaml'

variables:
  GIT_SUBMODULE_STRATEGY: none
  GET_SOURCES_ATTEMPTS: 2
  ARTIFACT_DOWNLOAD_ATTEMPTS: 2


###############################################################################
###############################################################################
###############################################################################

gen_conan_build_pipeline:
  extends: .template_job_k8s_with_conan_ci_pipelines_common
  stage: .pre
  image: conanio/gcc7-ubuntu16.04
  script:

    # generate pipeline
    - |
      conan-ci-pipelines-common/gen-build-pipeline.py \
          .ci/conan.yaml \
          conan-ci-pipelines-common/consumers.yaml \
          conan-ci-pipelines-common/configs.yaml \
          -o build-pipeline.yaml

    - sh -c -x "${CMD_AFTER_GENERATE_PIPELINE}"

###############################################################################
###############################################################################
###############################################################################

conan_build_pipeline:
  stage: build
  needs:
    - gen_conan_build_pipeline
  variables:
    UPSTREAM_PROJECT_NAME:      ${CI_PROJECT_NAME}
    UPSTREAM_CI_PIPELINE_ID:    ${CI_PIPELINE_ID}
    CONAN_CI_PIPELINES_COMMON_REF: ${CONAN_CI_PIPELINES_COMMON_REF}
    CONAN_CONFIG_EXTRA_ARGS: ${CONAN_CONFIG_EXTRA_ARGS}
  trigger:
    include:
      - artifact: build-pipeline.yaml
        job: gen_conan_build_pipeline
    strategy: depend

###############################################################################
###############################################################################
###############################################################################

test:system_pkg_manager:
  extends: .template_job_k8s_bare_minimum
  stage: test
  image: ubuntu:latest
  variables:
    DEBIAN_FRONTEND: noninteractive
  parallel:
    matrix:
      - COMPILER: [ gcc ]
        COMPILER_VERSION: [ 8 ]
        BUILD_TYPE: [ Release, Debug ]
  before_script:
    - echo -e "\e[0Ksection_start:`date +%s`:install_system_deps_section\r\e[0KInstall system dependencies"
    - apt-get update -qq
    - apt-get install -qq -y --no-install-recommends ninja-build build-essential gcc-${COMPILER_VERSION} g++-${COMPILER_VERSION} cmake
    - echo -e "\e[0Ksection_end:`date +%s`:install_system_deps_section\r\e[0K"

    - echo -e "\e[0Ksection_start:`date +%s`:prepare_build_dir_section\r\e[0KPrepare build directory"
    - mkdir build
    - cd build
    - echo -e "\e[0Ksection_end:`date +%s`:prepare_build_dir_section\r\e[0K"
  script:
    - cmake -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DET_TRACE_TEST=ON -G Ninja ..
    - ninja
    - ctest --verbose

###############################################################################
###############################################################################
###############################################################################

on_success:promote:
  extends: .template_job_k8s_with_conan_ci_pipelines_common_on_success_perform_promote
  stage: deploy
  needs:
    - gen_conan_build_pipeline
    - conan_build_pipeline

on_failure:report:
  extends: .template_job_k8s_bare_minimum_on_failure_report
  stage: deploy
