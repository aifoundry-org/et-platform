# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))

from exhale import utils

# -- Project information -----------------------------------------------------

project = 'Esperanto Device Management'
copyright = '2025, Ainekko, Co.'
author = 'Esperanto'


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'breathe',
    'exhale'
]

def specificationsForKind(kind):
    '''
    For a given input ``kind``, return the list of reStructuredText specifications
    for the associated Breathe directive.
    '''
    # Change the defaults for .. doxygenclass:: and .. doxygenstruct::
    if kind == "class" or kind == "struct":
        return [
          ":members:",
          ":protected-members:",
          ":private-members:",
          ":undoc-members:"
        ]
    else:
        return []


# Setup the breathe extension
breathe_projects = {
    "Esperanto Device Management": "./docs/xml"
}
breathe_default_project = "Esperanto Device Management"

# Setup the exhale extension
exhale_args = {
    # These arguments are required
    "containmentFolder":     "@CMAKE_CURRENT_BINARY_DIR@/api",
    "rootFileName":          "EsperantoDeviceManagement_root.rst",
    "rootFileTitle":         "Esperanto Device Management Architecture",
    "doxygenStripFromPath":   "@PROJECT_SOURCE_DIR@",
    # Suggested optional arguments
    "createTreeView":        True,
    "treeViewIsBootstrap": True,
    # TIP: if using the sphinx-bootstrap-theme, you need
    # "treeViewIsBootstrap": True,
    "exhaleExecutesDoxygen": True,
    "exhaleUseDoxyfile": True,
    # For now use the Doxygenfile directly and not the following
    # configuration string
    # "exhaleDoxygenStdin":
    # """INPUT = @CMAKE_CURRENT_BINARY_DIR@/../include/ \
    #            @CMAKE_CURRENT_SOURCE_DIR@/../src/ \
    # FILE_PATTERN = *.h *.cc
    # """
    # ... required arguments / other configs ...
    "customSpecificationsMapping": utils.makeCustomSpecificationsMapping(
        specificationsForKind
    )
}

# Tell sphinx what the primary language being documented is.
primary_domain = 'c'

# Tell sphinx what the pygments highlight language should be.
highlight_language = 'c'


# Add any paths that contain templates here, relative to this directory.
templates_path = ['@CMAKE_CURRENT_SOURCE_DIR@/_templates']

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
#html_theme = 'alabaster'
import sphinx_rtd_theme
html_theme = 'sphinx_rtd_theme'
html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
htm2l_static_path = ['@CMAKE_CURRENT_SOURCE_DIR@/_static']
