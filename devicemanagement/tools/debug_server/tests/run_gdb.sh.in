#!/bin/bash
set -e

script_name=$(basename $0)
gdb_script=
# Default values of thread mask, device index and shire id
thread_mask="0x2"
device_index="0"
shire_id="0"

function usage()
{
   cat << HEREDOC

   Usage: $script_name [--gdb_script ABSOLUTE_PATH]

   optional arguments:
     -g, --gdb_script   ABSOLUTE_PATH            pass in absolute path of the *.gdb script (must be given)
     -h, --help                                  show this help message and exit
     -m, --thread_mask  THREAD_MASK              pass in thread mask in hex (default: 0x2)
     -n, --device_index INDEX                    ETSoC1 device index on which the debug server is to be started (default: 0)
     -s, --shire_id     ID                       pass in shire_id (default: 0)

HEREDOC
}

OPTS=$(getopt -o "g:hm:n:s:" --long "gdb_script:,help,thread_mask:,device_index:,shire_id:" -n "$script_name" -- "$@")
eval set -- "$OPTS"

while true; do
  case "$1" in
    -g | --gdb_script ) gdb_script="$2"; shift 2 ;;
    -h | --help ) usage; exit; ;;
    -m | --thread_mask ) thread_mask="$2"; shift 2 ;;
    -n | --device_index ) device_index="$2"; shift 2 ;;
    -s | --shire_id ) shire_id="$2"; shift 2 ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

if [ ! -f "$gdb_script" ]; then
    echo "Invalid path: gdb_script=$gdb_script"
    exit 1
fi

cd @GDB_DIR@
./debug-server -m $thread_mask -n $device_index -s $shire_id &
trap 'pkill -P "$$" || true' INT EXIT
sleep 1
riscv64-unknown-elf-gdb --batch --command=$gdb_script
