/*------------------------------------------------------------------------------
 * Copyright (C) 2019, Esperanto Technologies Inc.
 * The copyright to the computer program(s) herein is the
 * property of Esperanto Technologies, Inc. All Rights Reserved.
 * The program(s) may be used and/or copied only with
 * the written permission of Esperanto Technologies and
 * in accordance with the terms and conditions stipulated in the
 * agreement/contract under which the program(s) have been supplied.
 ------------------------------------------------------------------------------ */

/* WARNING: this file is auto-generated do not edit directly */

#ifndef ET_DEVICE_<< cgh.c_api_name | upper >>_API_RPC_TYPES_H
#define ET_DEVICE_<< cgh.c_api_name | upper >>_API_RPC_TYPES_H

#include "esperanto/device-apis/device_apis_message_types.h"
#include <stdint.h>

/* Device << cgh.api_name>> API structs */
/* Structs that are being used in other tests */

<% for struct in cgh.structs() -%>
/*! \struct << struct["Name"] >>
    \brief << struct["Description"] >>
*/
struct << struct["Name"] >> {
  <% for field in struct.get("Fields", []) -%>
  << cgh.message_field_type(field) >>  << field["Name"] >>; /**< << field["Description"] >> */
  <% endfor %>
} __attribute__((packed));

<% endfor %>

/* The real Device << cgh.api_name>> API RPC messages that we exchange */
<% for message in cgh.messages() %>
/*! \struct << message["Name"] >>_t
    \brief << message["Description"] >>
*/
struct << message["Name"] >>_t {
  <%- if message['Type'] == 'Command' %>

  <%- if cgh.c_api_name == 'mgmt' %>
  dev_mgmt_cmd_header_t command_info; /**< Command header */
  <%- else %>
  struct cmd_header_t command_info;
   <%- endif %>
  <%- elif message['Type'] == 'Response' %>
  <%- if cgh.c_api_name == 'mgmt' %>
  struct dev_mgmt_rsp_header_t rsp_hdr;
  <%- else %>
  struct rsp_header_t response_info; /**< Response header */
   <%- endif %>
  <%- else %>
  struct evt_header_t event_info;
  <%- endif %>
  <%- for field in message.get("Fields", []) %>
  <% if field['Type'] == 'struct' -%> struct <% endif -%>
  << cgh.message_field_type(field) >>  << field["Name"] >>; /**< << field["Description"] >> */
  <%- endfor %>
} __attribute__((packed, aligned(8)));
<% endfor %>

#endif /* ET_DEVICE_<< cgh.c_api_name | upper >>_API_RPC_TYPES_H */
