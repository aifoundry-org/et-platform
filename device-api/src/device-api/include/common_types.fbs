/// @defgroup ET_DEVICE_API Esperanto Device-API
/// @defgroup ET_DEVICE_API_COMMANDS Esperanto Device-API Commands
/// @ingroup ET_DEVICE_API
/// @defgroup ET_DEVICE_API_RESPONSES Esperanto Device-API Responses
/// @ingroup ET_DEVICE_API
/// @defgroup ET_DEVICE_API_EVENTS Esperanto Device-API Events
/// @ingroup ET_DEVICE_API

/// @addtogroup ET_DEVICE_API_COMMON Esperanto Device-API Common Types
/// @ingroup ET_DEVICE_API
/// @{

/// Common Type used across the Esperanto Device-API

/// @brief Emuneration of the message type
enum MessageType : byte {
    Unknown = 0,
    Command,
    Response,
    Event
}

/// @brief Enumeration of the different command priorities
enum CommandPriority : byte {
    LowPriority = 1,
    HighPriority
}

/// @brief Enumeration of all different Commands the API supports
enum CommandID : uint16 {
    Unknown = 0,
    ///< Define information command
    DeviceInfo,
    ///< Launch kernel command
    LaunchKernel
}


/// @brief Enumeration of all different Responses the API supports
enum ResponseID : uint16 {
    Unknown = 0,
    ///< DeviceInfo response
    DeviceInfo,
    ///< Launch Kernel response
    LauchKernel
}

/// @brief Enumeraiton of all different Events
enum EventID: uint16 {
    Unknown = 0,
    ///< Generic error event
    Error
}

///
/// @brief Common header of all messages exchanged by the DeviceAPI
///
struct MessageHeader {
    ///< Type of message
    message_type:MessageType;
    ///< If this is a command the ID of the command
    command_id:CommandID;
    ///< If this is a response the ID of the repsonse
    response_id:ResponseID;
    ///< If this is a event the ID of the event.
    event_id:EventID;
    ///< The timestamp of the event
    time_stamp:uint64;
    ///< The userspace stream that this command associates with
    stream_id:uint64;
    ///< The sequence of this message as generated from the host or the device.
    ///< This field is used to handle out of order message delivery.
    sequence_id:uint64;
}

/// @}
