/*------------------------------------------------------------------------------
 * Copyright (C) 2019, Esperanto Technologies Inc.
 * The copyright to the computer program(s) herein is the
 * property of Esperanto Technologies, Inc. All Rights Reserved.
 * The program(s) may be used and/or copied only with
 * the written permission of Esperanto Technologies and
 * in accordance with the terms and conditions stipulated in the
 * agreement/contract under which the program(s) have been supplied.
 ------------------------------------------------------------------------------ */

// WARNING: this file is auto-generated do not edit directly

#ifndef ET_DEVICE_API_CXX_<< cgh.c_api_name | upper >>_H
#define ET_DEVICE_API_CXX_<< cgh.c_api_name | upper >>_H

#include <stdint.h>
#include <ostream>

namespace device_api {

#include "device_api_spec_<<cgh.c_api_name | lower>>.h"

namespace <<cgh.c_api_name | lower>> {

#include "device_api_rpc_types_<<cgh.c_api_name | lower>>.h"
<% if cgh.c_api_name | lower == "non_privileged" %>
#include "tracing_types_non_privileged.h"
<% endif %>
// Overloads of the operators<<"<<">> to enable outputing the structs in C++

<% for struct in cgh.structs() %>
/// @brief Output << struct["Description"] >>
static inline std::ostream& operator<< "<<" >>(std::ostream& output, const << struct['Name'] >>& obj)
{
  output
  <% for field in struct.get("Fields", []) -%>
  << "<< \"" >> << field["Name"] >><< ":\" <<" >> obj.<< field["Name"] >>
  <% endfor %>;

  return output;
};
<% endfor %>


} // namespace device_api_<<cgh.c_api_name | lower>>

} // namespace device_api

#endif // ET_DEVICE_API_CXX_<< cgh.c_api_name | upper >>_H
