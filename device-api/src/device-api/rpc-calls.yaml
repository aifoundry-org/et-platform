#------------------------------------------------------------------------------
# Copyright (C) 2019, Esperanto Technologies Inc.
# The copyright to the computer program(s) herein is the
# property of Esperanto Technologies, Inc. All Rights Reserved.
# The program(s) may be used and/or copied only with
# the written permission of Esperanto Technologies and
# in accordance with the terms and conditions stipulated in the
# agreement/contract under which the program(s) have been supplied.
#------------------------------------------------------------------------------

Name: RPC_Calls
## List of Enums that are used in our messages
Enums:
  - Name: log_levels
    Type: uint64_t
    Values:
      - Name: CRITICAL
        Value: 0
      - Name: ERROR
        Value: 1
      - Name: WARNING
        Value: 2
      - Name: INFO
        Value: 3
      - Name: DEBUG
        Value: 4
      - Name: TRACE
        Value: 5
  - Name: kernel_launch_error
    Type: uint32_t
    Values:
      - Name: NONE
        Value: 0
      - Name: ABORTED
        Value: 1000
      - Name: NO_SAVED_CONTEXT
        Value: 1001
      - Name: EXCEPTION
        Value: 1002
  - Name: error_type
    Type: uint32_t
    Values:
      - Name: NONE
        Value: 0
      - Name: ASYNC_ERROR_0
        Value: 1
# List of Structs used in our messages
Structs:
  - Name : kernel_params_t
    Fields:
      - Name: tensor_a
        Type: uint64_t
      - Name: tensor_b
        Type: uint64_t
      - Name: tensor_c
        Type: uint64_t
      - Name: tensor_d
        Type: uint64_t
      - Name: tensor_e
        Type: uint64_t
      - Name: tensor_f
        Type: uint64_t
      - Name: tensor_g
        Type: uint64_t
      - Name: kernel_id
        Type: uint64_t
  - Name: kernel_info_t
    Fields:
      - Name: compute_pc
        Type: uint64_t
      - Name: uber_kernel_nodes
        Type: uint64_t
      - Name: shire_mask
        Type: uint64_t

# List of Commands, Responses, Events that the RPC
# DeviceAPI can exchange with the host
Messages :
  - Name: device_fw_version_cmd
    Description:  Request the device-fw version assumption we have a 64 bit
                  hash that capture the version
    Type: Command
    Fields:
      - Name: runtime_version
        Type: uint64_t
  - Name: device_fw_version_rsp
    Type: Response
    Fields:
      - Name: device_fw_version
        Type: uint64_t
#-------------------------------------------------------------------------------
  - Name: device_api_version_cmd
    Description:  Request the version of the device_api supported
                  by the target, advertise the one we support
    Type: Command
    Fields:
      - Name: major
        Type: uint64_t
      - Name: minor
        Type: uint64_t
      - Name: patch
        Type: uint64_t
      - Name: api_hash
        Type: uint64_t
  - Name: device_api_version_rsp
    Type: Response
    Description: Return the version implemented by the target
    Fields:
      - Name: major
        Type: uint64_t
      - Name: minor
        Type: uint64_t
      - Name: patch
        Type: uint64_t
      - Name: api_hash
        Type: uint64_t
      - Name: accept
        Description: Set to true by the targert if it can support
                     the version provided by the requestor
        Type: bool
#-------------------------------------------------------------------------------
  - Name: kernel_launch_cmd
    Description: Launch a kernel on the target
    Type: Command
    Fields:
      - Name: kernel_params
        Type : struct
        Struct: kernel_params_t
      - Name: kernel_info
        Type: struct
        Struct: kernel_info_t
  - Name: kernel_launch_rsp
    Description: Response and result of a kernel launch on the device
    Type: Response
    Fields:
      - Name: kernel_id
        Type: uint64_t
      - Name: error
        Type: enum
        Enum: kernel_launch_error_e
#-------------------------------------------------------------------------------
  - Name: kernel_abort_cmd
    Description: Command to abort a currently running kernel on the device
    Type: Command
    Fields:
      - Name: kernel_id
        Type: uint64_t
  - Name: kernel_abort_rsp
    Description: Response to an abort request
    Type: Response
    Fields:
      - Name: status
        Type: bool
#-------------------------------------------------------------------------------
  - Name: get_kernel_state_cmd
    Description: Query the state if a currently running kernel
    Type: Command
    Fields:
      - Name: kernel_id
        Type: uint64_t
  - Name: get_kernel_state_rsp
    Description: Kernel state reply
    Type: Response
    Fields:
      - Name: status
        Type: uint64_t
#-------------------------------------------------------------------------------
  - Name: set_master_log_level_cmd
    Descripiton: Set the master shire logging level
    Type: Command
    Fields:
      - Name: log_level
        Type: enum
        Enum: log_levels_e
  - Name: set_master_log_level_rsp
    Type: Response
    Fields:
      - Name: status
        Type: bool
#-------------------------------------------------------------------------------
  - Name: set_worker_log_level_cmd
    Description: Set the worker shire logging level
    Type: Command
    Fields:
      - Name: log_level
        Type: enum
        Enum: log_levels_e
  - Name: set_worker_log_level_rsp
    Type: Response
    Fields:
      - Name: status
        Type: bool
#-------------------------------------------------------------------------------
  ### List of asynchronous events that device-fw can send to the host
  - Name: device_fw_error
    Description: Generic error reported by the device
    Type: Event
    Fields:
      - Name: error_type
        Type: enum
        Enum: error_type_e
#-------------------------------------------------------------------------------
  - Name: trace_buffer_full
    Description: Binary trace buffer is full and the host should consume it
    Type: Event
    Fields:
      - Name: ring_buffer_start
        Type: uint64_t
      - Name: size
        Type: uint64_t
