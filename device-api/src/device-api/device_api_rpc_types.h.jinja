/*------------------------------------------------------------------------------
 * Copyright (C) 2019, Esperanto Technologies Inc.
 * The copyright to the computer program(s) herein is the
 * property of Esperanto Technologies, Inc. All Rights Reserved.
 * The program(s) may be used and/or copied only with
 * the written permission of Esperanto Technologies and
 * in accordance with the terms and conditions stipulated in the
 * agreement/contract under which the program(s) have been supplied.
 ------------------------------------------------------------------------------ */

// WARNING: this file is auto-generated do not edit directly

#ifndef ET_DEVICE_API_RPC_TYPES_<< cgh.c_api_name | upper >>_H
#define ET_DEVICE_API_RPC_TYPES_<< cgh.c_api_name | upper >>_H

#include "esperanto/device-api/device_api_message_types.h"

#include <stdint.h>

// DeviceAPI << cgh.api_name >> Enumerations
<% for enum in cgh.enums() -%>

typedef << enum["Type"] >> << enum.c_type_name>>;

/// @brief << enum["Description"] >>
enum << enum.Name | upper >> {
  <% for val in enum.Values -%>
  << enum.Name | upper >>_<< val["Name"] >> = << val["Value"] >>,
  <% endfor %>
  << enum["Name"] | upper >>_MAX
};

<% endfor %>

// DeviceAPI << cgh.api_name>> structs
// Structs that are being used in other tests

<% for struct in cgh.structs() -%>
/// @brief << struct["Description"] >>
struct << struct["Name"] >> {
  <% for field in struct.get("Fields", []) -%>
  << cgh.message_field_type(field) >>  << field["Name"] >>;
  <% endfor %>
};

<% endfor %>

// The real  << cgh.api_name>> RPC messages that we exchange
<% for message in cgh.messages() %>
/// @brief << message["Description"] >>
struct << message["Name"] >>_t {
  <%- if message['Type'] == 'Command' %>
  struct command_header_t command_info;
  <%- elif message['Type'] == 'Response' %>
  struct response_header_t response_info;
  <%- else %>
  struct event_header_t event_info;
  <%- endif %>
  <%- for field in message.get("Fields", []) %>
  <% if field['Type'] == 'struct' -%> struct <% endif -%>
  << cgh.message_field_type(field) >>  << field["Name"] >>; /// << field["Description"] >>
  <%- endfor %>
};
<% endfor %>

#endif // ET_DEVICE_API_RPC_TYPES_<< cgh.c_api_name | upper >>_H
