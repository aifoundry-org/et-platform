stages:
  - package

include:
  - project: 'software/conan/conan-ci-pipelines-common'
    file: 'conan-config.yaml'
  - project: 'software/conan/conan-ci-pipelines-common'
    file: 'package.yaml'

## Package stage

## x86_64 native package flow
package:
  stage: package
  variables:
    DOCKER_IMAGE: conanio/${COMPILER}${COMPILER_VERSION}
    CONAN_OPTIONS: ""
  parallel:
    matrix:
      - COMPILER: [ gcc ]
        COMPILER_VERSION: [ 7 ]
        CONAN_GCC_VERSIONS: [ 7 ]
      - COMPILER: [ clang ]
        COMPILER_VERSION: [ 10 ]
        CONAN_CLANG_VERSIONS: [ 10 ]
  script:
    - pip3 install jsonschema
    - ./conan/ci/package.sh

## riscv64 cross-compilation flow
## - gcc7            is used in the 'build' context (used to build riscv-gnu-gcc8 and other build deps.)
## - riscv-gnu-gcc8  is used in the 'host' context
package:cross:
  stage: package
  tags:
    - docker
  image: conanio/gcc7
  before_script:
    - echo -e "\e[0Ksection_start:`date +%s`:conan_config_section\r\e[0KInstall common conan configuration"
    - conan --version
    - conan config install ${CONAN_CONFIG_URL}
    - conan user
    - echo -e "\e[0Ksection_end:`date +%s`:conan_config_section\r\e[0K"

    - echo -e "\e[0Ksection_start:`date +%s`:install_system_deps_section\r\e[0KInstall system dependencies"
    - sudo apt-get update -qq
    - sudo apt-get install -qq -y --no-install-recommends ninja-build
    - pip3 install jsonschema
    - echo -e "\e[0Ksection_end:`date +%s`:install_system_deps_section\r\e[0K"
  script:
    - conan create . deviceApi/0.1.0@ -tf conan/test_package -pr:b default -pr:h riscv64-gcc8 --build missing
    - conan upload deviceApi/* -r conan-develop --check --confirm --all
  allow_failure: true

    