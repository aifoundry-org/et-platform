registers:
  ['x5', 'x6', 'x7', 'x28', 'x29', 'x30', 'x31'] #TEMPORARY registers only

# Current Supported Mappings:
# rd/rs1/rs2: registers
# imm: immediate
# %f: float values

# TODO: add more mappings / fix any issues with current mappings
# offset: offset i.e. 1(x64)

categories: ['rv64i', 'rv64m', 'rv64a', 'rv64f', 'zifencei']
offsets:    ['16(x16)', '16(x32)', '8(x16)', '8(x8)']

rv64i:
  add:    ['rd', 'rs1', 'rs2']
  addi:   ['rd', 'rs1', 'imm']
  addiw:  ['rd', 'rs1', 'imm']
  and:    ['rd', 'rs1', 'rs2']
  andi:   ['rd', 'rs1', 'imm']
  # sd:     ['rs2', 'rs1', 'offset']
  # ld:     ['rd', 'rs1', 'offset']
  sub:    ['rd', 'rs1', 'rs2']
  xor:    ['rd', 'rs1', 'rs2']
  xori:   ['rd', 'rs1', 'imm']
  or:     ['rd', 'rs1', 'rs2']
  sll:    ['rd', 'rs1', 'rs2']
  sra:    ['rd', 'rs1', 'rs2']
  srl:    ['rd', 'rs1', 'rs2']

# zifencei:
#   fence_i: ['imm', 'rs1', 'rd']

rv64m:
  div:    ['rd', 'rs1', 'rs2']
  divu:   ['rd', 'rs1', 'rs2']
  divuw:  ['rd', 'rs1', 'rs2']
  divw:   ['rd', 'rs1', 'rs2']
  mul:    ['rd', 'rs1', 'rs2']
  rem:    ['rd', 'rs1', 'rs2']
  remu:   ['rd', 'rs1', 'rs2']

rv64f:
  fmadd.s: ['%0', '%1', '%2', '%3']
  fmsub.s: ['%0', '%1', '%2', '%3']
  fnmadd.s: ['%0', '%1', '%2', '%3']
  fnmsub.s: ['%0', '%1', '%2', '%3']
  fadd.s: ['%0', '%1', '%2']
  fsub.s: ['%0', '%1', '%2']
  fmul.s: ['%0', '%1', '%2']

rv64a:
  amoadd.d: ['%0', '%1', '%2']
  amoswap.d: ['%0', '%1', '%2']
  amoxor.d: ['%0', '%1', '%2']
  amoand.d: ['%0', '%1', '%2']
  amoor.d: ['%0', '%1', '%2']
  amomin.d: ['%0', '%1', '%2']
  amomin.d: ['%0', '%1', '%2']

rv64d:
  fmv.x.d: ['%0', '%1']
  fcvt.d.l: ['%0', '%1']
  fmv.d.x: ['%0', '%1']
  fcvt.l.df/a/d: ['%0', '%1']