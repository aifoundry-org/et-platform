Instructions to use the test framework:

1. To create a suite of tests it is recommended a new pytest file be
created. See test_sp_fifo.py for an example of SP tests on Simulator
over the FIFO interface.

2. tf_target_fifo class implements support to connect to supported target
intarfaces (fifo for sysemu).

tf_target_serial class implements support to connect to supported target
intarfaces (serial for silicon, and Zebu)

tf_target_jtag class implements support to connect to supported target
intarfaces (jtag for silicon, and Zebu)

3. tf_specification class implements services to create and processes
supported test commands. test_specification.json documents meta
data needed for TF commands and responses

> JSON test specifiction: to add a new test command and response:
    >Add command and response <name><id> to "command_ids" and
    "response_ids" in the JSON file
    >Add command/response binding:
    Example command binding for echo command to SP
    "TF_CMD_ECHO_TO_SP": {
        "id":"uint16_t", /* Type for command, this should always be defined to uint_16_t */
        "flags":2, /* Specify flags value to indicate command only/command with payload/ or payload only. refer to "protocol" section for supported masks */
        "payload_size":4, /* Spefify payload size, NOTE: if command carries no payload define 0 */
        "payload_args": {
            "cmd_payload":"uint32_t" /* Specify payload arg name and c data type */
        }
    },
    Example response binding for SP FW version query command
    "TF_RSP_SP_FW_VERSION": {
        "flags":2, /* Specify flags value to indicate command only/command with payload/ or payload only. refer to "protocol" section for supported masks */
        "payload_size":12, /* Spefify payload size, NOTE: if command carries no payload define 0 */
        "payload_args": {
            "major":"uint32_t", /* Specify payload arg name and c data type */
            "minor":"uint32_t", /* Specify payload arg name and c data type */
            "revision":"uint32_t" /* Specify payload arg name and c data type */
        }
    },

4. NOTE: Before running any pytests please install following using command below within your Docker runtime
        > pip install pyserial
        > pip install pyelftools

5. To run the pytest use command below
        > pytest <testfile> -s

    Example,
    bash-4.2$ pytest test_sp_fifo.py -s -v

> Output from test run
*********************************************************************************************************
bash-4.2$ pytest test_sp_fifo.py -s -v
collected 6 items

test_sp_fifo.py::test_env_initialize Setup environment
Launch TF Manager
TF Manager: Waiting on client!.............
Client connected !....
Read socket.....
Processing user command, size: 1
start_sim:0size:1
stop_sim:-1size:1
Start Simulator (start_sim)..
Read socket.....
Sim thread spawned ..:
LOGGER NOT INITIALIZED:
		ET [DEVICE_LAYER]: BAR0 selected: 0x1000000000
Fifo Target Instance: run/sp_uart1_tx:run/sp_uart1_rx
PASSED
test_sp_fifo.py::test_echo_to_sp Testing echo to SP..
b'$\x03\x00\x02\x00\x04\x00\x00\x00\xef\xbe\xad\xde#\xa5\xa5\xa5\xa5%'
b'\r$\x03\x01\x10\x00\x04\x00\x00\x00\xef\xbe\xad\xde#\xa5\xa5\xa5\xa5'
id
	259
flags
	16
payload_size
	4
cmd_payload
	3735928559
PASSED
test_sp_fifo.py::test_echo_to_mm Testing echo to MM..
b'$\x04\x00\x02\x00\x04\x00\x00\x00\xef\xbe\xad\xde#\xa5\xa5\xa5\xa5%'
b'$\x04\x01\x10\x00\x04\x00\x00\x00\xef\xbe\xad\xde#\xa5\xa5\xa5\xa5'
id
	260
flags
	16
payload_size
	4
cmd_payload
	3735928559
PASSED
test_sp_fifo.py::test_sp_fw_ver SP FW version ..
b'$\x01\x00\x01\x00\x00\x00\x00\x00#\xa5\xa5\xa5\xa5%'
b'$\x01\x01\x10\x00\x0c\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00#\xa5\xa5\xa5\xa5'
id
	257
flags
	16
payload_size
	12
major
	1
minor
	2
revision
	3
PASSED
test_sp_fifo.py::test_mm_fw_ver MM FW Version ..
b'$\x02\x00\x01\x00\x00\x00\x00\x00#\xa5\xa5\xa5\xa5%'
b'$\x02\x01\x10\x00\x0c\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00#\xa5\xa5\xa5\xa5'
id
	258
flags
	16
payload_size
	12
major
	1
minor
	2
revision
	3
PASSED
test_sp_fifo.py::test_env_finalize Tear down environment
Tear down environment
PASSED

*********************************************************************************************************