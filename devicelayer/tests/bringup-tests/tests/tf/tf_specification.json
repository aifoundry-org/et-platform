{
    "name": "TfSpecification",
    "version": "v.0.1",
    "description": "Test command response specification used for Silicon  Bringup test Framework (TF)",
    "protocol.description": "<name,value> tuples used as protocol params for serial and fifo DUT iface",
    "tf_protocol": {
        "overhead": 7,
        "body_start": 36,
        "body_end": 35,
        "crc_end": 37,
        "command_only": 1,
        "command_with_payload": 2,
        "command_with_payload_next": 4,
        "response_only": 8,
        "response_with_payload": 16,
        "response_with_payload_next": 32,
        "header_size": 8,
        "hdr_id_bytes": 2,
        "hdr_flags_bytes": 2,
        "hdr_payloadSize_bytes": 4,
        "id_idx": 1,
        "flags_idx": 3,
        "payload_size_idx": 5
    },
    "tf_sp_command_ids.description": "List of unique TF command names handled by SP and their associated id",
    "tf_sp_command_ids.instruction": "To add a new test, a new TF command ID should be added to tf_sp_command_ids, a corresponding response to tf_sp_response_ids",
    "tf_sp_command_ids": {
        "TF_CMD_OFFSET": 0,
        "TF_CMD_SP_FW_VERSION": 1,
        "TF_CMD_UNUSED1": 2,
        "TF_CMD_ECHO_TO_SP": 3,
        "TF_CMD_UNUSED2": 4,
        "TF_CMD_MOVE_DATA_TO_DEVICE": 5,
        "TF_CMD_MOVE_DATA_TO_HOST": 6,
        "TF_CMD_SPIO_RAM_READ_WORD": 7,
        "TF_CMD_SPIO_RAM_WRITE_WORD": 8,
        "TF_CMD_SPIO_SPI_FLASH_INIT": 9,
        "TF_CMD_SPIO_SPI_FLASH_READ_WORD": 10,
        "TF_CMD_SPIO_SPI_FLASH_WRITE_WORD": 11,
        "TF_CMD_SPIO_OTP_INIT": 12,
        "TF_CMD_SPIO_OTP_READ_WORD": 13,
        "TF_CMD_SPIO_OTP_WRITE_WORD": 14,
        "TF_CMD_SPIO_VAULT_INIT": 15,
        "TF_CMD_SPIO_VAULT_COMMAND_ISSUE": 16,
        "TF_CMD_SPIO_I2C_INIT": 17,
        "TF_CMD_SPIO_I2C_PMIC_READ": 18,
        "TF_CMD_SPIO_I2C_PMIC_WRITE": 19,
        "TF_CMD_PU_UART_INIT": 20,
        "TF_CMD_PU_SRAM_READ_WORD": 21,
        "TF_CMD_PU_SRAM_WRITE_WORD": 22,
        "TF_CMD_PCIE_PSHIRE_INIT": 23,
        "TF_CMD_PCIE_PSHIRE_VOLTAGE_UPDATE": 24,
        "TF_CMD_PCIE_PSHIRE_PLL_PROGRAM": 25,
        "TF_CMD_PCIE_PSHIRE_NOC_UPDATE_ROUTING_TABLE": 26,
        "TF_CMD_PCIE_CNTR_INIT_BAR_MAPPING": 27,
        "TF_CMD_PCIE_CNTR_INIT_INTERRUPTS": 28,
        "TF_CMD_PCIE_CNTR_INIT_LINK_PARAMS": 29,
        "TF_CMD_PCIE_CNTR_ATU_INIT": 30,
        "TF_CMD_PCIE_PHY_INIT": 31,
        "TF_CMD_PCIE_PHY_FW_INIT": 32,
        "TF_CMD_NOC_VOLTAGE_UPDATE": 33,
        "TF_CMD_NOC_PLL_PROGRAM": 34,
        "TF_CMD_NOC_ROUTING_TABLE_UPDATE": 35,
        "TF_CMD_MEM_MEMSHIRE_PLL_PROGRAM": 36,
        "TF_CMD_MEM_MEMSHIRE_VOLTAGE_UPDATE": 37,
        "TF_CMD_MEM_MEMSHIRE_INIT": 38,
        "TF_CMD_MEM_DDR_CNTR_INIT": 39,
        "TF_CMD_MEM_SUBSYSTEM_CONFIG": 40,
        "TF_CMD_MEM_DDR_READ": 41,
        "TF_CMD_MEM_DDR_WRITE": 42,
        "TF_CMD_MINION_STEP_CLOCK_PLL_PROGRAM": 43,
        "TF_CMD_MINION_VOLTAGE_UPDATE": 44,
        "TF_CMD_MINION_SHIRE_ENABLE": 45,
        "TF_CMD_MINION_SHIRE_BOOT": 46,
        "TF_CMD_MINION_KERNEL_LAUNCH": 47,
        "TF_CMD_MINION_ESR_READ": 48,
        "TF_CMD_MINION_ESR_WRITE": 49,
        "TF_CMD_MINION_ESR_RMW": 50,
        "TF_CMD_SPIO_PLL_PROGRAM": 51,
        "TF_CMD_PU_PLL_PROGRAM": 52,
        "TF_CMD_SPIO_IO_READ": 53,
        "TF_CMD_SPIO_IO_WRITE": 54,
        "TF_CMD_SPIO_IO_RMW": 55,
        "TF_CMD_MAXION_RESET_DEASSERT": 56,
        "TF_CMD_MAXION_CORE_PLL_PROGRAM": 57,
        "TF_CMD_MAXION_UNCORE_PLL_PROGRAM": 58,
        "TF_CMD_MAXION_INTERNAL_INIT": 59,
        "TF_CMD_PMIC_MODULE_TEMPERATURE": 60,
        "TF_CMD_PMIC_MODULE_POWER": 61,
        "TF_CMD_AT_MANUFACTURER_NAME": 97,
        "TF_CMD_AT_PART_NUMBER": 98,
        "TF_CMD_AT_SERIAL_NUMBER": 99,
        "TF_CMD_AT_CHIP_REVISION": 100,
        "TF_CMD_AT_PCIE_MAX_SPEED": 101,
        "TF_CMD_AT_MODULE_REVISION": 102,
        "TF_CMD_AT_FORM_FACTOR": 103,
        "TF_CMD_AT_MEMORY_DETAILS": 104,
        "TF_CMD_AT_MEMORY_SIZE_MB": 105,
        "TF_CMD_AT_MEMORY_TYPE": 106,
        "TF_CMD_MM_CMD_SHELL": 107,
        "TF_CMD_MM_CMD_SHELL_DEBUG_PRINT": 108,
        "TF_CMD_UNSUPPORTED_COMMAND": 255
    },
    "tf_sp_response_ids.description": "List of unique TF response names generated by SP and their associated id",
    "tf_sp_response_ids.instruction": "To add a new test, a new TF command ID should be added to tf_sp_command_ids, a corresponding response to tf_sp_response_ids",
    "tf_sp_response_ids": {
        "TF_RSP_OFFSET": 256,
        "TF_RSP_SP_FW_VERSION": 257,
        "TF_RSP_UNUSED1": 258,
        "TF_RSP_ECHO_TO_SP": 259,
        "TF_RSP_UNUSED2": 260,
        "TF_RSP_MOVE_DATA_TO_DEVICE": 261,
        "TF_RSP_MOVE_DATA_TO_HOST": 262,
        "TF_RSP_SPIO_RAM_READ_WORD": 263,
        "TF_RSP_SPIO_RAM_WRITE_WORD": 264,
        "TF_RSP_SPIO_SPI_FLASH_INIT": 265,
        "TF_RSP_SPIO_SPI_FLASH_READ_WORD": 266,
        "TF_RSP_SPIO_SPI_FLASH_WRITE_WORD": 267,
        "TF_RSP_SPIO_OTP_INIT": 268,
        "TF_RSP_SPIO_OTP_READ_WORD": 269,
        "TF_RSP_SPIO_OTP_WRITE_WORD": 270,
        "TF_RSP_SPIO_VAULT_INIT": 271,
        "TF_RSP_SPIO_VAULT_COMMAND_ISSUE": 272,
        "TF_RSP_SPIO_I2C_INIT": 273,
        "TF_RSP_SPIO_I2C_PMIC_READ": 274,
        "TF_RSP_SPIO_I2C_PMIC_WRITE": 275,
        "TF_RSP_PU_UART_INIT": 276,
        "TF_RSP_PU_SRAM_READ_WORD": 277,
        "TF_RSP_PU_SRAM_WRITE_WORD": 278,
        "TF_RSP_PCIE_PSHIRE_INIT": 279,
        "TF_RSP_PCIE_PSHIRE_VOLTAGE_UPDATE": 280,
        "TF_RSP_PCIE_PSHIRE_PLL_PROGRAM": 281,
        "TF_RSP_PCIE_PSHIRE_NOC_UPDATE_ROUTING_TABLE": 282,
        "TF_RSP_PCIE_CNTR_INIT_BAR_MAPPING": 283,
        "TF_RSP_PCIE_CNTR_INIT_INTERRUPTS": 284,
        "TF_RSP_PCIE_CNTR_INIT_LINK_PARAMS": 285,
        "TF_RSP_PCIE_CNTR_ATU_INIT": 286,
        "TF_RSP_PCIE_PHY_INIT": 287,
        "TF_RSP_PCIE_PHY_FW_INIT": 288,
        "TF_RSP_NOC_VOLTAGE_UPDATE": 289,
        "TF_RSP_NOC_PLL_PROGRAM": 290,
        "TF_RSP_NOC_ROUTING_TABLE_UPDATE": 291,
        "TF_RSP_MEM_MEMSHIRE_PLL_PROGRAM": 292,
        "TF_RSP_MEM_MEMSHIRE_VOLTAGE_UPDATE": 293,
        "TF_RSP_MEM_MEMSHIRE_INIT": 294,
        "TF_RSP_MEM_DDR_CNTR_INIT": 295,
        "TF_RSP_MEM_SUBSYSTEM_CONFIG": 296,
        "TF_RSP_MEM_DDR_READ": 297,
        "TF_RSP_MEM_DDR_WRITE": 298,
        "TF_RSP_MINION_STEP_CLOCK_PLL_PROGRAM": 299,
        "TF_RSP_MINION_VOLTAGE_UPDATE": 300,
        "TF_RSP_MINION_SHIRE_ENABLE": 301,
        "TF_RSP_MINION_SHIRE_BOOT": 302,
        "TF_RSP_MINION_KERNEL_LAUNCH": 303,
        "TF_RSP_MINION_ESR_READ": 304,
        "TF_RSP_MINION_ESR_WRITE": 305,
        "TF_RSP_MINION_ESR_RMW": 306,
        "TF_RSP_SPIO_PLL_PROGRAM": 307,
        "TF_RSP_PU_PLL_PROGRAM": 308,
        "TF_RSP_SPIO_IO_READ": 309,
        "TF_RSP_SPIO_IO_WRITE": 310,
        "TF_RSP_SPIO_IO_RMW": 311,
        "TF_RSP_MAXION_RESET_DEASSERT": 312,
        "TF_RSP_MAXION_CORE_PLL_PROGRAM": 313,
        "TF_RSP_MAXION_UNCORE_PLL_PROGRAM": 314,
        "TF_RSP_MAXION_INTERNAL_INIT": 315,
        "TF_RSP_PMIC_MODULE_TEMPERATURE": 316,
        "TF_RSP_PMIC_MODULE_POWER": 317,
        "TF_RSP_AT_MANUFACTURER_NAME": 352,
        "TF_RSP_AT_PART_NUMBER": 353,
        "TF_RSP_AT_SERIAL_NUMBER": 354,
        "TF_RSP_AT_CHIP_REVISION": 355,
        "TF_RSP_AT_PCIE_MAX_SPEED": 356,
        "TF_RSP_AT_MODULE_REVISION": 357,
        "TF_RSP_AT_FORM_FACTOR": 358,
        "TF_RSP_AT_MEMORY_DETAILS": 359,
        "TF_RSP_AT_MEMORY_SIZE_MB": 360,
        "TF_RSP_AT_MEMORY_TYPE": 361,
        "TF_RSP_MM_CMD_SHELL": 362,
        "TF_RSP_UNUSED3": 363,
        "TF_RSP_UNSUPPORTED_COMMAND": 364
    },
    "cdata_types.description": "Size of c data types in bytes used by device software to pack test related commands and responses",
    "cdata_types": {
        "uint8_t": 1,
        "uint16_t": 2,
        "uint32_t": 4,
        "uint64_t": 8,
        "int8_t": 1,
        "int16_t": 2,
        "int32_t": 4,
        "int64_t": 8,
        "unknown_bytes": -1
    },
    "tf_cmd_hdr": {
        "id": "uint16_t",
        "flags": "uint16_t",
        "payload_size": "uint32_t"
    },
    "tf_rsp_hdr": {
        "id": "uint16_t",
        "flags": "uint16_t",
        "payload_size": "uint32_t"
    },
    "tf_sp_cmd_spec.description": "Command bindings to be used by test writers, this tell the test write teh expected format for command args, <tf_specification instance>.command(<command_name>,payload_args...)",
    "tf_sp_cmd_spec.instruction": "Define flags using values for protocol.command_only, protocol.command_with_payload, or protocol.command_with_payload_next. Define payload size in bytes, 0 if no payload args. Define <name><type> tuples for payload args.",
    "tf_sp_cmd_spec": {
        "TF_CMD_SP_FW_VERSION": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        },
        "TF_CMD_MM_FW_VERSION": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        },
        "TF_CMD_ECHO_TO_SP": {
            "flags": 2,
            "payload_size": 4,
            "payload_args": {
                "cmd_payload": "uint32_t"
            }
        },
        "TF_CMD_MOVE_DATA_TO_DEVICE": {
            "flags": 2,
            "payload_size": 4194304,
            "payload_args": {
                "dst_addr": "uint64_t",
                "size": "uint32_t",
                "data": "unknown_bytes"
            }
        },
        "TF_CMD_MOVE_DATA_TO_HOST": {
            "flags": 2,
            "payload_size": 12,
            "payload_args": {
                "src_addr": "uint64_t",
                "size": "uint32_t"
            }
        },
        "TF_CMD_SPIO_SPI_FLASH_INIT": {
            "flags": 2,
            "payload_size": 1,
            "payload_args": {
                "flash_id": "uint8_t"
            }
        },
        "TF_CMD_MINION_SHIRE_ENABLE": {
            "flags": 2,
            "payload_size": 8,
            "payload_args": {
                "shire_mask": "uint64_t",
                "pll4_mode": "uint8_t"
            }
        },
        "TF_CMD_MINION_ESR_READ": {
            "flags": 2,
            "payload_size": 20,
            "payload_args": {
                "addr": "uint32_t",
                "value": "uint64_t",
                "mask": "uint64_t"
            }
        },
        "TF_CMD_MINION_ESR_WRITE": {
            "flags": 2,
            "payload_size": 20,
            "payload_args": {
                "addr": "uint32_t",
                "value": "uint64_t",
                "mask": "uint64_t"
            }
        },
        "TF_CMD_MINION_ESR_RMW": {
            "flags": 2,
            "payload_size": 20,
            "payload_args": {
                "addr": "uint32_t",
                "value": "uint64_t",
                "mask": "uint64_t"
            }
        },
        "TF_CMD_NOC_PLL_PROGRAM": {
            "flags": 2,
            "payload_size": 1,
            "payload_args": {
                "cmd_payload": "uint8_t"
            }
        },
        "TF_CMD_MINION_STEP_CLOCK_PLL_PROGRAM": {
            "flags": 2,
            "payload_size": 1,
            "payload_args": {
                "cmd_payload": "uint8_t"
            }
        },
        "TF_CMD_SPIO_PLL_PROGRAM": {
            "flags": 2,
            "payload_size": 1,
            "payload_args": {
                "cmd_payload": "uint8_t"
            }
        },
        "TF_CMD_PU_PLL_PROGRAM": {
            "flags": 2,
            "payload_size": 1,
            "payload_args": {
                "cmd_payload": "uint8_t"
            }
        },
        "TF_CMD_SPIO_IO_READ": {
            "flags": 2,
            "payload_size": 21,
            "payload_args": {
                "width": "uint8_t",
                "addr": "uint32_t",
                "value": "uint64_t",
                "mask": "uint64_t"
            }
        },
        "TF_CMD_SPIO_IO_WRITE": {
            "flags": 2,
            "payload_size": 21,
            "payload_args": {
                "width": "uint8_t",
                "addr": "uint32_t",
                "value": "uint64_t",
                "mask": "uint64_t"
            }
        },
        "TF_CMD_SPIO_IO_RMW": {
            "flags": 2,
            "payload_size": 21,
            "payload_args": {
                "width": "uint8_t",
                "addr": "uint32_t",
                "value": "uint64_t",
                "mask": "uint64_t"
            }
        },
        "TF_CMD_MAXION_RESET_DEASSERT": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        },
        "TF_CMD_MAXION_CORE_PLL_PROGRAM": {
            "flags": 2,
            "payload_size": 1,
            "payload_args": {
                "mode": "uint8_t"
            }
        },
        "TF_CMD_MAXION_UNCORE_PLL_PROGRAM": {
            "flags": 2,
            "payload_size": 1,
            "payload_args": {
                "mode": "uint8_t"
            }
        },
        "TF_CMD_MAXION_INTERNAL_INIT": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        },
        "TF_CMD_MM_CMD_SHELL": {
            "flags": 2,
            "payload_size": 256,
            "payload_args": {
                "mm_cmd_size": "uint32_t",
                "mm_cmd_data": "unknown_bytes"
            }
        },
        "TF_CMD_AT_MANUFACTURER_NAME": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        },
        "TF_CMD_AT_PART_NUMBER": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        },
        "TF_CMD_AT_SERIAL_NUMBER": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        },
        "TF_CMD_AT_CHIP_REVISION": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        },
        "TF_CMD_AT_PCIE_MAX_SPEED": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        },
        "TF_CMD_AT_MODULE_REVISION": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        },
        "TF_CMD_AT_FORM_FACTOR": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        },
        "TF_CMD_AT_MEMORY_DETAILS": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        },
        "TF_CMD_AT_MEMORY_SIZE_MB": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        },
        "TF_CMD_AT_MEMORY_TYPE": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        },
        "TF_CMD_PMIC_MODULE_TEMPERATURE": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        },
        "TF_CMD_PMIC_MODULE_POWER": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        }
    },
    "tf_sp_rsp_spec.description": "Response bindings to be used by test writers to assert on results, this tells the test writer the expected format for response args",
    "tf_sp_rsp_spec": {
        "TF_RSP_SP_FW_VERSION": {
            "flags": 2,
            "payload_size": 12,
            "payload_args": {
                "major": "uint32_t",
                "minor": "uint32_t",
                "revision": "uint32_t"
            }
        },
        "TF_RSP_MM_FW_VERSION": {
            "flags": 2,
            "payload_size": 12,
            "payload_args": {
                "major": "uint32_t",
                "minor": "uint32_t",
                "revision": "uint32_t"
            }
        },
        "TF_RSP_ECHO_TO_SP": {
            "flags": 2,
            "payload_size": 4,
            "payload_args": {
                "cmd_payload": "uint32_t"
            }
        },
        "TF_RSP_MOVE_DATA_TO_DEVICE": {
            "flags": 2,
            "payload_size": 4,
            "payload_args": {
                "bytes_written": "uint32_t"
            }
        },
        "TF_RSP_MOVE_DATA_TO_HOST": {
            "flags": 2,
            "payload_size": 4194304,
            "payload_args": {
                "bytes_read": "uint32_t",
                "data": "unknown_bytes"
            }
        },
        "TF_RSP_SPIO_SPI_FLASH_INIT": {
            "flags": 2,
            "payload_size": 4,
            "payload_args": {
                "status": "uint32_t"
            }
        },
        "TF_RSP_MINION_SHIRE_ENABLE": {
            "flags": 2,
            "payload_size": 4,
            "payload_args": {
                "status": "uint32_t"
            }
        },
        "TF_RSP_MINION_ESR_READ": {
            "flags": 2,
            "payload_size": 8,
            "payload_args": {
                "value": "uint64_t"
            }
        },
        "TF_RSP_MINION_ESR_WRITE": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        },
        "TF_RSP_MINION_ESR_RMW": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        },
        "TF_RSP_NOC_PLL_PROGRAM": {
            "flags": 2,
            "payload_size": 4,
            "payload_args": {
                "status": "uint32_t"
            }
        },
        "TF_RSP_MINION_STEP_CLOCK_PLL_PROGRAM": {
            "flags": 2,
            "payload_size": 4,
            "payload_args": {
                "status": "uint32_t"
            }
        },
        "TF_RSP_SPIO_PLL_PROGRAM": {
            "flags": 2,
            "payload_size": 4,
            "payload_args": {
                "status": "uint32_t"
            }
        },
        "TF_RSP_PU_PLL_PROGRAM": {
            "flags": 2,
            "payload_size": 4,
            "payload_args": {
                "status": "uint32_t"
            }
        },
        "TF_RSP_SPIO_IO_READ": {
            "flags": 2,
            "payload_size": 8,
            "payload_args": {
                "value": "uint64_t"
            }
        },
        "TF_RSP_SPIO_IO_WRITE": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        },
        "TF_RSP_SPIO_IO_RMW": {
            "flags": 1,
            "payload_size": 0,
            "payload_args": {}
        },
        "TF_RSP_MAXION_RESET_DEASSERT": {
            "flags": 2,
            "payload_size": 1,
            "payload_args": {
                "status": "uint8_t"
            }
        },
        "TF_RSP_MAXION_CORE_PLL_PROGRAM": {
            "flags": 2,
            "payload_size": 1,
            "payload_args": {
                "status": "uint8_t"
            }
        },
        "TF_RSP_MAXION_UNCORE_PLL_PROGRAM": {
            "flags": 2,
            "payload_size": 1,
            "payload_args": {
                "status": "uint8_t"
            }
        },
        "TF_RSP_MAXION_INTERNAL_INIT": {
            "flags": 2,
            "payload_size": 1,
            "payload_args": {
                "status": "uint8_t"
            }
        },
        "TF_RSP_MM_CMD_SHELL": {
            "flags": 2,
            "payload_size": 256,
            "payload_args": {
                "mm_rsp_size": "uint32_t",
                "mm_rsp_data": "unknown_bytes"
            }
        },
        "TF_RSP_AT_MANUFACTURER_NAME": {
            "flags": 2,
            "payload_size": 8,
            "payload_args": {
                "mfr_name":"uint64_t"
            }
        },
        "TF_RSP_AT_PART_NUMBER": {
            "flags": 2,
            "payload_size": 8,
            "payload_args": {
                "part_num":"uint64_t"
            }
        },
        "TF_RSP_AT_SERIAL_NUMBER": {
            "flags": 2,
            "payload_size": 8,
            "payload_args": {
                "ser_num":"uint64_t"
            }
        },
        "TF_RSP_AT_CHIP_REVISION": {
            "flags": 2,
            "payload_size": 8,
            "payload_args": {
                "chip_rev":"uint64_t"
            }
        },
        "TF_RSP_AT_PCIE_MAX_SPEED": {
            "flags": 2,
            "payload_size": 8,
            "payload_args": {
                "pcie_max_speed":"uint64_t"
            }
        },
        "TF_RSP_AT_MODULE_REVISION": {
            "flags": 2,
            "payload_size": 8,
            "payload_args": {
                "module_rev":"uint64_t"
            }
        },
        "TF_RSP_AT_FORM_FACTOR": {
            "flags": 2,
            "payload_size": 8,
            "payload_args": {
                "form_factor":"uint64_t"
            }
        },
        "TF_RSP_AT_MEMORY_DETAILS": {
            "flags": 2,
            "payload_size": 8,
            "payload_args": {
                "mem_details":"uint64_t"
            }
        },
        "TF_RSP_AT_MEMORY_SIZE_MB": {
            "flags": 2,
            "payload_size": 8,
            "payload_args": {
                "mem_size_mb":"uint64_t"
            }
        },
        "TF_RSP_AT_MEMORY_TYPE": {
            "flags": 2,
            "payload_size": 8,
            "payload_args": {
                "mem_type":"uint64_t"
            }
        },
        "TF_RSP_PMIC_MODULE_TEMPERATURE": {
            "flags": 2,
            "payload_size": 1,
            "payload_args": {
                "mod_temperature":"uint8_t"
            }
        },
        "TF_RSP_PMIC_MODULE_POWER": {
            "flags": 2,
            "payload_size": 1,
            "payload_args": {
                "mod_power":"uint8_t"
            }
        }
    },
    "tf_mm_device_api_cmd_ids.description": "TF can tunnel device-api ops commands to MM, so these ids should be aligned with device-api command ids",
    "tf_mm_device_api_cmd_ids.instruction": "To add a new mm device-api command, a new entry should be added to tf_mm_device_api_cmd_id",
    "tf_mm_device_api_cmd_ids": {
        "TF_CMD_MM_FW_VERSION": 515,
        "TF_CMD_MM_ECHO": 517,
        "TF_CMD_MM_KERNEL_LAUNCH": 519
    },
    "tf_mm_device_api_rsp_ids.description": "TF can tunnel device-api ops responses from MM, so these ids should be aligned with device-api response ids",
    "tf_mm_device_api_rsp_ids.instruction": "To add a new mm device-api command, a new entry should be added to tf_mm_device_api_cmd_id",
    "tf_mm_device_api_rsp_ids": {
        "TF_RSP_MM_FW_VERSION": 516,
        "TF_RSP_MM_ECHO": 518,
        "TF_RSP_MM_KERNEL_LAUNCH": 520
    },
    "tf_mm_device_api_cmd_hdr": {
        "size": "uint16_t",
        "tag_id": "uint16_t",
        "msg_id": "uint16_t",
        "flags": "uint16_t"
    },
    "tf_mm_device_api_rsp_hdr": {
        "size": "uint16_t",
        "tag_id": "uint16_t",
        "msg_id": "uint16_t",
        "flags": "uint16_t"
    },
    "tf_mm_device_api_cmd_spec.description": "Command specification mm ops device-api commands",
    "tf_mm_device_api_cmd_spec.instruction": "For every new device api added to tf_mm_device_api_cmd_id, add corresponding command specification here",
    "tf_mm_device_api_cmd_spec": {
        "TF_CMD_MM_FW_VERSION": {
            "flags": 2,
            "payload_size": 1,
            "payload_args": {
                "firmware_type": "uint8_t"
            }
        },
        "TF_CMD_MM_ECHO": {
            "flags": 2,
            "payload_size": 8,
            "payload_args": {
                "dummy": "uint64_t"
            }
        },
        "TF_CMD_MM_KERNEL_LAUNCH": {
            "flags": 2,
            "payload_size": 48,
            "payload_args": {
                "code_start_address": "uint64_t",
                "pointer_to_args": "uint64_t",
                "exception_buffer": "uint64_t",
                "shire_mask": "uint64_t",
                "kernel_trace_buffer": "uint64_t",
                "argument_payload": "uint64_t"
            }
        }
    },
    "tf_mm_device_api_rsp_spec.description": "Response specification mm ops device-api commands",
    "tf_mm_device_api_rsp_spec.instruction": "For every new device api added to tf_mm_device_api_rsp_id, add corresponding response specification here",
    "tf_mm_device_api_rsp_spec": {
        "TF_RSP_MM_FW_VERSION": {
            "flags": 2,
            "payload_size": 8,
            "payload_args": {
                "major": "uint16_t",
                "minor": "uint16_t",
                "patch": "uint16_t",
                "type": "uint8_t",
                "pad": "uint8_t"
            }
        },
        "TF_RSP_MM_ECHO": {
            "flags": 2,
            "payload_size": 8,
            "payload_args": {
                "device_cmd_start_ts": "uint64_t"
            }
        },
        "TF_RSP_MM_KERNEL_LAUNCH": {
            "flags": 2,
            "payload_size": 4,
            "payload_args": {
                "device_cmd_start_ts": "uint64_t",
                "device_cmd_wait_dur": "uint32_t",
                "device_cmd_execute_dur": "uint32_t",
                "status": "uint32_t",
                "pad": "uint32_t"
            }
        }
    }
}
