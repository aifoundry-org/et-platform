//******************************************************************************
// Copyright (C) 2019, Esperanto Technologies Inc.
// The copyright to the computer program(s) herein is the2
// property of Esperanto Technologies, Inc. All Rights Reserved.
// The program(s) may be used and/or copied only with
// the written permission of Esperanto Technologies and
// in accordance with the terms and conditions stipulated in the
// agreement/contract under which the program(s) have been supplied.
//------------------------------------------------------------------------------

/**
 * Marco definitions of the different command line options/types that the runtime exposes.
 * The runtime internally is using abseil for defining its command line options.
 * Target programs that are going to link with the runtime could be using a different
 * library for parsing command line arguments.
 * This file includes marcos that can help us easily re-create the command line options
 * in the target program and copy the parsed values in our internal representation of the
 * options.
 */

//ETRT_OPT(opt_name, OptName, CXX_TYPE, ABSEIL_TYPE, HELP)

#ifndef ETRT_OPT
#error Define the DEF_OPT macro
#endif // ETRT_OPT

//       name_suf  name-suf  abseil-type  llvm-type  Help
ETRT_OPT(fw_type, fw-type, std::string, FWType, "Specify the type of FW to load on the target: device-fw, fake-fw")
ETRT_OPT(dev_target, dev-target, std::string, DeviceTargetOption, "Specify the target device or simulator we would like to talk to: pcie , sysemu_grpc, device_grpc")
ETRT_OPT(master_minion_elf, master-minion-elf, std::string, std::string, "Path to the MasterMinion.elf file")
ETRT_OPT(worker_minion_elf, worker-minion-elf, std::string, std::string, "Path to the WorkerMinion.elf file")
ETRT_OPT(machine_minion_elf, machine-minion-elf, std::string, std::string, "Path to the MachineMinion.elf file")
ETRT_OPT(sysemu_path, sysemu-path, std::string, std::string, "Path to sysemu")
ETRT_OPT(sysemu_run_dir, sysemu-run-dir, std::string, std::string, "Path to sysemu run folder")
ETRT_OPT(shires, shires, std::string, std::string, "Number of active shires")

// Sysemu Options
ETRT_OPT(sysemu_log_enable, sysemu-log-enable, bool, bool, "Enable sysemu logging")
ETRT_OPT(sysemu_log_minion, sysemu-log-minion, int64_t, int64_t, "Enable sysemu logging for minion X")
ETRT_OPT(sysemu_pu_uart_tx_file, sysemu-pu-uart-tx-file, std::string, std::string, "Set sysemu PU UART TX log file")
ETRT_OPT(sysemu_pu_uart1_tx_file, sysemu-pu-uart1-tx-file, std::string, std::string, "Set sysemu PU UART1 TX log file")

#undef ETRT_OPT
