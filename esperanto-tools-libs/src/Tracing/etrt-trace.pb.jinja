/*------------------------------------------------------------------------------
 * Copyright (C) 2019, Esperanto Technologies Inc.
 * The copyright to the computer program(s) herein is the
 * property of Esperanto Technologies, Inc. All Rights Reserved.
 * The program(s) may be used and/or copied only with
 * the written permission of Esperanto Technologies and
 * in accordance with the terms and conditions stipulated in the
 * agreement/contract under which the program(s) have been supplied.
 ------------------------------------------------------------------------------ */

syntax = "proto3";

import "google/protobuf/timestamp.proto";

package et_runtime.tracing;

message DeviceAPI_cmd_hdr {
  uint64 command_id = 1;
  uint64 host_timestamp = 2;
  uint64 device_timestamp_mtime = 3;
  uint32 stream_id = 4;
};

message DeviceAPI_rsp_hdr {
  DeviceAPI_cmd_hdr cmd_hdr = 1;
  uint64 device_timestamp_mtime = 2;
};

message DeviceAPI_event_hdr {
  uint64 device_timestamp_mtime = 1;
};

message DeviceAPI_trace_hdr {
  uint64 device_timestamp_mtime = 1;
  uint32 hartid = 2;
};

<% for module in spec['Modules'] -%>

  <% set mname = module['Name'] -%>
  <% set enums = module['Enums'] -%>
  <% set structs = module['Structs'] -%>
  <% set unions = module['Unions'] -%>
  <% set functions = module['Functions'] -%>

  <% for enum in enums %>
enum << mname >>_<< enum['Name'] >> {
    <% for value in enum['Values'] -%>
    << mname | upper >>_<< enum['Name'] | upper >>_<< value['Name'] | upper >> = << value['Value'] >>;
    <% endfor %>
}
  <% endfor %>

  <% for struct in structs %>
message << mname >>_<< struct['Name'] >> {
    <%- for arg in struct['Fields'] %>
  << cgh.proto_type(module, arg) >> << arg['Name']>>  = << loop.index >> ;
    <%- endfor %>
};
  <% endfor %>

  <% for union in unions %>
message << mname >>_<< union['Name'] >> {
  oneof << union['Name'] >>_oneof {
    <%- for arg in union['Fields'] %>
    << cgh.proto_type(module, arg) >> << arg['Name']>>  = << loop.index >> ;
    <%- endfor %>
  }
};
  <% endfor %>

  <% for function in functions %>
message << mname >>_<< function['Name'] >> {
   google.protobuf.Timestamp timestamp = 1;
   uint64 tid = 2;
    <%- for arg in function['Arguments'] %>
  <% if arg['Repeated'] %>repeated<% endif %> << cgh.proto_type(module, arg) >> << arg['Name']>>  = << 2 + loop.index >> ;
    <%- endfor %>
};
  <% endfor %>

<% endfor %>

// To avoid modifying the enum after we add a new function in each module
// have a base value of 1000 per module
enum MessageType {
  EMPTY = 0;
<% for module in spec['Modules'] -%>
  <% set mname = module['Name'] %>
  <% set functions = module['Functions'] -%>
  <% set modLoop = loop %>
  <% for function in functions -%>
    <% set fname = function['Name'] %>
  << mname | upper >>_<< fname |upper >> = << modLoop.index*1000 + loop.index >>;
  <%- endfor %>
<%- endfor %>
};

message RuntimeTraceEntry {
  MessageType type = 1;
  oneof entry {
  <% for module in spec['Modules'] -%>
    <% set mname = module['Name'] %>
    <% set functions = module['Functions'] -%>
    <% set modLoop = loop %>
    <% for function in functions -%>
      <% set fname = function['Name'] %>
    << mname >>_<< fname >> << mname >>_<< fname >>_e = << modLoop.index*1000 + loop.index >>;
    <%- endfor %>
   <%- endfor %>
  }
};
