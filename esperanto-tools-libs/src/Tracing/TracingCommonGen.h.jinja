/*------------------------------------------------------------------------------
 * Copyright (C) 2019, Esperanto Technologies Inc.
 * The copyright to the computer program(s) herein is the
 * property of Esperanto Technologies, Inc. All Rights Reserved.
 * The program(s) may be used and/or copied only with
 * the written permission of Esperanto Technologies and
 * in accordance with the terms and conditions stipulated in the
 * agreement/contract under which the program(s) have been supplied.
 ------------------------------------------------------------------------------ */

// WARNING: this file is auto-generated do not edit directly

#ifndef ET_RUNTIME_TRACING_COMMON_GEN_H
#define ET_RUNTIME_TRACING_COMMON_GEN_H

#include <array>
#include <vector>
#include <cstdint>

#include "etrt-trace.pb.h"

namespace et_runtime {
namespace tracing {

struct TracingOptions {

enum class TracingEnable : uint16_t {
  NONE = 0,
<% for module in spec['Modules'] -%>
  <% set mname = module['Name'] %>
  << mname | upper >>_PB_LOG,
  << mname | upper >>_TEXT_LOG,
  <% set functions = module['Functions'] -%>
  <% for function in functions -%>
    <% set fname = function['Name'] %>
  << mname | upper >>_<< fname |upper >>_PB_LOG,
  << mname | upper >>_<< fname |upper >>_TEXT_LOG,
  <%- endfor %>
<%- endfor %>
  NUM_ELEM
};


<% for module in spec['Modules'] -%>
   <% set mname = module['Name'] -%>
   bool << mname >>_enable_pb_log = << cgh.module_enable_pb_logging(module) >>;
   bool << mname >>_enable_text_log = << cgh.module_enable_text_logging(module) >>;
   <% set functions = module['Functions'] -%>
   <% for function in functions -%>
     <% set fname = function['Name'] %>
   bool << mname >>_<< fname >>_enable_pb_log = << cgh.function_enable_pb_logging(function) >>;
   bool << mname >>_<< fname >>_enable_text_log = << cgh.function_enable_text_logging(function) >>;
  <%- endfor %>
<%- endfor %>

  static const std::array<const char*, static_cast<uint16_t>(TracingEnable::NUM_ELEM)> logging_knobs;
};

// Helper function that returns a TracingOptions object
static inline constexpr const TracingOptions getTracingOptions() {
  const TracingOptions options;
  return options;
}

<% for module in spec['Modules'] -%>
  <% set mname = module['Name'] -%>
  <% set functions = module['Functions'] -%>
  <% for function in functions -%>
    <% set fname = function['Name'] %>
bool PBRecord_<< mname >>_<< fname >>(<< cgh.get_cxx_function_arg_list(module, function) >>);
  <%- endfor %>
<%- endfor %>


}
}

#endif // ET_RUNTIME_TRACING_COMMON_GEN_H
