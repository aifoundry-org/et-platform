include:
  - project: 'software/gitlab-ci-common'
    ref: eaa145e684411db579462b41feb7736c6ed0028c
    file:
      - 'pods/nano-pod.yaml'
      - 'pods/large-pod.yaml'
      - 'pods/xlarge-pod.yaml'
      - 'jobs/generic-k8s-job.yaml'

  - project: 'software/gitlab-ci-common'
    ref: master
    file:
      - 'jobs/conan-jobs.yaml'

stages:
  - smoke
  - generate_build
  - build
  - test
  - deploy


###############################################################################
###############################################################################
###############################################################################

# Smoke job that executes unit-tests in Release/Debug to capture problems early
unit_tests:conan:sysemu:
  extends:
    - .pod_large
    - .template_job
    - .template-conan-linux-ubuntu18.04-gcc7
  
  stage: smoke

  parallel:
    matrix:
      - BUILD_TYPE: [ release, debug ]
  
  variables:
    TIMEOUT: 30m

    CMD_BUILD: |
      sudo apt install ninja-build
      mkdir cmake-build-${BUILD_TYPE}
      cd cmake-build-${BUILD_TYPE}
      conan remote disable conan-tmp
      conan install .. -pr:b default -pr:h linux-ubuntu18.04-x86_64-gcc7-${BUILD_TYPE} -o runtime:with_tests=True -o esperanto-flash-tool:header_only=True --build missing
      cmake --configure .. -DCMAKE_TOOLCHAIN_FILE=conan/conan_toolchain.cmake -G Ninja
      cmake --build .
      ctest -T Test -L 'Generic' -R 'runtime:ut_' -E 'runtime:ut_RuntimeBenchmark' --no-compress-output --output-on-failure --parallel 4

###############################################################################
###############################################################################
###############################################################################

# Generates conan child pipeline
generate_build:conan:
  extends:
    - .pod_nano
    - .template_job
    - .template-conan-linux-ubuntu18.04-gcc7
  stage: generate_build

  variables:
    TIMEOUT: 15m

    CMD_BUILD: |
      cd conan
      python3 -m ci_build
  
  artifacts:
    expire_in: 1h 
    paths:
      - conan/build_pipeline.yml
      - conan/lockfiles_info.json

###############################################################################
###############################################################################
###############################################################################

# conan child build pipeline
build:conan:
  stage: build
  needs:
  - generate_build:conan
  stage: build
  trigger:
    include:
    - artifact: conan/build_pipeline.yml
      job: generate_build:conan
    strategy: depend

###############################################################################
###############################################################################
###############################################################################

# MR
tests:conan:sysemu:
  extends:
    - .pod_large
    - .template_job
    - .template-conan-linux-ubuntu18.04-gcc7
  
  stage: test
  
  parallel:
    matrix:
      - BUILD_TYPE: [ release ]
  
  variables:
    TIMEOUT: 30m

    CMD_BUILD: |
      sudo apt install ninja-build
      mkdir cmake-build-${BUILD_TYPE}
      cd cmake-build-${BUILD_TYPE}
      conan remote disable conan-tmp
      conan install .. -pr:b default -pr:h linux-ubuntu18.04-x86_64-gcc7-${BUILD_TYPE} -o runtime:with_tests=True -o esperanto-flash-tool:header_only=True --build missing
      cmake --configure .. -DCMAKE_TOOLCHAIN_FILE=conan/conan_toolchain.cmake -G Ninja
      cmake --build .
      ctest -T Test -L 'Generic' -E 'runtime:ut_RuntimeBenchmark' -E 'runtime:it_DeviceErrors.KernelLaunchInvalidMask' --no-compress-output --output-on-failure --parallel 4


# NIGHTLY 
# - tests are repeated 10 times to catch flacky tests
# - larger pod to execute more tests in parallel
nightly_torture_tests:conan:sysemu:
  extends:
    - .pod_xlarge
    - .template_job
    - .template-conan-linux-ubuntu18.04-gcc7
  
  stage: test

  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  
  parallel:
    matrix:
      - BUILD_TYPE: [ release ]
  
  variables:
    TIMEOUT: 30m

    CMD_BUILD: |
      sudo apt install ninja-build
      mkdir cmake-build-${BUILD_TYPE}
      cd cmake-build-${BUILD_TYPE}
      conan remote disable conan-tmp
      conan install .. -pr:b default -pr:h linux-ubuntu18.04-x86_64-gcc7-${BUILD_TYPE} -o runtime:with_tests=True -o esperanto-flash-tool:header_only=True --build missing
      cmake --configure .. -DCMAKE_TOOLCHAIN_FILE=conan/conan_toolchain.cmake -G Ninja
      cmake --build .
      ctest -T Test -L 'Generic' --repeat until-fail:10 --no-compress-output --output-on-failure --parallel 8

# integration tests could go here

###############################################################################
###############################################################################
###############################################################################

on_success:promote:
  extends:
    - .pod_nano
    - .template_job
    - .template-conan-linux-ubuntu18.04-gcc7
  
  stage: deploy

  needs:
    - generate_build:conan
    - build:conan
    - tests:conan:sysemu
  
  variables:
    PYTHONIOENCODING: utf-8
    CMD_BUILD: |
      cd conan
      python3 -m ci_promote