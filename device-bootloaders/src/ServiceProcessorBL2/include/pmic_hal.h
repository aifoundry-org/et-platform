/* Copyright (C) 2021, Esperanto Technologies Inc.                         */
/* The copyright to the computer program(s) herein is the                  */
/* property of Esperanto Technologies, Inc. All Rights Reserved.           */
/* The program(s) may be used and/or copied only with                      */
/* the written permission of Esperanto Technologies and                    */
/* in accordance with the terms and conditions stipulated in the           */
/* agreement/contract under which the program(s) have been supplied.       */
/*                                                                         */
/*                                                                         */
/* Generated by Semifore, Inc. csrCompile                                  */
/*    C Header output                                                      */

#ifndef _PMIC_I2C_H_
#define _PMIC_I2C_H_

/* ####################################################################### */
/*        ENUMERATION MACROS                                               */
/* ####################################################################### */

/* Enumeration: pmic_i2c::RESET_COMMAND                                    */
#define PMIC_I2C_RESET_COMMAND_NO_COMMAND 0x0u
#define PMIC_I2C_RESET_COMMAND_PERST      0x1u
#define PMIC_I2C_RESET_COMMAND_RESET      0x2u
#define PMIC_I2C_RESET_COMMAND_PWR_CYCLE  0x3u
#define PMIC_I2C_RESET_COMMAND_SHUTDOWN   0x4u

/* Enumeration: pmic_i2c_board::BOARD_TYPE                                 */
#define PMIC_I2C_BOARD_BOARD_TYPE_BUB  0x1u
#define PMIC_I2C_BOARD_BOARD_TYPE_PCIE 0x2u

/* Enumeration: pmic_i2c_command_comm_fail::I2C_CLIENT_CODE                */
#define PMIC_I2C_COMMAND_COMM_FAIL_I2C_CLIENT_CODE_I2CS_OK          0x0u
#define PMIC_I2C_COMMAND_COMM_FAIL_I2C_CLIENT_CODE_I2CS_HERR        0x1u
#define PMIC_I2C_COMMAND_COMM_FAIL_I2C_CLIENT_CODE_I2CS_REGFORBID   0x2u
#define PMIC_I2C_COMMAND_COMM_FAIL_I2C_CLIENT_CODE_I2CS_READFORBID  0x3u
#define PMIC_I2C_COMMAND_COMM_FAIL_I2C_CLIENT_CODE_I2CS_WRITEFORBID 0x4u
#define PMIC_I2C_COMMAND_COMM_FAIL_I2C_CLIENT_CODE_I2CS_VALUEFORBID 0x5u

/* Enumeration: pmic_i2c_command_comm_fail::I2C_HANDLER_CODE               */
#define PMIC_I2C_COMMAND_COMM_FAIL_I2C_HANDLER_CODE_I2CSH_NONE                              0x0u
#define PMIC_I2C_COMMAND_COMM_FAIL_I2C_HANDLER_CODE_I2CSH_REPEATED_START_DIFF_REG           0x1u
#define PMIC_I2C_COMMAND_COMM_FAIL_I2C_HANDLER_CODE_I2CSH_REPEATED_START_NOT_W_R            0x2u
#define PMIC_I2C_COMMAND_COMM_FAIL_I2C_HANDLER_CODE_I2CSH_NO_REG_BYTE_BEFORE_REPEATED_START 0x3u
#define PMIC_I2C_COMMAND_COMM_FAIL_I2C_HANDLER_CODE_I2CSH_EXTRA_DATA_BEFORE_REPEATED_START  0x4u
#define PMIC_I2C_COMMAND_COMM_FAIL_I2C_HANDLER_CODE_I2CSH_WRITE_UNEXPECTED_LENGTH           0x5u
#define PMIC_I2C_COMMAND_COMM_FAIL_I2C_HANDLER_CODE_I2CSH_READ_UNEXPECTED_LENGTH            0x6u
#define PMIC_I2C_COMMAND_COMM_FAIL_I2C_HANDLER_CODE_I2CSH_UNEXPECTED_AMATCH                 0x7u
#define PMIC_I2C_COMMAND_COMM_FAIL_I2C_HANDLER_CODE_I2CSH_UNEXPECTED_INTR_FLAG              0x8u
#define PMIC_I2C_COMMAND_COMM_FAIL_I2C_HANDLER_CODE_I2CSH_OTHER_WRITE_ERROR                 0x9u
#define PMIC_I2C_COMMAND_COMM_FAIL_I2C_HANDLER_CODE_I2CSH_OTHER_READ_ERROR                  0xau

/* Enumeration: pmic_i2c_reg_com_fail::I2C_REG_CODE                        */
#define PMIC_I2C_REG_COM_FAIL_I2C_REG_CODE_I2CM_OK       0x0u
#define PMIC_I2C_REG_COM_FAIL_I2C_REG_CODE_I2CM_BUSFAULT 0x1u
#define PMIC_I2C_REG_COM_FAIL_I2C_REG_CODE_I2CM_NO_ACK   0x2u
#define PMIC_I2C_REG_COM_FAIL_I2C_REG_CODE_I2CM_TIMEOUT  0x3u
#define PMIC_I2C_REG_COM_FAIL_I2C_REG_CODE_I2CM_BAD_MSG  0x4u

/* Enumeration: pmic_i2c_reset::RESET_CAUSE                                */
#define PMIC_I2C_RESET_RESET_CAUSE_NO_RESET          0x0u
#define PMIC_I2C_RESET_RESET_CAUSE_PWR_ON            0x1u
#define PMIC_I2C_RESET_RESET_CAUSE_WARM_PWR_ON       0x2u
#define PMIC_I2C_RESET_RESET_CAUSE_SOFTWARE_RESET    0x3u
#define PMIC_I2C_RESET_RESET_CAUSE_PMIC_RESET        0x4u
#define PMIC_I2C_RESET_RESET_CAUSE_PERST_RESET       0x5u
#define PMIC_I2C_RESET_RESET_CAUSE_WDT_RESET         0x6u
#define PMIC_I2C_RESET_RESET_CAUSE_CRU_SYS_RESET     0x7u
#define PMIC_I2C_RESET_RESET_CAUSE_SOFTWARE_PWRCYCLE 0x8u
#define PMIC_I2C_RESET_RESET_CAUSE_PMIC_PWRCYCLE     0x9u
#define PMIC_I2C_RESET_RESET_CAUSE_REGFAULT_PWRCYCLE 0xau
#define PMIC_I2C_RESET_RESET_CAUSE_OVRPOWER_PWRCYCLE 0xbu
#define PMIC_I2C_RESET_RESET_CAUSE_OVRTEMPR_PWRCYCLE 0xcu

/* Enumeration: pmic_i2c_fw_mgmtcmd subcommand */
#define PMIC_I2C_FW_MGMTCMD_DATAREAD         0
#define PMIC_I2C_FW_MGMTCMD_UPDATE           1
#define PMIC_I2C_FW_MGMTCMD_BOARDTYPE        2
#define PMIC_I2C_FW_MGMTCMD_CKSUMREAD        3
#define PMIC_I2C_FW_MGMTCMD_HASHREAD         4
#define PMIC_I2C_FW_MGMTCMD_VERSION          5
#define PMIC_I2C_FW_MGMTCMD_RW_ADDRESS       6
#define PMIC_I2C_FW_MGMTCMD_ACTIVE_SLOT      7
#define PMIC_I2C_FW_MGMTCMD_BOOT_SLOT        8
#define PMIC_I2C_FW_MGMTCMD_BOOT_COUNTER     9
#define PMIC_I2C_FW_MGMTCMD_BL_VERSION       10
#define PMIC_I2C_FW_MGMTCMD_METADATA_VERSION 11

/* Enumeration: pmic_i2c_fw_mgmtcmd shift values */
#define PMIC_I2C_FW_MGMTCMD_SLOT_LSB 0x4

/* Enumeration: pmic_i2c_fw_mgmtcmd_status */
#define PMIC_I2C_FW_MGMTCMD_STATUS_UPDATING 0x20
#define PMIC_I2C_FW_MGMTCMD_STATUS_ERROR    0x40
#define PMIC_I2C_FW_MGMTCMD_STATUS_BUSY     0x80

/* Enumeration: pmic_i2c_fru_ops_cmd subcommand */
#define PMIC_I2C_FRU_OPS_CMD_SET_OFFSET          2
#define PMIC_I2C_FRU_OPS_CMD_GET_OFFSET          3
#define PMIC_I2C_FRU_OPS_CMD_READ_FRU_DATA_BYTE  4
#define PMIC_I2C_FRU_OPS_CMD_WRITE_FRU_DATA_BYTE 5
#define PMIC_I2C_FRU_OPS_CMD_WRITE_COMMIT        6

/* ####################################################################### */
/*        ADDRESS MACROS                                                   */
/* ####################################################################### */

/* Address Space for Addressmap: pmic_i2c                                  */
/* Register: pmic_i2c.input_voltage                                        */
#define PMIC_I2C_INPUT_VOLTAGE_ADDRESS      0x3u
#define PMIC_I2C_INPUT_VOLTAGE_BYTE_ADDRESS 0x3u
/* Register: pmic_i2c.input_power                                          */
#define PMIC_I2C_INPUT_POWER_ADDRESS      0x4u
#define PMIC_I2C_INPUT_POWER_BYTE_ADDRESS 0x4u
/* Register: pmic_i2c.average_pwr                                          */
#define PMIC_I2C_AVERAGE_PWR_ADDRESS      0x5u
#define PMIC_I2C_AVERAGE_PWR_BYTE_ADDRESS 0x5u
/* Register: pmic_i2c.system_temp                                          */
#define PMIC_I2C_SYSTEM_TEMP_ADDRESS      0x6u
#define PMIC_I2C_SYSTEM_TEMP_BYTE_ADDRESS 0x6u
/* Register: pmic_i2c.pwr_alarm_config                                     */
#define PMIC_I2C_PWR_ALARM_CONFIG_ADDRESS      0x7u
#define PMIC_I2C_PWR_ALARM_CONFIG_BYTE_ADDRESS 0x7u
/* Register: pmic_i2c.temp_alarm_conf                                      */
#define PMIC_I2C_TEMP_ALARM_CONF_ADDRESS      0x8u
#define PMIC_I2C_TEMP_ALARM_CONF_BYTE_ADDRESS 0x8u
/* Register: pmic_i2c.int_ctrl                                             */
#define PMIC_I2C_INT_CTRL_ADDRESS      0x9u
#define PMIC_I2C_INT_CTRL_BYTE_ADDRESS 0x9u
/* Register: pmic_i2c.int_cause                                            */
#define PMIC_I2C_INT_CAUSE_ADDRESS      0xau
#define PMIC_I2C_INT_CAUSE_BYTE_ADDRESS 0xau
/* Register: pmic_i2c.wdog_timer_config                                    */
#define PMIC_I2C_WDOG_TIMER_CONFIG_ADDRESS      0xeu
#define PMIC_I2C_WDOG_TIMER_CONFIG_BYTE_ADDRESS 0xeu
/* Register: pmic_i2c.wdog_timer_reset                                     */
#define PMIC_I2C_WDOG_TIMER_RESET_ADDRESS      0xfu
#define PMIC_I2C_WDOG_TIMER_RESET_BYTE_ADDRESS 0xfu
/* Register: pmic_i2c.reset_command                                        */
#define PMIC_I2C_RESET_COMMAND_ADDRESS      0x11u
#define PMIC_I2C_RESET_COMMAND_BYTE_ADDRESS 0x11u
/* Register: pmic_i2c.reset_ctrl                                           */
#define PMIC_I2C_RESET_CTRL_ADDRESS      0x12u
#define PMIC_I2C_RESET_CTRL_BYTE_ADDRESS 0x12u
/* Register: pmic_i2c.gpio_config                                          */
#define PMIC_I2C_GPIO_CONFIG_ADDRESS      0x13u
#define PMIC_I2C_GPIO_CONFIG_BYTE_ADDRESS 0x13u
/* Register: pmic_i2c.gpio_rw                                              */
#define PMIC_I2C_GPIO_RW_ADDRESS      0x14u
#define PMIC_I2C_GPIO_RW_BYTE_ADDRESS 0x14u
/* Register: pmic_i2c.pmbstats_rw                                          */
#define PMIC_I2C_PMB_RW_ADDRESS      0x15u
#define PMIC_I2C_PMB_RW_BYTE_ADDRESS 0x15u
/* Register: pmic_i2c.fw_mgmtcmd_rw                                        */
#define PMIC_I2C_FW_MGMTCMD_ADDRESS      0x16u
#define PMIC_I2C_FW_MGMTCMD_BYTE_ADDRESS 0x16u
/* Register: pmic_i2c.fw_mgmtdata_rw                                       */
#define PMIC_I2C_FW_MGMTDATA_ADDRESS      0x17u
#define PMIC_I2C_FW_MGMTDATA_BYTE_ADDRESS 0x17u
/* Register: pmic_i2c.vddqlp_voltage                                       */
#define PMIC_I2C_VDDQLP_VOLTAGE_ADDRESS      0x18u
#define PMIC_I2C_VDDQLP_VOLTAGE_BYTE_ADDRESS 0x18u
/* Register: pmic_i2c.l2_cache_voltage                                     */
#define PMIC_I2C_L2_CACHE_VOLTAGE_ADDRESS      0x19u
#define PMIC_I2C_L2_CACHE_VOLTAGE_BYTE_ADDRESS 0x19u
/* Register: pmic_i2c.ddr_voltage                                          */
#define PMIC_I2C_DDR_VOLTAGE_ADDRESS      0x1au
#define PMIC_I2C_DDR_VOLTAGE_BYTE_ADDRESS 0x1au
/* Register: pmic_i2c.vddq_voltage                                         */
#define PMIC_I2C_VDDQ_VOLTAGE_ADDRESS      0x1bu
#define PMIC_I2C_VDDQ_VOLTAGE_BYTE_ADDRESS 0x1bu
/* Register: pmic_i2c.pcie_logic_voltage                                   */
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_ADDRESS      0x1cu
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_BYTE_ADDRESS 0x1cu
/* Register: pmic_i2c.pcie_voltage                                         */
#define PMIC_I2C_PCIE_VOLTAGE_ADDRESS      0x1du
#define PMIC_I2C_PCIE_VOLTAGE_BYTE_ADDRESS 0x1du
/* Register: pmic_i2c.maxion_voltage                                       */
#define PMIC_I2C_MAXION_VOLTAGE_ADDRESS      0x1eu
#define PMIC_I2C_MAXION_VOLTAGE_BYTE_ADDRESS 0x1eu
/* Register: pmic_i2c.noc_voltage                                          */
#define PMIC_I2C_NOC_VOLTAGE_ADDRESS      0x1fu
#define PMIC_I2C_NOC_VOLTAGE_BYTE_ADDRESS 0x1fu
/* Register: pmic_i2c.minion_all_voltage                                   */
#define PMIC_I2C_MINION_ALL_VOLTAGE_ADDRESS      0x20u
#define PMIC_I2C_MINION_ALL_VOLTAGE_BYTE_ADDRESS 0x20u
/* Register: pmic_i2c.minion_g1_voltage                                    */
#define PMIC_I2C_MINION_G1_VOLTAGE_ADDRESS      0x21u
#define PMIC_I2C_MINION_G1_VOLTAGE_BYTE_ADDRESS 0x21u
/* Register: pmic_i2c.minion_g2_voltage                                    */
#define PMIC_I2C_MINION_G2_VOLTAGE_ADDRESS      0x22u
#define PMIC_I2C_MINION_G2_VOLTAGE_BYTE_ADDRESS 0x22u
/* Register: pmic_i2c.minion_g3_voltage                                    */
#define PMIC_I2C_MINION_G3_VOLTAGE_ADDRESS      0x23u
#define PMIC_I2C_MINION_G3_VOLTAGE_BYTE_ADDRESS 0x23u
/* Register: pmic_i2c.minion_g4_voltage                                    */
#define PMIC_I2C_MINION_G4_VOLTAGE_ADDRESS      0x24u
#define PMIC_I2C_MINION_G4_VOLTAGE_BYTE_ADDRESS 0x24u
/* Register: pmic_i2c.minion_g5_voltage                                    */
#define PMIC_I2C_MINION_G5_VOLTAGE_ADDRESS      0x25u
#define PMIC_I2C_MINION_G5_VOLTAGE_BYTE_ADDRESS 0x25u
/* Register: pmic_i2c.minion_g6_voltage                                    */
#define PMIC_I2C_MINION_G6_VOLTAGE_ADDRESS      0x26u
#define PMIC_I2C_MINION_G6_VOLTAGE_BYTE_ADDRESS 0x26u
/* Register: pmic_i2c.minion_g7_voltage                                    */
#define PMIC_I2C_MINION_G7_VOLTAGE_ADDRESS      0x27u
#define PMIC_I2C_MINION_G7_VOLTAGE_BYTE_ADDRESS 0x27u
/* Register: pmic_i2c.minion_g8_voltage                                    */
#define PMIC_I2C_MINION_G8_VOLTAGE_ADDRESS      0x28u
#define PMIC_I2C_MINION_G8_VOLTAGE_BYTE_ADDRESS 0x28u
/* Register: pmic_i2c.minion_g9_voltage                                    */
#define PMIC_I2C_MINION_G9_VOLTAGE_ADDRESS      0x29u
#define PMIC_I2C_MINION_G9_VOLTAGE_BYTE_ADDRESS 0x29u
/* Register: pmic_i2c.minion_g10_voltage                                   */
#define PMIC_I2C_MINION_G10_VOLTAGE_ADDRESS      0x2au
#define PMIC_I2C_MINION_G10_VOLTAGE_BYTE_ADDRESS 0x2au
/* Register: pmic_i2c.minion_g11_voltage                                   */
#define PMIC_I2C_MINION_G11_VOLTAGE_ADDRESS      0x2bu
#define PMIC_I2C_MINION_G11_VOLTAGE_BYTE_ADDRESS 0x2bu
/* Register: pmic_i2c.minion_g12_voltage                                   */
#define PMIC_I2C_MINION_G12_VOLTAGE_ADDRESS      0x2cu
#define PMIC_I2C_MINION_G12_VOLTAGE_BYTE_ADDRESS 0x2cu
/* Register: pmic_i2c.minion_g13_voltage                                   */
#define PMIC_I2C_MINION_G13_VOLTAGE_ADDRESS      0x2du
#define PMIC_I2C_MINION_G13_VOLTAGE_BYTE_ADDRESS 0x2du
/* Register: pmic_i2c.minion_g14_voltage                                   */
#define PMIC_I2C_MINION_G14_VOLTAGE_ADDRESS      0x2eu
#define PMIC_I2C_MINION_G14_VOLTAGE_BYTE_ADDRESS 0x2eu
/* Register: pmic_i2c.minion_g15_voltage                                   */
#define PMIC_I2C_MINION_G15_VOLTAGE_ADDRESS      0x2fu
#define PMIC_I2C_MINION_G15_VOLTAGE_BYTE_ADDRESS 0x2fu
/* Register: pmic_i2c.minion_g16_voltage                                   */
#define PMIC_I2C_MINION_G16_VOLTAGE_ADDRESS      0x30u
#define PMIC_I2C_MINION_G16_VOLTAGE_BYTE_ADDRESS 0x30u
/* Register: pmic_i2c.minion_g17_voltage                                   */
#define PMIC_I2C_MINION_G17_VOLTAGE_ADDRESS      0x31u
#define PMIC_I2C_MINION_G17_VOLTAGE_BYTE_ADDRESS 0x31u
/* Register: pmic_i2c.fru_ops_cmd                                          */
#define PMIC_I2C_FRU_OPS_CMD_ADDRESS      0x32u
#define PMIC_I2C_FRU_OPS_CMD_BYTE_ADDRESS 0x32u
/* Register: pmic_i2c.fru_data_cmd                                         */
#define PMIC_I2C_FRU_DATA_CMD_ADDRESS      0x33u
#define PMIC_I2C_FRU_DATA_CMD_BYTE_ADDRESS 0x33u

/* Address Space for Addressmap: pmic_i2c_firmware                         */
/* Register: pmic_i2c_firmware.src_hash                                    */
#define PMIC_I2C_FIRMWARE_SRC_HASH_ADDRESS      0x1u
#define PMIC_I2C_FIRMWARE_SRC_HASH_BYTE_ADDRESS 0x1u

/* Address Space for Addressmap: pmic_i2c_board                            */
/* Register: pmic_i2c_board.type                                           */
#define PMIC_I2C_BOARD_TYPE_ADDRESS      0x2u
#define PMIC_I2C_BOARD_TYPE_BYTE_ADDRESS 0x2u

/* Address Space for Addressmap: pmic_i2c_reg_fault                        */
/* Register: pmic_i2c_reg_fault.reg_fault                                  */
#define PMIC_I2C_REG_FAULT_REG_FAULT_ADDRESS      0xbu
#define PMIC_I2C_REG_FAULT_REG_FAULT_BYTE_ADDRESS 0xbu

/* Address Space for Addressmap: pmic_i2c_reg_com_fail                     */
/* Register: pmic_i2c_reg_com_fail.details                                 */
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ADDRESS      0xcu
#define PMIC_I2C_REG_COM_FAIL_DETAILS_BYTE_ADDRESS 0xcu

/* Address Space for Addressmap: pmic_i2c_command_comm_fail                */
/* Register: pmic_i2c_command_comm_fail.details                            */
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_ADDRESS      0xdu
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_BYTE_ADDRESS 0xdu

/* Address Space for Addressmap: pmic_i2c_reset                            */
/* Register: pmic_i2c_reset.reset_cause                                    */
#define PMIC_I2C_RESET_RESET_CAUSE_ADDRESS      0x10u
#define PMIC_I2C_RESET_RESET_CAUSE_BYTE_ADDRESS 0x10u

/* ####################################################################### */
/*        TEMPLATE MACROS                                                  */
/* ####################################################################### */

/* Addressmap type: pmic_i2c                                               */
/* Addressmap template: pmic_i2c                                           */
#define PMIC_I2C_SIZE      0x32u
#define PMIC_I2C_BYTE_SIZE 0x32u
/* Register member: pmic_i2c.input_voltage                                 */
/* Register type referenced: pmic_i2c::input_voltage                       */
/* Register template referenced: pmic_i2c::input_voltage                   */
#define PMIC_I2C_INPUT_VOLTAGE_OFFSET       0x3u
#define PMIC_I2C_INPUT_VOLTAGE_BYTE_OFFSET  0x3u
#define PMIC_I2C_INPUT_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_INPUT_VOLTAGE_WRITE_ACCESS 0u
#define PMIC_I2C_INPUT_VOLTAGE_RESET_VALUE  0x00u
#define PMIC_I2C_INPUT_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_INPUT_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_INPUT_VOLTAGE_WRITE_MASK   0x00u
/* Register member: pmic_i2c.input_power                                   */
/* Register type referenced: pmic_i2c::input_power                         */
/* Register template referenced: pmic_i2c::input_power                     */
#define PMIC_I2C_INPUT_POWER_OFFSET       0x4u
#define PMIC_I2C_INPUT_POWER_BYTE_OFFSET  0x4u
#define PMIC_I2C_INPUT_POWER_READ_ACCESS  1u
#define PMIC_I2C_INPUT_POWER_WRITE_ACCESS 0u
#define PMIC_I2C_INPUT_POWER_RESET_VALUE  0x00u
#define PMIC_I2C_INPUT_POWER_RESET_MASK   0xffu
#define PMIC_I2C_INPUT_POWER_READ_MASK    0xffu
#define PMIC_I2C_INPUT_POWER_WRITE_MASK   0x00u
/* Register member: pmic_i2c.average_pwr                                   */
/* Register type referenced: pmic_i2c::average_pwr                         */
/* Register template referenced: pmic_i2c::average_pwr                     */
#define PMIC_I2C_AVERAGE_PWR_OFFSET       0x5u
#define PMIC_I2C_AVERAGE_PWR_BYTE_OFFSET  0x5u
#define PMIC_I2C_AVERAGE_PWR_READ_ACCESS  1u
#define PMIC_I2C_AVERAGE_PWR_WRITE_ACCESS 0u
#define PMIC_I2C_AVERAGE_PWR_RESET_VALUE  0x00u
#define PMIC_I2C_AVERAGE_PWR_RESET_MASK   0xffu
#define PMIC_I2C_AVERAGE_PWR_READ_MASK    0xffu
#define PMIC_I2C_AVERAGE_PWR_WRITE_MASK   0x00u
/* Register member: pmic_i2c.system_temp                                   */
/* Register type referenced: pmic_i2c::system_temp                         */
/* Register template referenced: pmic_i2c::system_temp                     */
#define PMIC_I2C_SYSTEM_TEMP_OFFSET       0x6u
#define PMIC_I2C_SYSTEM_TEMP_BYTE_OFFSET  0x6u
#define PMIC_I2C_SYSTEM_TEMP_READ_ACCESS  1u
#define PMIC_I2C_SYSTEM_TEMP_WRITE_ACCESS 0u
#define PMIC_I2C_SYSTEM_TEMP_RESET_VALUE  0x00u
#define PMIC_I2C_SYSTEM_TEMP_RESET_MASK   0xffu
#define PMIC_I2C_SYSTEM_TEMP_READ_MASK    0xffu
#define PMIC_I2C_SYSTEM_TEMP_WRITE_MASK   0x00u
/* Register member: pmic_i2c.pwr_alarm_config                              */
/* Register type referenced: pmic_i2c::pwr_alarm_config                    */
/* Register template referenced: pmic_i2c::pwr_alarm_config                */
#define PMIC_I2C_PWR_ALARM_CONFIG_OFFSET       0x7u
#define PMIC_I2C_PWR_ALARM_CONFIG_BYTE_OFFSET  0x7u
#define PMIC_I2C_PWR_ALARM_CONFIG_READ_ACCESS  1u
#define PMIC_I2C_PWR_ALARM_CONFIG_WRITE_ACCESS 1u
#define PMIC_I2C_PWR_ALARM_CONFIG_RESET_VALUE  0x50u
#define PMIC_I2C_PWR_ALARM_CONFIG_RESET_MASK   0xffu
#define PMIC_I2C_PWR_ALARM_CONFIG_READ_MASK    0xffu
#define PMIC_I2C_PWR_ALARM_CONFIG_WRITE_MASK   0xffu
/* Register member: pmic_i2c.temp_alarm_conf                               */
/* Register type referenced: pmic_i2c::temp_alarm_conf                     */
/* Register template referenced: pmic_i2c::temp_alarm_conf                 */
#define PMIC_I2C_TEMP_ALARM_CONF_OFFSET       0x8u
#define PMIC_I2C_TEMP_ALARM_CONF_BYTE_OFFSET  0x8u
#define PMIC_I2C_TEMP_ALARM_CONF_READ_ACCESS  1u
#define PMIC_I2C_TEMP_ALARM_CONF_WRITE_ACCESS 1u
#define PMIC_I2C_TEMP_ALARM_CONF_RESET_VALUE  0x41u
#define PMIC_I2C_TEMP_ALARM_CONF_RESET_MASK   0xffu
#define PMIC_I2C_TEMP_ALARM_CONF_READ_MASK    0xffu
#define PMIC_I2C_TEMP_ALARM_CONF_WRITE_MASK   0xffu
/* Register member: pmic_i2c.int_ctrl                                      */
/* Register type referenced: pmic_i2c::int_ctrl                            */
/* Register template referenced: pmic_i2c::int_ctrl                        */
#define PMIC_I2C_INT_CTRL_OFFSET       0x9u
#define PMIC_I2C_INT_CTRL_BYTE_OFFSET  0x9u
#define PMIC_I2C_INT_CTRL_READ_ACCESS  1u
#define PMIC_I2C_INT_CTRL_WRITE_ACCESS 1u
#define PMIC_I2C_INT_CTRL_RESET_VALUE  0x00u
#define PMIC_I2C_INT_CTRL_RESET_MASK   0xffu
#define PMIC_I2C_INT_CTRL_READ_MASK    0xffu
#define PMIC_I2C_INT_CTRL_WRITE_MASK   0x6fu
/* Register member: pmic_i2c.int_cause                                     */
/* Register type referenced: pmic_i2c::int_cause                           */
/* Register template referenced: pmic_i2c::int_cause                       */
#define PMIC_I2C_INT_CAUSE_OFFSET       0xau
#define PMIC_I2C_INT_CAUSE_BYTE_OFFSET  0xau
#define PMIC_I2C_INT_CAUSE_READ_ACCESS  1u
#define PMIC_I2C_INT_CAUSE_WRITE_ACCESS 0u
#define PMIC_I2C_INT_CAUSE_RESET_VALUE  0x00u
#define PMIC_I2C_INT_CAUSE_RESET_MASK   0xffu
#define PMIC_I2C_INT_CAUSE_READ_MASK    0xffu
#define PMIC_I2C_INT_CAUSE_WRITE_MASK   0x00u
/* Register member: pmic_i2c.wdog_timer_config                             */
/* Register type referenced: pmic_i2c::wdog_timer_config                   */
/* Register template referenced: pmic_i2c::wdog_timer_config               */
#define PMIC_I2C_WDOG_TIMER_CONFIG_OFFSET       0xeu
#define PMIC_I2C_WDOG_TIMER_CONFIG_BYTE_OFFSET  0xeu
#define PMIC_I2C_WDOG_TIMER_CONFIG_READ_ACCESS  1u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WRITE_ACCESS 1u
#define PMIC_I2C_WDOG_TIMER_CONFIG_RESET_VALUE  0x1fu
#define PMIC_I2C_WDOG_TIMER_CONFIG_RESET_MASK   0xffu
#define PMIC_I2C_WDOG_TIMER_CONFIG_READ_MASK    0xffu
#define PMIC_I2C_WDOG_TIMER_CONFIG_WRITE_MASK   0x3fu
/* Register member: pmic_i2c.wdog_timer_reset                              */
/* Register type referenced: pmic_i2c::wdog_timer_reset                    */
/* Register template referenced: pmic_i2c::wdog_timer_reset                */
#define PMIC_I2C_WDOG_TIMER_RESET_OFFSET       0xfu
#define PMIC_I2C_WDOG_TIMER_RESET_BYTE_OFFSET  0xfu
#define PMIC_I2C_WDOG_TIMER_RESET_READ_ACCESS  1u
#define PMIC_I2C_WDOG_TIMER_RESET_WRITE_ACCESS 1u
#define PMIC_I2C_WDOG_TIMER_RESET_RESET_VALUE  0x00u
#define PMIC_I2C_WDOG_TIMER_RESET_RESET_MASK   0xffu
#define PMIC_I2C_WDOG_TIMER_RESET_READ_MASK    0xffu
#define PMIC_I2C_WDOG_TIMER_RESET_WRITE_MASK   0x01u
/* Register member: pmic_i2c.reset_command                                 */
/* Register type referenced: pmic_i2c::reset_command                       */
/* Register template referenced: pmic_i2c::reset_command                   */
#define PMIC_I2C_RESET_COMMAND_OFFSET       0x11u
#define PMIC_I2C_RESET_COMMAND_BYTE_OFFSET  0x11u
#define PMIC_I2C_RESET_COMMAND_READ_ACCESS  1u
#define PMIC_I2C_RESET_COMMAND_WRITE_ACCESS 1u
#define PMIC_I2C_RESET_COMMAND_RESET_VALUE  0x00u
#define PMIC_I2C_RESET_COMMAND_RESET_MASK   0xffu
#define PMIC_I2C_RESET_COMMAND_READ_MASK    0xffu
#define PMIC_I2C_RESET_COMMAND_WRITE_MASK   0xffu
/* Register member: pmic_i2c.reset_ctrl                                    */
/* Register type referenced: pmic_i2c::reset_ctrl                          */
/* Register template referenced: pmic_i2c::reset_ctrl                      */
#define PMIC_I2C_RESET_CTRL_OFFSET       0x12u
#define PMIC_I2C_RESET_CTRL_BYTE_OFFSET  0x12u
#define PMIC_I2C_RESET_CTRL_READ_ACCESS  1u
#define PMIC_I2C_RESET_CTRL_WRITE_ACCESS 1u
#define PMIC_I2C_RESET_CTRL_RESET_VALUE  0x00u
#define PMIC_I2C_RESET_CTRL_RESET_MASK   0xffu
#define PMIC_I2C_RESET_CTRL_READ_MASK    0xffu
#define PMIC_I2C_RESET_CTRL_WRITE_MASK   0x01u
/* Register member: pmic_i2c.gpio_config                                   */
/* Register type referenced: pmic_i2c::gpio_config                         */
/* Register template referenced: pmic_i2c::gpio_config                     */
#define PMIC_I2C_GPIO_CONFIG_OFFSET       0x13u
#define PMIC_I2C_GPIO_CONFIG_BYTE_OFFSET  0x13u
#define PMIC_I2C_GPIO_CONFIG_READ_ACCESS  1u
#define PMIC_I2C_GPIO_CONFIG_WRITE_ACCESS 1u
#define PMIC_I2C_GPIO_CONFIG_RESET_VALUE  0xffu
#define PMIC_I2C_GPIO_CONFIG_RESET_MASK   0xffu
#define PMIC_I2C_GPIO_CONFIG_READ_MASK    0xffu
#define PMIC_I2C_GPIO_CONFIG_WRITE_MASK   0xffu
/* Register member: pmic_i2c.gpio_rw                                       */
/* Register type referenced: pmic_i2c::gpio_rw                             */
/* Register template referenced: pmic_i2c::gpio_rw                         */
#define PMIC_I2C_GPIO_RW_OFFSET       0x14u
#define PMIC_I2C_GPIO_RW_BYTE_OFFSET  0x14u
#define PMIC_I2C_GPIO_RW_READ_ACCESS  1u
#define PMIC_I2C_GPIO_RW_WRITE_ACCESS 1u
#define PMIC_I2C_GPIO_RW_RESET_VALUE  0xffu
#define PMIC_I2C_GPIO_RW_RESET_MASK   0xffu
#define PMIC_I2C_GPIO_RW_READ_MASK    0xffu
#define PMIC_I2C_GPIO_RW_WRITE_MASK   0xffu
/* Register member: pmic_i2c.vddqlp_voltage                                */
/* Register type referenced: pmic_i2c::vddqlp_voltage                      */
/* Register template referenced: pmic_i2c::vddqlp_voltage                  */
#define PMIC_I2C_VDDQLP_VOLTAGE_OFFSET       0x18u
#define PMIC_I2C_VDDQLP_VOLTAGE_BYTE_OFFSET  0x18u
#define PMIC_I2C_VDDQLP_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_VDDQLP_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_VDDQLP_VOLTAGE_RESET_VALUE  0x25u
#define PMIC_I2C_VDDQLP_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_VDDQLP_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_VDDQLP_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.l2_cache_voltage                              */
/* Register type referenced: pmic_i2c::l2_cache_voltage                    */
/* Register template referenced: pmic_i2c::l2_cache_voltage                */
#define PMIC_I2C_L2_CACHE_VOLTAGE_OFFSET       0x19u
#define PMIC_I2C_L2_CACHE_VOLTAGE_BYTE_OFFSET  0x19u
#define PMIC_I2C_L2_CACHE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_L2_CACHE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_L2_CACHE_VOLTAGE_RESET_VALUE  0x50u
#define PMIC_I2C_L2_CACHE_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_L2_CACHE_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_L2_CACHE_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.ddr_voltage                                   */
/* Register type referenced: pmic_i2c::ddr_voltage                         */
/* Register template referenced: pmic_i2c::ddr_voltage                     */
#define PMIC_I2C_DDR_VOLTAGE_OFFSET       0x1au
#define PMIC_I2C_DDR_VOLTAGE_BYTE_OFFSET  0x1au
#define PMIC_I2C_DDR_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_DDR_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_DDR_VOLTAGE_RESET_VALUE  0x78u
#define PMIC_I2C_DDR_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_DDR_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_DDR_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.vddq_voltage                                  */
/* Register type referenced: pmic_i2c::vddq_voltage                        */
/* Register template referenced: pmic_i2c::vddq_voltage                    */
#define PMIC_I2C_VDDQ_VOLTAGE_OFFSET       0x1bu
#define PMIC_I2C_VDDQ_VOLTAGE_BYTE_OFFSET  0x1bu
#define PMIC_I2C_VDDQ_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_VDDQ_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_VDDQ_VOLTAGE_RESET_VALUE  0x55u
#define PMIC_I2C_VDDQ_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_VDDQ_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_VDDQ_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.pcie_logic_voltage                            */
/* Register type referenced: pmic_i2c::pcie_logic_voltage                  */
/* Register template referenced: pmic_i2c::pcie_logic_voltage              */
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_OFFSET       0x1cu
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_BYTE_OFFSET  0x1cu
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_RESET_VALUE  0x18u
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.pcie_voltage                                  */
/* Register type referenced: pmic_i2c::pcie_voltage                        */
/* Register template referenced: pmic_i2c::pcie_voltage                    */
#define PMIC_I2C_PCIE_VOLTAGE_OFFSET       0x1du
#define PMIC_I2C_PCIE_VOLTAGE_BYTE_OFFSET  0x1du
#define PMIC_I2C_PCIE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_PCIE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_PCIE_VOLTAGE_RESET_VALUE  0x48u
#define PMIC_I2C_PCIE_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_PCIE_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_PCIE_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.maxion_voltage                                */
/* Register type referenced: pmic_i2c::maxion_voltage                      */
/* Register template referenced: pmic_i2c::maxion_voltage                  */
#define PMIC_I2C_MAXION_VOLTAGE_OFFSET       0x1eu
#define PMIC_I2C_MAXION_VOLTAGE_BYTE_OFFSET  0x1eu
#define PMIC_I2C_MAXION_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MAXION_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MAXION_VOLTAGE_RESET_VALUE  0x78u
#define PMIC_I2C_MAXION_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_MAXION_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_MAXION_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.noc_voltage                                   */
/* Register type referenced: pmic_i2c::noc_voltage                         */
/* Register template referenced: pmic_i2c::noc_voltage                     */
#define PMIC_I2C_NOC_VOLTAGE_OFFSET       0x1fu
#define PMIC_I2C_NOC_VOLTAGE_BYTE_OFFSET  0x1fu
#define PMIC_I2C_NOC_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_NOC_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_NOC_VOLTAGE_RESET_VALUE  0x28u
#define PMIC_I2C_NOC_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_NOC_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_NOC_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.minion_all_voltage                            */
/* Register type referenced: pmic_i2c::minion_all_voltage                  */
/* Register template referenced: pmic_i2c::minion_all_voltage              */
#define PMIC_I2C_MINION_ALL_VOLTAGE_OFFSET       0x20u
#define PMIC_I2C_MINION_ALL_VOLTAGE_BYTE_OFFSET  0x20u
#define PMIC_I2C_MINION_ALL_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_ALL_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_ALL_VOLTAGE_RESET_VALUE  0x23u
#define PMIC_I2C_MINION_ALL_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_MINION_ALL_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_MINION_ALL_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.minion_g1_voltage                             */
/* Register type referenced: pmic_i2c::minion_g1_voltage                   */
/* Register template referenced: pmic_i2c::minion_g1_voltage               */
#define PMIC_I2C_MINION_G1_VOLTAGE_OFFSET       0x21u
#define PMIC_I2C_MINION_G1_VOLTAGE_BYTE_OFFSET  0x21u
#define PMIC_I2C_MINION_G1_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G1_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G1_VOLTAGE_RESET_VALUE  0x23u
#define PMIC_I2C_MINION_G1_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_MINION_G1_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_MINION_G1_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.minion_g2_voltage                             */
/* Register type referenced: pmic_i2c::minion_g2_voltage                   */
/* Register template referenced: pmic_i2c::minion_g2_voltage               */
#define PMIC_I2C_MINION_G2_VOLTAGE_OFFSET       0x22u
#define PMIC_I2C_MINION_G2_VOLTAGE_BYTE_OFFSET  0x22u
#define PMIC_I2C_MINION_G2_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G2_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G2_VOLTAGE_RESET_VALUE  0x23u
#define PMIC_I2C_MINION_G2_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_MINION_G2_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_MINION_G2_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.minion_g3_voltage                             */
/* Register type referenced: pmic_i2c::minion_g3_voltage                   */
/* Register template referenced: pmic_i2c::minion_g3_voltage               */
#define PMIC_I2C_MINION_G3_VOLTAGE_OFFSET       0x23u
#define PMIC_I2C_MINION_G3_VOLTAGE_BYTE_OFFSET  0x23u
#define PMIC_I2C_MINION_G3_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G3_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G3_VOLTAGE_RESET_VALUE  0x23u
#define PMIC_I2C_MINION_G3_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_MINION_G3_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_MINION_G3_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.minion_g4_voltage                             */
/* Register type referenced: pmic_i2c::minion_g4_voltage                   */
/* Register template referenced: pmic_i2c::minion_g4_voltage               */
#define PMIC_I2C_MINION_G4_VOLTAGE_OFFSET       0x24u
#define PMIC_I2C_MINION_G4_VOLTAGE_BYTE_OFFSET  0x24u
#define PMIC_I2C_MINION_G4_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G4_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G4_VOLTAGE_RESET_VALUE  0x23u
#define PMIC_I2C_MINION_G4_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_MINION_G4_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_MINION_G4_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.minion_g5_voltage                             */
/* Register type referenced: pmic_i2c::minion_g5_voltage                   */
/* Register template referenced: pmic_i2c::minion_g5_voltage               */
#define PMIC_I2C_MINION_G5_VOLTAGE_OFFSET       0x25u
#define PMIC_I2C_MINION_G5_VOLTAGE_BYTE_OFFSET  0x25u
#define PMIC_I2C_MINION_G5_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G5_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G5_VOLTAGE_RESET_VALUE  0x23u
#define PMIC_I2C_MINION_G5_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_MINION_G5_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_MINION_G5_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.minion_g6_voltage                             */
/* Register type referenced: pmic_i2c::minion_g6_voltage                   */
/* Register template referenced: pmic_i2c::minion_g6_voltage               */
#define PMIC_I2C_MINION_G6_VOLTAGE_OFFSET       0x26u
#define PMIC_I2C_MINION_G6_VOLTAGE_BYTE_OFFSET  0x26u
#define PMIC_I2C_MINION_G6_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G6_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G6_VOLTAGE_RESET_VALUE  0x23u
#define PMIC_I2C_MINION_G6_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_MINION_G6_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_MINION_G6_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.minion_g7_voltage                             */
/* Register type referenced: pmic_i2c::minion_g7_voltage                   */
/* Register template referenced: pmic_i2c::minion_g7_voltage               */
#define PMIC_I2C_MINION_G7_VOLTAGE_OFFSET       0x27u
#define PMIC_I2C_MINION_G7_VOLTAGE_BYTE_OFFSET  0x27u
#define PMIC_I2C_MINION_G7_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G7_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G7_VOLTAGE_RESET_VALUE  0x23u
#define PMIC_I2C_MINION_G7_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_MINION_G7_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_MINION_G7_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.minion_g8_voltage                             */
/* Register type referenced: pmic_i2c::minion_g8_voltage                   */
/* Register template referenced: pmic_i2c::minion_g8_voltage               */
#define PMIC_I2C_MINION_G8_VOLTAGE_OFFSET       0x28u
#define PMIC_I2C_MINION_G8_VOLTAGE_BYTE_OFFSET  0x28u
#define PMIC_I2C_MINION_G8_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G8_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G8_VOLTAGE_RESET_VALUE  0x23u
#define PMIC_I2C_MINION_G8_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_MINION_G8_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_MINION_G8_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.minion_g9_voltage                             */
/* Register type referenced: pmic_i2c::minion_g9_voltage                   */
/* Register template referenced: pmic_i2c::minion_g9_voltage               */
#define PMIC_I2C_MINION_G9_VOLTAGE_OFFSET       0x29u
#define PMIC_I2C_MINION_G9_VOLTAGE_BYTE_OFFSET  0x29u
#define PMIC_I2C_MINION_G9_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G9_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G9_VOLTAGE_RESET_VALUE  0x23u
#define PMIC_I2C_MINION_G9_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_MINION_G9_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_MINION_G9_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.minion_g10_voltage                            */
/* Register type referenced: pmic_i2c::minion_g10_voltage                  */
/* Register template referenced: pmic_i2c::minion_g10_voltage              */
#define PMIC_I2C_MINION_G10_VOLTAGE_OFFSET       0x2au
#define PMIC_I2C_MINION_G10_VOLTAGE_BYTE_OFFSET  0x2au
#define PMIC_I2C_MINION_G10_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G10_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G10_VOLTAGE_RESET_VALUE  0x23u
#define PMIC_I2C_MINION_G10_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_MINION_G10_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_MINION_G10_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.minion_g11_voltage                            */
/* Register type referenced: pmic_i2c::minion_g11_voltage                  */
/* Register template referenced: pmic_i2c::minion_g11_voltage              */
#define PMIC_I2C_MINION_G11_VOLTAGE_OFFSET       0x2bu
#define PMIC_I2C_MINION_G11_VOLTAGE_BYTE_OFFSET  0x2bu
#define PMIC_I2C_MINION_G11_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G11_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G11_VOLTAGE_RESET_VALUE  0x23u
#define PMIC_I2C_MINION_G11_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_MINION_G11_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_MINION_G11_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.minion_g12_voltage                            */
/* Register type referenced: pmic_i2c::minion_g12_voltage                  */
/* Register template referenced: pmic_i2c::minion_g12_voltage              */
#define PMIC_I2C_MINION_G12_VOLTAGE_OFFSET       0x2cu
#define PMIC_I2C_MINION_G12_VOLTAGE_BYTE_OFFSET  0x2cu
#define PMIC_I2C_MINION_G12_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G12_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G12_VOLTAGE_RESET_VALUE  0x23u
#define PMIC_I2C_MINION_G12_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_MINION_G12_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_MINION_G12_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.minion_g13_voltage                            */
/* Register type referenced: pmic_i2c::minion_g13_voltage                  */
/* Register template referenced: pmic_i2c::minion_g13_voltage              */
#define PMIC_I2C_MINION_G13_VOLTAGE_OFFSET       0x2du
#define PMIC_I2C_MINION_G13_VOLTAGE_BYTE_OFFSET  0x2du
#define PMIC_I2C_MINION_G13_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G13_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G13_VOLTAGE_RESET_VALUE  0x23u
#define PMIC_I2C_MINION_G13_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_MINION_G13_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_MINION_G13_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.minion_g14_voltage                            */
/* Register type referenced: pmic_i2c::minion_g14_voltage                  */
/* Register template referenced: pmic_i2c::minion_g14_voltage              */
#define PMIC_I2C_MINION_G14_VOLTAGE_OFFSET       0x2eu
#define PMIC_I2C_MINION_G14_VOLTAGE_BYTE_OFFSET  0x2eu
#define PMIC_I2C_MINION_G14_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G14_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G14_VOLTAGE_RESET_VALUE  0x23u
#define PMIC_I2C_MINION_G14_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_MINION_G14_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_MINION_G14_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.minion_g15_voltage                            */
/* Register type referenced: pmic_i2c::minion_g15_voltage                  */
/* Register template referenced: pmic_i2c::minion_g15_voltage              */
#define PMIC_I2C_MINION_G15_VOLTAGE_OFFSET       0x2fu
#define PMIC_I2C_MINION_G15_VOLTAGE_BYTE_OFFSET  0x2fu
#define PMIC_I2C_MINION_G15_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G15_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G15_VOLTAGE_RESET_VALUE  0x23u
#define PMIC_I2C_MINION_G15_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_MINION_G15_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_MINION_G15_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.minion_g16_voltage                            */
/* Register type referenced: pmic_i2c::minion_g16_voltage                  */
/* Register template referenced: pmic_i2c::minion_g16_voltage              */
#define PMIC_I2C_MINION_G16_VOLTAGE_OFFSET       0x30u
#define PMIC_I2C_MINION_G16_VOLTAGE_BYTE_OFFSET  0x30u
#define PMIC_I2C_MINION_G16_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G16_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G16_VOLTAGE_RESET_VALUE  0x23u
#define PMIC_I2C_MINION_G16_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_MINION_G16_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_MINION_G16_VOLTAGE_WRITE_MASK   0xffu
/* Register member: pmic_i2c.minion_g17_voltage                            */
/* Register type referenced: pmic_i2c::minion_g17_voltage                  */
/* Register template referenced: pmic_i2c::minion_g17_voltage              */
#define PMIC_I2C_MINION_G17_VOLTAGE_OFFSET       0x31u
#define PMIC_I2C_MINION_G17_VOLTAGE_BYTE_OFFSET  0x31u
#define PMIC_I2C_MINION_G17_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G17_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G17_VOLTAGE_RESET_VALUE  0x23u
#define PMIC_I2C_MINION_G17_VOLTAGE_RESET_MASK   0xffu
#define PMIC_I2C_MINION_G17_VOLTAGE_READ_MASK    0xffu
#define PMIC_I2C_MINION_G17_VOLTAGE_WRITE_MASK   0xffu
/* Register type: pmic_i2c::fru_ops_cmd                                    */
/* Register template: pmic_i2c::fru_ops_cmd                                */
/* Field member: pmic_i2c::fru_ops_cmd                                     */
#define PMIC_I2C_FRU_OPS_CMD_OFFSET       0x32u
#define PMIC_I2C_FRU_OPS_CMD_BYTE_OFFSET  0x32u
#define PMIC_I2C_FRU_OPS_CMD_READ_ACCESS  1u
#define PMIC_I2C_FRU_OPS_CMD_WRITE_ACCESS 1u
#define PMIC_I2C_FRU_OPS_CMD_RESET_VALUE  0x00u
#define PMIC_I2C_FRU_OPS_CMD_RESET_MASK   0xffu
#define PMIC_I2C_FRU_OPS_CMD_READ_MASK    0xffu
#define PMIC_I2C_FRU_OPS_CMD_WRITE_MASK   0xffu
/* Register type: pmic_i2c::fru_data_cmd                                   */
/* Register template: pmic_i2c::fru_data_cmd                               */
/* Field member: pmic_i2c::fru_data_cmd                                    */
#define PMIC_I2C_FRU_DATA_CMD_OFFSET       0x33u
#define PMIC_I2C_FRU_DATA_CMD_BYTE_OFFSET  0x33u
#define PMIC_I2C_FRU_DATA_CMD_READ_ACCESS  1u
#define PMIC_I2C_FRU_DATA_CMD_WRITE_ACCESS 1u
#define PMIC_I2C_FRU_DATA_CMD_RESET_VALUE  0x00u
#define PMIC_I2C_FRU_DATA_CMD_RESET_MASK   0xffu
#define PMIC_I2C_FRU_DATA_CMD_READ_MASK    0xffu
#define PMIC_I2C_FRU_DATA_CMD_WRITE_MASK   0xffu

/* Register member: pmic_i2c.pmb_stats                                     */
#define PMIC_I2C_PMB_STATS_SNAPSHOT_VALUE 0x43u
#define PMIC_I2C_PMB_STATS_RESET_VALUE    0x47u

/* Register type: pmic_i2c::input_voltage                                  */
/* Register template: pmic_i2c::input_voltage                              */
/* Field member: pmic_i2c::input_voltage.input_voltage_code                */
#define PMIC_I2C_INPUT_VOLTAGE_INPUT_VOLTAGE_CODE_MSB          7u
#define PMIC_I2C_INPUT_VOLTAGE_INPUT_VOLTAGE_CODE_LSB          0u
#define PMIC_I2C_INPUT_VOLTAGE_INPUT_VOLTAGE_CODE_WIDTH        8u
#define PMIC_I2C_INPUT_VOLTAGE_INPUT_VOLTAGE_CODE_READ_ACCESS  1u
#define PMIC_I2C_INPUT_VOLTAGE_INPUT_VOLTAGE_CODE_WRITE_ACCESS 0u
#define PMIC_I2C_INPUT_VOLTAGE_INPUT_VOLTAGE_CODE_RESET        0x00u
#define PMIC_I2C_INPUT_VOLTAGE_INPUT_VOLTAGE_CODE_FIELD_MASK   0xffu
#define PMIC_I2C_INPUT_VOLTAGE_INPUT_VOLTAGE_CODE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_INPUT_VOLTAGE_INPUT_VOLTAGE_CODE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_INPUT_VOLTAGE_INPUT_VOLTAGE_CODE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::input_power                                    */
/* Register template: pmic_i2c::input_power                                */
/* Field member: pmic_i2c::input_power.pwr_whole                           */
#define PMIC_I2C_INPUT_POWER_PWR_WHOLE_MSB          7u
#define PMIC_I2C_INPUT_POWER_PWR_WHOLE_LSB          2u
#define PMIC_I2C_INPUT_POWER_PWR_WHOLE_WIDTH        6u
#define PMIC_I2C_INPUT_POWER_PWR_WHOLE_READ_ACCESS  1u
#define PMIC_I2C_INPUT_POWER_PWR_WHOLE_WRITE_ACCESS 0u
#define PMIC_I2C_INPUT_POWER_PWR_WHOLE_RESET        0x00u
#define PMIC_I2C_INPUT_POWER_PWR_WHOLE_FIELD_MASK   0xfcu
#define PMIC_I2C_INPUT_POWER_PWR_WHOLE_GET(x)       (((x)&0xfcu) >> 2)
#define PMIC_I2C_INPUT_POWER_PWR_WHOLE_SET(x)       (((x) << 2) & 0xfcu)
#define PMIC_I2C_INPUT_POWER_PWR_WHOLE_MODIFY(r, x) ((((x) << 2) & 0xfcu) | ((r)&0x03u))
/* Field member: pmic_i2c::input_power.pwr_dec                             */
#define PMIC_I2C_INPUT_POWER_PWR_DEC_MSB          1u
#define PMIC_I2C_INPUT_POWER_PWR_DEC_LSB          0u
#define PMIC_I2C_INPUT_POWER_PWR_DEC_WIDTH        2u
#define PMIC_I2C_INPUT_POWER_PWR_DEC_READ_ACCESS  1u
#define PMIC_I2C_INPUT_POWER_PWR_DEC_WRITE_ACCESS 0u
#define PMIC_I2C_INPUT_POWER_PWR_DEC_RESET        0x0u
#define PMIC_I2C_INPUT_POWER_PWR_DEC_FIELD_MASK   0x03u
#define PMIC_I2C_INPUT_POWER_PWR_DEC_GET(x)       ((x)&0x03u)
#define PMIC_I2C_INPUT_POWER_PWR_DEC_SET(x)       ((x)&0x03u)
#define PMIC_I2C_INPUT_POWER_PWR_DEC_MODIFY(r, x) (((x)&0x03u) | ((r)&0xfcu))

/* Register type: pmic_i2c::average_pwr                                    */
/* Register template: pmic_i2c::average_pwr                                */
/* Field member: pmic_i2c::average_pwr.pwr_whole                           */
#define PMIC_I2C_AVERAGE_PWR_PWR_WHOLE_MSB          7u
#define PMIC_I2C_AVERAGE_PWR_PWR_WHOLE_LSB          2u
#define PMIC_I2C_AVERAGE_PWR_PWR_WHOLE_WIDTH        6u
#define PMIC_I2C_AVERAGE_PWR_PWR_WHOLE_READ_ACCESS  1u
#define PMIC_I2C_AVERAGE_PWR_PWR_WHOLE_WRITE_ACCESS 0u
#define PMIC_I2C_AVERAGE_PWR_PWR_WHOLE_RESET        0x00u
#define PMIC_I2C_AVERAGE_PWR_PWR_WHOLE_FIELD_MASK   0xfcu
#define PMIC_I2C_AVERAGE_PWR_PWR_WHOLE_GET(x)       (((x)&0xfcu) >> 2)
#define PMIC_I2C_AVERAGE_PWR_PWR_WHOLE_SET(x)       (((x) << 2) & 0xfcu)
#define PMIC_I2C_AVERAGE_PWR_PWR_WHOLE_MODIFY(r, x) ((((x) << 2) & 0xfcu) | ((r)&0x03u))
/* Field member: pmic_i2c::average_pwr.pwr_dec                             */
#define PMIC_I2C_AVERAGE_PWR_PWR_DEC_MSB          1u
#define PMIC_I2C_AVERAGE_PWR_PWR_DEC_LSB          0u
#define PMIC_I2C_AVERAGE_PWR_PWR_DEC_WIDTH        2u
#define PMIC_I2C_AVERAGE_PWR_PWR_DEC_READ_ACCESS  1u
#define PMIC_I2C_AVERAGE_PWR_PWR_DEC_WRITE_ACCESS 0u
#define PMIC_I2C_AVERAGE_PWR_PWR_DEC_RESET        0x0u
#define PMIC_I2C_AVERAGE_PWR_PWR_DEC_FIELD_MASK   0x03u
#define PMIC_I2C_AVERAGE_PWR_PWR_DEC_GET(x)       ((x)&0x03u)
#define PMIC_I2C_AVERAGE_PWR_PWR_DEC_SET(x)       ((x)&0x03u)
#define PMIC_I2C_AVERAGE_PWR_PWR_DEC_MODIFY(r, x) (((x)&0x03u) | ((r)&0xfcu))

/* Register type: pmic_i2c::system_temp                                    */
/* Register template: pmic_i2c::system_temp                                */
/* Field member: pmic_i2c::system_temp.system_temp_code                    */
#define PMIC_I2C_SYSTEM_TEMP_SYSTEM_TEMP_CODE_MSB          7u
#define PMIC_I2C_SYSTEM_TEMP_SYSTEM_TEMP_CODE_LSB          0u
#define PMIC_I2C_SYSTEM_TEMP_SYSTEM_TEMP_CODE_WIDTH        8u
#define PMIC_I2C_SYSTEM_TEMP_SYSTEM_TEMP_CODE_READ_ACCESS  1u
#define PMIC_I2C_SYSTEM_TEMP_SYSTEM_TEMP_CODE_WRITE_ACCESS 0u
#define PMIC_I2C_SYSTEM_TEMP_SYSTEM_TEMP_CODE_RESET        0x00u
#define PMIC_I2C_SYSTEM_TEMP_SYSTEM_TEMP_CODE_FIELD_MASK   0xffu
#define PMIC_I2C_SYSTEM_TEMP_SYSTEM_TEMP_CODE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_SYSTEM_TEMP_SYSTEM_TEMP_CODE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_SYSTEM_TEMP_SYSTEM_TEMP_CODE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::pwr_alarm_config                               */
/* Register template: pmic_i2c::pwr_alarm_config                           */
/* Field member: pmic_i2c::pwr_alarm_config.pwr_whole                      */
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_WHOLE_MSB          7u
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_WHOLE_LSB          2u
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_WHOLE_WIDTH        6u
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_WHOLE_READ_ACCESS  1u
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_WHOLE_WRITE_ACCESS 1u
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_WHOLE_RESET        0x14u
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_WHOLE_FIELD_MASK   0xfcu
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_WHOLE_GET(x)       (((x)&0xfcu) >> 2)
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_WHOLE_SET(x)       (((x) << 2) & 0xfcu)
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_WHOLE_MODIFY(r, x) ((((x) << 2) & 0xfcu) | ((r)&0x03u))
/* Field member: pmic_i2c::pwr_alarm_config.pwr_dec                        */
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_DEC_MSB          1u
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_DEC_LSB          0u
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_DEC_WIDTH        2u
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_DEC_READ_ACCESS  1u
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_DEC_WRITE_ACCESS 1u
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_DEC_RESET        0x0u
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_DEC_FIELD_MASK   0x03u
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_DEC_GET(x)       ((x)&0x03u)
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_DEC_SET(x)       ((x)&0x03u)
#define PMIC_I2C_PWR_ALARM_CONFIG_PWR_DEC_MODIFY(r, x) (((x)&0x03u) | ((r)&0xfcu))

/* Register type: pmic_i2c::temp_alarm_conf                                */
/* Register template: pmic_i2c::temp_alarm_conf                            */
/* Field member: pmic_i2c::temp_alarm_conf.temp_alarm_code                 */
#define PMIC_I2C_TEMP_ALARM_CONF_TEMP_ALARM_CODE_MSB          7u
#define PMIC_I2C_TEMP_ALARM_CONF_TEMP_ALARM_CODE_LSB          0u
#define PMIC_I2C_TEMP_ALARM_CONF_TEMP_ALARM_CODE_WIDTH        8u
#define PMIC_I2C_TEMP_ALARM_CONF_TEMP_ALARM_CODE_READ_ACCESS  1u
#define PMIC_I2C_TEMP_ALARM_CONF_TEMP_ALARM_CODE_WRITE_ACCESS 1u
#define PMIC_I2C_TEMP_ALARM_CONF_TEMP_ALARM_CODE_RESET        0x41u
#define PMIC_I2C_TEMP_ALARM_CONF_TEMP_ALARM_CODE_FIELD_MASK   0xffu
#define PMIC_I2C_TEMP_ALARM_CONF_TEMP_ALARM_CODE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_TEMP_ALARM_CONF_TEMP_ALARM_CODE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_TEMP_ALARM_CONF_TEMP_ALARM_CODE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::int_ctrl                                       */
/* Register template: pmic_i2c::int_ctrl                                   */
/* Field member: pmic_i2c::int_ctrl.reg_com_fail                           */
#define PMIC_I2C_INT_CTRL_REG_COM_FAIL_MSB          6u
#define PMIC_I2C_INT_CTRL_REG_COM_FAIL_LSB          6u
#define PMIC_I2C_INT_CTRL_REG_COM_FAIL_WIDTH        1u
#define PMIC_I2C_INT_CTRL_REG_COM_FAIL_READ_ACCESS  1u
#define PMIC_I2C_INT_CTRL_REG_COM_FAIL_WRITE_ACCESS 1u
#define PMIC_I2C_INT_CTRL_REG_COM_FAIL_RESET        0x0u
#define PMIC_I2C_INT_CTRL_REG_COM_FAIL_FIELD_MASK   0x40u
#define PMIC_I2C_INT_CTRL_REG_COM_FAIL_GET(x)       (((x)&0x40u) >> 6)
#define PMIC_I2C_INT_CTRL_REG_COM_FAIL_SET(x)       (((x) << 6) & 0x40u)
#define PMIC_I2C_INT_CTRL_REG_COM_FAIL_MODIFY(r, x) ((((x) << 6) & 0x40u) | ((r)&0xbfu))
/* Field member: pmic_i2c::int_ctrl.message_error                          */
#define PMIC_I2C_INT_CTRL_MESSAGE_ERROR_MSB          5u
#define PMIC_I2C_INT_CTRL_MESSAGE_ERROR_LSB          5u
#define PMIC_I2C_INT_CTRL_MESSAGE_ERROR_WIDTH        1u
#define PMIC_I2C_INT_CTRL_MESSAGE_ERROR_READ_ACCESS  1u
#define PMIC_I2C_INT_CTRL_MESSAGE_ERROR_WRITE_ACCESS 1u
#define PMIC_I2C_INT_CTRL_MESSAGE_ERROR_RESET        0x0u
#define PMIC_I2C_INT_CTRL_MESSAGE_ERROR_FIELD_MASK   0x20u
#define PMIC_I2C_INT_CTRL_MESSAGE_ERROR_GET(x)       (((x)&0x20u) >> 5)
#define PMIC_I2C_INT_CTRL_MESSAGE_ERROR_SET(x)       (((x) << 5) & 0x20u)
#define PMIC_I2C_INT_CTRL_MESSAGE_ERROR_MODIFY(r, x) ((((x) << 5) & 0x20u) | ((r)&0xdfu))
/* Field member: pmic_i2c::int_ctrl.minion_droop                           */
#define PMIC_I2C_INT_CTRL_MINION_DROOP_MSB          3u
#define PMIC_I2C_INT_CTRL_MINION_DROOP_LSB          3u
#define PMIC_I2C_INT_CTRL_MINION_DROOP_WIDTH        1u
#define PMIC_I2C_INT_CTRL_MINION_DROOP_READ_ACCESS  1u
#define PMIC_I2C_INT_CTRL_MINION_DROOP_WRITE_ACCESS 1u
#define PMIC_I2C_INT_CTRL_MINION_DROOP_RESET        0x0u
#define PMIC_I2C_INT_CTRL_MINION_DROOP_FIELD_MASK   0x08u
#define PMIC_I2C_INT_CTRL_MINION_DROOP_GET(x)       (((x)&0x08u) >> 3)
#define PMIC_I2C_INT_CTRL_MINION_DROOP_SET(x)       (((x) << 3) & 0x08u)
#define PMIC_I2C_INT_CTRL_MINION_DROOP_MODIFY(r, x) ((((x) << 3) & 0x08u) | ((r)&0xf7u))
/* Field member: pmic_i2c::int_ctrl.pwr_fail                               */
#define PMIC_I2C_INT_CTRL_PWR_FAIL_MSB          2u
#define PMIC_I2C_INT_CTRL_PWR_FAIL_LSB          2u
#define PMIC_I2C_INT_CTRL_PWR_FAIL_WIDTH        1u
#define PMIC_I2C_INT_CTRL_PWR_FAIL_READ_ACCESS  1u
#define PMIC_I2C_INT_CTRL_PWR_FAIL_WRITE_ACCESS 1u
#define PMIC_I2C_INT_CTRL_PWR_FAIL_RESET        0x0u
#define PMIC_I2C_INT_CTRL_PWR_FAIL_FIELD_MASK   0x04u
#define PMIC_I2C_INT_CTRL_PWR_FAIL_GET(x)       (((x)&0x04u) >> 2)
#define PMIC_I2C_INT_CTRL_PWR_FAIL_SET(x)       (((x) << 2) & 0x04u)
#define PMIC_I2C_INT_CTRL_PWR_FAIL_MODIFY(r, x) ((((x) << 2) & 0x04u) | ((r)&0xfbu))
/* Field member: pmic_i2c::int_ctrl.ov_power                               */
#define PMIC_I2C_INT_CTRL_OV_POWER_MSB          1u
#define PMIC_I2C_INT_CTRL_OV_POWER_LSB          1u
#define PMIC_I2C_INT_CTRL_OV_POWER_WIDTH        1u
#define PMIC_I2C_INT_CTRL_OV_POWER_READ_ACCESS  1u
#define PMIC_I2C_INT_CTRL_OV_POWER_WRITE_ACCESS 1u
#define PMIC_I2C_INT_CTRL_OV_POWER_RESET        0x0u
#define PMIC_I2C_INT_CTRL_OV_POWER_FIELD_MASK   0x02u
#define PMIC_I2C_INT_CTRL_OV_POWER_GET(x)       (((x)&0x02u) >> 1)
#define PMIC_I2C_INT_CTRL_OV_POWER_SET(x)       (((x) << 1) & 0x02u)
#define PMIC_I2C_INT_CTRL_OV_POWER_MODIFY(r, x) ((((x) << 1) & 0x02u) | ((r)&0xfdu))
/* Field member: pmic_i2c::int_ctrl.ov_temp                                */
#define PMIC_I2C_INT_CTRL_OV_TEMP_MSB          0u
#define PMIC_I2C_INT_CTRL_OV_TEMP_LSB          0u
#define PMIC_I2C_INT_CTRL_OV_TEMP_WIDTH        1u
#define PMIC_I2C_INT_CTRL_OV_TEMP_READ_ACCESS  1u
#define PMIC_I2C_INT_CTRL_OV_TEMP_WRITE_ACCESS 1u
#define PMIC_I2C_INT_CTRL_OV_TEMP_RESET        0x0u
#define PMIC_I2C_INT_CTRL_OV_TEMP_FIELD_MASK   0x01u
#define PMIC_I2C_INT_CTRL_OV_TEMP_GET(x)       ((x)&0x01u)
#define PMIC_I2C_INT_CTRL_OV_TEMP_SET(x)       ((x)&0x01u)
#define PMIC_I2C_INT_CTRL_OV_TEMP_MODIFY(r, x) (((x)&0x01u) | ((r)&0xfeu))

/* Register type: pmic_i2c::int_cause                                      */
/* Register template: pmic_i2c::int_cause                                  */
/* Field member: pmic_i2c::int_cause.reg_fault                             */
#define PMIC_I2C_INT_CAUSE_REG_FAULT_MSB          7u
#define PMIC_I2C_INT_CAUSE_REG_FAULT_LSB          7u
#define PMIC_I2C_INT_CAUSE_REG_FAULT_WIDTH        1u
#define PMIC_I2C_INT_CAUSE_REG_FAULT_READ_ACCESS  1u
#define PMIC_I2C_INT_CAUSE_REG_FAULT_WRITE_ACCESS 0u
#define PMIC_I2C_INT_CAUSE_REG_FAULT_RESET        0x0u
#define PMIC_I2C_INT_CAUSE_REG_FAULT_FIELD_MASK   0x80u
#define PMIC_I2C_INT_CAUSE_REG_FAULT_GET(x)       (((x)&0x80u) >> 7)
#define PMIC_I2C_INT_CAUSE_REG_FAULT_SET(x)       (((x) << 7) & 0x80u)
#define PMIC_I2C_INT_CAUSE_REG_FAULT_MODIFY(r, x) ((((x) << 7) & 0x80u) | ((r)&0x7fu))
/* Field member: pmic_i2c::int_cause.reg_com_fail                          */
#define PMIC_I2C_INT_CAUSE_REG_COM_FAIL_MSB          6u
#define PMIC_I2C_INT_CAUSE_REG_COM_FAIL_LSB          6u
#define PMIC_I2C_INT_CAUSE_REG_COM_FAIL_WIDTH        1u
#define PMIC_I2C_INT_CAUSE_REG_COM_FAIL_READ_ACCESS  1u
#define PMIC_I2C_INT_CAUSE_REG_COM_FAIL_WRITE_ACCESS 0u
#define PMIC_I2C_INT_CAUSE_REG_COM_FAIL_RESET        0x0u
#define PMIC_I2C_INT_CAUSE_REG_COM_FAIL_FIELD_MASK   0x40u
#define PMIC_I2C_INT_CAUSE_REG_COM_FAIL_GET(x)       (((x)&0x40u) >> 6)
#define PMIC_I2C_INT_CAUSE_REG_COM_FAIL_SET(x)       (((x) << 6) & 0x40u)
#define PMIC_I2C_INT_CAUSE_REG_COM_FAIL_MODIFY(r, x) ((((x) << 6) & 0x40u) | ((r)&0xbfu))
/* Field member: pmic_i2c::int_cause.message_error                         */
#define PMIC_I2C_INT_CAUSE_MESSAGE_ERROR_MSB          5u
#define PMIC_I2C_INT_CAUSE_MESSAGE_ERROR_LSB          5u
#define PMIC_I2C_INT_CAUSE_MESSAGE_ERROR_WIDTH        1u
#define PMIC_I2C_INT_CAUSE_MESSAGE_ERROR_READ_ACCESS  1u
#define PMIC_I2C_INT_CAUSE_MESSAGE_ERROR_WRITE_ACCESS 0u
#define PMIC_I2C_INT_CAUSE_MESSAGE_ERROR_RESET        0x0u
#define PMIC_I2C_INT_CAUSE_MESSAGE_ERROR_FIELD_MASK   0x20u
#define PMIC_I2C_INT_CAUSE_MESSAGE_ERROR_GET(x)       (((x)&0x20u) >> 5)
#define PMIC_I2C_INT_CAUSE_MESSAGE_ERROR_SET(x)       (((x) << 5) & 0x20u)
#define PMIC_I2C_INT_CAUSE_MESSAGE_ERROR_MODIFY(r, x) ((((x) << 5) & 0x20u) | ((r)&0xdfu))
/* Field member: pmic_i2c::int_cause.minion_droop                          */
#define PMIC_I2C_INT_CAUSE_MINION_DROOP_MSB          3u
#define PMIC_I2C_INT_CAUSE_MINION_DROOP_LSB          3u
#define PMIC_I2C_INT_CAUSE_MINION_DROOP_WIDTH        1u
#define PMIC_I2C_INT_CAUSE_MINION_DROOP_READ_ACCESS  1u
#define PMIC_I2C_INT_CAUSE_MINION_DROOP_WRITE_ACCESS 0u
#define PMIC_I2C_INT_CAUSE_MINION_DROOP_RESET        0x0u
#define PMIC_I2C_INT_CAUSE_MINION_DROOP_FIELD_MASK   0x08u
#define PMIC_I2C_INT_CAUSE_MINION_DROOP_GET(x)       (((x)&0x08u) >> 3)
#define PMIC_I2C_INT_CAUSE_MINION_DROOP_SET(x)       (((x) << 3) & 0x08u)
#define PMIC_I2C_INT_CAUSE_MINION_DROOP_MODIFY(r, x) ((((x) << 3) & 0x08u) | ((r)&0xf7u))
/* Field member: pmic_i2c::int_cause.pwr_fail                              */
#define PMIC_I2C_INT_CAUSE_PWR_FAIL_MSB          2u
#define PMIC_I2C_INT_CAUSE_PWR_FAIL_LSB          2u
#define PMIC_I2C_INT_CAUSE_PWR_FAIL_WIDTH        1u
#define PMIC_I2C_INT_CAUSE_PWR_FAIL_READ_ACCESS  1u
#define PMIC_I2C_INT_CAUSE_PWR_FAIL_WRITE_ACCESS 0u
#define PMIC_I2C_INT_CAUSE_PWR_FAIL_RESET        0x0u
#define PMIC_I2C_INT_CAUSE_PWR_FAIL_FIELD_MASK   0x04u
#define PMIC_I2C_INT_CAUSE_PWR_FAIL_GET(x)       (((x)&0x04u) >> 2)
#define PMIC_I2C_INT_CAUSE_PWR_FAIL_SET(x)       (((x) << 2) & 0x04u)
#define PMIC_I2C_INT_CAUSE_PWR_FAIL_MODIFY(r, x) ((((x) << 2) & 0x04u) | ((r)&0xfbu))
/* Field member: pmic_i2c::int_cause.ov_power                              */
#define PMIC_I2C_INT_CAUSE_OV_POWER_MSB          1u
#define PMIC_I2C_INT_CAUSE_OV_POWER_LSB          1u
#define PMIC_I2C_INT_CAUSE_OV_POWER_WIDTH        1u
#define PMIC_I2C_INT_CAUSE_OV_POWER_READ_ACCESS  1u
#define PMIC_I2C_INT_CAUSE_OV_POWER_WRITE_ACCESS 0u
#define PMIC_I2C_INT_CAUSE_OV_POWER_RESET        0x0u
#define PMIC_I2C_INT_CAUSE_OV_POWER_FIELD_MASK   0x02u
#define PMIC_I2C_INT_CAUSE_OV_POWER_GET(x)       (((x)&0x02u) >> 1)
#define PMIC_I2C_INT_CAUSE_OV_POWER_SET(x)       (((x) << 1) & 0x02u)
#define PMIC_I2C_INT_CAUSE_OV_POWER_MODIFY(r, x) ((((x) << 1) & 0x02u) | ((r)&0xfdu))
/* Field member: pmic_i2c::int_cause.ov_temp                               */
#define PMIC_I2C_INT_CAUSE_OV_TEMP_MSB          0u
#define PMIC_I2C_INT_CAUSE_OV_TEMP_LSB          0u
#define PMIC_I2C_INT_CAUSE_OV_TEMP_WIDTH        1u
#define PMIC_I2C_INT_CAUSE_OV_TEMP_READ_ACCESS  1u
#define PMIC_I2C_INT_CAUSE_OV_TEMP_WRITE_ACCESS 0u
#define PMIC_I2C_INT_CAUSE_OV_TEMP_RESET        0x0u
#define PMIC_I2C_INT_CAUSE_OV_TEMP_FIELD_MASK   0x01u
#define PMIC_I2C_INT_CAUSE_OV_TEMP_GET(x)       ((x)&0x01u)
#define PMIC_I2C_INT_CAUSE_OV_TEMP_SET(x)       ((x)&0x01u)
#define PMIC_I2C_INT_CAUSE_OV_TEMP_MODIFY(r, x) (((x)&0x01u) | ((r)&0xfeu))

/* Register type: pmic_i2c::wdog_timer_config                              */
/* Register template: pmic_i2c::wdog_timer_config                          */
/* Field member: pmic_i2c::wdog_timer_config.wdt_enable                    */
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_ENABLE_MSB          5u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_ENABLE_LSB          5u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_ENABLE_WIDTH        1u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_ENABLE_READ_ACCESS  1u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_ENABLE_WRITE_ACCESS 1u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_ENABLE_RESET        0x0u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_ENABLE_FIELD_MASK   0x20u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_ENABLE_GET(x)       (((x)&0x20u) >> 5)
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_ENABLE_SET(x)       (((x) << 5) & 0x20u)
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_ENABLE_MODIFY(r, x) ((((x) << 5) & 0x20u) | ((r)&0xdfu))
/* Field member: pmic_i2c::wdog_timer_config.wtd_assert                    */
#define PMIC_I2C_WDOG_TIMER_CONFIG_WTD_ASSERT_MSB          4u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WTD_ASSERT_LSB          4u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WTD_ASSERT_WIDTH        1u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WTD_ASSERT_READ_ACCESS  1u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WTD_ASSERT_WRITE_ACCESS 1u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WTD_ASSERT_RESET        0x1u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WTD_ASSERT_FIELD_MASK   0x10u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WTD_ASSERT_GET(x)       (((x)&0x10u) >> 4)
#define PMIC_I2C_WDOG_TIMER_CONFIG_WTD_ASSERT_SET(x)       (((x) << 4) & 0x10u)
#define PMIC_I2C_WDOG_TIMER_CONFIG_WTD_ASSERT_MODIFY(r, x) ((((x) << 4) & 0x10u) | ((r)&0xefu))
/* Field member: pmic_i2c::wdog_timer_config.wdt_time                      */
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_TIME_MSB          3u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_TIME_LSB          0u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_TIME_WIDTH        4u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_TIME_READ_ACCESS  1u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_TIME_WRITE_ACCESS 1u
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_TIME_RESET        0xfu
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_TIME_FIELD_MASK   0x0fu
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_TIME_GET(x)       ((x)&0x0fu)
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_TIME_SET(x)       ((x)&0x0fu)
#define PMIC_I2C_WDOG_TIMER_CONFIG_WDT_TIME_MODIFY(r, x) (((x)&0x0fu) | ((r)&0xf0u))

/* Register type: pmic_i2c::wdog_timer_reset                               */
/* Register template: pmic_i2c::wdog_timer_reset                           */
/* Field member: pmic_i2c::wdog_timer_reset.wdt_poke                       */
#define PMIC_I2C_WDOG_TIMER_RESET_WDT_POKE_MSB          0u
#define PMIC_I2C_WDOG_TIMER_RESET_WDT_POKE_LSB          0u
#define PMIC_I2C_WDOG_TIMER_RESET_WDT_POKE_WIDTH        1u
#define PMIC_I2C_WDOG_TIMER_RESET_WDT_POKE_READ_ACCESS  1u
#define PMIC_I2C_WDOG_TIMER_RESET_WDT_POKE_WRITE_ACCESS 1u
#define PMIC_I2C_WDOG_TIMER_RESET_WDT_POKE_RESET        0x0u
#define PMIC_I2C_WDOG_TIMER_RESET_WDT_POKE_FIELD_MASK   0x01u
#define PMIC_I2C_WDOG_TIMER_RESET_WDT_POKE_GET(x)       ((x)&0x01u)
#define PMIC_I2C_WDOG_TIMER_RESET_WDT_POKE_SET(x)       ((x)&0x01u)
#define PMIC_I2C_WDOG_TIMER_RESET_WDT_POKE_MODIFY(r, x) (((x)&0x01u) | ((r)&0xfeu))

/* Register type: pmic_i2c::reset_command                                  */
/* Register template: pmic_i2c::reset_command                              */
/* Field member: pmic_i2c::reset_command.command                           */
#define PMIC_I2C_RESET_COMMAND_COMMAND_MSB          7u
#define PMIC_I2C_RESET_COMMAND_COMMAND_LSB          0u
#define PMIC_I2C_RESET_COMMAND_COMMAND_WIDTH        8u
#define PMIC_I2C_RESET_COMMAND_COMMAND_READ_ACCESS  1u
#define PMIC_I2C_RESET_COMMAND_COMMAND_WRITE_ACCESS 1u
#define PMIC_I2C_RESET_COMMAND_COMMAND_RESET        0x00u
#define PMIC_I2C_RESET_COMMAND_COMMAND_FIELD_MASK   0xffu
#define PMIC_I2C_RESET_COMMAND_COMMAND_GET(x)       ((x)&0xffu)
#define PMIC_I2C_RESET_COMMAND_COMMAND_SET(x)       ((x)&0xffu)
#define PMIC_I2C_RESET_COMMAND_COMMAND_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::reset_ctrl                                     */
/* Register template: pmic_i2c::reset_ctrl                                 */
/* Field member: pmic_i2c::reset_ctrl.perst_en                             */
#define PMIC_I2C_RESET_CTRL_PERST_EN_MSB          0u
#define PMIC_I2C_RESET_CTRL_PERST_EN_LSB          0u
#define PMIC_I2C_RESET_CTRL_PERST_EN_WIDTH        1u
#define PMIC_I2C_RESET_CTRL_PERST_EN_READ_ACCESS  1u
#define PMIC_I2C_RESET_CTRL_PERST_EN_WRITE_ACCESS 1u
#define PMIC_I2C_RESET_CTRL_PERST_EN_RESET        0x0u
#define PMIC_I2C_RESET_CTRL_PERST_EN_FIELD_MASK   0x01u
#define PMIC_I2C_RESET_CTRL_PERST_EN_GET(x)       ((x)&0x01u)
#define PMIC_I2C_RESET_CTRL_PERST_EN_SET(x)       ((x)&0x01u)
#define PMIC_I2C_RESET_CTRL_PERST_EN_MODIFY(r, x) (((x)&0x01u) | ((r)&0xfeu))

/* Register type: pmic_i2c::gpio_config                                    */
/* Register template: pmic_i2c::gpio_config                                */
/* Field member: pmic_i2c::gpio_config.input_output                        */
#define PMIC_I2C_GPIO_CONFIG_INPUT_OUTPUT_MSB          7u
#define PMIC_I2C_GPIO_CONFIG_INPUT_OUTPUT_LSB          0u
#define PMIC_I2C_GPIO_CONFIG_INPUT_OUTPUT_WIDTH        8u
#define PMIC_I2C_GPIO_CONFIG_INPUT_OUTPUT_READ_ACCESS  1u
#define PMIC_I2C_GPIO_CONFIG_INPUT_OUTPUT_WRITE_ACCESS 1u
#define PMIC_I2C_GPIO_CONFIG_INPUT_OUTPUT_RESET        0xffu
#define PMIC_I2C_GPIO_CONFIG_INPUT_OUTPUT_FIELD_MASK   0xffu
#define PMIC_I2C_GPIO_CONFIG_INPUT_OUTPUT_GET(x)       ((x)&0xffu)
#define PMIC_I2C_GPIO_CONFIG_INPUT_OUTPUT_SET(x)       ((x)&0xffu)
#define PMIC_I2C_GPIO_CONFIG_INPUT_OUTPUT_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::gpio_rw                                        */
/* Register template: pmic_i2c::gpio_rw                                    */
/* Field member: pmic_i2c::gpio_rw.input_output                            */
#define PMIC_I2C_GPIO_RW_INPUT_OUTPUT_MSB          7u
#define PMIC_I2C_GPIO_RW_INPUT_OUTPUT_LSB          0u
#define PMIC_I2C_GPIO_RW_INPUT_OUTPUT_WIDTH        8u
#define PMIC_I2C_GPIO_RW_INPUT_OUTPUT_READ_ACCESS  1u
#define PMIC_I2C_GPIO_RW_INPUT_OUTPUT_WRITE_ACCESS 1u
#define PMIC_I2C_GPIO_RW_INPUT_OUTPUT_RESET        0xffu
#define PMIC_I2C_GPIO_RW_INPUT_OUTPUT_FIELD_MASK   0xffu
#define PMIC_I2C_GPIO_RW_INPUT_OUTPUT_GET(x)       ((x)&0xffu)
#define PMIC_I2C_GPIO_RW_INPUT_OUTPUT_SET(x)       ((x)&0xffu)
#define PMIC_I2C_GPIO_RW_INPUT_OUTPUT_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::vddqlp_voltage                                 */
/* Register template: pmic_i2c::vddqlp_voltage                             */
/* Field member: pmic_i2c::vddqlp_voltage.voltage                          */
#define PMIC_I2C_VDDQLP_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_VDDQLP_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_VDDQLP_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_VDDQLP_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_VDDQLP_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_VDDQLP_VOLTAGE_VOLTAGE_RESET        0x25u
#define PMIC_I2C_VDDQLP_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_VDDQLP_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_VDDQLP_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_VDDQLP_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::l2_cache_voltage                               */
/* Register template: pmic_i2c::l2_cache_voltage                           */
/* Field member: pmic_i2c::l2_cache_voltage.voltage                        */
#define PMIC_I2C_L2_CACHE_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_L2_CACHE_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_L2_CACHE_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_L2_CACHE_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_L2_CACHE_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_L2_CACHE_VOLTAGE_VOLTAGE_RESET        0x50u
#define PMIC_I2C_L2_CACHE_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_L2_CACHE_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_L2_CACHE_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_L2_CACHE_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::ddr_voltage                                    */
/* Register template: pmic_i2c::ddr_voltage                                */
/* Field member: pmic_i2c::ddr_voltage.voltage                             */
#define PMIC_I2C_DDR_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_DDR_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_DDR_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_DDR_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_DDR_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_DDR_VOLTAGE_VOLTAGE_RESET        0x78u
#define PMIC_I2C_DDR_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_DDR_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_DDR_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_DDR_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::vddq_voltage                                   */
/* Register template: pmic_i2c::vddq_voltage                               */
/* Field member: pmic_i2c::vddq_voltage.voltage                            */
#define PMIC_I2C_VDDQ_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_VDDQ_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_VDDQ_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_VDDQ_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_VDDQ_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_VDDQ_VOLTAGE_VOLTAGE_RESET        0x55u
#define PMIC_I2C_VDDQ_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_VDDQ_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_VDDQ_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_VDDQ_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::pcie_logic_voltage                             */
/* Register template: pmic_i2c::pcie_logic_voltage                         */
/* Field member: pmic_i2c::pcie_logic_voltage.voltage                      */
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_VOLTAGE_RESET        0x18u
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_PCIE_LOGIC_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::pcie_voltage                                   */
/* Register template: pmic_i2c::pcie_voltage                               */
/* Field member: pmic_i2c::pcie_voltage.voltage                            */
#define PMIC_I2C_PCIE_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_PCIE_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_PCIE_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_PCIE_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_PCIE_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_PCIE_VOLTAGE_VOLTAGE_RESET        0x48u
#define PMIC_I2C_PCIE_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_PCIE_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_PCIE_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_PCIE_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::maxion_voltage                                 */
/* Register template: pmic_i2c::maxion_voltage                             */
/* Field member: pmic_i2c::maxion_voltage.voltage                          */
#define PMIC_I2C_MAXION_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_MAXION_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_MAXION_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_MAXION_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MAXION_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MAXION_VOLTAGE_VOLTAGE_RESET        0x78u
#define PMIC_I2C_MAXION_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_MAXION_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_MAXION_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_MAXION_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::noc_voltage                                    */
/* Register template: pmic_i2c::noc_voltage                                */
/* Field member: pmic_i2c::noc_voltage.voltage                             */
#define PMIC_I2C_NOC_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_NOC_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_NOC_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_NOC_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_NOC_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_NOC_VOLTAGE_VOLTAGE_RESET        0x28u
#define PMIC_I2C_NOC_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_NOC_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_NOC_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_NOC_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::minion_all_voltage                             */
/* Register template: pmic_i2c::minion_all_voltage                         */
/* Field member: pmic_i2c::minion_all_voltage.voltage                      */
#define PMIC_I2C_MINION_ALL_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_MINION_ALL_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_MINION_ALL_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_MINION_ALL_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_ALL_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_ALL_VOLTAGE_VOLTAGE_RESET        0x23u
#define PMIC_I2C_MINION_ALL_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_MINION_ALL_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_ALL_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_ALL_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::minion_g1_voltage                              */
/* Register template: pmic_i2c::minion_g1_voltage                          */
/* Field member: pmic_i2c::minion_g1_voltage.voltage                       */
#define PMIC_I2C_MINION_G1_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_MINION_G1_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_MINION_G1_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_MINION_G1_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G1_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G1_VOLTAGE_VOLTAGE_RESET        0x23u
#define PMIC_I2C_MINION_G1_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_MINION_G1_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G1_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G1_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::minion_g2_voltage                              */
/* Register template: pmic_i2c::minion_g2_voltage                          */
/* Field member: pmic_i2c::minion_g2_voltage.voltage                       */
#define PMIC_I2C_MINION_G2_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_MINION_G2_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_MINION_G2_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_MINION_G2_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G2_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G2_VOLTAGE_VOLTAGE_RESET        0x23u
#define PMIC_I2C_MINION_G2_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_MINION_G2_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G2_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G2_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::minion_g3_voltage                              */
/* Register template: pmic_i2c::minion_g3_voltage                          */
/* Field member: pmic_i2c::minion_g3_voltage.voltage                       */
#define PMIC_I2C_MINION_G3_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_MINION_G3_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_MINION_G3_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_MINION_G3_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G3_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G3_VOLTAGE_VOLTAGE_RESET        0x23u
#define PMIC_I2C_MINION_G3_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_MINION_G3_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G3_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G3_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::minion_g4_voltage                              */
/* Register template: pmic_i2c::minion_g4_voltage                          */
/* Field member: pmic_i2c::minion_g4_voltage.voltage                       */
#define PMIC_I2C_MINION_G4_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_MINION_G4_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_MINION_G4_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_MINION_G4_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G4_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G4_VOLTAGE_VOLTAGE_RESET        0x23u
#define PMIC_I2C_MINION_G4_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_MINION_G4_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G4_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G4_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::minion_g5_voltage                              */
/* Register template: pmic_i2c::minion_g5_voltage                          */
/* Field member: pmic_i2c::minion_g5_voltage.voltage                       */
#define PMIC_I2C_MINION_G5_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_MINION_G5_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_MINION_G5_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_MINION_G5_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G5_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G5_VOLTAGE_VOLTAGE_RESET        0x23u
#define PMIC_I2C_MINION_G5_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_MINION_G5_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G5_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G5_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::minion_g6_voltage                              */
/* Register template: pmic_i2c::minion_g6_voltage                          */
/* Field member: pmic_i2c::minion_g6_voltage.voltage                       */
#define PMIC_I2C_MINION_G6_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_MINION_G6_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_MINION_G6_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_MINION_G6_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G6_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G6_VOLTAGE_VOLTAGE_RESET        0x23u
#define PMIC_I2C_MINION_G6_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_MINION_G6_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G6_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G6_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::minion_g7_voltage                              */
/* Register template: pmic_i2c::minion_g7_voltage                          */
/* Field member: pmic_i2c::minion_g7_voltage.voltage                       */
#define PMIC_I2C_MINION_G7_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_MINION_G7_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_MINION_G7_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_MINION_G7_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G7_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G7_VOLTAGE_VOLTAGE_RESET        0x23u
#define PMIC_I2C_MINION_G7_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_MINION_G7_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G7_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G7_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::minion_g8_voltage                              */
/* Register template: pmic_i2c::minion_g8_voltage                          */
/* Field member: pmic_i2c::minion_g8_voltage.voltage                       */
#define PMIC_I2C_MINION_G8_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_MINION_G8_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_MINION_G8_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_MINION_G8_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G8_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G8_VOLTAGE_VOLTAGE_RESET        0x23u
#define PMIC_I2C_MINION_G8_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_MINION_G8_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G8_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G8_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::minion_g9_voltage                              */
/* Register template: pmic_i2c::minion_g9_voltage                          */
/* Field member: pmic_i2c::minion_g9_voltage.voltage                       */
#define PMIC_I2C_MINION_G9_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_MINION_G9_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_MINION_G9_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_MINION_G9_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G9_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G9_VOLTAGE_VOLTAGE_RESET        0x23u
#define PMIC_I2C_MINION_G9_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_MINION_G9_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G9_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G9_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::minion_g10_voltage                             */
/* Register template: pmic_i2c::minion_g10_voltage                         */
/* Field member: pmic_i2c::minion_g10_voltage.voltage                      */
#define PMIC_I2C_MINION_G10_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_MINION_G10_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_MINION_G10_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_MINION_G10_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G10_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G10_VOLTAGE_VOLTAGE_RESET        0x23u
#define PMIC_I2C_MINION_G10_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_MINION_G10_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G10_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G10_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::minion_g11_voltage                             */
/* Register template: pmic_i2c::minion_g11_voltage                         */
/* Field member: pmic_i2c::minion_g11_voltage.voltage                      */
#define PMIC_I2C_MINION_G11_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_MINION_G11_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_MINION_G11_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_MINION_G11_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G11_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G11_VOLTAGE_VOLTAGE_RESET        0x23u
#define PMIC_I2C_MINION_G11_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_MINION_G11_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G11_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G11_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::minion_g12_voltage                             */
/* Register template: pmic_i2c::minion_g12_voltage                         */
/* Field member: pmic_i2c::minion_g12_voltage.voltage                      */
#define PMIC_I2C_MINION_G12_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_MINION_G12_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_MINION_G12_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_MINION_G12_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G12_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G12_VOLTAGE_VOLTAGE_RESET        0x23u
#define PMIC_I2C_MINION_G12_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_MINION_G12_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G12_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G12_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::minion_g13_voltage                             */
/* Register template: pmic_i2c::minion_g13_voltage                         */
/* Field member: pmic_i2c::minion_g13_voltage.voltage                      */
#define PMIC_I2C_MINION_G13_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_MINION_G13_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_MINION_G13_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_MINION_G13_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G13_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G13_VOLTAGE_VOLTAGE_RESET        0x23u
#define PMIC_I2C_MINION_G13_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_MINION_G13_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G13_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G13_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::minion_g14_voltage                             */
/* Register template: pmic_i2c::minion_g14_voltage                         */
/* Field member: pmic_i2c::minion_g14_voltage.voltage                      */
#define PMIC_I2C_MINION_G14_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_MINION_G14_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_MINION_G14_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_MINION_G14_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G14_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G14_VOLTAGE_VOLTAGE_RESET        0x23u
#define PMIC_I2C_MINION_G14_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_MINION_G14_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G14_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G14_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::minion_g15_voltage                             */
/* Register template: pmic_i2c::minion_g15_voltage                         */
/* Field member: pmic_i2c::minion_g15_voltage.voltage                      */
#define PMIC_I2C_MINION_G15_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_MINION_G15_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_MINION_G15_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_MINION_G15_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G15_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G15_VOLTAGE_VOLTAGE_RESET        0x23u
#define PMIC_I2C_MINION_G15_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_MINION_G15_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G15_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G15_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::minion_g16_voltage                             */
/* Register template: pmic_i2c::minion_g16_voltage                         */
/* Field member: pmic_i2c::minion_g16_voltage.voltage                      */
#define PMIC_I2C_MINION_G16_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_MINION_G16_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_MINION_G16_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_MINION_G16_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G16_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G16_VOLTAGE_VOLTAGE_RESET        0x23u
#define PMIC_I2C_MINION_G16_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_MINION_G16_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G16_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G16_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::minion_g17_voltage                             */
/* Register template: pmic_i2c::minion_g17_voltage                         */
/* Field member: pmic_i2c::minion_g17_voltage.voltage                      */
#define PMIC_I2C_MINION_G17_VOLTAGE_VOLTAGE_MSB          7u
#define PMIC_I2C_MINION_G17_VOLTAGE_VOLTAGE_LSB          0u
#define PMIC_I2C_MINION_G17_VOLTAGE_VOLTAGE_WIDTH        8u
#define PMIC_I2C_MINION_G17_VOLTAGE_VOLTAGE_READ_ACCESS  1u
#define PMIC_I2C_MINION_G17_VOLTAGE_VOLTAGE_WRITE_ACCESS 1u
#define PMIC_I2C_MINION_G17_VOLTAGE_VOLTAGE_RESET        0x23u
#define PMIC_I2C_MINION_G17_VOLTAGE_VOLTAGE_FIELD_MASK   0xffu
#define PMIC_I2C_MINION_G17_VOLTAGE_VOLTAGE_GET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G17_VOLTAGE_VOLTAGE_SET(x)       ((x)&0xffu)
#define PMIC_I2C_MINION_G17_VOLTAGE_VOLTAGE_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::fru_ops_cmd                                    */
/* Register template: pmic_i2c::fru_ops_cmd                                */
/* Field member: pmic_i2c::fru_ops_cmd                                     */
#define PMIC_I2C_FRU_OPS_CMD_CMD_MSB          7u
#define PMIC_I2C_FRU_OPS_CMD_CMD_LSB          0u
#define PMIC_I2C_FRU_OPS_CMD_CMD_WIDTH        8u
#define PMIC_I2C_FRU_OPS_CMD_CMD_READ_ACCESS  1u
#define PMIC_I2C_FRU_OPS_CMD_CMD_WRITE_ACCESS 1u
#define PMIC_I2C_FRU_OPS_CMD_CMD_RESET        0x00u
#define PMIC_I2C_FRU_OPS_CMD_CMD_FIELD_MASK   0xffu
#define PMIC_I2C_FRU_OPS_CMD_CMD_GET(x)       ((x)&0xffu)
#define PMIC_I2C_FRU_OPS_CMD_CMD_SET(x)       ((x)&0xffu)
#define PMIC_I2C_FRU_OPS_CMD_CMD_MODIFY(r, x) ((x)&0xffu)

/* Register type: pmic_i2c::fru_data_cmd                                   */
/* Register template: pmic_i2c::fru_data_cmd                               */
/* Field member: pmic_i2c::fru_data_cmd                                    */
#define PMIC_I2C_FRU_DATA_CMD_CMD_MSB          7u
#define PMIC_I2C_FRU_DATA_CMD_CMD_LSB          0u
#define PMIC_I2C_FRU_DATA_CMD_CMD_WIDTH        8u
#define PMIC_I2C_FRU_DATA_CMD_CMD_READ_ACCESS  1u
#define PMIC_I2C_FRU_DATA_CMD_CMD_WRITE_ACCESS 1u
#define PMIC_I2C_FRU_DATA_CMD_CMD_RESET        0x00u
#define PMIC_I2C_FRU_DATA_CMD_CMD_FIELD_MASK   0xffu
#define PMIC_I2C_FRU_DATA_CMD_CMD_GET(x)       ((x)&0xffu)
#define PMIC_I2C_FRU_DATA_CMD_CMD_SET(x)       ((x)&0xffu)
#define PMIC_I2C_FRU_DATA_CMD_CMD_MODIFY(r, x) ((x)&0xffu)

/* Addressmap type: pmic_i2c_firmware                                      */
/* Addressmap template: pmic_i2c_firmware                                  */
#define PMIC_I2C_FIRMWARE_SIZE      0x5u
#define PMIC_I2C_FIRMWARE_BYTE_SIZE 0x5u
/* Register member: pmic_i2c_firmware.src_hash                             */
/* Register type referenced: pmic_i2c_firmware::src_hash                   */
/* Register template referenced: pmic_i2c_firmware::src_hash               */
#define PMIC_I2C_FIRMWARE_SRC_HASH_OFFSET       0x1u
#define PMIC_I2C_FIRMWARE_SRC_HASH_BYTE_OFFSET  0x1u
#define PMIC_I2C_FIRMWARE_SRC_HASH_READ_ACCESS  1u
#define PMIC_I2C_FIRMWARE_SRC_HASH_WRITE_ACCESS 0u
#define PMIC_I2C_FIRMWARE_SRC_HASH_RESET_VALUE  0x00000000ul
#define PMIC_I2C_FIRMWARE_SRC_HASH_RESET_MASK   0xfffffffful
#define PMIC_I2C_FIRMWARE_SRC_HASH_READ_MASK    0xfffffffful
#define PMIC_I2C_FIRMWARE_SRC_HASH_WRITE_MASK   0x00000000ul

/* Register type: pmic_i2c_firmware::src_hash                              */
/* Register template: pmic_i2c_firmware::src_hash                          */
/* Field member: pmic_i2c_firmware::src_hash                               */
#define PMIC_I2C_FIRMWARE_SRC_HASH_VER_MSB          31u
#define PMIC_I2C_FIRMWARE_SRC_HASH_VER_LSB          0u
#define PMIC_I2C_FIRMWARE_SRC_HASH_VER_WIDTH        32u
#define PMIC_I2C_FIRMWARE_SRC_HASH_VER_READ_ACCESS  1u
#define PMIC_I2C_FIRMWARE_SRC_HASH_VER_WRITE_ACCESS 0u
#define PMIC_I2C_FIRMWARE_SRC_HASH_VER_RESET        0x00000000ul
#define PMIC_I2C_FIRMWARE_SRC_HASH_VER_FIELD_MASK   0xfffffffful
#define PMIC_I2C_FIRMWARE_SRC_HASH_VER_GET(x)       ((x)&0xfffffffful)
#define PMIC_I2C_FIRMWARE_SRC_HASH_VER_SET(x)       ((x)&0xfffffffful)
#define PMIC_I2C_FIRMWARE_SRC_HASH_VER_MODIFY(r, x) ((x)&0xfffffffful)

/* Addressmap type: pmic_i2c_board                                         */
/* Addressmap template: pmic_i2c_board                                     */
#define PMIC_I2C_BOARD_SIZE      0x6u
#define PMIC_I2C_BOARD_BYTE_SIZE 0x6u
/* Register member: pmic_i2c_board.type                                    */
/* Register type referenced: pmic_i2c_board::type                          */
/* Register template referenced: pmic_i2c_board::type                      */
#define PMIC_I2C_BOARD_TYPE_OFFSET       0x2u
#define PMIC_I2C_BOARD_TYPE_BYTE_OFFSET  0x2u
#define PMIC_I2C_BOARD_TYPE_READ_ACCESS  1u
#define PMIC_I2C_BOARD_TYPE_WRITE_ACCESS 0u
#define PMIC_I2C_BOARD_TYPE_RESET_VALUE  0x01010101ul
#define PMIC_I2C_BOARD_TYPE_RESET_MASK   0xfffffffful
#define PMIC_I2C_BOARD_TYPE_READ_MASK    0xfffffffful
#define PMIC_I2C_BOARD_TYPE_WRITE_MASK   0x00000000ul

/* Register type: pmic_i2c_board::type                                     */
/* Register template: pmic_i2c_board::type                                 */
/* Field member: pmic_i2c_board::type.id                                   */
#define PMIC_I2C_BOARD_TYPE_ID_MSB          31u
#define PMIC_I2C_BOARD_TYPE_ID_LSB          24u
#define PMIC_I2C_BOARD_TYPE_ID_WIDTH        8u
#define PMIC_I2C_BOARD_TYPE_ID_READ_ACCESS  1u
#define PMIC_I2C_BOARD_TYPE_ID_WRITE_ACCESS 0u
#define PMIC_I2C_BOARD_TYPE_ID_RESET        0x01u
#define PMIC_I2C_BOARD_TYPE_ID_FIELD_MASK   0xff000000ul
#define PMIC_I2C_BOARD_TYPE_ID_GET(x)       (((x)&0xff000000ul) >> 24)
#define PMIC_I2C_BOARD_TYPE_ID_SET(x)       (((x) << 24) & 0xff000000ul)
#define PMIC_I2C_BOARD_TYPE_ID_MODIFY(r, x) ((((x) << 24) & 0xff000000ul) | ((r)&0x00fffffful))
/* Field member: pmic_i2c_board::type.modification_revision_level          */
#define PMIC_I2C_BOARD_TYPE_MODIFICATION_REVISION_LEVEL_MSB          23u
#define PMIC_I2C_BOARD_TYPE_MODIFICATION_REVISION_LEVEL_LSB          16u
#define PMIC_I2C_BOARD_TYPE_MODIFICATION_REVISION_LEVEL_WIDTH        8u
#define PMIC_I2C_BOARD_TYPE_MODIFICATION_REVISION_LEVEL_READ_ACCESS  1u
#define PMIC_I2C_BOARD_TYPE_MODIFICATION_REVISION_LEVEL_WRITE_ACCESS 0u
#define PMIC_I2C_BOARD_TYPE_MODIFICATION_REVISION_LEVEL_RESET        0x01u
#define PMIC_I2C_BOARD_TYPE_MODIFICATION_REVISION_LEVEL_FIELD_MASK   0x00ff0000ul
#define PMIC_I2C_BOARD_TYPE_MODIFICATION_REVISION_LEVEL_GET(x)       (((x)&0x00ff0000ul) >> 16)
#define PMIC_I2C_BOARD_TYPE_MODIFICATION_REVISION_LEVEL_SET(x)       (((x) << 16) & 0x00ff0000ul)
#define PMIC_I2C_BOARD_TYPE_MODIFICATION_REVISION_LEVEL_MODIFY(r, x) \
    ((((x) << 16) & 0x00ff0000ul) | ((r)&0xff00fffful))
/* Field member: pmic_i2c_board::type.design_revision_level                */
#define PMIC_I2C_BOARD_TYPE_DESIGN_REVISION_LEVEL_MSB          15u
#define PMIC_I2C_BOARD_TYPE_DESIGN_REVISION_LEVEL_LSB          8u
#define PMIC_I2C_BOARD_TYPE_DESIGN_REVISION_LEVEL_WIDTH        8u
#define PMIC_I2C_BOARD_TYPE_DESIGN_REVISION_LEVEL_READ_ACCESS  1u
#define PMIC_I2C_BOARD_TYPE_DESIGN_REVISION_LEVEL_WRITE_ACCESS 0u
#define PMIC_I2C_BOARD_TYPE_DESIGN_REVISION_LEVEL_RESET        0x01u
#define PMIC_I2C_BOARD_TYPE_DESIGN_REVISION_LEVEL_FIELD_MASK   0x0000ff00ul
#define PMIC_I2C_BOARD_TYPE_DESIGN_REVISION_LEVEL_GET(x)       (((x)&0x0000ff00ul) >> 8)
#define PMIC_I2C_BOARD_TYPE_DESIGN_REVISION_LEVEL_SET(x)       (((x) << 8) & 0x0000ff00ul)
#define PMIC_I2C_BOARD_TYPE_DESIGN_REVISION_LEVEL_MODIFY(r, x) \
    ((((x) << 8) & 0x0000ff00ul) | ((r)&0xffff00fful))
/* Field member: pmic_i2c_board::type.type                                 */
#define PMIC_I2C_BOARD_TYPE_TYPE_MSB          7u
#define PMIC_I2C_BOARD_TYPE_TYPE_LSB          0u
#define PMIC_I2C_BOARD_TYPE_TYPE_WIDTH        8u
#define PMIC_I2C_BOARD_TYPE_TYPE_READ_ACCESS  1u
#define PMIC_I2C_BOARD_TYPE_TYPE_WRITE_ACCESS 0u
#define PMIC_I2C_BOARD_TYPE_TYPE_RESET        0x01u
#define PMIC_I2C_BOARD_TYPE_TYPE_FIELD_MASK   0x000000fful
#define PMIC_I2C_BOARD_TYPE_TYPE_GET(x)       ((x)&0x000000fful)
#define PMIC_I2C_BOARD_TYPE_TYPE_SET(x)       ((x)&0x000000fful)
#define PMIC_I2C_BOARD_TYPE_TYPE_MODIFY(r, x) (((x)&0x000000fful) | ((r)&0xffffff00ul))

/* Addressmap type: pmic_i2c_reg_fault                                     */
/* Addressmap template: pmic_i2c_reg_fault                                 */
#define PMIC_I2C_REG_FAULT_SIZE      0xfu
#define PMIC_I2C_REG_FAULT_BYTE_SIZE 0xfu
/* Register member: pmic_i2c_reg_fault.reg_fault                           */
/* Register type referenced: pmic_i2c_reg_fault::reg_fault                 */
/* Register template referenced: pmic_i2c_reg_fault::reg_fault             */
#define PMIC_I2C_REG_FAULT_REG_FAULT_OFFSET       0xbu
#define PMIC_I2C_REG_FAULT_REG_FAULT_BYTE_OFFSET  0xbu
#define PMIC_I2C_REG_FAULT_REG_FAULT_READ_ACCESS  1u
#define PMIC_I2C_REG_FAULT_REG_FAULT_WRITE_ACCESS 0u
#define PMIC_I2C_REG_FAULT_REG_FAULT_RESET_VALUE  0x00000000ul
#define PMIC_I2C_REG_FAULT_REG_FAULT_RESET_MASK   0xfffffffful
#define PMIC_I2C_REG_FAULT_REG_FAULT_READ_MASK    0xfffffffful
#define PMIC_I2C_REG_FAULT_REG_FAULT_WRITE_MASK   0x00000000ul

/* Register type: pmic_i2c_reg_fault::reg_fault                            */
/* Register template: pmic_i2c_reg_fault::reg_fault                        */
/* Field member: pmic_i2c_reg_fault::reg_fault.address                     */
#define PMIC_I2C_REG_FAULT_REG_FAULT_ADDRESS_MSB          30u
#define PMIC_I2C_REG_FAULT_REG_FAULT_ADDRESS_LSB          24u
#define PMIC_I2C_REG_FAULT_REG_FAULT_ADDRESS_WIDTH        7u
#define PMIC_I2C_REG_FAULT_REG_FAULT_ADDRESS_READ_ACCESS  1u
#define PMIC_I2C_REG_FAULT_REG_FAULT_ADDRESS_WRITE_ACCESS 0u
#define PMIC_I2C_REG_FAULT_REG_FAULT_ADDRESS_RESET        0x00u
#define PMIC_I2C_REG_FAULT_REG_FAULT_ADDRESS_FIELD_MASK   0x7f000000ul
#define PMIC_I2C_REG_FAULT_REG_FAULT_ADDRESS_GET(x)       (((x)&0x7f000000ul) >> 24)
#define PMIC_I2C_REG_FAULT_REG_FAULT_ADDRESS_SET(x)       (((x) << 24) & 0x7f000000ul)
#define PMIC_I2C_REG_FAULT_REG_FAULT_ADDRESS_MODIFY(r, x) \
    ((((x) << 24) & 0x7f000000ul) | ((r)&0x80fffffful))
/* Field member: pmic_i2c_reg_fault::reg_fault.cmdreg                      */
#define PMIC_I2C_REG_FAULT_REG_FAULT_CMDREG_MSB          23u
#define PMIC_I2C_REG_FAULT_REG_FAULT_CMDREG_LSB          16u
#define PMIC_I2C_REG_FAULT_REG_FAULT_CMDREG_WIDTH        8u
#define PMIC_I2C_REG_FAULT_REG_FAULT_CMDREG_READ_ACCESS  1u
#define PMIC_I2C_REG_FAULT_REG_FAULT_CMDREG_WRITE_ACCESS 0u
#define PMIC_I2C_REG_FAULT_REG_FAULT_CMDREG_RESET        0x00u
#define PMIC_I2C_REG_FAULT_REG_FAULT_CMDREG_FIELD_MASK   0x00ff0000ul
#define PMIC_I2C_REG_FAULT_REG_FAULT_CMDREG_GET(x)       (((x)&0x00ff0000ul) >> 16)
#define PMIC_I2C_REG_FAULT_REG_FAULT_CMDREG_SET(x)       (((x) << 16) & 0x00ff0000ul)
#define PMIC_I2C_REG_FAULT_REG_FAULT_CMDREG_MODIFY(r, x) \
    ((((x) << 16) & 0x00ff0000ul) | ((r)&0xff00fffful))
/* Field member: pmic_i2c_reg_fault::reg_fault.value                       */
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALUE_MSB          15u
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALUE_LSB          8u
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALUE_WIDTH        8u
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALUE_READ_ACCESS  1u
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALUE_WRITE_ACCESS 0u
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALUE_RESET        0x00u
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALUE_FIELD_MASK   0x0000ff00ul
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALUE_GET(x)       (((x)&0x0000ff00ul) >> 8)
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALUE_SET(x)       (((x) << 8) & 0x0000ff00ul)
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALUE_MODIFY(r, x) \
    ((((x) << 8) & 0x0000ff00ul) | ((r)&0xffff00fful))
/* Field member: pmic_i2c_reg_fault::reg_fault.field_val                   */
#define PMIC_I2C_REG_FAULT_REG_FAULT_FIELD_VAL_MSB          6u
#define PMIC_I2C_REG_FAULT_REG_FAULT_FIELD_VAL_LSB          2u
#define PMIC_I2C_REG_FAULT_REG_FAULT_FIELD_VAL_WIDTH        5u
#define PMIC_I2C_REG_FAULT_REG_FAULT_FIELD_VAL_READ_ACCESS  1u
#define PMIC_I2C_REG_FAULT_REG_FAULT_FIELD_VAL_WRITE_ACCESS 0u
#define PMIC_I2C_REG_FAULT_REG_FAULT_FIELD_VAL_RESET        0x00u
#define PMIC_I2C_REG_FAULT_REG_FAULT_FIELD_VAL_FIELD_MASK   0x0000007cul
#define PMIC_I2C_REG_FAULT_REG_FAULT_FIELD_VAL_GET(x)       (((x)&0x0000007cul) >> 2)
#define PMIC_I2C_REG_FAULT_REG_FAULT_FIELD_VAL_SET(x)       (((x) << 2) & 0x0000007cul)
#define PMIC_I2C_REG_FAULT_REG_FAULT_FIELD_VAL_MODIFY(r, x) \
    ((((x) << 2) & 0x0000007cul) | ((r)&0xffffff83ul))
/* Field member: pmic_i2c_reg_fault::reg_fault.multiple                    */
#define PMIC_I2C_REG_FAULT_REG_FAULT_MULTIPLE_MSB          1u
#define PMIC_I2C_REG_FAULT_REG_FAULT_MULTIPLE_LSB          1u
#define PMIC_I2C_REG_FAULT_REG_FAULT_MULTIPLE_WIDTH        1u
#define PMIC_I2C_REG_FAULT_REG_FAULT_MULTIPLE_READ_ACCESS  1u
#define PMIC_I2C_REG_FAULT_REG_FAULT_MULTIPLE_WRITE_ACCESS 0u
#define PMIC_I2C_REG_FAULT_REG_FAULT_MULTIPLE_RESET        0x0u
#define PMIC_I2C_REG_FAULT_REG_FAULT_MULTIPLE_FIELD_MASK   0x00000002ul
#define PMIC_I2C_REG_FAULT_REG_FAULT_MULTIPLE_GET(x)       (((x)&0x00000002ul) >> 1)
#define PMIC_I2C_REG_FAULT_REG_FAULT_MULTIPLE_SET(x)       (((x) << 1) & 0x00000002ul)
#define PMIC_I2C_REG_FAULT_REG_FAULT_MULTIPLE_MODIFY(r, x) \
    ((((x) << 1) & 0x00000002ul) | ((r)&0xfffffffdul))
/* Field member: pmic_i2c_reg_fault::reg_fault.valid                       */
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALID_MSB          0u
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALID_LSB          0u
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALID_WIDTH        1u
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALID_READ_ACCESS  1u
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALID_WRITE_ACCESS 0u
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALID_RESET        0x0u
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALID_FIELD_MASK   0x00000001ul
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALID_GET(x)       ((x)&0x00000001ul)
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALID_SET(x)       ((x)&0x00000001ul)
#define PMIC_I2C_REG_FAULT_REG_FAULT_VALID_MODIFY(r, x) (((x)&0x00000001ul) | ((r)&0xfffffffeul))

/* Addressmap type: pmic_i2c_reg_com_fail                                  */
/* Addressmap template: pmic_i2c_reg_com_fail                              */
#define PMIC_I2C_REG_COM_FAIL_SIZE      0x10u
#define PMIC_I2C_REG_COM_FAIL_BYTE_SIZE 0x10u
/* Register member: pmic_i2c_reg_com_fail.details                          */
/* Register type referenced: pmic_i2c_reg_com_fail::details                */
/* Register template referenced: pmic_i2c_reg_com_fail::details            */
#define PMIC_I2C_REG_COM_FAIL_DETAILS_OFFSET       0xcu
#define PMIC_I2C_REG_COM_FAIL_DETAILS_BYTE_OFFSET  0xcu
#define PMIC_I2C_REG_COM_FAIL_DETAILS_READ_ACCESS  1u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_WRITE_ACCESS 0u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_RESET_VALUE  0x00000000ul
#define PMIC_I2C_REG_COM_FAIL_DETAILS_RESET_MASK   0xfffffffful
#define PMIC_I2C_REG_COM_FAIL_DETAILS_READ_MASK    0xfffffffful
#define PMIC_I2C_REG_COM_FAIL_DETAILS_WRITE_MASK   0x00000000ul

/* Register type: pmic_i2c_reg_com_fail::details                           */
/* Register template: pmic_i2c_reg_com_fail::details                       */
/* Field member: pmic_i2c_reg_com_fail::details.address                    */
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ADDRESS_MSB          22u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ADDRESS_LSB          16u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ADDRESS_WIDTH        7u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ADDRESS_READ_ACCESS  1u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ADDRESS_WRITE_ACCESS 0u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ADDRESS_RESET        0x00u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ADDRESS_FIELD_MASK   0x007f0000ul
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ADDRESS_GET(x)       (((x)&0x007f0000ul) >> 16)
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ADDRESS_SET(x)       (((x) << 16) & 0x007f0000ul)
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ADDRESS_MODIFY(r, x) \
    ((((x) << 16) & 0x007f0000ul) | ((r)&0xff80fffful))
/* Field member: pmic_i2c_reg_com_fail::details.cmdreg                     */
#define PMIC_I2C_REG_COM_FAIL_DETAILS_CMDREG_MSB          15u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_CMDREG_LSB          8u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_CMDREG_WIDTH        8u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_CMDREG_READ_ACCESS  1u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_CMDREG_WRITE_ACCESS 0u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_CMDREG_RESET        0x00u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_CMDREG_FIELD_MASK   0x0000ff00ul
#define PMIC_I2C_REG_COM_FAIL_DETAILS_CMDREG_GET(x)       (((x)&0x0000ff00ul) >> 8)
#define PMIC_I2C_REG_COM_FAIL_DETAILS_CMDREG_SET(x)       (((x) << 8) & 0x0000ff00ul)
#define PMIC_I2C_REG_COM_FAIL_DETAILS_CMDREG_MODIFY(r, x) \
    ((((x) << 8) & 0x0000ff00ul) | ((r)&0xffff00fful))
/* Field member: pmic_i2c_reg_com_fail::details.i2c_code                   */
#define PMIC_I2C_REG_COM_FAIL_DETAILS_I2C_CODE_MSB          7u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_I2C_CODE_LSB          5u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_I2C_CODE_WIDTH        3u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_I2C_CODE_READ_ACCESS  1u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_I2C_CODE_WRITE_ACCESS 0u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_I2C_CODE_RESET        0x0u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_I2C_CODE_FIELD_MASK   0x000000e0ul
#define PMIC_I2C_REG_COM_FAIL_DETAILS_I2C_CODE_GET(x)       (((x)&0x000000e0ul) >> 5)
#define PMIC_I2C_REG_COM_FAIL_DETAILS_I2C_CODE_SET(x)       (((x) << 5) & 0x000000e0ul)
#define PMIC_I2C_REG_COM_FAIL_DETAILS_I2C_CODE_MODIFY(r, x) \
    ((((x) << 5) & 0x000000e0ul) | ((r)&0xffffff1ful))
/* Field member: pmic_i2c_reg_com_fail::details.err_type                   */
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ERR_TYPE_MSB          3u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ERR_TYPE_LSB          2u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ERR_TYPE_WIDTH        2u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ERR_TYPE_READ_ACCESS  1u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ERR_TYPE_WRITE_ACCESS 0u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ERR_TYPE_RESET        0x0u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ERR_TYPE_FIELD_MASK   0x0000000cul
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ERR_TYPE_GET(x)       (((x)&0x0000000cul) >> 2)
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ERR_TYPE_SET(x)       (((x) << 2) & 0x0000000cul)
#define PMIC_I2C_REG_COM_FAIL_DETAILS_ERR_TYPE_MODIFY(r, x) \
    ((((x) << 2) & 0x0000000cul) | ((r)&0xfffffff3ul))
/* Field member: pmic_i2c_reg_com_fail::details.multiple                   */
#define PMIC_I2C_REG_COM_FAIL_DETAILS_MULTIPLE_MSB          1u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_MULTIPLE_LSB          1u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_MULTIPLE_WIDTH        1u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_MULTIPLE_READ_ACCESS  1u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_MULTIPLE_WRITE_ACCESS 0u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_MULTIPLE_RESET        0x0u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_MULTIPLE_FIELD_MASK   0x00000002ul
#define PMIC_I2C_REG_COM_FAIL_DETAILS_MULTIPLE_GET(x)       (((x)&0x00000002ul) >> 1)
#define PMIC_I2C_REG_COM_FAIL_DETAILS_MULTIPLE_SET(x)       (((x) << 1) & 0x00000002ul)
#define PMIC_I2C_REG_COM_FAIL_DETAILS_MULTIPLE_MODIFY(r, x) \
    ((((x) << 1) & 0x00000002ul) | ((r)&0xfffffffdul))
/* Field member: pmic_i2c_reg_com_fail::details.valid                      */
#define PMIC_I2C_REG_COM_FAIL_DETAILS_VALID_MSB          0u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_VALID_LSB          0u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_VALID_WIDTH        1u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_VALID_READ_ACCESS  1u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_VALID_WRITE_ACCESS 0u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_VALID_RESET        0x0u
#define PMIC_I2C_REG_COM_FAIL_DETAILS_VALID_FIELD_MASK   0x00000001ul
#define PMIC_I2C_REG_COM_FAIL_DETAILS_VALID_GET(x)       ((x)&0x00000001ul)
#define PMIC_I2C_REG_COM_FAIL_DETAILS_VALID_SET(x)       ((x)&0x00000001ul)
#define PMIC_I2C_REG_COM_FAIL_DETAILS_VALID_MODIFY(r, x) (((x)&0x00000001ul) | ((r)&0xfffffffeul))

/* Field member: pmic_i2c_reg_pmb_stats                      */
#define PMIC_I2C_REG_PMB_STATS_COMPONENT_TYPE_SET(x) ((x)&0x03ul)
#define PMIC_I2C_REG_PMB_STATS_VALUE_TYPE_SET(x)     (((x) << 2) & 0x1cul)
#define PMIC_I2C_REG_PMB_STATS_OUTPUT_TYPE_SET(x)    (((x) << 5) & 0x60ul)

/* Addressmap type: pmic_i2c_command_comm_fail                             */
/* Addressmap template: pmic_i2c_command_comm_fail                         */
#define PMIC_I2C_COMMAND_COMM_FAIL_SIZE      0x11u
#define PMIC_I2C_COMMAND_COMM_FAIL_BYTE_SIZE 0x11u
/* Register member: pmic_i2c_command_comm_fail.details                     */
/* Register type referenced: pmic_i2c_command_comm_fail::details           */
/* Register template referenced: pmic_i2c_command_comm_fail::details       */
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_OFFSET       0xdu
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_BYTE_OFFSET  0xdu
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_READ_ACCESS  1u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_WRITE_ACCESS 0u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_RESET_VALUE  0x00000000ul
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_RESET_MASK   0xfffffffful
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_READ_MASK    0xfffffffful
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_WRITE_MASK   0x00000000ul

/* Register type: pmic_i2c_command_comm_fail::details                      */
/* Register template: pmic_i2c_command_comm_fail::details                  */
/* Field member: pmic_i2c_command_comm_fail::details.address               */
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_ADDRESS_MSB          22u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_ADDRESS_LSB          16u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_ADDRESS_WIDTH        7u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_ADDRESS_READ_ACCESS  1u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_ADDRESS_WRITE_ACCESS 0u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_ADDRESS_RESET        0x00u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_ADDRESS_FIELD_MASK   0x007f0000ul
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_ADDRESS_GET(x)       (((x)&0x007f0000ul) >> 16)
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_ADDRESS_SET(x)       (((x) << 16) & 0x007f0000ul)
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_ADDRESS_MODIFY(r, x) \
    ((((x) << 16) & 0x007f0000ul) | ((r)&0xff80fffful))
/* Field member: pmic_i2c_command_comm_fail::details.i2cs_handlererr       */
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_HANDLERERR_MSB          12u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_HANDLERERR_LSB          8u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_HANDLERERR_WIDTH        5u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_HANDLERERR_READ_ACCESS  1u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_HANDLERERR_WRITE_ACCESS 0u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_HANDLERERR_RESET        0x00u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_HANDLERERR_FIELD_MASK   0x00001f00ul
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_HANDLERERR_GET(x)       (((x)&0x00001f00ul) >> 8)
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_HANDLERERR_SET(x)       (((x) << 8) & 0x00001f00ul)
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_HANDLERERR_MODIFY(r, x) \
    ((((x) << 8) & 0x00001f00ul) | ((r)&0xffffe0fful))
/* Field member: pmic_i2c_command_comm_fail::details.i2cs_clienterr        */
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_CLIENTERR_MSB          4u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_CLIENTERR_LSB          2u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_CLIENTERR_WIDTH        3u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_CLIENTERR_READ_ACCESS  1u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_CLIENTERR_WRITE_ACCESS 0u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_CLIENTERR_RESET        0x0u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_CLIENTERR_FIELD_MASK   0x0000001cul
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_CLIENTERR_GET(x)       (((x)&0x0000001cul) >> 2)
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_CLIENTERR_SET(x)       (((x) << 2) & 0x0000001cul)
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_I2CS_CLIENTERR_MODIFY(r, x) \
    ((((x) << 2) & 0x0000001cul) | ((r)&0xffffffe3ul))
/* Field member: pmic_i2c_command_comm_fail::details.multiple              */
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_MULTIPLE_MSB          1u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_MULTIPLE_LSB          1u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_MULTIPLE_WIDTH        1u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_MULTIPLE_READ_ACCESS  1u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_MULTIPLE_WRITE_ACCESS 0u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_MULTIPLE_RESET        0x0u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_MULTIPLE_FIELD_MASK   0x00000002ul
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_MULTIPLE_GET(x)       (((x)&0x00000002ul) >> 1)
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_MULTIPLE_SET(x)       (((x) << 1) & 0x00000002ul)
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_MULTIPLE_MODIFY(r, x) \
    ((((x) << 1) & 0x00000002ul) | ((r)&0xfffffffdul))
/* Field member: pmic_i2c_command_comm_fail::details.valid                 */
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_VALID_MSB          0u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_VALID_LSB          0u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_VALID_WIDTH        1u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_VALID_READ_ACCESS  1u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_VALID_WRITE_ACCESS 0u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_VALID_RESET        0x0u
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_VALID_FIELD_MASK   0x00000001ul
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_VALID_GET(x)       ((x)&0x00000001ul)
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_VALID_SET(x)       ((x)&0x00000001ul)
#define PMIC_I2C_COMMAND_COMM_FAIL_DETAILS_VALID_MODIFY(r, x) \
    (((x)&0x00000001ul) | ((r)&0xfffffffeul))

/* Addressmap type: pmic_i2c_reset                                         */
/* Addressmap template: pmic_i2c_reset                                     */
#define PMIC_I2C_RESET_SIZE      0x14u
#define PMIC_I2C_RESET_BYTE_SIZE 0x14u
/* Register member: pmic_i2c_reset.reset_cause                             */
/* Register type referenced: pmic_i2c_reset::reset_cause                   */
/* Register template referenced: pmic_i2c_reset::reset_cause               */
#define PMIC_I2C_RESET_RESET_CAUSE_OFFSET       0x10u
#define PMIC_I2C_RESET_RESET_CAUSE_BYTE_OFFSET  0x10u
#define PMIC_I2C_RESET_RESET_CAUSE_READ_ACCESS  1u
#define PMIC_I2C_RESET_RESET_CAUSE_WRITE_ACCESS 0u
#define PMIC_I2C_RESET_RESET_CAUSE_RESET_VALUE  0x00000000ul
#define PMIC_I2C_RESET_RESET_CAUSE_RESET_MASK   0xfffffffful
#define PMIC_I2C_RESET_RESET_CAUSE_READ_MASK    0xfffffffful
#define PMIC_I2C_RESET_RESET_CAUSE_WRITE_MASK   0x00000000ul

/* Register type: pmic_i2c_reset::reset_cause                              */
/* Register template: pmic_i2c_reset::reset_cause                          */
/* Field member: pmic_i2c_reset::reset_cause.cause                         */
#define PMIC_I2C_RESET_RESET_CAUSE_CAUSE_MSB          7u
#define PMIC_I2C_RESET_RESET_CAUSE_CAUSE_LSB          0u
#define PMIC_I2C_RESET_RESET_CAUSE_CAUSE_WIDTH        8u
#define PMIC_I2C_RESET_RESET_CAUSE_CAUSE_READ_ACCESS  1u
#define PMIC_I2C_RESET_RESET_CAUSE_CAUSE_WRITE_ACCESS 0u
#define PMIC_I2C_RESET_RESET_CAUSE_CAUSE_RESET        0x00u
#define PMIC_I2C_RESET_RESET_CAUSE_CAUSE_FIELD_MASK   0x000000fful
#define PMIC_I2C_RESET_RESET_CAUSE_CAUSE_GET(x)       ((x)&0x000000fful)
#define PMIC_I2C_RESET_RESET_CAUSE_CAUSE_SET(x)       ((x)&0x000000fful)
#define PMIC_I2C_RESET_RESET_CAUSE_CAUSE_MODIFY(r, x) (((x)&0x000000fful) | ((r)&0xffffff00ul))

#endif
